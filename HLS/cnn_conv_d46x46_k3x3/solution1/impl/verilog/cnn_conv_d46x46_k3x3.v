// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cnn_conv_d46x46_k3x3,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.985000,HLS_SYN_LAT=2185,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=36,HLS_SYN_FF=2686,HLS_SYN_LUT=4421}" *)

module cnn_conv_d46x46_k3x3 (
        ap_clk,
        ap_rst_n,
        inStream_TDATA,
        inStream_TVALID,
        inStream_TREADY,
        inStream_TKEEP,
        inStream_TSTRB,
        inStream_TUSER,
        inStream_TLAST,
        inStream_TID,
        inStream_TDEST,
        outStream_TDATA,
        outStream_TVALID,
        outStream_TREADY,
        outStream_TKEEP,
        outStream_TSTRB,
        outStream_TUSER,
        outStream_TLAST,
        outStream_TID,
        outStream_TDEST,
        s_axi_CTRL_AWVALID,
        s_axi_CTRL_AWREADY,
        s_axi_CTRL_AWADDR,
        s_axi_CTRL_WVALID,
        s_axi_CTRL_WREADY,
        s_axi_CTRL_WDATA,
        s_axi_CTRL_WSTRB,
        s_axi_CTRL_ARVALID,
        s_axi_CTRL_ARREADY,
        s_axi_CTRL_ARADDR,
        s_axi_CTRL_RVALID,
        s_axi_CTRL_RREADY,
        s_axi_CTRL_RDATA,
        s_axi_CTRL_RRESP,
        s_axi_CTRL_BVALID,
        s_axi_CTRL_BREADY,
        s_axi_CTRL_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 9'b1;
parameter    ap_ST_fsm_pp0_stage0 = 9'b10;
parameter    ap_ST_fsm_state4 = 9'b100;
parameter    ap_ST_fsm_pp1_stage0 = 9'b1000;
parameter    ap_ST_fsm_state7 = 9'b10000;
parameter    ap_ST_fsm_pp2_stage0 = 9'b100000;
parameter    ap_ST_fsm_state10 = 9'b1000000;
parameter    ap_ST_fsm_pp3_stage0 = 9'b10000000;
parameter    ap_ST_fsm_state22 = 9'b100000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_7 = 32'b111;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv6_2C = 6'b101100;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv6_2E = 6'b101110;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv6_2B = 6'b101011;
parameter    ap_const_lv12_844 = 12'b100001000100;
parameter    ap_const_lv12_1 = 12'b1;
parameter    ap_const_lv32_844 = 32'b100001000100;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv27_0 = 27'b000000000000000000000000000;
parameter    ap_const_lv32_790 = 32'b11110010000;
parameter    ap_const_lv32_8 = 32'b1000;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (C_S_AXI_CTRL_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] inStream_TDATA;
input   inStream_TVALID;
output   inStream_TREADY;
input  [3:0] inStream_TKEEP;
input  [3:0] inStream_TSTRB;
input  [1:0] inStream_TUSER;
input  [0:0] inStream_TLAST;
input  [4:0] inStream_TID;
input  [5:0] inStream_TDEST;
output  [31:0] outStream_TDATA;
output   outStream_TVALID;
input   outStream_TREADY;
output  [3:0] outStream_TKEEP;
output  [3:0] outStream_TSTRB;
output  [1:0] outStream_TUSER;
output  [0:0] outStream_TLAST;
output  [4:0] outStream_TID;
output  [5:0] outStream_TDEST;
input   s_axi_CTRL_AWVALID;
output   s_axi_CTRL_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1 : 0] s_axi_CTRL_AWADDR;
input   s_axi_CTRL_WVALID;
output   s_axi_CTRL_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1 : 0] s_axi_CTRL_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1 : 0] s_axi_CTRL_WSTRB;
input   s_axi_CTRL_ARVALID;
output   s_axi_CTRL_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1 : 0] s_axi_CTRL_ARADDR;
output   s_axi_CTRL_RVALID;
input   s_axi_CTRL_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1 : 0] s_axi_CTRL_RDATA;
output  [1:0] s_axi_CTRL_RRESP;
output   s_axi_CTRL_BVALID;
input   s_axi_CTRL_BREADY;
output  [1:0] s_axi_CTRL_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg    ap_ready;
reg   [31:0] inStream_V_data_V_0_data_out;
wire    inStream_V_data_V_0_vld_in;
wire    inStream_V_data_V_0_vld_out;
wire    inStream_V_data_V_0_ack_in;
reg    inStream_V_data_V_0_ack_out;
reg   [31:0] inStream_V_data_V_0_payload_A;
reg   [31:0] inStream_V_data_V_0_payload_B;
reg    inStream_V_data_V_0_sel_rd;
reg    inStream_V_data_V_0_sel_wr;
wire    inStream_V_data_V_0_sel;
wire    inStream_V_data_V_0_load_A;
wire    inStream_V_data_V_0_load_B;
reg   [1:0] inStream_V_data_V_0_state;
wire    inStream_V_data_V_0_state_cmp_full;
wire    inStream_V_dest_V_0_vld_in;
reg    inStream_V_dest_V_0_ack_out;
reg   [1:0] inStream_V_dest_V_0_state;
reg   [31:0] outStream_V_data_V_1_data_out;
reg    outStream_V_data_V_1_vld_in;
wire    outStream_V_data_V_1_vld_out;
wire    outStream_V_data_V_1_ack_in;
wire    outStream_V_data_V_1_ack_out;
reg   [31:0] outStream_V_data_V_1_payload_A;
reg   [31:0] outStream_V_data_V_1_payload_B;
reg    outStream_V_data_V_1_sel_rd;
reg    outStream_V_data_V_1_sel_wr;
wire    outStream_V_data_V_1_sel;
wire    outStream_V_data_V_1_load_A;
wire    outStream_V_data_V_1_load_B;
reg   [1:0] outStream_V_data_V_1_state;
wire    outStream_V_data_V_1_state_cmp_full;
wire   [3:0] outStream_V_keep_V_1_data_out;
reg    outStream_V_keep_V_1_vld_in;
wire    outStream_V_keep_V_1_vld_out;
wire    outStream_V_keep_V_1_ack_in;
wire    outStream_V_keep_V_1_ack_out;
reg    outStream_V_keep_V_1_sel_rd;
wire    outStream_V_keep_V_1_sel;
reg   [1:0] outStream_V_keep_V_1_state;
wire   [3:0] outStream_V_strb_V_1_data_out;
reg    outStream_V_strb_V_1_vld_in;
wire    outStream_V_strb_V_1_vld_out;
wire    outStream_V_strb_V_1_ack_in;
wire    outStream_V_strb_V_1_ack_out;
reg    outStream_V_strb_V_1_sel_rd;
wire    outStream_V_strb_V_1_sel;
reg   [1:0] outStream_V_strb_V_1_state;
wire   [1:0] outStream_V_user_V_1_data_out;
reg    outStream_V_user_V_1_vld_in;
wire    outStream_V_user_V_1_vld_out;
wire    outStream_V_user_V_1_ack_in;
wire    outStream_V_user_V_1_ack_out;
reg    outStream_V_user_V_1_sel_rd;
wire    outStream_V_user_V_1_sel;
reg   [1:0] outStream_V_user_V_1_state;
reg   [0:0] outStream_V_last_V_1_data_out;
reg    outStream_V_last_V_1_vld_in;
wire    outStream_V_last_V_1_vld_out;
wire    outStream_V_last_V_1_ack_in;
wire    outStream_V_last_V_1_ack_out;
reg   [0:0] outStream_V_last_V_1_payload_A;
reg   [0:0] outStream_V_last_V_1_payload_B;
reg    outStream_V_last_V_1_sel_rd;
reg    outStream_V_last_V_1_sel_wr;
wire    outStream_V_last_V_1_sel;
wire    outStream_V_last_V_1_load_A;
wire    outStream_V_last_V_1_load_B;
reg   [1:0] outStream_V_last_V_1_state;
wire    outStream_V_last_V_1_state_cmp_full;
wire   [4:0] outStream_V_id_V_1_data_out;
reg    outStream_V_id_V_1_vld_in;
wire    outStream_V_id_V_1_vld_out;
wire    outStream_V_id_V_1_ack_in;
wire    outStream_V_id_V_1_ack_out;
reg    outStream_V_id_V_1_sel_rd;
wire    outStream_V_id_V_1_sel;
reg   [1:0] outStream_V_id_V_1_state;
wire   [5:0] outStream_V_dest_V_1_data_out;
reg    outStream_V_dest_V_1_vld_in;
wire    outStream_V_dest_V_1_vld_out;
wire    outStream_V_dest_V_1_ack_in;
wire    outStream_V_dest_V_1_ack_out;
reg    outStream_V_dest_V_1_sel_rd;
wire    outStream_V_dest_V_1_sel;
reg   [1:0] outStream_V_dest_V_1_state;
wire   [31:0] ctrl;
wire   [31:0] kernel_0;
wire   [31:0] kernel_1;
wire   [31:0] kernel_2;
wire   [31:0] kernel_3;
wire   [31:0] kernel_4;
wire   [31:0] kernel_5;
wire   [31:0] kernel_6;
wire   [31:0] kernel_7;
wire   [31:0] kernel_8;
reg    inStream_TDATA_blk_n;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] exitcond1_reg_1184;
wire   [0:0] ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
reg   [0:0] exitcond4_reg_1193;
wire   [0:0] ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
reg   [0:0] exitcond_flatten8_reg_1331;
reg   [0:0] tmp_5_reg_1361;
reg    outStream_TDATA_blk_n;
reg    ap_enable_reg_pp3_iter9;
reg   [0:0] p_i_reg_1345;
reg   [0:0] ap_pipeline_reg_pp3_iter8_p_i_reg_1345;
reg    ap_enable_reg_pp3_iter10;
reg   [0:0] ap_pipeline_reg_pp3_iter9_p_i_reg_1345;
reg   [5:0] x_reg_363;
reg   [5:0] x1_reg_375;
reg   [2:0] indvar_flatten_reg_387;
reg   [1:0] y3_reg_398;
reg   [31:0] window_2_1_1_reg_409;
reg   [31:0] window_1_2_1_reg_421;
reg   [31:0] window_1_1_1_reg_433;
reg   [1:0] x4_reg_445;
reg   [11:0] indvar_flatten6_reg_456;
reg   [5:0] y_assign_reg_467;
reg   [5:0] x_assign_reg_478;
reg   [31:0] window_2_0_reg_489;
reg    ap_condition_965;
reg   [31:0] window_1_1_reg_500;
reg   [31:0] window_1_0_reg_511;
reg   [31:0] ctrl_read_reg_1179;
wire   [0:0] exitcond1_fu_598_p2;
wire   [5:0] x_1_fu_604_p2;
reg   [5:0] x_1_reg_1188;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond4_fu_615_p2;
wire   [5:0] x_2_fu_621_p2;
reg   [5:0] x_2_reg_1197;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond_flatten_fu_632_p2;
reg   [0:0] exitcond_flatten_reg_1208;
wire   [0:0] ap_CS_fsm_pp2_stage0;
wire   [2:0] indvar_flatten_next_fu_638_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [1:0] tmp_2_mid2_v_fu_664_p3;
reg   [1:0] tmp_2_mid2_v_reg_1217;
wire   [0:0] tmp_9_fu_672_p1;
reg   [0:0] tmp_9_reg_1222;
wire   [0:0] cond_mid2_fu_688_p3;
reg   [0:0] cond_mid2_reg_1227;
wire   [0:0] cond1_fu_712_p2;
reg   [0:0] cond1_reg_1245;
wire   [1:0] x_3_fu_718_p2;
wire   [31:0] window_2_2_7_fu_766_p3;
reg    ap_enable_reg_pp2_iter1;
wire   [31:0] window_2_2_8_fu_773_p3;
wire   [31:0] window_2_2_9_fu_780_p3;
wire   [0:0] tmp_8_fu_792_p1;
reg   [0:0] tmp_8_reg_1326;
wire   [0:0] ap_CS_fsm_state10;
wire   [0:0] exitcond_flatten8_fu_810_p2;
reg   [0:0] ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1331;
wire   [11:0] indvar_flatten_next7_fu_816_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [5:0] y_assign_mid2_fu_882_p3;
wire   [0:0] p_i_fu_920_p2;
reg   [0:0] ap_pipeline_reg_pp3_iter1_p_i_reg_1345;
reg   [0:0] ap_pipeline_reg_pp3_iter2_p_i_reg_1345;
reg   [0:0] ap_pipeline_reg_pp3_iter3_p_i_reg_1345;
reg   [0:0] ap_pipeline_reg_pp3_iter4_p_i_reg_1345;
reg   [0:0] ap_pipeline_reg_pp3_iter5_p_i_reg_1345;
reg   [0:0] ap_pipeline_reg_pp3_iter6_p_i_reg_1345;
reg   [0:0] ap_pipeline_reg_pp3_iter7_p_i_reg_1345;
reg   [5:0] lineBuffer_0_addr_2_reg_1349;
reg   [5:0] lineBuffer_1_addr_2_reg_1355;
reg   [5:0] ap_pipeline_reg_pp3_iter1_lineBuffer_1_addr_2_reg_1355;
wire   [0:0] tmp_5_fu_929_p2;
wire   [5:0] x_4_fu_946_p2;
reg   [31:0] window_2_1_2_reg_1370;
wire   [31:0] lineBuffer_1_q0;
reg   [31:0] windowRightCol_1_reg_1376;
wire   [24:0] tmp5_fu_1049_p2;
reg   [24:0] tmp5_reg_1381;
wire   [23:0] tmp6_fu_1063_p2;
reg   [23:0] tmp6_reg_1386;
wire   [24:0] tmp8_fu_1091_p2;
reg   [24:0] tmp8_reg_1391;
wire   [31:0] tmp_data_V_2_fu_1159_p3;
wire   [0:0] tmp_last_V_fu_1167_p2;
wire   [0:0] ap_CS_fsm_state4;
wire   [0:0] ap_CS_fsm_state7;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter3;
reg    ap_enable_reg_pp3_iter4;
reg    ap_enable_reg_pp3_iter5;
reg    ap_enable_reg_pp3_iter6;
reg    ap_enable_reg_pp3_iter7;
reg    ap_enable_reg_pp3_iter8;
reg   [5:0] lineBuffer_0_address0;
reg    lineBuffer_0_ce0;
reg    lineBuffer_0_we0;
wire   [31:0] lineBuffer_0_q0;
reg    lineBuffer_0_ce1;
reg    lineBuffer_0_we1;
reg   [5:0] lineBuffer_1_address0;
reg    lineBuffer_1_ce0;
reg    lineBuffer_1_we0;
reg    lineBuffer_1_ce1;
reg    lineBuffer_1_we1;
wire   [22:0] grp_fixed_point_mul_fu_523_ap_return;
reg    grp_fixed_point_mul_fu_523_ap_ce;
wire   [22:0] grp_fixed_point_mul_fu_530_ap_return;
reg    grp_fixed_point_mul_fu_530_ap_ce;
wire   [22:0] grp_fixed_point_mul_fu_537_ap_return;
reg    grp_fixed_point_mul_fu_537_ap_ce;
wire   [22:0] grp_fixed_point_mul_fu_544_ap_return;
reg    grp_fixed_point_mul_fu_544_ap_ce;
wire   [22:0] grp_fixed_point_mul_fu_551_ap_return;
reg    grp_fixed_point_mul_fu_551_ap_ce;
wire   [22:0] grp_fixed_point_mul_fu_559_ap_return;
reg    grp_fixed_point_mul_fu_559_ap_ce;
wire   [22:0] grp_fixed_point_mul_fu_567_ap_return;
reg    grp_fixed_point_mul_fu_567_ap_ce;
wire   [22:0] grp_fixed_point_mul_fu_574_ap_return;
reg    grp_fixed_point_mul_fu_574_ap_ce;
wire   [22:0] grp_fixed_point_mul_fu_582_ap_return;
reg    grp_fixed_point_mul_fu_582_ap_ce;
reg   [5:0] x_phi_fu_367_p4;
reg   [5:0] x1_phi_fu_379_p4;
reg   [1:0] y3_phi_fu_402_p4;
reg   [31:0] window_2_0_phi_fu_492_p4;
reg   [31:0] window_1_1_phi_fu_503_p4;
reg   [31:0] window_1_0_phi_fu_514_p4;
wire   [31:0] x_cast_fu_610_p1;
wire   [31:0] x1_cast_fu_627_p1;
wire   [31:0] tmp_cast_fu_706_p1;
wire   [31:0] x_assign_cast_fu_890_p1;
reg   [31:0] window_2_2_fu_162;
wire   [31:0] window_2_2_6_fu_759_p3;
reg   [31:0] window_0_0_read_as_fu_166;
reg   [31:0] window_0_0_fu_170;
reg   [31:0] window_0_1_fu_174;
reg   [31:0] window_1_0_read_as_fu_178;
reg   [31:0] window_2_0_read_as_fu_182;
reg   [31:0] window_2_1_fu_186;
reg   [31:0] writeCount_1_fu_190;
wire   [31:0] writeCount_fu_1100_p2;
reg   [31:0] readCount_1_fu_194;
wire   [31:0] readCount_fu_935_p2;
wire   [0:0] exitcond_fu_644_p2;
wire   [1:0] y9_fu_658_p2;
wire   [0:0] cond_mid1_fu_676_p2;
wire   [0:0] cond_fu_682_p2;
wire   [1:0] x4_mid2_fu_650_p3;
wire   [5:0] x4_cast_fu_696_p1;
wire   [5:0] tmp_s_fu_700_p2;
wire   [31:0] window_1_1_2_fu_724_p3;
wire   [31:0] window_2_2_4_fu_745_p3;
wire   [31:0] window_2_2_5_fu_752_p3;
wire   [31:0] window_2_2_1_fu_731_p3;
wire   [31:0] window_2_2_2_fu_738_p3;
wire   [0:0] exitcond2_fu_822_p2;
wire   [5:0] y_s_fu_836_p2;
wire   [0:0] tmp_i_mid1_fu_842_p2;
wire   [0:0] tmp_i_fu_848_p2;
wire   [0:0] tmp_2_i_mid1_fu_862_p2;
wire   [0:0] tmp_2_i_fu_868_p2;
wire   [5:0] x_assign_mid2_fu_828_p3;
wire   [0:0] tmp_i_15_fu_896_p2;
wire   [0:0] tmp_i_mid2_fu_854_p3;
wire   [0:0] tmp_1_i_fu_902_p2;
wire   [0:0] tmp_2_i_mid2_fu_874_p3;
wire   [0:0] tmp3_fu_914_p2;
wire   [0:0] tmp2_fu_908_p2;
wire  signed [23:0] tmp11_trunc25_ext_ca_fu_1017_p1;
wire  signed [23:0] tmp11_trunc_ext_cast_fu_1013_p1;
wire   [23:0] tmp1_fu_1021_p2;
wire  signed [23:0] tmp12_trunc_ext_cast_fu_1031_p1;
wire  signed [23:0] tmp12_trunc24_ext_ca_fu_1035_p1;
wire   [23:0] tmp4_fu_1039_p2;
wire  signed [24:0] tmp11_cast_fu_1027_p1;
wire  signed [24:0] tmp12_cast_fu_1045_p1;
wire  signed [23:0] tmp14_trunc23_ext_ca_fu_1059_p1;
wire  signed [23:0] tmp14_trunc_ext_cast_fu_1055_p1;
wire  signed [23:0] tmp16_trunc26_ext_ca_fu_1073_p1;
wire  signed [23:0] tmp16_trunc_ext_cast_fu_1069_p1;
wire   [23:0] tmp7_fu_1077_p2;
wire  signed [24:0] tmp15_trunc_ext_cast_fu_1087_p1;
wire  signed [24:0] tmp16_cast_fu_1083_p1;
wire  signed [25:0] tmp14_cast_fu_1109_p1;
wire  signed [25:0] tmp15_cast_fu_1112_p1;
wire   [25:0] tmp9_fu_1115_p2;
wire  signed [26:0] tmp10_cast_fu_1106_p1;
wire  signed [26:0] tmp13_cast_fu_1121_p1;
wire   [26:0] result_4_2_2_i_fu_1125_p2;
wire   [0:0] tmp_10_fu_1135_p3;
wire   [26:0] result_fu_1143_p3;
wire  signed [30:0] result_cast1_fu_1151_p1;
wire   [31:0] result_cast_fu_1155_p1;
wire  signed [31:0] result_4_2_2_i_cast1_fu_1131_p1;
wire   [0:0] ap_CS_fsm_state22;
reg    ap_condition_1735;
reg   [8:0] ap_NS_fsm;
reg    ap_condition_976;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'b1;
#0 inStream_V_data_V_0_sel_rd = 1'b0;
#0 inStream_V_data_V_0_sel_wr = 1'b0;
#0 inStream_V_data_V_0_state = 2'b00;
#0 inStream_V_dest_V_0_state = 2'b00;
#0 outStream_V_data_V_1_sel_rd = 1'b0;
#0 outStream_V_data_V_1_sel_wr = 1'b0;
#0 outStream_V_data_V_1_state = 2'b00;
#0 outStream_V_keep_V_1_sel_rd = 1'b0;
#0 outStream_V_keep_V_1_state = 2'b00;
#0 outStream_V_strb_V_1_sel_rd = 1'b0;
#0 outStream_V_strb_V_1_state = 2'b00;
#0 outStream_V_user_V_1_sel_rd = 1'b0;
#0 outStream_V_user_V_1_state = 2'b00;
#0 outStream_V_last_V_1_sel_rd = 1'b0;
#0 outStream_V_last_V_1_sel_wr = 1'b0;
#0 outStream_V_last_V_1_state = 2'b00;
#0 outStream_V_id_V_1_sel_rd = 1'b0;
#0 outStream_V_id_V_1_state = 2'b00;
#0 outStream_V_dest_V_1_sel_rd = 1'b0;
#0 outStream_V_dest_V_1_state = 2'b00;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter9 = 1'b0;
#0 ap_enable_reg_pp3_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter6 = 1'b0;
#0 ap_enable_reg_pp3_iter7 = 1'b0;
#0 ap_enable_reg_pp3_iter8 = 1'b0;
end

cnn_conv_d46x46_k3x3_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
cnn_conv_d46x46_k3x3_CTRL_s_axi_U(
    .AWVALID(s_axi_CTRL_AWVALID),
    .AWREADY(s_axi_CTRL_AWREADY),
    .AWADDR(s_axi_CTRL_AWADDR),
    .WVALID(s_axi_CTRL_WVALID),
    .WREADY(s_axi_CTRL_WREADY),
    .WDATA(s_axi_CTRL_WDATA),
    .WSTRB(s_axi_CTRL_WSTRB),
    .ARVALID(s_axi_CTRL_ARVALID),
    .ARREADY(s_axi_CTRL_ARREADY),
    .ARADDR(s_axi_CTRL_ARADDR),
    .RVALID(s_axi_CTRL_RVALID),
    .RREADY(s_axi_CTRL_RREADY),
    .RDATA(s_axi_CTRL_RDATA),
    .RRESP(s_axi_CTRL_RRESP),
    .BVALID(s_axi_CTRL_BVALID),
    .BREADY(s_axi_CTRL_BREADY),
    .BRESP(s_axi_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .ctrl(ctrl),
    .kernel_0(kernel_0),
    .kernel_1(kernel_1),
    .kernel_2(kernel_2),
    .kernel_3(kernel_3),
    .kernel_4(kernel_4),
    .kernel_5(kernel_5),
    .kernel_6(kernel_6),
    .kernel_7(kernel_7),
    .kernel_8(kernel_8)
);

cnn_conv_d46x46_kcud #(
    .DataWidth( 32 ),
    .AddressRange( 46 ),
    .AddressWidth( 6 ))
lineBuffer_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(lineBuffer_0_address0),
    .ce0(lineBuffer_0_ce0),
    .we0(lineBuffer_0_we0),
    .d0(inStream_V_data_V_0_data_out),
    .q0(lineBuffer_0_q0),
    .address1(lineBuffer_0_addr_2_reg_1349),
    .ce1(lineBuffer_0_ce1),
    .we1(lineBuffer_0_we1),
    .d1(lineBuffer_1_q0)
);

cnn_conv_d46x46_kcud #(
    .DataWidth( 32 ),
    .AddressRange( 46 ),
    .AddressWidth( 6 ))
lineBuffer_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(lineBuffer_1_address0),
    .ce0(lineBuffer_1_ce0),
    .we0(lineBuffer_1_we0),
    .d0(inStream_V_data_V_0_data_out),
    .q0(lineBuffer_1_q0),
    .address1(ap_pipeline_reg_pp3_iter1_lineBuffer_1_addr_2_reg_1355),
    .ce1(lineBuffer_1_ce1),
    .we1(lineBuffer_1_we1),
    .d1(window_2_1_fu_186)
);

fixed_point_mul grp_fixed_point_mul_fu_523(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(window_0_0_read_as_fu_166),
    .b(kernel_0),
    .ap_return(grp_fixed_point_mul_fu_523_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_523_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_530(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(window_0_0_fu_170),
    .b(kernel_1),
    .ap_return(grp_fixed_point_mul_fu_530_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_530_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_537(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(window_0_1_fu_174),
    .b(kernel_2),
    .ap_return(grp_fixed_point_mul_fu_537_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_537_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_544(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(window_1_0_read_as_fu_178),
    .b(kernel_3),
    .ap_return(grp_fixed_point_mul_fu_544_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_544_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_551(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(window_1_0_phi_fu_514_p4),
    .b(kernel_4),
    .ap_return(grp_fixed_point_mul_fu_551_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_551_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_559(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(window_1_1_phi_fu_503_p4),
    .b(kernel_5),
    .ap_return(grp_fixed_point_mul_fu_559_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_559_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_567(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(window_2_0_read_as_fu_182),
    .b(kernel_6),
    .ap_return(grp_fixed_point_mul_fu_567_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_567_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_574(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(window_2_0_phi_fu_492_p4),
    .b(kernel_7),
    .ap_return(grp_fixed_point_mul_fu_574_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_574_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_582(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(window_2_1_fu_186),
    .b(kernel_8),
    .ap_return(grp_fixed_point_mul_fu_582_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_582_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1184) & (inStream_V_data_V_0_vld_out == 1'b0)) & ~(1'b0 == exitcond1_fu_598_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1184) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == exitcond1_fu_598_p2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1184) & (inStream_V_data_V_0_vld_out == 1'b0)) & ~(1'b0 == exitcond1_fu_598_p2)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1193) & (inStream_V_data_V_0_vld_out == 1'b0)) & ~(1'b0 == exitcond4_fu_615_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1193) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == exitcond4_fu_615_p2))) begin
            ap_enable_reg_pp1_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1193) & (inStream_V_data_V_0_vld_out == 1'b0)) & ~(1'b0 == exitcond4_fu_615_p2)))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~(1'b0 == exitcond_flatten_fu_632_p2))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond_flatten_fu_632_p2))) begin
            ap_enable_reg_pp2_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~(1'b0 == exitcond_flatten_fu_632_p2)))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))) & ~(1'b0 == exitcond_flatten8_fu_810_p2))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter10 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)))) begin
            ap_enable_reg_pp3_iter10 <= ap_enable_reg_pp3_iter9;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp3_iter10 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((ap_condition_976 == 1'b1)) begin
            if (~(1'b1 == ap_enable_reg_pp3_iter0)) begin
                ap_enable_reg_pp3_iter2 <= 1'b0;
            end else if ((1'b1 == ap_enable_reg_pp3_iter0)) begin
                ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)))) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)))) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)))) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter6 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)))) begin
            ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter7 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)))) begin
            ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter8 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)))) begin
            ap_enable_reg_pp3_iter8 <= ap_enable_reg_pp3_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter9 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)))) begin
            ap_enable_reg_pp3_iter9 <= ap_enable_reg_pp3_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_data_V_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == inStream_V_data_V_0_ack_out) & (1'b1 == inStream_V_data_V_0_vld_out))) begin
            inStream_V_data_V_0_sel_rd <= ~inStream_V_data_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_data_V_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == inStream_V_data_V_0_vld_in) & (1'b1 == inStream_V_data_V_0_ack_in))) begin
            inStream_V_data_V_0_sel_wr <= ~inStream_V_data_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_data_V_0_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == inStream_V_data_V_0_vld_in) & (1'b1 == inStream_V_data_V_0_ack_out) & (inStream_V_data_V_0_state == ap_const_lv2_3)) | ((1'b0 == inStream_V_data_V_0_vld_in) & (inStream_V_data_V_0_state == ap_const_lv2_2)))) begin
            inStream_V_data_V_0_state <= ap_const_lv2_2;
        end else if ((((1'b1 == inStream_V_data_V_0_vld_in) & (1'b0 == inStream_V_data_V_0_ack_out) & (inStream_V_data_V_0_state == ap_const_lv2_3)) | ((1'b0 == inStream_V_data_V_0_ack_out) & (inStream_V_data_V_0_state == ap_const_lv2_1)))) begin
            inStream_V_data_V_0_state <= ap_const_lv2_1;
        end else if ((((1'b1 == inStream_V_data_V_0_vld_in) & (inStream_V_data_V_0_state == ap_const_lv2_2)) | ((1'b1 == inStream_V_data_V_0_ack_out) & (inStream_V_data_V_0_state == ap_const_lv2_1)) | ((inStream_V_data_V_0_state == ap_const_lv2_3) & ~((1'b1 == inStream_V_data_V_0_vld_in) & (1'b0 == inStream_V_data_V_0_ack_out)) & ~((1'b0 == inStream_V_data_V_0_vld_in) & (1'b1 == inStream_V_data_V_0_ack_out))))) begin
            inStream_V_data_V_0_state <= ap_const_lv2_3;
        end else begin
            inStream_V_data_V_0_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_dest_V_0_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == inStream_V_dest_V_0_vld_in) & (1'b1 == inStream_V_dest_V_0_ack_out) & (ap_const_lv2_3 == inStream_V_dest_V_0_state)) | ((1'b0 == inStream_V_dest_V_0_vld_in) & (ap_const_lv2_2 == inStream_V_dest_V_0_state)))) begin
            inStream_V_dest_V_0_state <= ap_const_lv2_2;
        end else if ((((1'b1 == inStream_V_dest_V_0_vld_in) & (1'b0 == inStream_V_dest_V_0_ack_out) & (ap_const_lv2_3 == inStream_V_dest_V_0_state)) | ((1'b0 == inStream_V_dest_V_0_ack_out) & (ap_const_lv2_1 == inStream_V_dest_V_0_state)))) begin
            inStream_V_dest_V_0_state <= ap_const_lv2_1;
        end else if ((((1'b1 == inStream_V_dest_V_0_vld_in) & (ap_const_lv2_2 == inStream_V_dest_V_0_state)) | ((1'b1 == inStream_V_dest_V_0_ack_out) & (ap_const_lv2_1 == inStream_V_dest_V_0_state)) | ((ap_const_lv2_3 == inStream_V_dest_V_0_state) & ~((1'b1 == inStream_V_dest_V_0_vld_in) & (1'b0 == inStream_V_dest_V_0_ack_out)) & ~((1'b0 == inStream_V_dest_V_0_vld_in) & (1'b1 == inStream_V_dest_V_0_ack_out))))) begin
            inStream_V_dest_V_0_state <= ap_const_lv2_3;
        end else begin
            inStream_V_dest_V_0_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_data_V_1_ack_out) & (1'b1 == outStream_V_data_V_1_vld_out))) begin
            outStream_V_data_V_1_sel_rd <= ~outStream_V_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_data_V_1_vld_in) & (1'b1 == outStream_V_data_V_1_ack_in))) begin
            outStream_V_data_V_1_sel_wr <= ~outStream_V_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_data_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_data_V_1_vld_in) & (1'b1 == outStream_V_data_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_data_V_1_state)) | ((1'b0 == outStream_V_data_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_data_V_1_state)))) begin
            outStream_V_data_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_data_V_1_vld_in) & (1'b0 == outStream_V_data_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_data_V_1_state)) | ((1'b0 == outStream_V_data_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_data_V_1_state)))) begin
            outStream_V_data_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_data_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_data_V_1_state)) | ((1'b1 == outStream_V_data_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_data_V_1_state)) | ((ap_const_lv2_3 == outStream_V_data_V_1_state) & ~((1'b1 == outStream_V_data_V_1_vld_in) & (1'b0 == outStream_V_data_V_1_ack_out)) & ~((1'b0 == outStream_V_data_V_1_vld_in) & (1'b1 == outStream_V_data_V_1_ack_out))))) begin
            outStream_V_data_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_data_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_dest_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_dest_V_1_ack_out) & (1'b1 == outStream_V_dest_V_1_vld_out))) begin
            outStream_V_dest_V_1_sel_rd <= ~outStream_V_dest_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_dest_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_dest_V_1_vld_in) & (1'b1 == outStream_V_dest_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_dest_V_1_state)) | ((1'b0 == outStream_V_dest_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_dest_V_1_state)))) begin
            outStream_V_dest_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_dest_V_1_vld_in) & (1'b0 == outStream_V_dest_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_dest_V_1_state)) | ((1'b0 == outStream_V_dest_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_dest_V_1_state)))) begin
            outStream_V_dest_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_dest_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_dest_V_1_state)) | ((1'b1 == outStream_V_dest_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_dest_V_1_state)) | ((ap_const_lv2_3 == outStream_V_dest_V_1_state) & ~((1'b1 == outStream_V_dest_V_1_vld_in) & (1'b0 == outStream_V_dest_V_1_ack_out)) & ~((1'b0 == outStream_V_dest_V_1_vld_in) & (1'b1 == outStream_V_dest_V_1_ack_out))))) begin
            outStream_V_dest_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_dest_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_id_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_id_V_1_ack_out) & (1'b1 == outStream_V_id_V_1_vld_out))) begin
            outStream_V_id_V_1_sel_rd <= ~outStream_V_id_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_id_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_id_V_1_vld_in) & (1'b1 == outStream_V_id_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_id_V_1_state)) | ((1'b0 == outStream_V_id_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_id_V_1_state)))) begin
            outStream_V_id_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_id_V_1_vld_in) & (1'b0 == outStream_V_id_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_id_V_1_state)) | ((1'b0 == outStream_V_id_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_id_V_1_state)))) begin
            outStream_V_id_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_id_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_id_V_1_state)) | ((1'b1 == outStream_V_id_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_id_V_1_state)) | ((ap_const_lv2_3 == outStream_V_id_V_1_state) & ~((1'b1 == outStream_V_id_V_1_vld_in) & (1'b0 == outStream_V_id_V_1_ack_out)) & ~((1'b0 == outStream_V_id_V_1_vld_in) & (1'b1 == outStream_V_id_V_1_ack_out))))) begin
            outStream_V_id_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_id_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_keep_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_keep_V_1_ack_out) & (1'b1 == outStream_V_keep_V_1_vld_out))) begin
            outStream_V_keep_V_1_sel_rd <= ~outStream_V_keep_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_keep_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_keep_V_1_vld_in) & (1'b1 == outStream_V_keep_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_keep_V_1_state)) | ((1'b0 == outStream_V_keep_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_keep_V_1_state)))) begin
            outStream_V_keep_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_keep_V_1_vld_in) & (1'b0 == outStream_V_keep_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_keep_V_1_state)) | ((1'b0 == outStream_V_keep_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_keep_V_1_state)))) begin
            outStream_V_keep_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_keep_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_keep_V_1_state)) | ((1'b1 == outStream_V_keep_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_keep_V_1_state)) | ((ap_const_lv2_3 == outStream_V_keep_V_1_state) & ~((1'b1 == outStream_V_keep_V_1_vld_in) & (1'b0 == outStream_V_keep_V_1_ack_out)) & ~((1'b0 == outStream_V_keep_V_1_vld_in) & (1'b1 == outStream_V_keep_V_1_ack_out))))) begin
            outStream_V_keep_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_keep_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_last_V_1_ack_out) & (1'b1 == outStream_V_last_V_1_vld_out))) begin
            outStream_V_last_V_1_sel_rd <= ~outStream_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_last_V_1_vld_in) & (1'b1 == outStream_V_last_V_1_ack_in))) begin
            outStream_V_last_V_1_sel_wr <= ~outStream_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_last_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_last_V_1_vld_in) & (1'b1 == outStream_V_last_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_last_V_1_state)) | ((1'b0 == outStream_V_last_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_last_V_1_state)))) begin
            outStream_V_last_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_last_V_1_vld_in) & (1'b0 == outStream_V_last_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_last_V_1_state)) | ((1'b0 == outStream_V_last_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_last_V_1_state)))) begin
            outStream_V_last_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_last_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_last_V_1_state)) | ((1'b1 == outStream_V_last_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_last_V_1_state)) | ((ap_const_lv2_3 == outStream_V_last_V_1_state) & ~((1'b1 == outStream_V_last_V_1_vld_in) & (1'b0 == outStream_V_last_V_1_ack_out)) & ~((1'b0 == outStream_V_last_V_1_vld_in) & (1'b1 == outStream_V_last_V_1_ack_out))))) begin
            outStream_V_last_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_last_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_strb_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_strb_V_1_ack_out) & (1'b1 == outStream_V_strb_V_1_vld_out))) begin
            outStream_V_strb_V_1_sel_rd <= ~outStream_V_strb_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_strb_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_strb_V_1_vld_in) & (1'b1 == outStream_V_strb_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_strb_V_1_state)) | ((1'b0 == outStream_V_strb_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_strb_V_1_state)))) begin
            outStream_V_strb_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_strb_V_1_vld_in) & (1'b0 == outStream_V_strb_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_strb_V_1_state)) | ((1'b0 == outStream_V_strb_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_strb_V_1_state)))) begin
            outStream_V_strb_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_strb_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_strb_V_1_state)) | ((1'b1 == outStream_V_strb_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_strb_V_1_state)) | ((ap_const_lv2_3 == outStream_V_strb_V_1_state) & ~((1'b1 == outStream_V_strb_V_1_vld_in) & (1'b0 == outStream_V_strb_V_1_ack_out)) & ~((1'b0 == outStream_V_strb_V_1_vld_in) & (1'b1 == outStream_V_strb_V_1_ack_out))))) begin
            outStream_V_strb_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_strb_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_user_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_user_V_1_ack_out) & (1'b1 == outStream_V_user_V_1_vld_out))) begin
            outStream_V_user_V_1_sel_rd <= ~outStream_V_user_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_user_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_user_V_1_vld_in) & (1'b1 == outStream_V_user_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_user_V_1_state)) | ((1'b0 == outStream_V_user_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_user_V_1_state)))) begin
            outStream_V_user_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_user_V_1_vld_in) & (1'b0 == outStream_V_user_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_user_V_1_state)) | ((1'b0 == outStream_V_user_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_user_V_1_state)))) begin
            outStream_V_user_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_user_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_user_V_1_state)) | ((1'b1 == outStream_V_user_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_user_V_1_state)) | ((ap_const_lv2_3 == outStream_V_user_V_1_state) & ~((1'b1 == outStream_V_user_V_1_vld_in) & (1'b0 == outStream_V_user_V_1_ack_out)) & ~((1'b0 == outStream_V_user_V_1_vld_in) & (1'b1 == outStream_V_user_V_1_ack_out))))) begin
            outStream_V_user_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_user_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond_flatten8_fu_810_p2))) begin
        indvar_flatten6_reg_456 <= indvar_flatten_next7_fu_816_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        indvar_flatten6_reg_456 <= ap_const_lv12_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        indvar_flatten_reg_387 <= ap_const_lv3_0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond_flatten_fu_632_p2))) begin
        indvar_flatten_reg_387 <= indvar_flatten_next_fu_638_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond_flatten8_fu_810_p2) & ~(1'b0 == tmp_5_fu_929_p2))) begin
        readCount_1_fu_194 <= readCount_fu_935_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        readCount_1_fu_194 <= ap_const_lv32_30;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1331))) begin
        window_1_0_reg_511 <= window_1_1_reg_500;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        window_1_0_reg_511 <= window_1_1_1_reg_433;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1331))) begin
        window_1_1_reg_500 <= windowRightCol_1_reg_1376;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        window_1_1_reg_500 <= window_1_2_1_reg_421;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1331))) begin
        window_2_0_reg_489 <= window_2_1_2_reg_1370;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        window_2_0_reg_489 <= window_2_1_1_reg_409;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_flatten8_reg_1331) & ~(1'b0 == tmp_5_reg_1361) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        window_2_1_fu_186 <= inStream_V_data_V_0_data_out;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        window_2_1_fu_186 <= window_2_2_fu_162;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        writeCount_1_fu_190 <= writeCount_fu_1100_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        writeCount_1_fu_190 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        x1_reg_375 <= ap_const_lv6_0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1193) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1193) & (inStream_V_data_V_0_vld_out == 1'b0)))) begin
        x1_reg_375 <= x_2_reg_1197;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        x4_reg_445 <= ap_const_lv2_1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond_flatten_fu_632_p2))) begin
        x4_reg_445 <= x_3_fu_718_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond_flatten8_fu_810_p2))) begin
        x_assign_reg_478 <= x_4_fu_946_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        x_assign_reg_478 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1184) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1184) & (inStream_V_data_V_0_vld_out == 1'b0)))) begin
        x_reg_363 <= x_1_reg_1188;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        x_reg_363 <= ap_const_lv6_2C;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        y3_reg_398 <= ap_const_lv2_1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten_reg_1208))) begin
        y3_reg_398 <= tmp_2_mid2_v_reg_1217;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond_flatten8_fu_810_p2))) begin
        y_assign_reg_467 <= y_assign_mid2_fu_882_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_assign_reg_467 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1331 <= exitcond_flatten8_reg_1331;
        ap_pipeline_reg_pp3_iter1_lineBuffer_1_addr_2_reg_1355 <= lineBuffer_1_addr_2_reg_1355;
        ap_pipeline_reg_pp3_iter1_p_i_reg_1345 <= p_i_reg_1345;
        exitcond_flatten8_reg_1331 <= exitcond_flatten8_fu_810_p2;
    end
end

always @ (posedge ap_clk) begin
    if (~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)))) begin
        ap_pipeline_reg_pp3_iter2_p_i_reg_1345 <= ap_pipeline_reg_pp3_iter1_p_i_reg_1345;
        ap_pipeline_reg_pp3_iter3_p_i_reg_1345 <= ap_pipeline_reg_pp3_iter2_p_i_reg_1345;
        ap_pipeline_reg_pp3_iter4_p_i_reg_1345 <= ap_pipeline_reg_pp3_iter3_p_i_reg_1345;
        ap_pipeline_reg_pp3_iter5_p_i_reg_1345 <= ap_pipeline_reg_pp3_iter4_p_i_reg_1345;
        ap_pipeline_reg_pp3_iter6_p_i_reg_1345 <= ap_pipeline_reg_pp3_iter5_p_i_reg_1345;
        ap_pipeline_reg_pp3_iter7_p_i_reg_1345 <= ap_pipeline_reg_pp3_iter6_p_i_reg_1345;
        ap_pipeline_reg_pp3_iter8_p_i_reg_1345 <= ap_pipeline_reg_pp3_iter7_p_i_reg_1345;
        ap_pipeline_reg_pp3_iter9_p_i_reg_1345 <= ap_pipeline_reg_pp3_iter8_p_i_reg_1345;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond_flatten_fu_632_p2))) begin
        cond1_reg_1245 <= cond1_fu_712_p2;
        cond_mid2_reg_1227 <= cond_mid2_fu_688_p3;
        tmp_9_reg_1222 <= tmp_9_fu_672_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        ctrl_read_reg_1179 <= ctrl;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1184) & (inStream_V_data_V_0_vld_out == 1'b0)))) begin
        exitcond1_reg_1184 <= exitcond1_fu_598_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1193) & (inStream_V_data_V_0_vld_out == 1'b0)))) begin
        exitcond4_reg_1193 <= exitcond4_fu_615_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp2_stage0)) begin
        exitcond_flatten_reg_1208 <= exitcond_flatten_fu_632_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == inStream_V_data_V_0_load_A)) begin
        inStream_V_data_V_0_payload_A <= inStream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == inStream_V_data_V_0_load_B)) begin
        inStream_V_data_V_0_payload_B <= inStream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b0 == exitcond_flatten8_fu_810_p2))) begin
        lineBuffer_0_addr_2_reg_1349 <= x_assign_cast_fu_890_p1;
        lineBuffer_1_addr_2_reg_1355 <= x_assign_cast_fu_890_p1;
        p_i_reg_1345 <= p_i_fu_920_p2;
        tmp_5_reg_1361 <= tmp_5_fu_929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == outStream_V_data_V_1_load_A)) begin
        outStream_V_data_V_1_payload_A <= tmp_data_V_2_fu_1159_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == outStream_V_data_V_1_load_B)) begin
        outStream_V_data_V_1_payload_B <= tmp_data_V_2_fu_1159_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == outStream_V_last_V_1_load_A)) begin
        outStream_V_last_V_1_payload_A <= tmp_last_V_fu_1167_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == outStream_V_last_V_1_load_B)) begin
        outStream_V_last_V_1_payload_B <= tmp_last_V_fu_1167_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b0 == ap_pipeline_reg_pp3_iter7_p_i_reg_1345))) begin
        tmp5_reg_1381 <= tmp5_fu_1049_p2;
        tmp6_reg_1386 <= tmp6_fu_1063_p2;
        tmp8_reg_1391 <= tmp8_fu_1091_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond_flatten_fu_632_p2))) begin
        tmp_2_mid2_v_reg_1217 <= tmp_2_mid2_v_fu_664_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_8_reg_1326 <= tmp_8_fu_792_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_flatten8_reg_1331) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        windowRightCol_1_reg_1376 <= lineBuffer_1_q0;
        window_0_1_fu_174 <= lineBuffer_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        window_0_0_fu_170 <= window_0_1_fu_174;
        window_0_0_read_as_fu_166 <= window_0_0_fu_170;
        window_1_0_read_as_fu_178 <= window_1_0_phi_fu_514_p4;
        window_2_0_read_as_fu_182 <= window_2_0_phi_fu_492_p4;
        window_2_1_2_reg_1370 <= window_2_1_fu_186;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten_reg_1208))) begin
        window_1_1_1_reg_433 <= window_2_2_9_fu_780_p3;
        window_1_2_1_reg_421 <= window_2_2_8_fu_773_p3;
        window_2_1_1_reg_409 <= window_2_2_7_fu_766_p3;
        window_2_2_fu_162 <= window_2_2_6_fu_759_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1184) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond1_fu_598_p2))) begin
        x_1_reg_1188 <= x_1_fu_604_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1193) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        x_2_reg_1197 <= x_2_fu_621_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) & ~(ap_condition_1735 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) & ~(ap_condition_1735 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        grp_fixed_point_mul_fu_523_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_523_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        grp_fixed_point_mul_fu_530_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_530_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        grp_fixed_point_mul_fu_537_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_537_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        grp_fixed_point_mul_fu_544_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_544_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        grp_fixed_point_mul_fu_551_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_551_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        grp_fixed_point_mul_fu_559_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_559_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        grp_fixed_point_mul_fu_567_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_567_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        grp_fixed_point_mul_fu_574_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_574_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        grp_fixed_point_mul_fu_582_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_582_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1184)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1193)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_flatten8_reg_1331) & ~(1'b0 == tmp_5_reg_1361)))) begin
        inStream_TDATA_blk_n = inStream_V_data_V_0_state[1'b0];
    end else begin
        inStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1184) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1184) & (inStream_V_data_V_0_vld_out == 1'b0))) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1193) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1193) & (inStream_V_data_V_0_vld_out == 1'b0))) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_flatten8_reg_1331) & ~(1'b0 == tmp_5_reg_1361) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)))))) begin
        inStream_V_data_V_0_ack_out = 1'b1;
    end else begin
        inStream_V_data_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == inStream_V_data_V_0_sel)) begin
        inStream_V_data_V_0_data_out = inStream_V_data_V_0_payload_B;
    end else begin
        inStream_V_data_V_0_data_out = inStream_V_data_V_0_payload_A;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1184) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1184) & (inStream_V_data_V_0_vld_out == 1'b0))) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1193) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1193) & (inStream_V_data_V_0_vld_out == 1'b0))) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_flatten8_reg_1331) & ~(1'b0 == tmp_5_reg_1361) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)))))) begin
        inStream_V_dest_V_0_ack_out = 1'b1;
    end else begin
        inStream_V_dest_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter0))) begin
        lineBuffer_0_address0 = x_assign_cast_fu_890_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        lineBuffer_0_address0 = tmp_cast_fu_706_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        lineBuffer_0_address0 = x_cast_fu_610_p1;
    end else begin
        lineBuffer_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1184) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        lineBuffer_0_ce0 = 1'b1;
    end else begin
        lineBuffer_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        lineBuffer_0_ce1 = 1'b1;
    end else begin
        lineBuffer_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1184) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1184) & (inStream_V_data_V_0_vld_out == 1'b0)))) begin
        lineBuffer_0_we0 = 1'b1;
    end else begin
        lineBuffer_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_flatten8_reg_1331) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        lineBuffer_0_we1 = 1'b1;
    end else begin
        lineBuffer_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter0))) begin
        lineBuffer_1_address0 = x_assign_cast_fu_890_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        lineBuffer_1_address0 = tmp_cast_fu_706_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        lineBuffer_1_address0 = x1_cast_fu_627_p1;
    end else begin
        lineBuffer_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter0)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1193) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        lineBuffer_1_ce0 = 1'b1;
    end else begin
        lineBuffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter2))) begin
        lineBuffer_1_ce1 = 1'b1;
    end else begin
        lineBuffer_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1193) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1193) & (inStream_V_data_V_0_vld_out == 1'b0)))) begin
        lineBuffer_1_we0 = 1'b1;
    end else begin
        lineBuffer_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1331))) begin
        lineBuffer_1_we1 = 1'b1;
    end else begin
        lineBuffer_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345)))) begin
        outStream_TDATA_blk_n = outStream_V_data_V_1_state[1'b1];
    end else begin
        outStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == outStream_V_data_V_1_sel)) begin
        outStream_V_data_V_1_data_out = outStream_V_data_V_1_payload_B;
    end else begin
        outStream_V_data_V_1_data_out = outStream_V_data_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_data_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_dest_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_dest_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_id_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_id_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_keep_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_keep_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == outStream_V_last_V_1_sel)) begin
        outStream_V_last_V_1_data_out = outStream_V_last_V_1_payload_B;
    end else begin
        outStream_V_last_V_1_data_out = outStream_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_last_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_strb_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_strb_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_user_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_user_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1331))) begin
        window_1_0_phi_fu_514_p4 = window_1_1_reg_500;
    end else begin
        window_1_0_phi_fu_514_p4 = window_1_0_reg_511;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1331))) begin
        window_1_1_phi_fu_503_p4 = windowRightCol_1_reg_1376;
    end else begin
        window_1_1_phi_fu_503_p4 = window_1_1_reg_500;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1331))) begin
        window_2_0_phi_fu_492_p4 = window_2_1_2_reg_1370;
    end else begin
        window_2_0_phi_fu_492_p4 = window_2_0_reg_489;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1193))) begin
        x1_phi_fu_379_p4 = x_2_reg_1197;
    end else begin
        x1_phi_fu_379_p4 = x1_reg_375;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1184))) begin
        x_phi_fu_367_p4 = x_1_reg_1188;
    end else begin
        x_phi_fu_367_p4 = x_reg_363;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten_reg_1208))) begin
        y3_phi_fu_402_p4 = tmp_2_mid2_v_reg_1217;
    end else begin
        y3_phi_fu_402_p4 = y3_reg_398;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~(~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1184) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond1_fu_598_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1184) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond1_fu_598_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~(~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1193) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == exitcond4_fu_615_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1193) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == exitcond4_fu_615_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp2_iter0) & ~(1'b0 == exitcond_flatten_fu_632_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp3_iter10) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))) & ~(1'b1 == ap_enable_reg_pp3_iter9)) & ~((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))) & ~(1'b1 == ap_enable_reg_pp3_iter0) & ~(1'b1 == ap_enable_reg_pp3_iter2)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((1'b1 == ap_enable_reg_pp3_iter10) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))) & ~(1'b1 == ap_enable_reg_pp3_iter9)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in))) & ~(1'b1 == ap_enable_reg_pp3_iter0) & ~(1'b1 == ap_enable_reg_pp3_iter2)))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state22 : begin
            if (~(ap_condition_1735 == 1'b1)) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state22 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state7 = ap_CS_fsm[ap_const_lv32_4];

always @ (*) begin
    ap_condition_1735 = ((outStream_V_data_V_1_ack_in == 1'b0) | (outStream_V_keep_V_1_ack_in == 1'b0) | (outStream_V_strb_V_1_ack_in == 1'b0) | (outStream_V_user_V_1_ack_in == 1'b0) | (outStream_V_last_V_1_ack_in == 1'b0) | (outStream_V_id_V_1_ack_in == 1'b0) | (outStream_V_dest_V_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_condition_965 = ((1'b0 == exitcond_flatten8_reg_1331) & ~(1'b0 == tmp_5_reg_1361) & (inStream_V_data_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_condition_976 = ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_965 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter9) & (1'b0 == ap_pipeline_reg_pp3_iter8_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter10) & (1'b0 == ap_pipeline_reg_pp3_iter9_p_i_reg_1345) & (1'b0 == outStream_V_data_V_1_ack_in)));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cond1_fu_712_p2 = ((x4_mid2_fu_650_p3 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign cond_fu_682_p2 = ((y3_phi_fu_402_p4 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign cond_mid1_fu_676_p2 = ((y3_phi_fu_402_p4 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign cond_mid2_fu_688_p3 = ((exitcond_fu_644_p2[0:0] === 1'b1) ? cond_mid1_fu_676_p2 : cond_fu_682_p2);

assign exitcond1_fu_598_p2 = ((x_phi_fu_367_p4 == ap_const_lv6_2E) ? 1'b1 : 1'b0);

assign exitcond2_fu_822_p2 = ((x_assign_reg_478 == ap_const_lv6_2E) ? 1'b1 : 1'b0);

assign exitcond4_fu_615_p2 = ((x1_phi_fu_379_p4 == ap_const_lv6_2E) ? 1'b1 : 1'b0);

assign exitcond_flatten8_fu_810_p2 = ((indvar_flatten6_reg_456 == ap_const_lv12_844) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_632_p2 = ((indvar_flatten_reg_387 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign exitcond_fu_644_p2 = ((x4_reg_445 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign inStream_TREADY = inStream_V_dest_V_0_state[1'b1];

assign inStream_V_data_V_0_ack_in = inStream_V_data_V_0_state[1'b1];

assign inStream_V_data_V_0_load_A = (inStream_V_data_V_0_state_cmp_full & ~inStream_V_data_V_0_sel_wr);

assign inStream_V_data_V_0_load_B = (inStream_V_data_V_0_sel_wr & inStream_V_data_V_0_state_cmp_full);

assign inStream_V_data_V_0_sel = inStream_V_data_V_0_sel_rd;

assign inStream_V_data_V_0_state_cmp_full = ((inStream_V_data_V_0_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign inStream_V_data_V_0_vld_in = inStream_TVALID;

assign inStream_V_data_V_0_vld_out = inStream_V_data_V_0_state[1'b0];

assign inStream_V_dest_V_0_vld_in = inStream_TVALID;

assign indvar_flatten_next7_fu_816_p2 = (indvar_flatten6_reg_456 + ap_const_lv12_1);

assign indvar_flatten_next_fu_638_p2 = (indvar_flatten_reg_387 + ap_const_lv3_1);

assign outStream_TDATA = outStream_V_data_V_1_data_out;

assign outStream_TDEST = outStream_V_dest_V_1_data_out;

assign outStream_TID = outStream_V_id_V_1_data_out;

assign outStream_TKEEP = outStream_V_keep_V_1_data_out;

assign outStream_TLAST = outStream_V_last_V_1_data_out;

assign outStream_TSTRB = outStream_V_strb_V_1_data_out;

assign outStream_TUSER = outStream_V_user_V_1_data_out;

assign outStream_TVALID = outStream_V_dest_V_1_state[1'b0];

assign outStream_V_data_V_1_ack_in = outStream_V_data_V_1_state[1'b1];

assign outStream_V_data_V_1_ack_out = outStream_TREADY;

assign outStream_V_data_V_1_load_A = (outStream_V_data_V_1_state_cmp_full & ~outStream_V_data_V_1_sel_wr);

assign outStream_V_data_V_1_load_B = (outStream_V_data_V_1_sel_wr & outStream_V_data_V_1_state_cmp_full);

assign outStream_V_data_V_1_sel = outStream_V_data_V_1_sel_rd;

assign outStream_V_data_V_1_state_cmp_full = ((outStream_V_data_V_1_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign outStream_V_data_V_1_vld_out = outStream_V_data_V_1_state[1'b0];

assign outStream_V_dest_V_1_ack_in = outStream_V_dest_V_1_state[1'b1];

assign outStream_V_dest_V_1_ack_out = outStream_TREADY;

assign outStream_V_dest_V_1_data_out = ap_const_lv6_0;

assign outStream_V_dest_V_1_sel = outStream_V_dest_V_1_sel_rd;

assign outStream_V_dest_V_1_vld_out = outStream_V_dest_V_1_state[1'b0];

assign outStream_V_id_V_1_ack_in = outStream_V_id_V_1_state[1'b1];

assign outStream_V_id_V_1_ack_out = outStream_TREADY;

assign outStream_V_id_V_1_data_out = ap_const_lv5_0;

assign outStream_V_id_V_1_sel = outStream_V_id_V_1_sel_rd;

assign outStream_V_id_V_1_vld_out = outStream_V_id_V_1_state[1'b0];

assign outStream_V_keep_V_1_ack_in = outStream_V_keep_V_1_state[1'b1];

assign outStream_V_keep_V_1_ack_out = outStream_TREADY;

assign outStream_V_keep_V_1_data_out = ap_const_lv4_F;

assign outStream_V_keep_V_1_sel = outStream_V_keep_V_1_sel_rd;

assign outStream_V_keep_V_1_vld_out = outStream_V_keep_V_1_state[1'b0];

assign outStream_V_last_V_1_ack_in = outStream_V_last_V_1_state[1'b1];

assign outStream_V_last_V_1_ack_out = outStream_TREADY;

assign outStream_V_last_V_1_load_A = (outStream_V_last_V_1_state_cmp_full & ~outStream_V_last_V_1_sel_wr);

assign outStream_V_last_V_1_load_B = (outStream_V_last_V_1_sel_wr & outStream_V_last_V_1_state_cmp_full);

assign outStream_V_last_V_1_sel = outStream_V_last_V_1_sel_rd;

assign outStream_V_last_V_1_state_cmp_full = ((outStream_V_last_V_1_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign outStream_V_last_V_1_vld_out = outStream_V_last_V_1_state[1'b0];

assign outStream_V_strb_V_1_ack_in = outStream_V_strb_V_1_state[1'b1];

assign outStream_V_strb_V_1_ack_out = outStream_TREADY;

assign outStream_V_strb_V_1_data_out = ap_const_lv4_0;

assign outStream_V_strb_V_1_sel = outStream_V_strb_V_1_sel_rd;

assign outStream_V_strb_V_1_vld_out = outStream_V_strb_V_1_state[1'b0];

assign outStream_V_user_V_1_ack_in = outStream_V_user_V_1_state[1'b1];

assign outStream_V_user_V_1_ack_out = outStream_TREADY;

assign outStream_V_user_V_1_data_out = ap_const_lv2_0;

assign outStream_V_user_V_1_sel = outStream_V_user_V_1_sel_rd;

assign outStream_V_user_V_1_vld_out = outStream_V_user_V_1_state[1'b0];

assign p_i_fu_920_p2 = (tmp3_fu_914_p2 | tmp2_fu_908_p2);

assign readCount_fu_935_p2 = (readCount_1_fu_194 + ap_const_lv32_1);

assign result_4_2_2_i_cast1_fu_1131_p1 = $signed(result_4_2_2_i_fu_1125_p2);

assign result_4_2_2_i_fu_1125_p2 = ($signed(tmp10_cast_fu_1106_p1) + $signed(tmp13_cast_fu_1121_p1));

assign result_cast1_fu_1151_p1 = $signed(result_fu_1143_p3);

assign result_cast_fu_1155_p1 = $unsigned(result_cast1_fu_1151_p1);

assign result_fu_1143_p3 = ((tmp_10_fu_1135_p3[0:0] === 1'b1) ? ap_const_lv27_0 : result_4_2_2_i_fu_1125_p2);

assign tmp10_cast_fu_1106_p1 = $signed(tmp5_reg_1381);

assign tmp11_cast_fu_1027_p1 = $signed(tmp1_fu_1021_p2);

assign tmp11_trunc25_ext_ca_fu_1017_p1 = $signed(grp_fixed_point_mul_fu_574_ap_return);

assign tmp11_trunc_ext_cast_fu_1013_p1 = $signed(grp_fixed_point_mul_fu_567_ap_return);

assign tmp12_cast_fu_1045_p1 = $signed(tmp4_fu_1039_p2);

assign tmp12_trunc24_ext_ca_fu_1035_p1 = $signed(grp_fixed_point_mul_fu_559_ap_return);

assign tmp12_trunc_ext_cast_fu_1031_p1 = $signed(grp_fixed_point_mul_fu_551_ap_return);

assign tmp13_cast_fu_1121_p1 = $signed(tmp9_fu_1115_p2);

assign tmp14_cast_fu_1109_p1 = $signed(tmp6_reg_1386);

assign tmp14_trunc23_ext_ca_fu_1059_p1 = $signed(grp_fixed_point_mul_fu_530_ap_return);

assign tmp14_trunc_ext_cast_fu_1055_p1 = $signed(grp_fixed_point_mul_fu_523_ap_return);

assign tmp15_cast_fu_1112_p1 = $signed(tmp8_reg_1391);

assign tmp15_trunc_ext_cast_fu_1087_p1 = $signed(grp_fixed_point_mul_fu_544_ap_return);

assign tmp16_cast_fu_1083_p1 = $signed(tmp7_fu_1077_p2);

assign tmp16_trunc26_ext_ca_fu_1073_p1 = $signed(grp_fixed_point_mul_fu_582_ap_return);

assign tmp16_trunc_ext_cast_fu_1069_p1 = $signed(grp_fixed_point_mul_fu_537_ap_return);

assign tmp1_fu_1021_p2 = ($signed(tmp11_trunc25_ext_ca_fu_1017_p1) + $signed(tmp11_trunc_ext_cast_fu_1013_p1));

assign tmp2_fu_908_p2 = (tmp_i_15_fu_896_p2 | tmp_i_mid2_fu_854_p3);

assign tmp3_fu_914_p2 = (tmp_1_i_fu_902_p2 | tmp_2_i_mid2_fu_874_p3);

assign tmp4_fu_1039_p2 = ($signed(tmp12_trunc_ext_cast_fu_1031_p1) + $signed(tmp12_trunc24_ext_ca_fu_1035_p1));

assign tmp5_fu_1049_p2 = ($signed(tmp11_cast_fu_1027_p1) + $signed(tmp12_cast_fu_1045_p1));

assign tmp6_fu_1063_p2 = ($signed(tmp14_trunc23_ext_ca_fu_1059_p1) + $signed(tmp14_trunc_ext_cast_fu_1055_p1));

assign tmp7_fu_1077_p2 = ($signed(tmp16_trunc26_ext_ca_fu_1073_p1) + $signed(tmp16_trunc_ext_cast_fu_1069_p1));

assign tmp8_fu_1091_p2 = ($signed(tmp15_trunc_ext_cast_fu_1087_p1) + $signed(tmp16_cast_fu_1083_p1));

assign tmp9_fu_1115_p2 = ($signed(tmp14_cast_fu_1109_p1) + $signed(tmp15_cast_fu_1112_p1));

assign tmp_10_fu_1135_p3 = result_4_2_2_i_fu_1125_p2[ap_const_lv32_1A];

assign tmp_1_i_fu_902_p2 = ((x_assign_mid2_fu_828_p3 > ap_const_lv6_2C) ? 1'b1 : 1'b0);

assign tmp_2_i_fu_868_p2 = ((y_assign_reg_467 > ap_const_lv6_2C) ? 1'b1 : 1'b0);

assign tmp_2_i_mid1_fu_862_p2 = ((y_s_fu_836_p2 > ap_const_lv6_2C) ? 1'b1 : 1'b0);

assign tmp_2_i_mid2_fu_874_p3 = ((exitcond2_fu_822_p2[0:0] === 1'b1) ? tmp_2_i_mid1_fu_862_p2 : tmp_2_i_fu_868_p2);

assign tmp_2_mid2_v_fu_664_p3 = ((exitcond_fu_644_p2[0:0] === 1'b1) ? y9_fu_658_p2 : y3_phi_fu_402_p4);

assign tmp_5_fu_929_p2 = (($signed(readCount_1_fu_194) < $signed(32'b100001000100)) ? 1'b1 : 1'b0);

assign tmp_8_fu_792_p1 = ctrl_read_reg_1179[0:0];

assign tmp_9_fu_672_p1 = tmp_2_mid2_v_fu_664_p3[0:0];

assign tmp_cast_fu_706_p1 = tmp_s_fu_700_p2;

assign tmp_data_V_2_fu_1159_p3 = ((tmp_8_reg_1326[0:0] === 1'b1) ? result_cast_fu_1155_p1 : result_4_2_2_i_cast1_fu_1131_p1);

assign tmp_i_15_fu_896_p2 = ((x_assign_mid2_fu_828_p3 == ap_const_lv6_0) ? 1'b1 : 1'b0);

assign tmp_i_fu_848_p2 = ((y_assign_reg_467 == ap_const_lv6_0) ? 1'b1 : 1'b0);

assign tmp_i_mid1_fu_842_p2 = ((y_s_fu_836_p2 == ap_const_lv6_0) ? 1'b1 : 1'b0);

assign tmp_i_mid2_fu_854_p3 = ((exitcond2_fu_822_p2[0:0] === 1'b1) ? tmp_i_mid1_fu_842_p2 : tmp_i_fu_848_p2);

assign tmp_last_V_fu_1167_p2 = ((writeCount_fu_1100_p2 == ap_const_lv32_790) ? 1'b1 : 1'b0);

assign tmp_s_fu_700_p2 = ($signed(ap_const_lv6_2B) + $signed(x4_cast_fu_696_p1));

assign window_1_1_2_fu_724_p3 = ((tmp_9_reg_1222[0:0] === 1'b1) ? lineBuffer_0_q0 : lineBuffer_1_q0);

assign window_2_2_1_fu_731_p3 = ((cond1_reg_1245[0:0] === 1'b1) ? window_1_2_1_reg_421 : window_1_1_2_fu_724_p3);

assign window_2_2_2_fu_738_p3 = ((cond1_reg_1245[0:0] === 1'b1) ? window_1_1_2_fu_724_p3 : window_1_1_1_reg_433);

assign window_2_2_4_fu_745_p3 = ((cond1_reg_1245[0:0] === 1'b1) ? window_2_2_fu_162 : window_1_1_2_fu_724_p3);

assign window_2_2_5_fu_752_p3 = ((cond1_reg_1245[0:0] === 1'b1) ? window_1_1_2_fu_724_p3 : window_2_1_1_reg_409);

assign window_2_2_6_fu_759_p3 = ((cond_mid2_reg_1227[0:0] === 1'b1) ? window_2_2_fu_162 : window_2_2_4_fu_745_p3);

assign window_2_2_7_fu_766_p3 = ((cond_mid2_reg_1227[0:0] === 1'b1) ? window_2_1_1_reg_409 : window_2_2_5_fu_752_p3);

assign window_2_2_8_fu_773_p3 = ((cond_mid2_reg_1227[0:0] === 1'b1) ? window_2_2_1_fu_731_p3 : window_1_2_1_reg_421);

assign window_2_2_9_fu_780_p3 = ((cond_mid2_reg_1227[0:0] === 1'b1) ? window_2_2_2_fu_738_p3 : window_1_1_1_reg_433);

assign writeCount_fu_1100_p2 = (writeCount_1_fu_190 + ap_const_lv32_1);

assign x1_cast_fu_627_p1 = x1_reg_375;

assign x4_cast_fu_696_p1 = x4_mid2_fu_650_p3;

assign x4_mid2_fu_650_p3 = ((exitcond_fu_644_p2[0:0] === 1'b1) ? ap_const_lv2_1 : x4_reg_445);

assign x_1_fu_604_p2 = (x_phi_fu_367_p4 + ap_const_lv6_1);

assign x_2_fu_621_p2 = (x1_phi_fu_379_p4 + ap_const_lv6_1);

assign x_3_fu_718_p2 = (ap_const_lv2_1 + x4_mid2_fu_650_p3);

assign x_4_fu_946_p2 = (x_assign_mid2_fu_828_p3 + ap_const_lv6_1);

assign x_assign_cast_fu_890_p1 = x_assign_mid2_fu_828_p3;

assign x_assign_mid2_fu_828_p3 = ((exitcond2_fu_822_p2[0:0] === 1'b1) ? ap_const_lv6_0 : x_assign_reg_478);

assign x_cast_fu_610_p1 = x_reg_363;

assign y9_fu_658_p2 = (ap_const_lv2_1 + y3_phi_fu_402_p4);

assign y_assign_mid2_fu_882_p3 = ((exitcond2_fu_822_p2[0:0] === 1'b1) ? y_s_fu_836_p2 : y_assign_reg_467);

assign y_s_fu_836_p2 = (y_assign_reg_467 + ap_const_lv6_1);

endmodule //cnn_conv_d46x46_k3x3
