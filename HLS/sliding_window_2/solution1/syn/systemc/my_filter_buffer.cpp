// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "my_filter_buffer.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic my_filter_buffer::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic my_filter_buffer::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> my_filter_buffer::ap_ST_fsm_state1 = "1";
const sc_lv<9> my_filter_buffer::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<9> my_filter_buffer::ap_ST_fsm_state4 = "100";
const sc_lv<9> my_filter_buffer::ap_ST_fsm_pp1_stage0 = "1000";
const sc_lv<9> my_filter_buffer::ap_ST_fsm_state7 = "10000";
const sc_lv<9> my_filter_buffer::ap_ST_fsm_pp2_stage0 = "100000";
const sc_lv<9> my_filter_buffer::ap_ST_fsm_state10 = "1000000";
const sc_lv<9> my_filter_buffer::ap_ST_fsm_pp3_stage0 = "10000000";
const sc_lv<9> my_filter_buffer::ap_ST_fsm_state19 = "100000000";
const sc_lv<32> my_filter_buffer::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> my_filter_buffer::ap_const_lv1_1 = "1";
const bool my_filter_buffer::ap_const_boolean_1 = true;
const sc_lv<1> my_filter_buffer::ap_const_lv1_0 = "0";
const sc_lv<2> my_filter_buffer::ap_const_lv2_0 = "00";
const sc_lv<2> my_filter_buffer::ap_const_lv2_2 = "10";
const sc_lv<2> my_filter_buffer::ap_const_lv2_3 = "11";
const sc_lv<2> my_filter_buffer::ap_const_lv2_1 = "1";
const sc_lv<32> my_filter_buffer::ap_const_lv32_1 = "1";
const sc_lv<32> my_filter_buffer::ap_const_lv32_3 = "11";
const sc_lv<32> my_filter_buffer::ap_const_lv32_7 = "111";
const int my_filter_buffer::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> my_filter_buffer::ap_const_lv32_5 = "101";
const sc_lv<32> my_filter_buffer::ap_const_lv32_2 = "10";
const sc_lv<32> my_filter_buffer::ap_const_lv32_4 = "100";
const sc_lv<32> my_filter_buffer::ap_const_lv32_6 = "110";
const sc_lv<10> my_filter_buffer::ap_const_lv10_1FE = "111111110";
const sc_lv<10> my_filter_buffer::ap_const_lv10_0 = "0000000000";
const sc_lv<3> my_filter_buffer::ap_const_lv3_0 = "000";
const sc_lv<19> my_filter_buffer::ap_const_lv19_0 = "0000000000000000000";
const sc_lv<32> my_filter_buffer::ap_const_lv32_202 = "1000000010";
const sc_lv<4> my_filter_buffer::ap_const_lv4_1 = "1";
const sc_lv<5> my_filter_buffer::ap_const_lv5_0 = "00000";
const sc_lv<6> my_filter_buffer::ap_const_lv6_0 = "000000";
const sc_lv<10> my_filter_buffer::ap_const_lv10_200 = "1000000000";
const sc_lv<10> my_filter_buffer::ap_const_lv10_1 = "1";
const sc_lv<3> my_filter_buffer::ap_const_lv3_4 = "100";
const sc_lv<3> my_filter_buffer::ap_const_lv3_1 = "1";
const sc_lv<3> my_filter_buffer::ap_const_lv3_5 = "101";
const sc_lv<32> my_filter_buffer::ap_const_lv32_9 = "1001";
const sc_lv<19> my_filter_buffer::ap_const_lv19_40000 = "1000000000000000000";
const sc_lv<19> my_filter_buffer::ap_const_lv19_1 = "1";
const sc_lv<32> my_filter_buffer::ap_const_lv32_12 = "10010";
const sc_lv<32> my_filter_buffer::ap_const_lv32_1F = "11111";
const sc_lv<14> my_filter_buffer::ap_const_lv14_1 = "1";
const sc_lv<10> my_filter_buffer::ap_const_lv10_2 = "10";
const sc_lv<32> my_filter_buffer::ap_const_lv32_8 = "1000";

my_filter_buffer::my_filter_buffer(sc_module_name name) : sc_module(name), mVcdFile(0) {
    my_filter_buffer_CTRL_s_axi_U = new my_filter_buffer_CTRL_s_axi<C_S_AXI_CTRL_ADDR_WIDTH,C_S_AXI_CTRL_DATA_WIDTH>("my_filter_buffer_CTRL_s_axi_U");
    my_filter_buffer_CTRL_s_axi_U->AWVALID(s_axi_CTRL_AWVALID);
    my_filter_buffer_CTRL_s_axi_U->AWREADY(s_axi_CTRL_AWREADY);
    my_filter_buffer_CTRL_s_axi_U->AWADDR(s_axi_CTRL_AWADDR);
    my_filter_buffer_CTRL_s_axi_U->WVALID(s_axi_CTRL_WVALID);
    my_filter_buffer_CTRL_s_axi_U->WREADY(s_axi_CTRL_WREADY);
    my_filter_buffer_CTRL_s_axi_U->WDATA(s_axi_CTRL_WDATA);
    my_filter_buffer_CTRL_s_axi_U->WSTRB(s_axi_CTRL_WSTRB);
    my_filter_buffer_CTRL_s_axi_U->ARVALID(s_axi_CTRL_ARVALID);
    my_filter_buffer_CTRL_s_axi_U->ARREADY(s_axi_CTRL_ARREADY);
    my_filter_buffer_CTRL_s_axi_U->ARADDR(s_axi_CTRL_ARADDR);
    my_filter_buffer_CTRL_s_axi_U->RVALID(s_axi_CTRL_RVALID);
    my_filter_buffer_CTRL_s_axi_U->RREADY(s_axi_CTRL_RREADY);
    my_filter_buffer_CTRL_s_axi_U->RDATA(s_axi_CTRL_RDATA);
    my_filter_buffer_CTRL_s_axi_U->RRESP(s_axi_CTRL_RRESP);
    my_filter_buffer_CTRL_s_axi_U->BVALID(s_axi_CTRL_BVALID);
    my_filter_buffer_CTRL_s_axi_U->BREADY(s_axi_CTRL_BREADY);
    my_filter_buffer_CTRL_s_axi_U->BRESP(s_axi_CTRL_BRESP);
    my_filter_buffer_CTRL_s_axi_U->ACLK(ap_clk);
    my_filter_buffer_CTRL_s_axi_U->ARESET(ap_rst_n_inv);
    my_filter_buffer_CTRL_s_axi_U->ACLK_EN(ap_var_for_const0);
    my_filter_buffer_CTRL_s_axi_U->ap_start(ap_start);
    my_filter_buffer_CTRL_s_axi_U->interrupt(interrupt);
    my_filter_buffer_CTRL_s_axi_U->ap_ready(ap_ready);
    my_filter_buffer_CTRL_s_axi_U->ap_done(ap_done);
    my_filter_buffer_CTRL_s_axi_U->ap_idle(ap_idle);
    my_filter_buffer_KERNEL_BUS_s_axi_U = new my_filter_buffer_KERNEL_BUS_s_axi<C_S_AXI_KERNEL_BUS_ADDR_WIDTH,C_S_AXI_KERNEL_BUS_DATA_WIDTH>("my_filter_buffer_KERNEL_BUS_s_axi_U");
    my_filter_buffer_KERNEL_BUS_s_axi_U->AWVALID(s_axi_KERNEL_BUS_AWVALID);
    my_filter_buffer_KERNEL_BUS_s_axi_U->AWREADY(s_axi_KERNEL_BUS_AWREADY);
    my_filter_buffer_KERNEL_BUS_s_axi_U->AWADDR(s_axi_KERNEL_BUS_AWADDR);
    my_filter_buffer_KERNEL_BUS_s_axi_U->WVALID(s_axi_KERNEL_BUS_WVALID);
    my_filter_buffer_KERNEL_BUS_s_axi_U->WREADY(s_axi_KERNEL_BUS_WREADY);
    my_filter_buffer_KERNEL_BUS_s_axi_U->WDATA(s_axi_KERNEL_BUS_WDATA);
    my_filter_buffer_KERNEL_BUS_s_axi_U->WSTRB(s_axi_KERNEL_BUS_WSTRB);
    my_filter_buffer_KERNEL_BUS_s_axi_U->ARVALID(s_axi_KERNEL_BUS_ARVALID);
    my_filter_buffer_KERNEL_BUS_s_axi_U->ARREADY(s_axi_KERNEL_BUS_ARREADY);
    my_filter_buffer_KERNEL_BUS_s_axi_U->ARADDR(s_axi_KERNEL_BUS_ARADDR);
    my_filter_buffer_KERNEL_BUS_s_axi_U->RVALID(s_axi_KERNEL_BUS_RVALID);
    my_filter_buffer_KERNEL_BUS_s_axi_U->RREADY(s_axi_KERNEL_BUS_RREADY);
    my_filter_buffer_KERNEL_BUS_s_axi_U->RDATA(s_axi_KERNEL_BUS_RDATA);
    my_filter_buffer_KERNEL_BUS_s_axi_U->RRESP(s_axi_KERNEL_BUS_RRESP);
    my_filter_buffer_KERNEL_BUS_s_axi_U->BVALID(s_axi_KERNEL_BUS_BVALID);
    my_filter_buffer_KERNEL_BUS_s_axi_U->BREADY(s_axi_KERNEL_BUS_BREADY);
    my_filter_buffer_KERNEL_BUS_s_axi_U->BRESP(s_axi_KERNEL_BUS_BRESP);
    my_filter_buffer_KERNEL_BUS_s_axi_U->ACLK(ap_clk);
    my_filter_buffer_KERNEL_BUS_s_axi_U->ARESET(ap_rst_n_inv);
    my_filter_buffer_KERNEL_BUS_s_axi_U->ACLK_EN(ap_var_for_const0);
    my_filter_buffer_KERNEL_BUS_s_axi_U->kernel_0(kernel_0);
    my_filter_buffer_KERNEL_BUS_s_axi_U->kernel_1(kernel_1);
    my_filter_buffer_KERNEL_BUS_s_axi_U->kernel_2(kernel_2);
    my_filter_buffer_KERNEL_BUS_s_axi_U->kernel_3(kernel_3);
    my_filter_buffer_KERNEL_BUS_s_axi_U->kernel_4(kernel_4);
    my_filter_buffer_KERNEL_BUS_s_axi_U->kernel_5(kernel_5);
    my_filter_buffer_KERNEL_BUS_s_axi_U->kernel_6(kernel_6);
    my_filter_buffer_KERNEL_BUS_s_axi_U->kernel_7(kernel_7);
    my_filter_buffer_KERNEL_BUS_s_axi_U->kernel_8(kernel_8);
    line_buf_0_U = new my_filter_buffer_bkb("line_buf_0_U");
    line_buf_0_U->clk(ap_clk);
    line_buf_0_U->reset(ap_rst_n_inv);
    line_buf_0_U->address0(line_buf_0_address0);
    line_buf_0_U->ce0(line_buf_0_ce0);
    line_buf_0_U->we0(line_buf_0_we0);
    line_buf_0_U->d0(in_stream_V_data_V_0_data_out);
    line_buf_0_U->q0(line_buf_0_q0);
    line_buf_0_U->address1(line_buf_0_addr_1_reg_1357);
    line_buf_0_U->ce1(line_buf_0_ce1);
    line_buf_0_U->we1(line_buf_0_we1);
    line_buf_0_U->d1(line_buf_1_q0);
    line_buf_1_U = new my_filter_buffer_bkb("line_buf_1_U");
    line_buf_1_U->clk(ap_clk);
    line_buf_1_U->reset(ap_rst_n_inv);
    line_buf_1_U->address0(line_buf_1_address0);
    line_buf_1_U->ce0(line_buf_1_ce0);
    line_buf_1_U->we0(line_buf_1_we0);
    line_buf_1_U->d0(in_stream_V_data_V_0_data_out);
    line_buf_1_U->q0(line_buf_1_q0);
    line_buf_1_U->address1(ap_pipeline_reg_pp3_iter1_line_buf_1_addr_1_reg_1363);
    line_buf_1_U->ce1(line_buf_1_ce1);
    line_buf_1_U->we1(line_buf_1_we1);
    line_buf_1_U->d1(ap_phi_precharge_reg_pp3_iter2_window_2_2_reg_535);
    my_filter_buffer_dEe_U0 = new my_filter_buffer_dEe<1,3,32,8,32>("my_filter_buffer_dEe_U0");
    my_filter_buffer_dEe_U0->clk(ap_clk);
    my_filter_buffer_dEe_U0->reset(ap_rst_n_inv);
    my_filter_buffer_dEe_U0->din0(window_0_0_read_as_fu_166);
    my_filter_buffer_dEe_U0->din1(grp_fu_923_p1);
    my_filter_buffer_dEe_U0->ce(grp_fu_923_ce);
    my_filter_buffer_dEe_U0->dout(grp_fu_923_p2);
    my_filter_buffer_dEe_U1 = new my_filter_buffer_dEe<1,3,32,8,32>("my_filter_buffer_dEe_U1");
    my_filter_buffer_dEe_U1->clk(ap_clk);
    my_filter_buffer_dEe_U1->reset(ap_rst_n_inv);
    my_filter_buffer_dEe_U1->din0(window_0_0_fu_170);
    my_filter_buffer_dEe_U1->din1(grp_fu_933_p1);
    my_filter_buffer_dEe_U1->ce(grp_fu_933_ce);
    my_filter_buffer_dEe_U1->dout(grp_fu_933_p2);
    my_filter_buffer_dEe_U2 = new my_filter_buffer_dEe<1,3,32,8,32>("my_filter_buffer_dEe_U2");
    my_filter_buffer_dEe_U2->clk(ap_clk);
    my_filter_buffer_dEe_U2->reset(ap_rst_n_inv);
    my_filter_buffer_dEe_U2->din0(window_0_1_fu_174);
    my_filter_buffer_dEe_U2->din1(grp_fu_943_p1);
    my_filter_buffer_dEe_U2->ce(grp_fu_943_ce);
    my_filter_buffer_dEe_U2->dout(grp_fu_943_p2);
    my_filter_buffer_dEe_U3 = new my_filter_buffer_dEe<1,3,32,8,32>("my_filter_buffer_dEe_U3");
    my_filter_buffer_dEe_U3->clk(ap_clk);
    my_filter_buffer_dEe_U3->reset(ap_rst_n_inv);
    my_filter_buffer_dEe_U3->din0(window_1_0_read_as_fu_178);
    my_filter_buffer_dEe_U3->din1(grp_fu_953_p1);
    my_filter_buffer_dEe_U3->ce(grp_fu_953_ce);
    my_filter_buffer_dEe_U3->dout(grp_fu_953_p2);
    my_filter_buffer_dEe_U4 = new my_filter_buffer_dEe<1,3,32,8,32>("my_filter_buffer_dEe_U4");
    my_filter_buffer_dEe_U4->clk(ap_clk);
    my_filter_buffer_dEe_U4->reset(ap_rst_n_inv);
    my_filter_buffer_dEe_U4->din0(window_1_0_phi_fu_503_p4);
    my_filter_buffer_dEe_U4->din1(grp_fu_963_p1);
    my_filter_buffer_dEe_U4->ce(grp_fu_963_ce);
    my_filter_buffer_dEe_U4->dout(grp_fu_963_p2);
    my_filter_buffer_dEe_U5 = new my_filter_buffer_dEe<1,3,32,8,32>("my_filter_buffer_dEe_U5");
    my_filter_buffer_dEe_U5->clk(ap_clk);
    my_filter_buffer_dEe_U5->reset(ap_rst_n_inv);
    my_filter_buffer_dEe_U5->din0(window_1_1_phi_fu_492_p4);
    my_filter_buffer_dEe_U5->din1(grp_fu_973_p1);
    my_filter_buffer_dEe_U5->ce(grp_fu_973_ce);
    my_filter_buffer_dEe_U5->dout(grp_fu_973_p2);
    my_filter_buffer_dEe_U6 = new my_filter_buffer_dEe<1,3,32,8,32>("my_filter_buffer_dEe_U6");
    my_filter_buffer_dEe_U6->clk(ap_clk);
    my_filter_buffer_dEe_U6->reset(ap_rst_n_inv);
    my_filter_buffer_dEe_U6->din0(window_2_0_read_as_fu_182);
    my_filter_buffer_dEe_U6->din1(grp_fu_995_p1);
    my_filter_buffer_dEe_U6->ce(grp_fu_995_ce);
    my_filter_buffer_dEe_U6->dout(grp_fu_995_p2);
    my_filter_buffer_dEe_U7 = new my_filter_buffer_dEe<1,3,32,8,32>("my_filter_buffer_dEe_U7");
    my_filter_buffer_dEe_U7->clk(ap_clk);
    my_filter_buffer_dEe_U7->reset(ap_rst_n_inv);
    my_filter_buffer_dEe_U7->din0(window_2_0_phi_fu_526_p4);
    my_filter_buffer_dEe_U7->din1(grp_fu_1004_p1);
    my_filter_buffer_dEe_U7->ce(grp_fu_1004_ce);
    my_filter_buffer_dEe_U7->dout(grp_fu_1004_p2);
    my_filter_buffer_dEe_U8 = new my_filter_buffer_dEe<1,3,32,8,32>("my_filter_buffer_dEe_U8");
    my_filter_buffer_dEe_U8->clk(ap_clk);
    my_filter_buffer_dEe_U8->reset(ap_rst_n_inv);
    my_filter_buffer_dEe_U8->din0(window_2_1_phi_fu_515_p4);
    my_filter_buffer_dEe_U8->din1(grp_fu_1013_p1);
    my_filter_buffer_dEe_U8->ce(grp_fu_1013_ce);
    my_filter_buffer_dEe_U8->dout(grp_fu_1013_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp2_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp3_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_condition_1006);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );

    SC_METHOD(thread_ap_condition_1110);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );
    sensitive << ( ap_enable_reg_pp3_iter0 );

    SC_METHOD(thread_ap_condition_1238);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );

    SC_METHOD(thread_ap_condition_1922);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( out_stream_V_keep_V_1_ack_in );
    sensitive << ( out_stream_V_strb_V_1_ack_in );
    sensitive << ( out_stream_V_user_V_1_ack_in );
    sensitive << ( out_stream_V_last_V_1_ack_in );
    sensitive << ( out_stream_V_id_V_1_ack_in );
    sensitive << ( out_stream_V_dest_V_1_ack_in );

    SC_METHOD(thread_ap_condition_995);
    sensitive << ( in_stream_V_data_V_0_vld_out );
    sensitive << ( exitcond_flatten8_reg_1314 );
    sensitive << ( icmp_reg_1369 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_condition_1922 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_precharge_reg_pp3_iter0_window_2_2_reg_535);

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_condition_1922 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_cond1_fu_673_p2);
    sensitive << ( exitcond_flatten_fu_589_p2 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( x3_mid2_fu_607_p3 );

    SC_METHOD(thread_cond_fu_639_p2);
    sensitive << ( exitcond_flatten_fu_589_p2 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( y2_phi_fu_389_p4 );

    SC_METHOD(thread_cond_mid1_fu_633_p2);
    sensitive << ( exitcond_flatten_fu_589_p2 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( y2_phi_fu_389_p4 );

    SC_METHOD(thread_cond_mid2_fu_645_p3);
    sensitive << ( exitcond_fu_601_p2 );
    sensitive << ( cond_mid1_fu_633_p2 );
    sensitive << ( cond_fu_639_p2 );

    SC_METHOD(thread_exitcond1_fu_555_p2);
    sensitive << ( in_stream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1178 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( x_phi_fu_354_p4 );

    SC_METHOD(thread_exitcond2_fu_788_p2);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );
    sensitive << ( exitcond_flatten8_fu_773_p2 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( x_assign_phi_fu_482_p4 );

    SC_METHOD(thread_exitcond4_fu_572_p2);
    sensitive << ( in_stream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1187 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( x1_phi_fu_366_p4 );

    SC_METHOD(thread_exitcond_flatten8_fu_773_p2);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( indvar_flatten6_reg_455 );
    sensitive << ( ap_condition_995 );
    sensitive << ( ap_enable_reg_pp3_iter0 );

    SC_METHOD(thread_exitcond_flatten_fu_589_p2);
    sensitive << ( indvar_flatten_reg_374 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_exitcond_fu_601_p2);
    sensitive << ( x3_reg_444 );
    sensitive << ( exitcond_flatten_fu_589_p2 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_grp_fu_1004_ce);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );

    SC_METHOD(thread_grp_fu_1004_p1);
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( grp_fu_1004_p10 );

    SC_METHOD(thread_grp_fu_1004_p10);
    sensitive << ( kernel_7_read_reg_1409 );

    SC_METHOD(thread_grp_fu_1013_ce);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );

    SC_METHOD(thread_grp_fu_1013_p1);
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( grp_fu_1013_p10 );

    SC_METHOD(thread_grp_fu_1013_p10);
    sensitive << ( kernel_8_read_reg_1414 );

    SC_METHOD(thread_grp_fu_923_ce);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );

    SC_METHOD(thread_grp_fu_923_p1);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( grp_fu_923_p10 );

    SC_METHOD(thread_grp_fu_923_p10);
    sensitive << ( kernel_0 );

    SC_METHOD(thread_grp_fu_933_ce);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );

    SC_METHOD(thread_grp_fu_933_p1);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( grp_fu_933_p10 );

    SC_METHOD(thread_grp_fu_933_p10);
    sensitive << ( kernel_1 );

    SC_METHOD(thread_grp_fu_943_ce);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );

    SC_METHOD(thread_grp_fu_943_p1);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( grp_fu_943_p10 );

    SC_METHOD(thread_grp_fu_943_p10);
    sensitive << ( kernel_2 );

    SC_METHOD(thread_grp_fu_953_ce);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );

    SC_METHOD(thread_grp_fu_953_p1);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( grp_fu_953_p10 );

    SC_METHOD(thread_grp_fu_953_p10);
    sensitive << ( kernel_3 );

    SC_METHOD(thread_grp_fu_963_ce);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );

    SC_METHOD(thread_grp_fu_963_p1);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( grp_fu_963_p10 );

    SC_METHOD(thread_grp_fu_963_p10);
    sensitive << ( kernel_4 );

    SC_METHOD(thread_grp_fu_973_ce);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );

    SC_METHOD(thread_grp_fu_973_p1);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( grp_fu_973_p10 );

    SC_METHOD(thread_grp_fu_973_p10);
    sensitive << ( kernel_5 );

    SC_METHOD(thread_grp_fu_995_ce);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );

    SC_METHOD(thread_grp_fu_995_p1);
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( grp_fu_995_p10 );

    SC_METHOD(thread_grp_fu_995_p10);
    sensitive << ( kernel_6_read_reg_1404 );

    SC_METHOD(thread_icmp_fu_852_p2);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );
    sensitive << ( exitcond_flatten8_fu_773_p2 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( tmp_12_fu_842_p4 );

    SC_METHOD(thread_in_stream_TDATA_blk_n);
    sensitive << ( in_stream_V_data_V_0_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1178 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1187 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1314 );
    sensitive << ( icmp_reg_1369 );

    SC_METHOD(thread_in_stream_TREADY);
    sensitive << ( in_stream_V_dest_V_0_state );

    SC_METHOD(thread_in_stream_V_data_V_0_ack_in);
    sensitive << ( in_stream_V_data_V_0_state );

    SC_METHOD(thread_in_stream_V_data_V_0_ack_out);
    sensitive << ( in_stream_V_data_V_0_vld_out );
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1178 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1187 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1314 );
    sensitive << ( icmp_reg_1369 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );

    SC_METHOD(thread_in_stream_V_data_V_0_data_out);
    sensitive << ( in_stream_V_data_V_0_payload_A );
    sensitive << ( in_stream_V_data_V_0_payload_B );
    sensitive << ( in_stream_V_data_V_0_sel );

    SC_METHOD(thread_in_stream_V_data_V_0_load_A);
    sensitive << ( in_stream_V_data_V_0_sel_wr );
    sensitive << ( in_stream_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_in_stream_V_data_V_0_load_B);
    sensitive << ( in_stream_V_data_V_0_sel_wr );
    sensitive << ( in_stream_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_in_stream_V_data_V_0_sel);
    sensitive << ( in_stream_V_data_V_0_sel_rd );

    SC_METHOD(thread_in_stream_V_data_V_0_state_cmp_full);
    sensitive << ( in_stream_V_data_V_0_state );

    SC_METHOD(thread_in_stream_V_data_V_0_vld_in);
    sensitive << ( in_stream_TVALID );

    SC_METHOD(thread_in_stream_V_data_V_0_vld_out);
    sensitive << ( in_stream_V_data_V_0_state );

    SC_METHOD(thread_in_stream_V_dest_V_0_ack_out);
    sensitive << ( in_stream_V_data_V_0_vld_out );
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1178 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1187 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1314 );
    sensitive << ( icmp_reg_1369 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );

    SC_METHOD(thread_in_stream_V_dest_V_0_vld_in);
    sensitive << ( in_stream_TVALID );

    SC_METHOD(thread_indvar_flatten_next7_fu_779_p2);
    sensitive << ( indvar_flatten6_reg_455 );

    SC_METHOD(thread_indvar_flatten_next_fu_595_p2);
    sensitive << ( indvar_flatten_reg_374 );

    SC_METHOD(thread_line_buf_0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( x_cast7_fu_567_p1 );
    sensitive << ( tmp_cast_fu_667_p1 );
    sensitive << ( x5_cast1_fu_824_p1 );

    SC_METHOD(thread_line_buf_0_ce0);
    sensitive << ( in_stream_V_data_V_0_vld_out );
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1178 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp3_iter0 );

    SC_METHOD(thread_line_buf_0_ce1);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );

    SC_METHOD(thread_line_buf_0_we0);
    sensitive << ( in_stream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1178 );

    SC_METHOD(thread_line_buf_0_we1);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );

    SC_METHOD(thread_line_buf_1_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( x1_cast6_fu_584_p1 );
    sensitive << ( tmp_cast_fu_667_p1 );
    sensitive << ( x5_cast1_fu_824_p1 );

    SC_METHOD(thread_line_buf_1_ce0);
    sensitive << ( in_stream_V_data_V_0_vld_out );
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1187 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp3_iter0 );

    SC_METHOD(thread_line_buf_1_ce1);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );
    sensitive << ( ap_enable_reg_pp3_iter2 );

    SC_METHOD(thread_line_buf_1_we0);
    sensitive << ( in_stream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1187 );

    SC_METHOD(thread_line_buf_1_we1);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );
    sensitive << ( ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter2 );

    SC_METHOD(thread_or_cond1_i6_i_fu_1129_p2);
    sensitive << ( ap_pipeline_reg_pp3_iter5_tmp_3_i_i_reg_1342 );
    sensitive << ( tmp_i2_i_mid2_fu_1124_p2 );

    SC_METHOD(thread_or_cond1_i_i_fu_1019_p2);
    sensitive << ( ap_pipeline_reg_pp3_iter2_tmp_i_i_mid2_reg_1329 );
    sensitive << ( ap_pipeline_reg_pp3_iter2_tmp_3_i_i_reg_1342 );

    SC_METHOD(thread_out_stream_TDATA);
    sensitive << ( out_stream_V_data_V_1_data_out );

    SC_METHOD(thread_out_stream_TDATA_blk_n);
    sensitive << ( out_stream_V_data_V_1_state );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );

    SC_METHOD(thread_out_stream_TDEST);
    sensitive << ( out_stream_V_dest_V_1_data_out );

    SC_METHOD(thread_out_stream_TID);
    sensitive << ( out_stream_V_id_V_1_data_out );

    SC_METHOD(thread_out_stream_TKEEP);
    sensitive << ( out_stream_V_keep_V_1_data_out );

    SC_METHOD(thread_out_stream_TLAST);
    sensitive << ( out_stream_V_last_V_1_data_out );

    SC_METHOD(thread_out_stream_TSTRB);
    sensitive << ( out_stream_V_strb_V_1_data_out );

    SC_METHOD(thread_out_stream_TUSER);
    sensitive << ( out_stream_V_user_V_1_data_out );

    SC_METHOD(thread_out_stream_TVALID);
    sensitive << ( out_stream_V_dest_V_1_state );

    SC_METHOD(thread_out_stream_V_data_V_1_ack_in);
    sensitive << ( out_stream_V_data_V_1_state );

    SC_METHOD(thread_out_stream_V_data_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_V_data_V_1_data_out);
    sensitive << ( out_stream_V_data_V_1_payload_A );
    sensitive << ( out_stream_V_data_V_1_payload_B );
    sensitive << ( out_stream_V_data_V_1_sel );

    SC_METHOD(thread_out_stream_V_data_V_1_load_A);
    sensitive << ( out_stream_V_data_V_1_sel_wr );
    sensitive << ( out_stream_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_out_stream_V_data_V_1_load_B);
    sensitive << ( out_stream_V_data_V_1_sel_wr );
    sensitive << ( out_stream_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_out_stream_V_data_V_1_sel);
    sensitive << ( out_stream_V_data_V_1_sel_rd );

    SC_METHOD(thread_out_stream_V_data_V_1_state_cmp_full);
    sensitive << ( out_stream_V_data_V_1_state );

    SC_METHOD(thread_out_stream_V_data_V_1_vld_in);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );

    SC_METHOD(thread_out_stream_V_data_V_1_vld_out);
    sensitive << ( out_stream_V_data_V_1_state );

    SC_METHOD(thread_out_stream_V_dest_V_1_ack_in);
    sensitive << ( out_stream_V_dest_V_1_state );

    SC_METHOD(thread_out_stream_V_dest_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_V_dest_V_1_data_out);
    sensitive << ( out_stream_V_dest_V_1_sel );

    SC_METHOD(thread_out_stream_V_dest_V_1_sel);
    sensitive << ( out_stream_V_dest_V_1_sel_rd );

    SC_METHOD(thread_out_stream_V_dest_V_1_vld_in);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );

    SC_METHOD(thread_out_stream_V_dest_V_1_vld_out);
    sensitive << ( out_stream_V_dest_V_1_state );

    SC_METHOD(thread_out_stream_V_id_V_1_ack_in);
    sensitive << ( out_stream_V_id_V_1_state );

    SC_METHOD(thread_out_stream_V_id_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_V_id_V_1_data_out);
    sensitive << ( out_stream_V_id_V_1_sel );

    SC_METHOD(thread_out_stream_V_id_V_1_sel);
    sensitive << ( out_stream_V_id_V_1_sel_rd );

    SC_METHOD(thread_out_stream_V_id_V_1_vld_in);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );

    SC_METHOD(thread_out_stream_V_id_V_1_vld_out);
    sensitive << ( out_stream_V_id_V_1_state );

    SC_METHOD(thread_out_stream_V_keep_V_1_ack_in);
    sensitive << ( out_stream_V_keep_V_1_state );

    SC_METHOD(thread_out_stream_V_keep_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_V_keep_V_1_data_out);
    sensitive << ( out_stream_V_keep_V_1_sel );

    SC_METHOD(thread_out_stream_V_keep_V_1_sel);
    sensitive << ( out_stream_V_keep_V_1_sel_rd );

    SC_METHOD(thread_out_stream_V_keep_V_1_vld_in);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );

    SC_METHOD(thread_out_stream_V_keep_V_1_vld_out);
    sensitive << ( out_stream_V_keep_V_1_state );

    SC_METHOD(thread_out_stream_V_last_V_1_ack_in);
    sensitive << ( out_stream_V_last_V_1_state );

    SC_METHOD(thread_out_stream_V_last_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_V_last_V_1_data_out);
    sensitive << ( out_stream_V_last_V_1_sel );

    SC_METHOD(thread_out_stream_V_last_V_1_sel);
    sensitive << ( out_stream_V_last_V_1_sel_rd );

    SC_METHOD(thread_out_stream_V_last_V_1_vld_in);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );

    SC_METHOD(thread_out_stream_V_last_V_1_vld_out);
    sensitive << ( out_stream_V_last_V_1_state );

    SC_METHOD(thread_out_stream_V_strb_V_1_ack_in);
    sensitive << ( out_stream_V_strb_V_1_state );

    SC_METHOD(thread_out_stream_V_strb_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_V_strb_V_1_data_out);
    sensitive << ( out_stream_V_strb_V_1_sel );

    SC_METHOD(thread_out_stream_V_strb_V_1_sel);
    sensitive << ( out_stream_V_strb_V_1_sel_rd );

    SC_METHOD(thread_out_stream_V_strb_V_1_vld_in);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );

    SC_METHOD(thread_out_stream_V_strb_V_1_vld_out);
    sensitive << ( out_stream_V_strb_V_1_state );

    SC_METHOD(thread_out_stream_V_user_V_1_ack_in);
    sensitive << ( out_stream_V_user_V_1_state );

    SC_METHOD(thread_out_stream_V_user_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_V_user_V_1_data_out);
    sensitive << ( out_stream_V_user_V_1_sel );

    SC_METHOD(thread_out_stream_V_user_V_1_sel);
    sensitive << ( out_stream_V_user_V_1_sel_rd );

    SC_METHOD(thread_out_stream_V_user_V_1_vld_in);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );

    SC_METHOD(thread_out_stream_V_user_V_1_vld_out);
    sensitive << ( out_stream_V_user_V_1_state );

    SC_METHOD(thread_p_i2_i_fu_1056_p2);
    sensitive << ( ap_pipeline_reg_pp3_iter3_tmp_i_i_mid2_reg_1329 );
    sensitive << ( rev_fu_1050_p2 );

    SC_METHOD(thread_read_count_fu_858_p2);
    sensitive << ( read_count_1_fu_186 );

    SC_METHOD(thread_result_2_0_1_i_fu_1037_p3);
    sensitive << ( ap_pipeline_reg_pp3_iter3_tmp_i_i_mid2_reg_1329 );
    sensitive << ( result_3_0_1_i_reg_1479 );

    SC_METHOD(thread_result_2_0_2_i_fu_1066_p3);
    sensitive << ( result_2_0_1_i_fu_1037_p3 );
    sensitive << ( p_i2_i_fu_1056_p2 );
    sensitive << ( result_3_0_2_i_fu_1061_p2 );

    SC_METHOD(thread_result_2_1_2_i_fu_1106_p3);
    sensitive << ( result_3_1_1_i_fu_1084_p2 );
    sensitive << ( tmp_10_fu_1093_p3 );
    sensitive << ( result_3_1_2_i_fu_1101_p2 );

    SC_METHOD(thread_result_2_1_i_fu_1079_p3);
    sensitive << ( ap_pipeline_reg_pp3_iter4_tmp_3_i_i_reg_1342 );
    sensitive << ( result_2_0_2_i_reg_1504 );
    sensitive << ( result_3_1_i_reg_1509 );

    SC_METHOD(thread_result_2_2_1_i_fu_1145_p3);
    sensitive << ( ap_pipeline_reg_pp3_iter5_tmp_i2_i_mid2_v_reg_1398 );
    sensitive << ( result_2_1_2_i_reg_1529 );
    sensitive << ( result_3_2_1_i_fu_1140_p2 );

    SC_METHOD(thread_result_2_2_i_fu_1134_p3);
    sensitive << ( result_2_1_2_i_reg_1529 );
    sensitive << ( result_3_2_i_reg_1535 );
    sensitive << ( or_cond1_i6_i_fu_1129_p2 );

    SC_METHOD(thread_result_2_i_fu_1023_p3);
    sensitive << ( or_cond1_i_i_fu_1019_p2 );
    sensitive << ( grp_fu_923_p2 );

    SC_METHOD(thread_result_3_0_1_i_fu_1031_p2);
    sensitive << ( grp_fu_933_p2 );
    sensitive << ( result_2_i_fu_1023_p3 );

    SC_METHOD(thread_result_3_0_2_i_fu_1061_p2);
    sensitive << ( tmp_9_0_2_i_reg_1484 );
    sensitive << ( result_2_0_1_i_fu_1037_p3 );

    SC_METHOD(thread_result_3_1_1_i_fu_1084_p2);
    sensitive << ( ap_pipeline_reg_pp3_iter4_tmp_9_1_1_i_reg_1494 );
    sensitive << ( result_2_1_i_fu_1079_p3 );

    SC_METHOD(thread_result_3_1_2_i_fu_1101_p2);
    sensitive << ( ap_pipeline_reg_pp3_iter4_tmp_9_1_2_i_reg_1499 );
    sensitive << ( result_3_1_1_i_fu_1084_p2 );

    SC_METHOD(thread_result_3_1_i_fu_1074_p2);
    sensitive << ( tmp_9_1_i_reg_1489 );
    sensitive << ( result_2_0_2_i_fu_1066_p3 );

    SC_METHOD(thread_result_3_2_1_i_fu_1140_p2);
    sensitive << ( ap_pipeline_reg_pp3_iter5_tmp_9_2_1_i_reg_1519 );
    sensitive << ( result_2_2_i_fu_1134_p3 );

    SC_METHOD(thread_result_3_2_2_i_fu_1164_p2);
    sensitive << ( ap_pipeline_reg_pp3_iter5_tmp_9_2_2_i_reg_1524 );
    sensitive << ( result_2_2_1_i_fu_1145_p3 );

    SC_METHOD(thread_result_3_2_i_fu_1114_p2);
    sensitive << ( tmp_9_2_i_reg_1514 );
    sensitive << ( result_2_1_2_i_fu_1106_p3 );

    SC_METHOD(thread_rev_fu_1050_p2);
    sensitive << ( tmp_9_fu_1043_p3 );

    SC_METHOD(thread_tmp_10_fu_1093_p3);
    sensitive << ( tmp_5_fu_1089_p2 );

    SC_METHOD(thread_tmp_11_fu_1156_p3);
    sensitive << ( tmp_8_fu_1151_p2 );

    SC_METHOD(thread_tmp_12_fu_842_p4);
    sensitive << ( read_count_1_fu_186 );

    SC_METHOD(thread_tmp_1_fu_629_p1);
    sensitive << ( tmp_3_mid2_v_fu_621_p3 );

    SC_METHOD(thread_tmp_3_i_i_fu_830_p2);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );
    sensitive << ( exitcond_flatten8_fu_773_p2 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( x_assign_mid2_fu_794_p3 );

    SC_METHOD(thread_tmp_3_mid2_v_fu_621_p3);
    sensitive << ( y2_phi_fu_389_p4 );
    sensitive << ( exitcond_fu_601_p2 );
    sensitive << ( y9_fu_615_p2 );

    SC_METHOD(thread_tmp_5_fu_1089_p2);
    sensitive << ( ap_pipeline_reg_pp3_iter4_y_assign_mid2_reg_1336 );
    sensitive << ( ap_pipeline_reg_pp3_iter4_x_4_reg_1349 );

    SC_METHOD(thread_tmp_7_fu_905_p3);
    sensitive << ( y_assign_1_mid1_fu_899_p2 );

    SC_METHOD(thread_tmp_8_fu_1151_p2);
    sensitive << ( ap_pipeline_reg_pp3_iter5_x_4_reg_1349 );
    sensitive << ( y_assign_1_mid2_fu_1119_p3 );

    SC_METHOD(thread_tmp_9_fu_1043_p3);
    sensitive << ( ap_pipeline_reg_pp3_iter3_x_4_reg_1349 );

    SC_METHOD(thread_tmp_cast8_fu_663_p1);
    sensitive << ( tmp_s_fu_657_p2 );

    SC_METHOD(thread_tmp_cast_fu_667_p1);
    sensitive << ( tmp_cast8_fu_663_p1 );

    SC_METHOD(thread_tmp_i2_i_mid2_fu_1124_p2);
    sensitive << ( ap_pipeline_reg_pp3_iter5_tmp_i2_i_mid2_v_reg_1398 );

    SC_METHOD(thread_tmp_i2_i_mid2_v_fu_913_p3);
    sensitive << ( tmp_3_reg_1309 );
    sensitive << ( exitcond2_reg_1323 );
    sensitive << ( tmp_7_fu_905_p3 );

    SC_METHOD(thread_tmp_i_i_fu_753_p2);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( y_assign_phi_fu_470_p4 );

    SC_METHOD(thread_tmp_i_i_mid1_fu_802_p2);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );
    sensitive << ( y_fu_759_p2 );
    sensitive << ( exitcond_flatten8_fu_773_p2 );
    sensitive << ( ap_enable_reg_pp3_iter0 );

    SC_METHOD(thread_tmp_i_i_mid2_fu_808_p3);
    sensitive << ( exitcond2_fu_788_p2 );
    sensitive << ( tmp_i_i_mid1_fu_802_p2 );
    sensitive << ( tmp_i_i_fu_753_p2 );

    SC_METHOD(thread_tmp_s_fu_657_p2);
    sensitive << ( x3_cast4_cast_fu_653_p1 );

    SC_METHOD(thread_val_out_fu_1169_p3);
    sensitive << ( result_2_2_1_i_fu_1145_p3 );
    sensitive << ( tmp_11_fu_1156_p3 );
    sensitive << ( result_3_2_2_i_fu_1164_p2 );

    SC_METHOD(thread_window_1_0_phi_fu_503_p4);
    sensitive << ( window_1_1_reg_489 );
    sensitive << ( window_1_0_reg_500 );
    sensitive << ( ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter2 );

    SC_METHOD(thread_window_1_1_2_fu_685_p3);
    sensitive << ( tmp_1_reg_1210 );
    sensitive << ( line_buf_1_q0 );
    sensitive << ( line_buf_0_q0 );

    SC_METHOD(thread_window_1_1_phi_fu_492_p4);
    sensitive << ( window_1_1_reg_489 );
    sensitive << ( ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1314 );
    sensitive << ( window_1_2_reg_1449 );
    sensitive << ( ap_enable_reg_pp3_iter2 );

    SC_METHOD(thread_window_2_0_phi_fu_526_p4);
    sensitive << ( window_2_1_reg_512 );
    sensitive << ( window_2_0_reg_523 );
    sensitive << ( ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter3 );

    SC_METHOD(thread_window_2_1_phi_fu_515_p4);
    sensitive << ( window_2_1_reg_512 );
    sensitive << ( window_2_2_reg_535 );
    sensitive << ( ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter3 );

    SC_METHOD(thread_window_2_2_1_11_fu_692_p3);
    sensitive << ( window_1_2_1_reg_420 );
    sensitive << ( cond1_reg_1233 );
    sensitive << ( window_1_1_2_fu_685_p3 );

    SC_METHOD(thread_window_2_2_2_fu_699_p3);
    sensitive << ( window_1_1_1_reg_432 );
    sensitive << ( cond1_reg_1233 );
    sensitive << ( window_1_1_2_fu_685_p3 );

    SC_METHOD(thread_window_2_2_4_fu_706_p3);
    sensitive << ( window_2_2_1_reg_396 );
    sensitive << ( cond1_reg_1233 );
    sensitive << ( window_1_1_2_fu_685_p3 );

    SC_METHOD(thread_window_2_2_5_fu_713_p3);
    sensitive << ( window_2_1_1_reg_408 );
    sensitive << ( cond1_reg_1233 );
    sensitive << ( window_1_1_2_fu_685_p3 );

    SC_METHOD(thread_window_2_2_6_fu_720_p3);
    sensitive << ( window_2_2_1_reg_396 );
    sensitive << ( cond_mid2_reg_1215 );
    sensitive << ( window_2_2_4_fu_706_p3 );

    SC_METHOD(thread_window_2_2_7_fu_727_p3);
    sensitive << ( window_2_1_1_reg_408 );
    sensitive << ( cond_mid2_reg_1215 );
    sensitive << ( window_2_2_5_fu_713_p3 );

    SC_METHOD(thread_window_2_2_8_fu_734_p3);
    sensitive << ( window_1_2_1_reg_420 );
    sensitive << ( cond_mid2_reg_1215 );
    sensitive << ( window_2_2_1_11_fu_692_p3 );

    SC_METHOD(thread_window_2_2_9_fu_741_p3);
    sensitive << ( window_1_1_1_reg_432 );
    sensitive << ( cond_mid2_reg_1215 );
    sensitive << ( window_2_2_2_fu_699_p3 );

    SC_METHOD(thread_x1_cast6_fu_584_p1);
    sensitive << ( x1_reg_362 );

    SC_METHOD(thread_x1_phi_fu_366_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1187 );
    sensitive << ( x1_reg_362 );
    sensitive << ( x_2_reg_1191 );

    SC_METHOD(thread_x3_cast4_cast_fu_653_p1);
    sensitive << ( x3_mid2_fu_607_p3 );

    SC_METHOD(thread_x3_mid2_fu_607_p3);
    sensitive << ( x3_reg_444 );
    sensitive << ( exitcond_fu_601_p2 );

    SC_METHOD(thread_x5_cast1_fu_824_p1);
    sensitive << ( x_assign_mid2_fu_794_p3 );

    SC_METHOD(thread_x_1_fu_561_p2);
    sensitive << ( x_phi_fu_354_p4 );

    SC_METHOD(thread_x_2_fu_578_p2);
    sensitive << ( x1_phi_fu_366_p4 );

    SC_METHOD(thread_x_3_fu_679_p2);
    sensitive << ( x3_mid2_fu_607_p3 );

    SC_METHOD(thread_x_4_fu_836_p2);
    sensitive << ( x_assign_mid2_fu_794_p3 );

    SC_METHOD(thread_x_assign_mid2_fu_794_p3);
    sensitive << ( exitcond2_fu_788_p2 );
    sensitive << ( x_assign_phi_fu_482_p4 );

    SC_METHOD(thread_x_assign_phi_fu_482_p4);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1314 );
    sensitive << ( x_assign_reg_478 );
    sensitive << ( x_4_reg_1349 );

    SC_METHOD(thread_x_cast7_fu_567_p1);
    sensitive << ( x_reg_350 );

    SC_METHOD(thread_x_phi_fu_354_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1178 );
    sensitive << ( x_reg_350 );
    sensitive << ( x_1_reg_1182 );

    SC_METHOD(thread_y2_phi_fu_389_p4);
    sensitive << ( y2_reg_385 );
    sensitive << ( exitcond_flatten_reg_1196 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( tmp_3_mid2_v_reg_1205 );
    sensitive << ( ap_enable_reg_pp2_iter1 );

    SC_METHOD(thread_y9_fu_615_p2);
    sensitive << ( y2_phi_fu_389_p4 );

    SC_METHOD(thread_y_assign_1_mid1_fu_899_p2);
    sensitive << ( y_assign_reg_466 );

    SC_METHOD(thread_y_assign_1_mid2_fu_1119_p3);
    sensitive << ( ap_pipeline_reg_pp3_iter5_y_reg_1304 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond2_reg_1323 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_y_assign_1_mid1_reg_1393 );

    SC_METHOD(thread_y_assign_mid2_fu_816_p3);
    sensitive << ( y_fu_759_p2 );
    sensitive << ( exitcond2_fu_788_p2 );
    sensitive << ( y_assign_phi_fu_470_p4 );

    SC_METHOD(thread_y_assign_phi_fu_470_p4);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1314 );
    sensitive << ( y_assign_reg_466 );
    sensitive << ( y_assign_mid2_reg_1336 );

    SC_METHOD(thread_y_fu_759_p2);
    sensitive << ( y_assign_phi_fu_470_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( in_stream_V_data_V_0_vld_out );
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1178 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1187 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter6 );
    sensitive << ( ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_enable_reg_pp3_iter7 );
    sensitive << ( ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 );
    sensitive << ( ap_condition_995 );
    sensitive << ( exitcond1_fu_555_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond4_fu_572_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( exitcond_flatten_fu_589_p2 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( ap_condition_1922 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000001";
    in_stream_V_data_V_0_sel_rd = SC_LOGIC_0;
    in_stream_V_data_V_0_sel_wr = SC_LOGIC_0;
    in_stream_V_data_V_0_state = "00";
    in_stream_V_dest_V_0_state = "00";
    out_stream_V_data_V_1_sel_rd = SC_LOGIC_0;
    out_stream_V_data_V_1_sel_wr = SC_LOGIC_0;
    out_stream_V_data_V_1_state = "00";
    out_stream_V_keep_V_1_sel_rd = SC_LOGIC_0;
    out_stream_V_keep_V_1_state = "00";
    out_stream_V_strb_V_1_sel_rd = SC_LOGIC_0;
    out_stream_V_strb_V_1_state = "00";
    out_stream_V_user_V_1_sel_rd = SC_LOGIC_0;
    out_stream_V_user_V_1_state = "00";
    out_stream_V_last_V_1_sel_rd = SC_LOGIC_0;
    out_stream_V_last_V_1_state = "00";
    out_stream_V_id_V_1_sel_rd = SC_LOGIC_0;
    out_stream_V_id_V_1_state = "00";
    out_stream_V_dest_V_1_sel_rd = SC_LOGIC_0;
    out_stream_V_dest_V_1_state = "00";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter5 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "my_filter_buffer_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, in_stream_TDATA, "(port)in_stream_TDATA");
    sc_trace(mVcdFile, in_stream_TVALID, "(port)in_stream_TVALID");
    sc_trace(mVcdFile, in_stream_TREADY, "(port)in_stream_TREADY");
    sc_trace(mVcdFile, in_stream_TKEEP, "(port)in_stream_TKEEP");
    sc_trace(mVcdFile, in_stream_TSTRB, "(port)in_stream_TSTRB");
    sc_trace(mVcdFile, in_stream_TUSER, "(port)in_stream_TUSER");
    sc_trace(mVcdFile, in_stream_TLAST, "(port)in_stream_TLAST");
    sc_trace(mVcdFile, in_stream_TID, "(port)in_stream_TID");
    sc_trace(mVcdFile, in_stream_TDEST, "(port)in_stream_TDEST");
    sc_trace(mVcdFile, out_stream_TDATA, "(port)out_stream_TDATA");
    sc_trace(mVcdFile, out_stream_TVALID, "(port)out_stream_TVALID");
    sc_trace(mVcdFile, out_stream_TREADY, "(port)out_stream_TREADY");
    sc_trace(mVcdFile, out_stream_TKEEP, "(port)out_stream_TKEEP");
    sc_trace(mVcdFile, out_stream_TSTRB, "(port)out_stream_TSTRB");
    sc_trace(mVcdFile, out_stream_TUSER, "(port)out_stream_TUSER");
    sc_trace(mVcdFile, out_stream_TLAST, "(port)out_stream_TLAST");
    sc_trace(mVcdFile, out_stream_TID, "(port)out_stream_TID");
    sc_trace(mVcdFile, out_stream_TDEST, "(port)out_stream_TDEST");
    sc_trace(mVcdFile, s_axi_CTRL_AWVALID, "(port)s_axi_CTRL_AWVALID");
    sc_trace(mVcdFile, s_axi_CTRL_AWREADY, "(port)s_axi_CTRL_AWREADY");
    sc_trace(mVcdFile, s_axi_CTRL_AWADDR, "(port)s_axi_CTRL_AWADDR");
    sc_trace(mVcdFile, s_axi_CTRL_WVALID, "(port)s_axi_CTRL_WVALID");
    sc_trace(mVcdFile, s_axi_CTRL_WREADY, "(port)s_axi_CTRL_WREADY");
    sc_trace(mVcdFile, s_axi_CTRL_WDATA, "(port)s_axi_CTRL_WDATA");
    sc_trace(mVcdFile, s_axi_CTRL_WSTRB, "(port)s_axi_CTRL_WSTRB");
    sc_trace(mVcdFile, s_axi_CTRL_ARVALID, "(port)s_axi_CTRL_ARVALID");
    sc_trace(mVcdFile, s_axi_CTRL_ARREADY, "(port)s_axi_CTRL_ARREADY");
    sc_trace(mVcdFile, s_axi_CTRL_ARADDR, "(port)s_axi_CTRL_ARADDR");
    sc_trace(mVcdFile, s_axi_CTRL_RVALID, "(port)s_axi_CTRL_RVALID");
    sc_trace(mVcdFile, s_axi_CTRL_RREADY, "(port)s_axi_CTRL_RREADY");
    sc_trace(mVcdFile, s_axi_CTRL_RDATA, "(port)s_axi_CTRL_RDATA");
    sc_trace(mVcdFile, s_axi_CTRL_RRESP, "(port)s_axi_CTRL_RRESP");
    sc_trace(mVcdFile, s_axi_CTRL_BVALID, "(port)s_axi_CTRL_BVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BREADY, "(port)s_axi_CTRL_BREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BRESP, "(port)s_axi_CTRL_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_AWVALID, "(port)s_axi_KERNEL_BUS_AWVALID");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_AWREADY, "(port)s_axi_KERNEL_BUS_AWREADY");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_AWADDR, "(port)s_axi_KERNEL_BUS_AWADDR");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_WVALID, "(port)s_axi_KERNEL_BUS_WVALID");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_WREADY, "(port)s_axi_KERNEL_BUS_WREADY");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_WDATA, "(port)s_axi_KERNEL_BUS_WDATA");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_WSTRB, "(port)s_axi_KERNEL_BUS_WSTRB");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_ARVALID, "(port)s_axi_KERNEL_BUS_ARVALID");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_ARREADY, "(port)s_axi_KERNEL_BUS_ARREADY");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_ARADDR, "(port)s_axi_KERNEL_BUS_ARADDR");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_RVALID, "(port)s_axi_KERNEL_BUS_RVALID");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_RREADY, "(port)s_axi_KERNEL_BUS_RREADY");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_RDATA, "(port)s_axi_KERNEL_BUS_RDATA");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_RRESP, "(port)s_axi_KERNEL_BUS_RRESP");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_BVALID, "(port)s_axi_KERNEL_BUS_BVALID");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_BREADY, "(port)s_axi_KERNEL_BUS_BREADY");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_BRESP, "(port)s_axi_KERNEL_BUS_BRESP");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, in_stream_V_data_V_0_data_out, "in_stream_V_data_V_0_data_out");
    sc_trace(mVcdFile, in_stream_V_data_V_0_vld_in, "in_stream_V_data_V_0_vld_in");
    sc_trace(mVcdFile, in_stream_V_data_V_0_vld_out, "in_stream_V_data_V_0_vld_out");
    sc_trace(mVcdFile, in_stream_V_data_V_0_ack_in, "in_stream_V_data_V_0_ack_in");
    sc_trace(mVcdFile, in_stream_V_data_V_0_ack_out, "in_stream_V_data_V_0_ack_out");
    sc_trace(mVcdFile, in_stream_V_data_V_0_payload_A, "in_stream_V_data_V_0_payload_A");
    sc_trace(mVcdFile, in_stream_V_data_V_0_payload_B, "in_stream_V_data_V_0_payload_B");
    sc_trace(mVcdFile, in_stream_V_data_V_0_sel_rd, "in_stream_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, in_stream_V_data_V_0_sel_wr, "in_stream_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, in_stream_V_data_V_0_sel, "in_stream_V_data_V_0_sel");
    sc_trace(mVcdFile, in_stream_V_data_V_0_load_A, "in_stream_V_data_V_0_load_A");
    sc_trace(mVcdFile, in_stream_V_data_V_0_load_B, "in_stream_V_data_V_0_load_B");
    sc_trace(mVcdFile, in_stream_V_data_V_0_state, "in_stream_V_data_V_0_state");
    sc_trace(mVcdFile, in_stream_V_data_V_0_state_cmp_full, "in_stream_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, in_stream_V_dest_V_0_vld_in, "in_stream_V_dest_V_0_vld_in");
    sc_trace(mVcdFile, in_stream_V_dest_V_0_ack_out, "in_stream_V_dest_V_0_ack_out");
    sc_trace(mVcdFile, in_stream_V_dest_V_0_state, "in_stream_V_dest_V_0_state");
    sc_trace(mVcdFile, out_stream_V_data_V_1_data_out, "out_stream_V_data_V_1_data_out");
    sc_trace(mVcdFile, out_stream_V_data_V_1_vld_in, "out_stream_V_data_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_V_data_V_1_vld_out, "out_stream_V_data_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_V_data_V_1_ack_in, "out_stream_V_data_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_V_data_V_1_ack_out, "out_stream_V_data_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_V_data_V_1_payload_A, "out_stream_V_data_V_1_payload_A");
    sc_trace(mVcdFile, out_stream_V_data_V_1_payload_B, "out_stream_V_data_V_1_payload_B");
    sc_trace(mVcdFile, out_stream_V_data_V_1_sel_rd, "out_stream_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_V_data_V_1_sel_wr, "out_stream_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, out_stream_V_data_V_1_sel, "out_stream_V_data_V_1_sel");
    sc_trace(mVcdFile, out_stream_V_data_V_1_load_A, "out_stream_V_data_V_1_load_A");
    sc_trace(mVcdFile, out_stream_V_data_V_1_load_B, "out_stream_V_data_V_1_load_B");
    sc_trace(mVcdFile, out_stream_V_data_V_1_state, "out_stream_V_data_V_1_state");
    sc_trace(mVcdFile, out_stream_V_data_V_1_state_cmp_full, "out_stream_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, out_stream_V_keep_V_1_data_out, "out_stream_V_keep_V_1_data_out");
    sc_trace(mVcdFile, out_stream_V_keep_V_1_vld_in, "out_stream_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_V_keep_V_1_vld_out, "out_stream_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_V_keep_V_1_ack_in, "out_stream_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_V_keep_V_1_ack_out, "out_stream_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_V_keep_V_1_sel_rd, "out_stream_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_V_keep_V_1_sel, "out_stream_V_keep_V_1_sel");
    sc_trace(mVcdFile, out_stream_V_keep_V_1_state, "out_stream_V_keep_V_1_state");
    sc_trace(mVcdFile, out_stream_V_strb_V_1_data_out, "out_stream_V_strb_V_1_data_out");
    sc_trace(mVcdFile, out_stream_V_strb_V_1_vld_in, "out_stream_V_strb_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_V_strb_V_1_vld_out, "out_stream_V_strb_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_V_strb_V_1_ack_in, "out_stream_V_strb_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_V_strb_V_1_ack_out, "out_stream_V_strb_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_V_strb_V_1_sel_rd, "out_stream_V_strb_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_V_strb_V_1_sel, "out_stream_V_strb_V_1_sel");
    sc_trace(mVcdFile, out_stream_V_strb_V_1_state, "out_stream_V_strb_V_1_state");
    sc_trace(mVcdFile, out_stream_V_user_V_1_data_out, "out_stream_V_user_V_1_data_out");
    sc_trace(mVcdFile, out_stream_V_user_V_1_vld_in, "out_stream_V_user_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_V_user_V_1_vld_out, "out_stream_V_user_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_V_user_V_1_ack_in, "out_stream_V_user_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_V_user_V_1_ack_out, "out_stream_V_user_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_V_user_V_1_sel_rd, "out_stream_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_V_user_V_1_sel, "out_stream_V_user_V_1_sel");
    sc_trace(mVcdFile, out_stream_V_user_V_1_state, "out_stream_V_user_V_1_state");
    sc_trace(mVcdFile, out_stream_V_last_V_1_data_out, "out_stream_V_last_V_1_data_out");
    sc_trace(mVcdFile, out_stream_V_last_V_1_vld_in, "out_stream_V_last_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_V_last_V_1_vld_out, "out_stream_V_last_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_V_last_V_1_ack_in, "out_stream_V_last_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_V_last_V_1_ack_out, "out_stream_V_last_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_V_last_V_1_sel_rd, "out_stream_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_V_last_V_1_sel, "out_stream_V_last_V_1_sel");
    sc_trace(mVcdFile, out_stream_V_last_V_1_state, "out_stream_V_last_V_1_state");
    sc_trace(mVcdFile, out_stream_V_id_V_1_data_out, "out_stream_V_id_V_1_data_out");
    sc_trace(mVcdFile, out_stream_V_id_V_1_vld_in, "out_stream_V_id_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_V_id_V_1_vld_out, "out_stream_V_id_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_V_id_V_1_ack_in, "out_stream_V_id_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_V_id_V_1_ack_out, "out_stream_V_id_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_V_id_V_1_sel_rd, "out_stream_V_id_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_V_id_V_1_sel, "out_stream_V_id_V_1_sel");
    sc_trace(mVcdFile, out_stream_V_id_V_1_state, "out_stream_V_id_V_1_state");
    sc_trace(mVcdFile, out_stream_V_dest_V_1_data_out, "out_stream_V_dest_V_1_data_out");
    sc_trace(mVcdFile, out_stream_V_dest_V_1_vld_in, "out_stream_V_dest_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_V_dest_V_1_vld_out, "out_stream_V_dest_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_V_dest_V_1_ack_in, "out_stream_V_dest_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_V_dest_V_1_ack_out, "out_stream_V_dest_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_V_dest_V_1_sel_rd, "out_stream_V_dest_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_V_dest_V_1_sel, "out_stream_V_dest_V_1_sel");
    sc_trace(mVcdFile, out_stream_V_dest_V_1_state, "out_stream_V_dest_V_1_state");
    sc_trace(mVcdFile, kernel_0, "kernel_0");
    sc_trace(mVcdFile, kernel_1, "kernel_1");
    sc_trace(mVcdFile, kernel_2, "kernel_2");
    sc_trace(mVcdFile, kernel_3, "kernel_3");
    sc_trace(mVcdFile, kernel_4, "kernel_4");
    sc_trace(mVcdFile, kernel_5, "kernel_5");
    sc_trace(mVcdFile, kernel_6, "kernel_6");
    sc_trace(mVcdFile, kernel_7, "kernel_7");
    sc_trace(mVcdFile, kernel_8, "kernel_8");
    sc_trace(mVcdFile, in_stream_TDATA_blk_n, "in_stream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, exitcond1_reg_1178, "exitcond1_reg_1178");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, exitcond4_reg_1187, "exitcond4_reg_1187");
    sc_trace(mVcdFile, ap_CS_fsm_pp3_stage0, "ap_CS_fsm_pp3_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter1, "ap_enable_reg_pp3_iter1");
    sc_trace(mVcdFile, exitcond_flatten8_reg_1314, "exitcond_flatten8_reg_1314");
    sc_trace(mVcdFile, icmp_reg_1369, "icmp_reg_1369");
    sc_trace(mVcdFile, out_stream_TDATA_blk_n, "out_stream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter6, "ap_enable_reg_pp3_iter6");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314, "ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter7, "ap_enable_reg_pp3_iter7");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314, "ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314");
    sc_trace(mVcdFile, x_reg_350, "x_reg_350");
    sc_trace(mVcdFile, x1_reg_362, "x1_reg_362");
    sc_trace(mVcdFile, indvar_flatten_reg_374, "indvar_flatten_reg_374");
    sc_trace(mVcdFile, y2_reg_385, "y2_reg_385");
    sc_trace(mVcdFile, window_2_2_1_reg_396, "window_2_2_1_reg_396");
    sc_trace(mVcdFile, window_2_1_1_reg_408, "window_2_1_1_reg_408");
    sc_trace(mVcdFile, window_1_2_1_reg_420, "window_1_2_1_reg_420");
    sc_trace(mVcdFile, window_1_1_1_reg_432, "window_1_1_1_reg_432");
    sc_trace(mVcdFile, x3_reg_444, "x3_reg_444");
    sc_trace(mVcdFile, indvar_flatten6_reg_455, "indvar_flatten6_reg_455");
    sc_trace(mVcdFile, y_assign_reg_466, "y_assign_reg_466");
    sc_trace(mVcdFile, x_assign_reg_478, "x_assign_reg_478");
    sc_trace(mVcdFile, window_1_1_reg_489, "window_1_1_reg_489");
    sc_trace(mVcdFile, ap_condition_995, "ap_condition_995");
    sc_trace(mVcdFile, window_1_0_reg_500, "window_1_0_reg_500");
    sc_trace(mVcdFile, window_2_1_reg_512, "window_2_1_reg_512");
    sc_trace(mVcdFile, window_2_0_reg_523, "window_2_0_reg_523");
    sc_trace(mVcdFile, window_2_2_reg_535, "window_2_2_reg_535");
    sc_trace(mVcdFile, exitcond1_fu_555_p2, "exitcond1_fu_555_p2");
    sc_trace(mVcdFile, x_1_fu_561_p2, "x_1_fu_561_p2");
    sc_trace(mVcdFile, x_1_reg_1182, "x_1_reg_1182");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, exitcond4_fu_572_p2, "exitcond4_fu_572_p2");
    sc_trace(mVcdFile, x_2_fu_578_p2, "x_2_fu_578_p2");
    sc_trace(mVcdFile, x_2_reg_1191, "x_2_reg_1191");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, exitcond_flatten_fu_589_p2, "exitcond_flatten_fu_589_p2");
    sc_trace(mVcdFile, exitcond_flatten_reg_1196, "exitcond_flatten_reg_1196");
    sc_trace(mVcdFile, ap_CS_fsm_pp2_stage0, "ap_CS_fsm_pp2_stage0");
    sc_trace(mVcdFile, indvar_flatten_next_fu_595_p2, "indvar_flatten_next_fu_595_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter0, "ap_enable_reg_pp2_iter0");
    sc_trace(mVcdFile, tmp_3_mid2_v_fu_621_p3, "tmp_3_mid2_v_fu_621_p3");
    sc_trace(mVcdFile, tmp_3_mid2_v_reg_1205, "tmp_3_mid2_v_reg_1205");
    sc_trace(mVcdFile, tmp_1_fu_629_p1, "tmp_1_fu_629_p1");
    sc_trace(mVcdFile, tmp_1_reg_1210, "tmp_1_reg_1210");
    sc_trace(mVcdFile, cond_mid2_fu_645_p3, "cond_mid2_fu_645_p3");
    sc_trace(mVcdFile, cond_mid2_reg_1215, "cond_mid2_reg_1215");
    sc_trace(mVcdFile, cond1_fu_673_p2, "cond1_fu_673_p2");
    sc_trace(mVcdFile, cond1_reg_1233, "cond1_reg_1233");
    sc_trace(mVcdFile, x_3_fu_679_p2, "x_3_fu_679_p2");
    sc_trace(mVcdFile, window_2_2_6_fu_720_p3, "window_2_2_6_fu_720_p3");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter1, "ap_enable_reg_pp2_iter1");
    sc_trace(mVcdFile, window_2_2_7_fu_727_p3, "window_2_2_7_fu_727_p3");
    sc_trace(mVcdFile, window_2_2_8_fu_734_p3, "window_2_2_8_fu_734_p3");
    sc_trace(mVcdFile, window_2_2_9_fu_741_p3, "window_2_2_9_fu_741_p3");
    sc_trace(mVcdFile, y_fu_759_p2, "y_fu_759_p2");
    sc_trace(mVcdFile, y_reg_1304, "y_reg_1304");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter1_y_reg_1304, "ap_pipeline_reg_pp3_iter1_y_reg_1304");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter2_y_reg_1304, "ap_pipeline_reg_pp3_iter2_y_reg_1304");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter3_y_reg_1304, "ap_pipeline_reg_pp3_iter3_y_reg_1304");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter4_y_reg_1304, "ap_pipeline_reg_pp3_iter4_y_reg_1304");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter5_y_reg_1304, "ap_pipeline_reg_pp3_iter5_y_reg_1304");
    sc_trace(mVcdFile, tmp_3_reg_1309, "tmp_3_reg_1309");
    sc_trace(mVcdFile, exitcond_flatten8_fu_773_p2, "exitcond_flatten8_fu_773_p2");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1314, "ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1314");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1314, "ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1314");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter3_exitcond_flatten8_reg_1314, "ap_pipeline_reg_pp3_iter3_exitcond_flatten8_reg_1314");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter4_exitcond_flatten8_reg_1314, "ap_pipeline_reg_pp3_iter4_exitcond_flatten8_reg_1314");
    sc_trace(mVcdFile, indvar_flatten_next7_fu_779_p2, "indvar_flatten_next7_fu_779_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter0, "ap_enable_reg_pp3_iter0");
    sc_trace(mVcdFile, exitcond2_fu_788_p2, "exitcond2_fu_788_p2");
    sc_trace(mVcdFile, exitcond2_reg_1323, "exitcond2_reg_1323");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter1_exitcond2_reg_1323, "ap_pipeline_reg_pp3_iter1_exitcond2_reg_1323");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter2_exitcond2_reg_1323, "ap_pipeline_reg_pp3_iter2_exitcond2_reg_1323");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter3_exitcond2_reg_1323, "ap_pipeline_reg_pp3_iter3_exitcond2_reg_1323");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter4_exitcond2_reg_1323, "ap_pipeline_reg_pp3_iter4_exitcond2_reg_1323");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter5_exitcond2_reg_1323, "ap_pipeline_reg_pp3_iter5_exitcond2_reg_1323");
    sc_trace(mVcdFile, tmp_i_i_mid2_fu_808_p3, "tmp_i_i_mid2_fu_808_p3");
    sc_trace(mVcdFile, tmp_i_i_mid2_reg_1329, "tmp_i_i_mid2_reg_1329");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter1_tmp_i_i_mid2_reg_1329, "ap_pipeline_reg_pp3_iter1_tmp_i_i_mid2_reg_1329");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter2_tmp_i_i_mid2_reg_1329, "ap_pipeline_reg_pp3_iter2_tmp_i_i_mid2_reg_1329");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter3_tmp_i_i_mid2_reg_1329, "ap_pipeline_reg_pp3_iter3_tmp_i_i_mid2_reg_1329");
    sc_trace(mVcdFile, y_assign_mid2_fu_816_p3, "y_assign_mid2_fu_816_p3");
    sc_trace(mVcdFile, y_assign_mid2_reg_1336, "y_assign_mid2_reg_1336");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter1_y_assign_mid2_reg_1336, "ap_pipeline_reg_pp3_iter1_y_assign_mid2_reg_1336");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter2_y_assign_mid2_reg_1336, "ap_pipeline_reg_pp3_iter2_y_assign_mid2_reg_1336");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter3_y_assign_mid2_reg_1336, "ap_pipeline_reg_pp3_iter3_y_assign_mid2_reg_1336");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter4_y_assign_mid2_reg_1336, "ap_pipeline_reg_pp3_iter4_y_assign_mid2_reg_1336");
    sc_trace(mVcdFile, tmp_3_i_i_fu_830_p2, "tmp_3_i_i_fu_830_p2");
    sc_trace(mVcdFile, tmp_3_i_i_reg_1342, "tmp_3_i_i_reg_1342");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter1_tmp_3_i_i_reg_1342, "ap_pipeline_reg_pp3_iter1_tmp_3_i_i_reg_1342");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter2_tmp_3_i_i_reg_1342, "ap_pipeline_reg_pp3_iter2_tmp_3_i_i_reg_1342");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter3_tmp_3_i_i_reg_1342, "ap_pipeline_reg_pp3_iter3_tmp_3_i_i_reg_1342");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter4_tmp_3_i_i_reg_1342, "ap_pipeline_reg_pp3_iter4_tmp_3_i_i_reg_1342");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter5_tmp_3_i_i_reg_1342, "ap_pipeline_reg_pp3_iter5_tmp_3_i_i_reg_1342");
    sc_trace(mVcdFile, x_4_fu_836_p2, "x_4_fu_836_p2");
    sc_trace(mVcdFile, x_4_reg_1349, "x_4_reg_1349");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter1_x_4_reg_1349, "ap_pipeline_reg_pp3_iter1_x_4_reg_1349");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter2_x_4_reg_1349, "ap_pipeline_reg_pp3_iter2_x_4_reg_1349");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter3_x_4_reg_1349, "ap_pipeline_reg_pp3_iter3_x_4_reg_1349");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter4_x_4_reg_1349, "ap_pipeline_reg_pp3_iter4_x_4_reg_1349");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter5_x_4_reg_1349, "ap_pipeline_reg_pp3_iter5_x_4_reg_1349");
    sc_trace(mVcdFile, line_buf_0_addr_1_reg_1357, "line_buf_0_addr_1_reg_1357");
    sc_trace(mVcdFile, line_buf_1_addr_1_reg_1363, "line_buf_1_addr_1_reg_1363");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter1_line_buf_1_addr_1_reg_1363, "ap_pipeline_reg_pp3_iter1_line_buf_1_addr_1_reg_1363");
    sc_trace(mVcdFile, icmp_fu_852_p2, "icmp_fu_852_p2");
    sc_trace(mVcdFile, y_assign_1_mid1_fu_899_p2, "y_assign_1_mid1_fu_899_p2");
    sc_trace(mVcdFile, y_assign_1_mid1_reg_1393, "y_assign_1_mid1_reg_1393");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter2_y_assign_1_mid1_reg_1393, "ap_pipeline_reg_pp3_iter2_y_assign_1_mid1_reg_1393");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter3_y_assign_1_mid1_reg_1393, "ap_pipeline_reg_pp3_iter3_y_assign_1_mid1_reg_1393");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter4_y_assign_1_mid1_reg_1393, "ap_pipeline_reg_pp3_iter4_y_assign_1_mid1_reg_1393");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter5_y_assign_1_mid1_reg_1393, "ap_pipeline_reg_pp3_iter5_y_assign_1_mid1_reg_1393");
    sc_trace(mVcdFile, tmp_i2_i_mid2_v_fu_913_p3, "tmp_i2_i_mid2_v_fu_913_p3");
    sc_trace(mVcdFile, tmp_i2_i_mid2_v_reg_1398, "tmp_i2_i_mid2_v_reg_1398");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter2_tmp_i2_i_mid2_v_reg_1398, "ap_pipeline_reg_pp3_iter2_tmp_i2_i_mid2_v_reg_1398");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter3_tmp_i2_i_mid2_v_reg_1398, "ap_pipeline_reg_pp3_iter3_tmp_i2_i_mid2_v_reg_1398");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter4_tmp_i2_i_mid2_v_reg_1398, "ap_pipeline_reg_pp3_iter4_tmp_i2_i_mid2_v_reg_1398");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter5_tmp_i2_i_mid2_v_reg_1398, "ap_pipeline_reg_pp3_iter5_tmp_i2_i_mid2_v_reg_1398");
    sc_trace(mVcdFile, kernel_6_read_reg_1404, "kernel_6_read_reg_1404");
    sc_trace(mVcdFile, kernel_7_read_reg_1409, "kernel_7_read_reg_1409");
    sc_trace(mVcdFile, kernel_8_read_reg_1414, "kernel_8_read_reg_1414");
    sc_trace(mVcdFile, line_buf_1_q0, "line_buf_1_q0");
    sc_trace(mVcdFile, window_1_2_reg_1449, "window_1_2_reg_1449");
    sc_trace(mVcdFile, result_3_0_1_i_fu_1031_p2, "result_3_0_1_i_fu_1031_p2");
    sc_trace(mVcdFile, result_3_0_1_i_reg_1479, "result_3_0_1_i_reg_1479");
    sc_trace(mVcdFile, grp_fu_943_p2, "grp_fu_943_p2");
    sc_trace(mVcdFile, tmp_9_0_2_i_reg_1484, "tmp_9_0_2_i_reg_1484");
    sc_trace(mVcdFile, grp_fu_953_p2, "grp_fu_953_p2");
    sc_trace(mVcdFile, tmp_9_1_i_reg_1489, "tmp_9_1_i_reg_1489");
    sc_trace(mVcdFile, grp_fu_963_p2, "grp_fu_963_p2");
    sc_trace(mVcdFile, tmp_9_1_1_i_reg_1494, "tmp_9_1_1_i_reg_1494");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter4_tmp_9_1_1_i_reg_1494, "ap_pipeline_reg_pp3_iter4_tmp_9_1_1_i_reg_1494");
    sc_trace(mVcdFile, grp_fu_973_p2, "grp_fu_973_p2");
    sc_trace(mVcdFile, tmp_9_1_2_i_reg_1499, "tmp_9_1_2_i_reg_1499");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter4_tmp_9_1_2_i_reg_1499, "ap_pipeline_reg_pp3_iter4_tmp_9_1_2_i_reg_1499");
    sc_trace(mVcdFile, result_2_0_2_i_fu_1066_p3, "result_2_0_2_i_fu_1066_p3");
    sc_trace(mVcdFile, result_2_0_2_i_reg_1504, "result_2_0_2_i_reg_1504");
    sc_trace(mVcdFile, result_3_1_i_fu_1074_p2, "result_3_1_i_fu_1074_p2");
    sc_trace(mVcdFile, result_3_1_i_reg_1509, "result_3_1_i_reg_1509");
    sc_trace(mVcdFile, grp_fu_995_p2, "grp_fu_995_p2");
    sc_trace(mVcdFile, tmp_9_2_i_reg_1514, "tmp_9_2_i_reg_1514");
    sc_trace(mVcdFile, grp_fu_1004_p2, "grp_fu_1004_p2");
    sc_trace(mVcdFile, tmp_9_2_1_i_reg_1519, "tmp_9_2_1_i_reg_1519");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter5_tmp_9_2_1_i_reg_1519, "ap_pipeline_reg_pp3_iter5_tmp_9_2_1_i_reg_1519");
    sc_trace(mVcdFile, grp_fu_1013_p2, "grp_fu_1013_p2");
    sc_trace(mVcdFile, tmp_9_2_2_i_reg_1524, "tmp_9_2_2_i_reg_1524");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter5_tmp_9_2_2_i_reg_1524, "ap_pipeline_reg_pp3_iter5_tmp_9_2_2_i_reg_1524");
    sc_trace(mVcdFile, result_2_1_2_i_fu_1106_p3, "result_2_1_2_i_fu_1106_p3");
    sc_trace(mVcdFile, result_2_1_2_i_reg_1529, "result_2_1_2_i_reg_1529");
    sc_trace(mVcdFile, result_3_2_i_fu_1114_p2, "result_3_2_i_fu_1114_p2");
    sc_trace(mVcdFile, result_3_2_i_reg_1535, "result_3_2_i_reg_1535");
    sc_trace(mVcdFile, val_out_fu_1169_p3, "val_out_fu_1169_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter2, "ap_enable_reg_pp3_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter3, "ap_enable_reg_pp3_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter4, "ap_enable_reg_pp3_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter5, "ap_enable_reg_pp3_iter5");
    sc_trace(mVcdFile, line_buf_0_address0, "line_buf_0_address0");
    sc_trace(mVcdFile, line_buf_0_ce0, "line_buf_0_ce0");
    sc_trace(mVcdFile, line_buf_0_we0, "line_buf_0_we0");
    sc_trace(mVcdFile, line_buf_0_q0, "line_buf_0_q0");
    sc_trace(mVcdFile, line_buf_0_ce1, "line_buf_0_ce1");
    sc_trace(mVcdFile, line_buf_0_we1, "line_buf_0_we1");
    sc_trace(mVcdFile, line_buf_1_address0, "line_buf_1_address0");
    sc_trace(mVcdFile, line_buf_1_ce0, "line_buf_1_ce0");
    sc_trace(mVcdFile, line_buf_1_we0, "line_buf_1_we0");
    sc_trace(mVcdFile, line_buf_1_ce1, "line_buf_1_ce1");
    sc_trace(mVcdFile, line_buf_1_we1, "line_buf_1_we1");
    sc_trace(mVcdFile, x_phi_fu_354_p4, "x_phi_fu_354_p4");
    sc_trace(mVcdFile, x1_phi_fu_366_p4, "x1_phi_fu_366_p4");
    sc_trace(mVcdFile, y2_phi_fu_389_p4, "y2_phi_fu_389_p4");
    sc_trace(mVcdFile, y_assign_phi_fu_470_p4, "y_assign_phi_fu_470_p4");
    sc_trace(mVcdFile, x_assign_phi_fu_482_p4, "x_assign_phi_fu_482_p4");
    sc_trace(mVcdFile, window_1_1_phi_fu_492_p4, "window_1_1_phi_fu_492_p4");
    sc_trace(mVcdFile, window_1_0_phi_fu_503_p4, "window_1_0_phi_fu_503_p4");
    sc_trace(mVcdFile, window_2_1_phi_fu_515_p4, "window_2_1_phi_fu_515_p4");
    sc_trace(mVcdFile, window_2_0_phi_fu_526_p4, "window_2_0_phi_fu_526_p4");
    sc_trace(mVcdFile, ap_phi_precharge_reg_pp3_iter1_window_2_2_reg_535, "ap_phi_precharge_reg_pp3_iter1_window_2_2_reg_535");
    sc_trace(mVcdFile, ap_phi_precharge_reg_pp3_iter2_window_2_2_reg_535, "ap_phi_precharge_reg_pp3_iter2_window_2_2_reg_535");
    sc_trace(mVcdFile, ap_phi_precharge_reg_pp3_iter0_window_2_2_reg_535, "ap_phi_precharge_reg_pp3_iter0_window_2_2_reg_535");
    sc_trace(mVcdFile, x_cast7_fu_567_p1, "x_cast7_fu_567_p1");
    sc_trace(mVcdFile, x1_cast6_fu_584_p1, "x1_cast6_fu_584_p1");
    sc_trace(mVcdFile, tmp_cast_fu_667_p1, "tmp_cast_fu_667_p1");
    sc_trace(mVcdFile, x5_cast1_fu_824_p1, "x5_cast1_fu_824_p1");
    sc_trace(mVcdFile, window_0_0_read_as_fu_166, "window_0_0_read_as_fu_166");
    sc_trace(mVcdFile, window_0_0_fu_170, "window_0_0_fu_170");
    sc_trace(mVcdFile, window_0_1_fu_174, "window_0_1_fu_174");
    sc_trace(mVcdFile, window_1_0_read_as_fu_178, "window_1_0_read_as_fu_178");
    sc_trace(mVcdFile, window_2_0_read_as_fu_182, "window_2_0_read_as_fu_182");
    sc_trace(mVcdFile, read_count_1_fu_186, "read_count_1_fu_186");
    sc_trace(mVcdFile, read_count_fu_858_p2, "read_count_fu_858_p2");
    sc_trace(mVcdFile, exitcond_fu_601_p2, "exitcond_fu_601_p2");
    sc_trace(mVcdFile, y9_fu_615_p2, "y9_fu_615_p2");
    sc_trace(mVcdFile, cond_mid1_fu_633_p2, "cond_mid1_fu_633_p2");
    sc_trace(mVcdFile, cond_fu_639_p2, "cond_fu_639_p2");
    sc_trace(mVcdFile, x3_mid2_fu_607_p3, "x3_mid2_fu_607_p3");
    sc_trace(mVcdFile, x3_cast4_cast_fu_653_p1, "x3_cast4_cast_fu_653_p1");
    sc_trace(mVcdFile, tmp_s_fu_657_p2, "tmp_s_fu_657_p2");
    sc_trace(mVcdFile, tmp_cast8_fu_663_p1, "tmp_cast8_fu_663_p1");
    sc_trace(mVcdFile, window_1_1_2_fu_685_p3, "window_1_1_2_fu_685_p3");
    sc_trace(mVcdFile, window_2_2_4_fu_706_p3, "window_2_2_4_fu_706_p3");
    sc_trace(mVcdFile, window_2_2_5_fu_713_p3, "window_2_2_5_fu_713_p3");
    sc_trace(mVcdFile, window_2_2_1_11_fu_692_p3, "window_2_2_1_11_fu_692_p3");
    sc_trace(mVcdFile, window_2_2_2_fu_699_p3, "window_2_2_2_fu_699_p3");
    sc_trace(mVcdFile, tmp_i_i_mid1_fu_802_p2, "tmp_i_i_mid1_fu_802_p2");
    sc_trace(mVcdFile, tmp_i_i_fu_753_p2, "tmp_i_i_fu_753_p2");
    sc_trace(mVcdFile, x_assign_mid2_fu_794_p3, "x_assign_mid2_fu_794_p3");
    sc_trace(mVcdFile, tmp_12_fu_842_p4, "tmp_12_fu_842_p4");
    sc_trace(mVcdFile, tmp_7_fu_905_p3, "tmp_7_fu_905_p3");
    sc_trace(mVcdFile, grp_fu_923_p1, "grp_fu_923_p1");
    sc_trace(mVcdFile, grp_fu_933_p1, "grp_fu_933_p1");
    sc_trace(mVcdFile, grp_fu_943_p1, "grp_fu_943_p1");
    sc_trace(mVcdFile, grp_fu_953_p1, "grp_fu_953_p1");
    sc_trace(mVcdFile, grp_fu_963_p1, "grp_fu_963_p1");
    sc_trace(mVcdFile, grp_fu_973_p1, "grp_fu_973_p1");
    sc_trace(mVcdFile, grp_fu_995_p1, "grp_fu_995_p1");
    sc_trace(mVcdFile, grp_fu_1004_p1, "grp_fu_1004_p1");
    sc_trace(mVcdFile, grp_fu_1013_p1, "grp_fu_1013_p1");
    sc_trace(mVcdFile, or_cond1_i_i_fu_1019_p2, "or_cond1_i_i_fu_1019_p2");
    sc_trace(mVcdFile, grp_fu_923_p2, "grp_fu_923_p2");
    sc_trace(mVcdFile, grp_fu_933_p2, "grp_fu_933_p2");
    sc_trace(mVcdFile, result_2_i_fu_1023_p3, "result_2_i_fu_1023_p3");
    sc_trace(mVcdFile, tmp_9_fu_1043_p3, "tmp_9_fu_1043_p3");
    sc_trace(mVcdFile, rev_fu_1050_p2, "rev_fu_1050_p2");
    sc_trace(mVcdFile, result_2_0_1_i_fu_1037_p3, "result_2_0_1_i_fu_1037_p3");
    sc_trace(mVcdFile, p_i2_i_fu_1056_p2, "p_i2_i_fu_1056_p2");
    sc_trace(mVcdFile, result_3_0_2_i_fu_1061_p2, "result_3_0_2_i_fu_1061_p2");
    sc_trace(mVcdFile, result_2_1_i_fu_1079_p3, "result_2_1_i_fu_1079_p3");
    sc_trace(mVcdFile, tmp_5_fu_1089_p2, "tmp_5_fu_1089_p2");
    sc_trace(mVcdFile, result_3_1_1_i_fu_1084_p2, "result_3_1_1_i_fu_1084_p2");
    sc_trace(mVcdFile, tmp_10_fu_1093_p3, "tmp_10_fu_1093_p3");
    sc_trace(mVcdFile, result_3_1_2_i_fu_1101_p2, "result_3_1_2_i_fu_1101_p2");
    sc_trace(mVcdFile, tmp_i2_i_mid2_fu_1124_p2, "tmp_i2_i_mid2_fu_1124_p2");
    sc_trace(mVcdFile, or_cond1_i6_i_fu_1129_p2, "or_cond1_i6_i_fu_1129_p2");
    sc_trace(mVcdFile, result_2_2_i_fu_1134_p3, "result_2_2_i_fu_1134_p3");
    sc_trace(mVcdFile, result_3_2_1_i_fu_1140_p2, "result_3_2_1_i_fu_1140_p2");
    sc_trace(mVcdFile, y_assign_1_mid2_fu_1119_p3, "y_assign_1_mid2_fu_1119_p3");
    sc_trace(mVcdFile, tmp_8_fu_1151_p2, "tmp_8_fu_1151_p2");
    sc_trace(mVcdFile, result_2_2_1_i_fu_1145_p3, "result_2_2_1_i_fu_1145_p3");
    sc_trace(mVcdFile, tmp_11_fu_1156_p3, "tmp_11_fu_1156_p3");
    sc_trace(mVcdFile, result_3_2_2_i_fu_1164_p2, "result_3_2_2_i_fu_1164_p2");
    sc_trace(mVcdFile, grp_fu_923_ce, "grp_fu_923_ce");
    sc_trace(mVcdFile, grp_fu_933_ce, "grp_fu_933_ce");
    sc_trace(mVcdFile, grp_fu_943_ce, "grp_fu_943_ce");
    sc_trace(mVcdFile, grp_fu_953_ce, "grp_fu_953_ce");
    sc_trace(mVcdFile, grp_fu_963_ce, "grp_fu_963_ce");
    sc_trace(mVcdFile, grp_fu_973_ce, "grp_fu_973_ce");
    sc_trace(mVcdFile, grp_fu_995_ce, "grp_fu_995_ce");
    sc_trace(mVcdFile, grp_fu_1004_ce, "grp_fu_1004_ce");
    sc_trace(mVcdFile, grp_fu_1013_ce, "grp_fu_1013_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_condition_1922, "ap_condition_1922");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_1004_p10, "grp_fu_1004_p10");
    sc_trace(mVcdFile, grp_fu_1013_p10, "grp_fu_1013_p10");
    sc_trace(mVcdFile, grp_fu_923_p10, "grp_fu_923_p10");
    sc_trace(mVcdFile, grp_fu_933_p10, "grp_fu_933_p10");
    sc_trace(mVcdFile, grp_fu_943_p10, "grp_fu_943_p10");
    sc_trace(mVcdFile, grp_fu_953_p10, "grp_fu_953_p10");
    sc_trace(mVcdFile, grp_fu_963_p10, "grp_fu_963_p10");
    sc_trace(mVcdFile, grp_fu_973_p10, "grp_fu_973_p10");
    sc_trace(mVcdFile, grp_fu_995_p10, "grp_fu_995_p10");
    sc_trace(mVcdFile, ap_condition_1006, "ap_condition_1006");
    sc_trace(mVcdFile, ap_condition_1110, "ap_condition_1110");
    sc_trace(mVcdFile, ap_condition_1238, "ap_condition_1238");
#endif

    }
    mHdltvinHandle.open("my_filter_buffer.hdltvin.dat");
    mHdltvoutHandle.open("my_filter_buffer.hdltvout.dat");
}

my_filter_buffer::~my_filter_buffer() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete my_filter_buffer_CTRL_s_axi_U;
    delete my_filter_buffer_KERNEL_BUS_s_axi_U;
    delete line_buf_0_U;
    delete line_buf_1_U;
    delete my_filter_buffer_dEe_U0;
    delete my_filter_buffer_dEe_U1;
    delete my_filter_buffer_dEe_U2;
    delete my_filter_buffer_dEe_U3;
    delete my_filter_buffer_dEe_U4;
    delete my_filter_buffer_dEe_U5;
    delete my_filter_buffer_dEe_U6;
    delete my_filter_buffer_dEe_U7;
    delete my_filter_buffer_dEe_U8;
}

void my_filter_buffer::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void my_filter_buffer::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_555_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_555_p2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_555_p2.read())))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_572_p2.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_572_p2.read()))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read())) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_572_p2.read())))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_589_p2.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_589_p2.read()))) {
            ap_enable_reg_pp2_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read())) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_589_p2.read())))) {
            ap_enable_reg_pp2_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_773_p2.read()))) {
            ap_enable_reg_pp3_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
            ap_enable_reg_pp3_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))))) {
            ap_enable_reg_pp3_iter1 = ap_enable_reg_pp3_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
            ap_enable_reg_pp3_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter2 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter2 = ap_enable_reg_pp3_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_1006.read(), ap_const_boolean_1)) {
            if (!esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read())) {
                ap_enable_reg_pp3_iter3 = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read())) {
                ap_enable_reg_pp3_iter3 = ap_enable_reg_pp3_iter2.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter4 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter4 = ap_enable_reg_pp3_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter5 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter5 = ap_enable_reg_pp3_iter4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter6 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter6 = ap_enable_reg_pp3_iter5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter7 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter7 = ap_enable_reg_pp3_iter6.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
            ap_enable_reg_pp3_iter7 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_1110.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_773_p2.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_852_p2.read()))) {
            ap_phi_precharge_reg_pp3_iter1_window_2_2_reg_535 = ap_const_lv32_0;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_precharge_reg_pp3_iter1_window_2_2_reg_535 = ap_phi_precharge_reg_pp3_iter0_window_2_2_reg_535.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_1238.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1314.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1369.read()))) {
            ap_phi_precharge_reg_pp3_iter2_window_2_2_reg_535 = in_stream_V_data_V_0_data_out.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_precharge_reg_pp3_iter2_window_2_2_reg_535 = ap_phi_precharge_reg_pp3_iter1_window_2_2_reg_535.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_stream_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_V_0_vld_out.read()))) {
            in_stream_V_data_V_0_sel_rd =  (sc_logic) (~in_stream_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_stream_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_V_0_ack_in.read()))) {
            in_stream_V_data_V_0_sel_wr =  (sc_logic) (~in_stream_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_stream_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(in_stream_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(in_stream_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            in_stream_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_stream_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_stream_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            in_stream_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(in_stream_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_stream_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(in_stream_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_V_0_ack_out.read()))))) {
            in_stream_V_data_V_0_state = ap_const_lv2_3;
        } else {
            in_stream_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_stream_V_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, in_stream_V_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, in_stream_V_dest_V_0_state.read())))) {
            in_stream_V_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, in_stream_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_stream_V_dest_V_0_state.read())))) {
            in_stream_V_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, in_stream_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_stream_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, in_stream_V_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_dest_V_0_ack_out.read()))))) {
            in_stream_V_dest_V_0_state = ap_const_lv2_3;
        } else {
            in_stream_V_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        indvar_flatten6_reg_455 = ap_const_lv19_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_773_p2.read()))) {
        indvar_flatten6_reg_455 = indvar_flatten_next7_fu_779_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        indvar_flatten_reg_374 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_589_p2.read()))) {
        indvar_flatten_reg_374 = indvar_flatten_next_fu_595_p2.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_vld_out.read()))) {
            out_stream_V_data_V_1_sel_rd =  (sc_logic) (~out_stream_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_ack_in.read()))) {
            out_stream_V_data_V_1_sel_wr =  (sc_logic) (~out_stream_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_data_V_1_state.read())))) {
            out_stream_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_data_V_1_state.read())))) {
            out_stream_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_ack_out.read()))))) {
            out_stream_V_data_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_dest_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_dest_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_dest_V_1_vld_out.read()))) {
            out_stream_V_dest_V_1_sel_rd =  (sc_logic) (~out_stream_V_dest_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_dest_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_dest_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_dest_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_dest_V_1_state.read())))) {
            out_stream_V_dest_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_dest_V_1_state.read())))) {
            out_stream_V_dest_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_dest_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_dest_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_dest_V_1_ack_out.read()))))) {
            out_stream_V_dest_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_V_dest_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_id_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_id_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_id_V_1_vld_out.read()))) {
            out_stream_V_id_V_1_sel_rd =  (sc_logic) (~out_stream_V_id_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_id_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_id_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_id_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_id_V_1_state.read())))) {
            out_stream_V_id_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_id_V_1_state.read())))) {
            out_stream_V_id_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_id_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_id_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_id_V_1_ack_out.read()))))) {
            out_stream_V_id_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_V_id_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_keep_V_1_vld_out.read()))) {
            out_stream_V_keep_V_1_sel_rd =  (sc_logic) (~out_stream_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_keep_V_1_state.read())))) {
            out_stream_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_keep_V_1_state.read())))) {
            out_stream_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_keep_V_1_ack_out.read()))))) {
            out_stream_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_vld_out.read()))) {
            out_stream_V_last_V_1_sel_rd =  (sc_logic) (~out_stream_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_last_V_1_state.read())))) {
            out_stream_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_last_V_1_state.read())))) {
            out_stream_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_ack_out.read()))))) {
            out_stream_V_last_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_strb_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_strb_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_strb_V_1_vld_out.read()))) {
            out_stream_V_strb_V_1_sel_rd =  (sc_logic) (~out_stream_V_strb_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_strb_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_strb_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_strb_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_strb_V_1_state.read())))) {
            out_stream_V_strb_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_strb_V_1_state.read())))) {
            out_stream_V_strb_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_strb_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_strb_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_strb_V_1_ack_out.read()))))) {
            out_stream_V_strb_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_V_strb_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_user_V_1_vld_out.read()))) {
            out_stream_V_user_V_1_sel_rd =  (sc_logic) (~out_stream_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_user_V_1_state.read())))) {
            out_stream_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_user_V_1_state.read())))) {
            out_stream_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_user_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_user_V_1_ack_out.read()))))) {
            out_stream_V_user_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_773_p2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_852_p2.read()))) {
        read_count_1_fu_186 = read_count_fu_858_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        read_count_1_fu_186 = ap_const_lv32_202;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        window_1_0_reg_500 = window_1_1_1_reg_432.read();
    } else if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1314.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()))) {
        window_1_0_reg_500 = window_1_1_reg_489.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        window_1_1_reg_489 = window_1_2_1_reg_420.read();
    } else if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1314.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()))) {
        window_1_1_reg_489 = window_1_2_reg_1449.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        window_2_0_reg_523 = window_2_1_1_reg_408.read();
    } else if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1314.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()))) {
        window_2_0_reg_523 = window_2_1_reg_512.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        window_2_1_reg_512 = window_2_2_1_reg_396.read();
    } else if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1314.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()))) {
        window_2_1_reg_512 = window_2_2_reg_535.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        x1_reg_362 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0)))) {
        x1_reg_362 = x_2_reg_1191.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        x3_reg_444 = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_589_p2.read()))) {
        x3_reg_444 = x_3_fu_679_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        x_assign_reg_478 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1314.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))))) {
        x_assign_reg_478 = x_4_reg_1349.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0)))) {
        x_reg_350 = x_1_reg_1182.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        x_reg_350 = ap_const_lv10_1FE;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        y2_reg_385 = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1196.read()))) {
        y2_reg_385 = tmp_3_mid2_v_reg_1205.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        y_assign_reg_466 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1314.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))))) {
        y_assign_reg_466 = y_assign_mid2_reg_1336.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))))) {
        ap_pipeline_reg_pp3_iter1_exitcond2_reg_1323 = exitcond2_reg_1323.read();
        ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1314 = exitcond_flatten8_reg_1314.read();
        ap_pipeline_reg_pp3_iter1_line_buf_1_addr_1_reg_1363 = line_buf_1_addr_1_reg_1363.read();
        ap_pipeline_reg_pp3_iter1_tmp_3_i_i_reg_1342 = tmp_3_i_i_reg_1342.read();
        ap_pipeline_reg_pp3_iter1_tmp_i_i_mid2_reg_1329 = tmp_i_i_mid2_reg_1329.read();
        ap_pipeline_reg_pp3_iter1_x_4_reg_1349 = x_4_reg_1349.read();
        ap_pipeline_reg_pp3_iter1_y_assign_mid2_reg_1336 = y_assign_mid2_reg_1336.read();
        ap_pipeline_reg_pp3_iter1_y_reg_1304 = y_reg_1304.read();
        exitcond_flatten8_reg_1314 = exitcond_flatten8_fu_773_p2.read();
        tmp_3_reg_1309 = y_fu_759_p2.read().range(9, 9);
        y_reg_1304 = y_fu_759_p2.read();
    }
    if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())))) {
        ap_pipeline_reg_pp3_iter2_exitcond2_reg_1323 = ap_pipeline_reg_pp3_iter1_exitcond2_reg_1323.read();
        ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1314 = ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1314.read();
        ap_pipeline_reg_pp3_iter2_tmp_3_i_i_reg_1342 = ap_pipeline_reg_pp3_iter1_tmp_3_i_i_reg_1342.read();
        ap_pipeline_reg_pp3_iter2_tmp_i2_i_mid2_v_reg_1398 = tmp_i2_i_mid2_v_reg_1398.read();
        ap_pipeline_reg_pp3_iter2_tmp_i_i_mid2_reg_1329 = ap_pipeline_reg_pp3_iter1_tmp_i_i_mid2_reg_1329.read();
        ap_pipeline_reg_pp3_iter2_x_4_reg_1349 = ap_pipeline_reg_pp3_iter1_x_4_reg_1349.read();
        ap_pipeline_reg_pp3_iter2_y_assign_1_mid1_reg_1393 = y_assign_1_mid1_reg_1393.read();
        ap_pipeline_reg_pp3_iter2_y_assign_mid2_reg_1336 = ap_pipeline_reg_pp3_iter1_y_assign_mid2_reg_1336.read();
        ap_pipeline_reg_pp3_iter2_y_reg_1304 = ap_pipeline_reg_pp3_iter1_y_reg_1304.read();
        ap_pipeline_reg_pp3_iter3_exitcond2_reg_1323 = ap_pipeline_reg_pp3_iter2_exitcond2_reg_1323.read();
        ap_pipeline_reg_pp3_iter3_exitcond_flatten8_reg_1314 = ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1314.read();
        ap_pipeline_reg_pp3_iter3_tmp_3_i_i_reg_1342 = ap_pipeline_reg_pp3_iter2_tmp_3_i_i_reg_1342.read();
        ap_pipeline_reg_pp3_iter3_tmp_i2_i_mid2_v_reg_1398 = ap_pipeline_reg_pp3_iter2_tmp_i2_i_mid2_v_reg_1398.read();
        ap_pipeline_reg_pp3_iter3_tmp_i_i_mid2_reg_1329 = ap_pipeline_reg_pp3_iter2_tmp_i_i_mid2_reg_1329.read();
        ap_pipeline_reg_pp3_iter3_x_4_reg_1349 = ap_pipeline_reg_pp3_iter2_x_4_reg_1349.read();
        ap_pipeline_reg_pp3_iter3_y_assign_1_mid1_reg_1393 = ap_pipeline_reg_pp3_iter2_y_assign_1_mid1_reg_1393.read();
        ap_pipeline_reg_pp3_iter3_y_assign_mid2_reg_1336 = ap_pipeline_reg_pp3_iter2_y_assign_mid2_reg_1336.read();
        ap_pipeline_reg_pp3_iter3_y_reg_1304 = ap_pipeline_reg_pp3_iter2_y_reg_1304.read();
        ap_pipeline_reg_pp3_iter4_exitcond2_reg_1323 = ap_pipeline_reg_pp3_iter3_exitcond2_reg_1323.read();
        ap_pipeline_reg_pp3_iter4_exitcond_flatten8_reg_1314 = ap_pipeline_reg_pp3_iter3_exitcond_flatten8_reg_1314.read();
        ap_pipeline_reg_pp3_iter4_tmp_3_i_i_reg_1342 = ap_pipeline_reg_pp3_iter3_tmp_3_i_i_reg_1342.read();
        ap_pipeline_reg_pp3_iter4_tmp_9_1_1_i_reg_1494 = tmp_9_1_1_i_reg_1494.read();
        ap_pipeline_reg_pp3_iter4_tmp_9_1_2_i_reg_1499 = tmp_9_1_2_i_reg_1499.read();
        ap_pipeline_reg_pp3_iter4_tmp_i2_i_mid2_v_reg_1398 = ap_pipeline_reg_pp3_iter3_tmp_i2_i_mid2_v_reg_1398.read();
        ap_pipeline_reg_pp3_iter4_x_4_reg_1349 = ap_pipeline_reg_pp3_iter3_x_4_reg_1349.read();
        ap_pipeline_reg_pp3_iter4_y_assign_1_mid1_reg_1393 = ap_pipeline_reg_pp3_iter3_y_assign_1_mid1_reg_1393.read();
        ap_pipeline_reg_pp3_iter4_y_assign_mid2_reg_1336 = ap_pipeline_reg_pp3_iter3_y_assign_mid2_reg_1336.read();
        ap_pipeline_reg_pp3_iter4_y_reg_1304 = ap_pipeline_reg_pp3_iter3_y_reg_1304.read();
        ap_pipeline_reg_pp3_iter5_exitcond2_reg_1323 = ap_pipeline_reg_pp3_iter4_exitcond2_reg_1323.read();
        ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314 = ap_pipeline_reg_pp3_iter4_exitcond_flatten8_reg_1314.read();
        ap_pipeline_reg_pp3_iter5_tmp_3_i_i_reg_1342 = ap_pipeline_reg_pp3_iter4_tmp_3_i_i_reg_1342.read();
        ap_pipeline_reg_pp3_iter5_tmp_9_2_1_i_reg_1519 = tmp_9_2_1_i_reg_1519.read();
        ap_pipeline_reg_pp3_iter5_tmp_9_2_2_i_reg_1524 = tmp_9_2_2_i_reg_1524.read();
        ap_pipeline_reg_pp3_iter5_tmp_i2_i_mid2_v_reg_1398 = ap_pipeline_reg_pp3_iter4_tmp_i2_i_mid2_v_reg_1398.read();
        ap_pipeline_reg_pp3_iter5_x_4_reg_1349 = ap_pipeline_reg_pp3_iter4_x_4_reg_1349.read();
        ap_pipeline_reg_pp3_iter5_y_assign_1_mid1_reg_1393 = ap_pipeline_reg_pp3_iter4_y_assign_1_mid1_reg_1393.read();
        ap_pipeline_reg_pp3_iter5_y_reg_1304 = ap_pipeline_reg_pp3_iter4_y_reg_1304.read();
        ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314 = ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_589_p2.read()))) {
        cond1_reg_1233 = cond1_fu_673_p2.read();
        cond_mid2_reg_1215 = cond_mid2_fu_645_p3.read();
        tmp_1_reg_1210 = tmp_1_fu_629_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0)))) {
        exitcond1_reg_1178 = exitcond1_fu_555_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_773_p2.read()))) {
        exitcond2_reg_1323 = exitcond2_fu_788_p2.read();
        icmp_reg_1369 = icmp_fu_852_p2.read();
        line_buf_0_addr_1_reg_1357 =  (sc_lv<9>) (x5_cast1_fu_824_p1.read());
        line_buf_1_addr_1_reg_1363 =  (sc_lv<9>) (x5_cast1_fu_824_p1.read());
        tmp_3_i_i_reg_1342 = tmp_3_i_i_fu_830_p2.read();
        tmp_i_i_mid2_reg_1329 = tmp_i_i_mid2_fu_808_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0)))) {
        exitcond4_reg_1187 = exitcond4_fu_572_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()))) {
        exitcond_flatten_reg_1196 = exitcond_flatten_fu_589_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_V_0_load_A.read())) {
        in_stream_V_data_V_0_payload_A = in_stream_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_V_0_load_B.read())) {
        in_stream_V_data_V_0_payload_B = in_stream_TDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1314.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))))) {
        kernel_6_read_reg_1404 = kernel_6.read();
        kernel_7_read_reg_1409 = kernel_7.read();
        kernel_8_read_reg_1414 = kernel_8.read();
        tmp_i2_i_mid2_v_reg_1398 = tmp_i2_i_mid2_v_fu_913_p3.read();
        y_assign_1_mid1_reg_1393 = y_assign_1_mid1_fu_899_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_load_A.read())) {
        out_stream_V_data_V_1_payload_A = val_out_fu_1169_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_load_B.read())) {
        out_stream_V_data_V_1_payload_B = val_out_fu_1169_p3.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_exitcond_flatten8_reg_1314.read()))) {
        result_2_0_2_i_reg_1504 = result_2_0_2_i_fu_1066_p3.read();
        tmp_9_2_2_i_reg_1524 = grp_fu_1013_p2.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter4_exitcond_flatten8_reg_1314.read()))) {
        result_2_1_2_i_reg_1529 = result_2_1_2_i_fu_1106_p3.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1314.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_tmp_i_i_mid2_reg_1329.read()))) {
        result_3_0_1_i_reg_1479 = result_3_0_1_i_fu_1031_p2.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_exitcond_flatten8_reg_1314.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_3_i_i_reg_1342.read()))) {
        result_3_1_i_reg_1509 = result_3_1_i_fu_1074_p2.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter4_exitcond_flatten8_reg_1314.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter4_tmp_i2_i_mid2_v_reg_1398.read()))) {
        result_3_2_i_reg_1535 = result_3_2_i_fu_1114_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_589_p2.read()))) {
        tmp_3_mid2_v_reg_1205 = tmp_3_mid2_v_fu_621_p3.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1314.read()))) {
        tmp_9_0_2_i_reg_1484 = grp_fu_943_p2.read();
        tmp_9_1_1_i_reg_1494 = grp_fu_963_p2.read();
        tmp_9_1_2_i_reg_1499 = grp_fu_973_p2.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1314.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_tmp_3_i_i_reg_1342.read()))) {
        tmp_9_1_i_reg_1489 = grp_fu_953_p2.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_exitcond_flatten8_reg_1314.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_i2_i_mid2_v_reg_1398.read()))) {
        tmp_9_2_1_i_reg_1519 = grp_fu_1004_p2.read();
        tmp_9_2_i_reg_1514 = grp_fu_995_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))))) {
        window_0_0_fu_170 = window_0_1_fu_174.read();
        window_0_0_read_as_fu_166 = window_0_0_fu_170.read();
        window_1_0_read_as_fu_178 = window_1_0_phi_fu_503_p4.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1314.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))))) {
        window_0_1_fu_174 = line_buf_0_q0.read();
        window_1_2_reg_1449 = line_buf_1_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1196.read()))) {
        window_1_1_1_reg_432 = window_2_2_9_fu_741_p3.read();
        window_1_2_1_reg_420 = window_2_2_8_fu_734_p3.read();
        window_2_1_1_reg_408 = window_2_2_7_fu_727_p3.read();
        window_2_2_1_reg_396 = window_2_2_6_fu_720_p3.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()))) {
        window_2_0_read_as_fu_182 = window_2_0_phi_fu_526_p4.read();
        window_2_2_reg_535 = ap_phi_precharge_reg_pp3_iter2_window_2_2_reg_535.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_555_p2.read()))) {
        x_1_reg_1182 = x_1_fu_561_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        x_2_reg_1191 = x_2_fu_578_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_773_p2.read()))) {
        x_4_reg_1349 = x_4_fu_836_p2.read();
        y_assign_mid2_reg_1336 = y_assign_mid2_fu_816_p3.read();
    }
}

void my_filter_buffer::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(1, 1);
}

void my_filter_buffer::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read().range(3, 3);
}

void my_filter_buffer::thread_ap_CS_fsm_pp2_stage0() {
    ap_CS_fsm_pp2_stage0 = ap_CS_fsm.read().range(5, 5);
}

void my_filter_buffer::thread_ap_CS_fsm_pp3_stage0() {
    ap_CS_fsm_pp3_stage0 = ap_CS_fsm.read().range(7, 7);
}

void my_filter_buffer::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void my_filter_buffer::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read().range(6, 6);
}

void my_filter_buffer::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read().range(8, 8);
}

void my_filter_buffer::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(2, 2);
}

void my_filter_buffer::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read().range(4, 4);
}

void my_filter_buffer::thread_ap_condition_1006() {
    ap_condition_1006 = !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())));
}

void my_filter_buffer::thread_ap_condition_1110() {
    ap_condition_1110 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()));
}

void my_filter_buffer::thread_ap_condition_1238() {
    ap_condition_1238 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))));
}

void my_filter_buffer::thread_ap_condition_1922() {
    ap_condition_1922 = (esl_seteq<1,1,1>(out_stream_V_data_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_user_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_dest_V_1_ack_in.read(), ap_const_logic_0));
}

void my_filter_buffer::thread_ap_condition_995() {
    ap_condition_995 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1314.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1369.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0));
}

void my_filter_buffer::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read()) && 
         !esl_seteq<1,1,1>(ap_condition_1922.read(), ap_const_boolean_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_ap_phi_precharge_reg_pp3_iter0_window_2_2_reg_535() {
    ap_phi_precharge_reg_pp3_iter0_window_2_2_reg_535 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void my_filter_buffer::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read()) && 
         !esl_seteq<1,1,1>(ap_condition_1922.read(), ap_const_boolean_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void my_filter_buffer::thread_cond1_fu_673_p2() {
    cond1_fu_673_p2 = (!x3_mid2_fu_607_p3.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(x3_mid2_fu_607_p3.read() == ap_const_lv2_1);
}

void my_filter_buffer::thread_cond_fu_639_p2() {
    cond_fu_639_p2 = (!y2_phi_fu_389_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(y2_phi_fu_389_p4.read() == ap_const_lv2_1);
}

void my_filter_buffer::thread_cond_mid1_fu_633_p2() {
    cond_mid1_fu_633_p2 = (!y2_phi_fu_389_p4.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(y2_phi_fu_389_p4.read() == ap_const_lv2_0);
}

void my_filter_buffer::thread_cond_mid2_fu_645_p3() {
    cond_mid2_fu_645_p3 = (!exitcond_fu_601_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond_fu_601_p2.read()[0].to_bool())? cond_mid1_fu_633_p2.read(): cond_fu_639_p2.read());
}

void my_filter_buffer::thread_exitcond1_fu_555_p2() {
    exitcond1_fu_555_p2 = (!x_phi_fu_354_p4.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(x_phi_fu_354_p4.read() == ap_const_lv10_200);
}

void my_filter_buffer::thread_exitcond2_fu_788_p2() {
    exitcond2_fu_788_p2 = (!x_assign_phi_fu_482_p4.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(x_assign_phi_fu_482_p4.read() == ap_const_lv10_200);
}

void my_filter_buffer::thread_exitcond4_fu_572_p2() {
    exitcond4_fu_572_p2 = (!x1_phi_fu_366_p4.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(x1_phi_fu_366_p4.read() == ap_const_lv10_200);
}

void my_filter_buffer::thread_exitcond_flatten8_fu_773_p2() {
    exitcond_flatten8_fu_773_p2 = (!indvar_flatten6_reg_455.read().is_01() || !ap_const_lv19_40000.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten6_reg_455.read() == ap_const_lv19_40000);
}

void my_filter_buffer::thread_exitcond_flatten_fu_589_p2() {
    exitcond_flatten_fu_589_p2 = (!indvar_flatten_reg_374.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_374.read() == ap_const_lv3_4);
}

void my_filter_buffer::thread_exitcond_fu_601_p2() {
    exitcond_fu_601_p2 = (!x3_reg_444.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(x3_reg_444.read() == ap_const_lv2_3);
}

void my_filter_buffer::thread_grp_fu_1004_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))))) {
        grp_fu_1004_ce = ap_const_logic_1;
    } else {
        grp_fu_1004_ce = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_grp_fu_1004_p1() {
    grp_fu_1004_p1 =  (sc_lv<8>) (grp_fu_1004_p10.read());
}

void my_filter_buffer::thread_grp_fu_1004_p10() {
    grp_fu_1004_p10 = esl_zext<32,8>(kernel_7_read_reg_1409.read());
}

void my_filter_buffer::thread_grp_fu_1013_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))))) {
        grp_fu_1013_ce = ap_const_logic_1;
    } else {
        grp_fu_1013_ce = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_grp_fu_1013_p1() {
    grp_fu_1013_p1 =  (sc_lv<8>) (grp_fu_1013_p10.read());
}

void my_filter_buffer::thread_grp_fu_1013_p10() {
    grp_fu_1013_p10 = esl_zext<32,8>(kernel_8_read_reg_1414.read());
}

void my_filter_buffer::thread_grp_fu_923_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))))) {
        grp_fu_923_ce = ap_const_logic_1;
    } else {
        grp_fu_923_ce = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_grp_fu_923_p1() {
    grp_fu_923_p1 =  (sc_lv<8>) (grp_fu_923_p10.read());
}

void my_filter_buffer::thread_grp_fu_923_p10() {
    grp_fu_923_p10 = esl_zext<32,8>(kernel_0.read());
}

void my_filter_buffer::thread_grp_fu_933_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))))) {
        grp_fu_933_ce = ap_const_logic_1;
    } else {
        grp_fu_933_ce = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_grp_fu_933_p1() {
    grp_fu_933_p1 =  (sc_lv<8>) (grp_fu_933_p10.read());
}

void my_filter_buffer::thread_grp_fu_933_p10() {
    grp_fu_933_p10 = esl_zext<32,8>(kernel_1.read());
}

void my_filter_buffer::thread_grp_fu_943_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))))) {
        grp_fu_943_ce = ap_const_logic_1;
    } else {
        grp_fu_943_ce = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_grp_fu_943_p1() {
    grp_fu_943_p1 =  (sc_lv<8>) (grp_fu_943_p10.read());
}

void my_filter_buffer::thread_grp_fu_943_p10() {
    grp_fu_943_p10 = esl_zext<32,8>(kernel_2.read());
}

void my_filter_buffer::thread_grp_fu_953_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))))) {
        grp_fu_953_ce = ap_const_logic_1;
    } else {
        grp_fu_953_ce = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_grp_fu_953_p1() {
    grp_fu_953_p1 =  (sc_lv<8>) (grp_fu_953_p10.read());
}

void my_filter_buffer::thread_grp_fu_953_p10() {
    grp_fu_953_p10 = esl_zext<32,8>(kernel_3.read());
}

void my_filter_buffer::thread_grp_fu_963_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))))) {
        grp_fu_963_ce = ap_const_logic_1;
    } else {
        grp_fu_963_ce = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_grp_fu_963_p1() {
    grp_fu_963_p1 =  (sc_lv<8>) (grp_fu_963_p10.read());
}

void my_filter_buffer::thread_grp_fu_963_p10() {
    grp_fu_963_p10 = esl_zext<32,8>(kernel_4.read());
}

void my_filter_buffer::thread_grp_fu_973_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))))) {
        grp_fu_973_ce = ap_const_logic_1;
    } else {
        grp_fu_973_ce = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_grp_fu_973_p1() {
    grp_fu_973_p1 =  (sc_lv<8>) (grp_fu_973_p10.read());
}

void my_filter_buffer::thread_grp_fu_973_p10() {
    grp_fu_973_p10 = esl_zext<32,8>(kernel_5.read());
}

void my_filter_buffer::thread_grp_fu_995_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))))) {
        grp_fu_995_ce = ap_const_logic_1;
    } else {
        grp_fu_995_ce = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_grp_fu_995_p1() {
    grp_fu_995_p1 =  (sc_lv<8>) (grp_fu_995_p10.read());
}

void my_filter_buffer::thread_grp_fu_995_p10() {
    grp_fu_995_p10 = esl_zext<32,8>(kernel_6_read_reg_1404.read());
}

void my_filter_buffer::thread_icmp_fu_852_p2() {
    icmp_fu_852_p2 = (!tmp_12_fu_842_p4.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<1>(): (sc_bigint<14>(tmp_12_fu_842_p4.read()) < sc_bigint<14>(ap_const_lv14_1));
}

void my_filter_buffer::thread_in_stream_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1314.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1369.read())))) {
        in_stream_TDATA_blk_n =  (sc_logic) (in_stream_V_data_V_0_state.read()[0]);
    } else {
        in_stream_TDATA_blk_n = ap_const_logic_1;
    }
}

void my_filter_buffer::thread_in_stream_TREADY() {
    in_stream_TREADY =  (sc_logic) (in_stream_V_dest_V_0_state.read()[1]);
}

void my_filter_buffer::thread_in_stream_V_data_V_0_ack_in() {
    in_stream_V_data_V_0_ack_in =  (sc_logic) (in_stream_V_data_V_0_state.read()[1]);
}

void my_filter_buffer::thread_in_stream_V_data_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1314.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1369.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0))))) {
        in_stream_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        in_stream_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_in_stream_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_V_0_sel.read())) {
        in_stream_V_data_V_0_data_out = in_stream_V_data_V_0_payload_B.read();
    } else {
        in_stream_V_data_V_0_data_out = in_stream_V_data_V_0_payload_A.read();
    }
}

void my_filter_buffer::thread_in_stream_V_data_V_0_load_A() {
    in_stream_V_data_V_0_load_A = (in_stream_V_data_V_0_state_cmp_full.read() & ~in_stream_V_data_V_0_sel_wr.read());
}

void my_filter_buffer::thread_in_stream_V_data_V_0_load_B() {
    in_stream_V_data_V_0_load_B = (in_stream_V_data_V_0_sel_wr.read() & in_stream_V_data_V_0_state_cmp_full.read());
}

void my_filter_buffer::thread_in_stream_V_data_V_0_sel() {
    in_stream_V_data_V_0_sel = in_stream_V_data_V_0_sel_rd.read();
}

void my_filter_buffer::thread_in_stream_V_data_V_0_state_cmp_full() {
    in_stream_V_data_V_0_state_cmp_full =  (sc_logic) ((!in_stream_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in_stream_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void my_filter_buffer::thread_in_stream_V_data_V_0_vld_in() {
    in_stream_V_data_V_0_vld_in = in_stream_TVALID.read();
}

void my_filter_buffer::thread_in_stream_V_data_V_0_vld_out() {
    in_stream_V_data_V_0_vld_out =  (sc_logic) (in_stream_V_data_V_0_state.read()[0]);
}

void my_filter_buffer::thread_in_stream_V_dest_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1314.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1369.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0))))) {
        in_stream_V_dest_V_0_ack_out = ap_const_logic_1;
    } else {
        in_stream_V_dest_V_0_ack_out = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_in_stream_V_dest_V_0_vld_in() {
    in_stream_V_dest_V_0_vld_in = in_stream_TVALID.read();
}

void my_filter_buffer::thread_indvar_flatten_next7_fu_779_p2() {
    indvar_flatten_next7_fu_779_p2 = (!indvar_flatten6_reg_455.read().is_01() || !ap_const_lv19_1.is_01())? sc_lv<19>(): (sc_biguint<19>(indvar_flatten6_reg_455.read()) + sc_biguint<19>(ap_const_lv19_1));
}

void my_filter_buffer::thread_indvar_flatten_next_fu_595_p2() {
    indvar_flatten_next_fu_595_p2 = (!indvar_flatten_reg_374.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(indvar_flatten_reg_374.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void my_filter_buffer::thread_line_buf_0_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()))) {
        line_buf_0_address0 =  (sc_lv<9>) (x5_cast1_fu_824_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()))) {
        line_buf_0_address0 =  (sc_lv<9>) (tmp_cast_fu_667_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        line_buf_0_address0 =  (sc_lv<9>) (x_cast7_fu_567_p1.read());
    } else {
        line_buf_0_address0 = "XXXXXXXXX";
    }
}

void my_filter_buffer::thread_line_buf_0_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0))))) {
        line_buf_0_ce0 = ap_const_logic_1;
    } else {
        line_buf_0_ce0 = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_line_buf_0_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))))) {
        line_buf_0_ce1 = ap_const_logic_1;
    } else {
        line_buf_0_ce1 = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_line_buf_0_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0))))) {
        line_buf_0_we0 = ap_const_logic_1;
    } else {
        line_buf_0_we0 = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_line_buf_0_we1() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1314.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())))))) {
        line_buf_0_we1 = ap_const_logic_1;
    } else {
        line_buf_0_we1 = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_line_buf_1_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()))) {
        line_buf_1_address0 =  (sc_lv<9>) (x5_cast1_fu_824_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()))) {
        line_buf_1_address0 =  (sc_lv<9>) (tmp_cast_fu_667_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        line_buf_1_address0 =  (sc_lv<9>) (x1_cast6_fu_584_p1.read());
    } else {
        line_buf_1_address0 = "XXXXXXXXX";
    }
}

void my_filter_buffer::thread_line_buf_1_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0))))) {
        line_buf_1_ce0 = ap_const_logic_1;
    } else {
        line_buf_1_ce0 = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_line_buf_1_ce1() {
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()))) {
        line_buf_1_ce1 = ap_const_logic_1;
    } else {
        line_buf_1_ce1 = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_line_buf_1_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0))))) {
        line_buf_1_we0 = ap_const_logic_1;
    } else {
        line_buf_1_we0 = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_line_buf_1_we1() {
    if (((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1314.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read())))) {
        line_buf_1_we1 = ap_const_logic_1;
    } else {
        line_buf_1_we1 = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_or_cond1_i6_i_fu_1129_p2() {
    or_cond1_i6_i_fu_1129_p2 = (ap_pipeline_reg_pp3_iter5_tmp_3_i_i_reg_1342.read() & tmp_i2_i_mid2_fu_1124_p2.read());
}

void my_filter_buffer::thread_or_cond1_i_i_fu_1019_p2() {
    or_cond1_i_i_fu_1019_p2 = (ap_pipeline_reg_pp3_iter2_tmp_i_i_mid2_reg_1329.read() & ap_pipeline_reg_pp3_iter2_tmp_3_i_i_reg_1342.read());
}

void my_filter_buffer::thread_out_stream_TDATA() {
    out_stream_TDATA = out_stream_V_data_V_1_data_out.read();
}

void my_filter_buffer::thread_out_stream_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read())))) {
        out_stream_TDATA_blk_n =  (sc_logic) (out_stream_V_data_V_1_state.read()[1]);
    } else {
        out_stream_TDATA_blk_n = ap_const_logic_1;
    }
}

void my_filter_buffer::thread_out_stream_TDEST() {
    out_stream_TDEST = out_stream_V_dest_V_1_data_out.read();
}

void my_filter_buffer::thread_out_stream_TID() {
    out_stream_TID = out_stream_V_id_V_1_data_out.read();
}

void my_filter_buffer::thread_out_stream_TKEEP() {
    out_stream_TKEEP = out_stream_V_keep_V_1_data_out.read();
}

void my_filter_buffer::thread_out_stream_TLAST() {
    out_stream_TLAST = out_stream_V_last_V_1_data_out.read();
}

void my_filter_buffer::thread_out_stream_TSTRB() {
    out_stream_TSTRB = out_stream_V_strb_V_1_data_out.read();
}

void my_filter_buffer::thread_out_stream_TUSER() {
    out_stream_TUSER = out_stream_V_user_V_1_data_out.read();
}

void my_filter_buffer::thread_out_stream_TVALID() {
    out_stream_TVALID =  (sc_logic) (out_stream_V_dest_V_1_state.read()[0]);
}

void my_filter_buffer::thread_out_stream_V_data_V_1_ack_in() {
    out_stream_V_data_V_1_ack_in =  (sc_logic) (out_stream_V_data_V_1_state.read()[1]);
}

void my_filter_buffer::thread_out_stream_V_data_V_1_ack_out() {
    out_stream_V_data_V_1_ack_out = out_stream_TREADY.read();
}

void my_filter_buffer::thread_out_stream_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_sel.read())) {
        out_stream_V_data_V_1_data_out = out_stream_V_data_V_1_payload_B.read();
    } else {
        out_stream_V_data_V_1_data_out = out_stream_V_data_V_1_payload_A.read();
    }
}

void my_filter_buffer::thread_out_stream_V_data_V_1_load_A() {
    out_stream_V_data_V_1_load_A = (out_stream_V_data_V_1_state_cmp_full.read() & ~out_stream_V_data_V_1_sel_wr.read());
}

void my_filter_buffer::thread_out_stream_V_data_V_1_load_B() {
    out_stream_V_data_V_1_load_B = (out_stream_V_data_V_1_sel_wr.read() & out_stream_V_data_V_1_state_cmp_full.read());
}

void my_filter_buffer::thread_out_stream_V_data_V_1_sel() {
    out_stream_V_data_V_1_sel = out_stream_V_data_V_1_sel_rd.read();
}

void my_filter_buffer::thread_out_stream_V_data_V_1_state_cmp_full() {
    out_stream_V_data_V_1_state_cmp_full =  (sc_logic) ((!out_stream_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_stream_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void my_filter_buffer::thread_out_stream_V_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))))) {
        out_stream_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_out_stream_V_data_V_1_vld_out() {
    out_stream_V_data_V_1_vld_out =  (sc_logic) (out_stream_V_data_V_1_state.read()[0]);
}

void my_filter_buffer::thread_out_stream_V_dest_V_1_ack_in() {
    out_stream_V_dest_V_1_ack_in =  (sc_logic) (out_stream_V_dest_V_1_state.read()[1]);
}

void my_filter_buffer::thread_out_stream_V_dest_V_1_ack_out() {
    out_stream_V_dest_V_1_ack_out = out_stream_TREADY.read();
}

void my_filter_buffer::thread_out_stream_V_dest_V_1_data_out() {
    out_stream_V_dest_V_1_data_out = ap_const_lv6_0;
}

void my_filter_buffer::thread_out_stream_V_dest_V_1_sel() {
    out_stream_V_dest_V_1_sel = out_stream_V_dest_V_1_sel_rd.read();
}

void my_filter_buffer::thread_out_stream_V_dest_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))))) {
        out_stream_V_dest_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_V_dest_V_1_vld_in = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_out_stream_V_dest_V_1_vld_out() {
    out_stream_V_dest_V_1_vld_out =  (sc_logic) (out_stream_V_dest_V_1_state.read()[0]);
}

void my_filter_buffer::thread_out_stream_V_id_V_1_ack_in() {
    out_stream_V_id_V_1_ack_in =  (sc_logic) (out_stream_V_id_V_1_state.read()[1]);
}

void my_filter_buffer::thread_out_stream_V_id_V_1_ack_out() {
    out_stream_V_id_V_1_ack_out = out_stream_TREADY.read();
}

void my_filter_buffer::thread_out_stream_V_id_V_1_data_out() {
    out_stream_V_id_V_1_data_out = ap_const_lv5_0;
}

void my_filter_buffer::thread_out_stream_V_id_V_1_sel() {
    out_stream_V_id_V_1_sel = out_stream_V_id_V_1_sel_rd.read();
}

void my_filter_buffer::thread_out_stream_V_id_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))))) {
        out_stream_V_id_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_V_id_V_1_vld_in = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_out_stream_V_id_V_1_vld_out() {
    out_stream_V_id_V_1_vld_out =  (sc_logic) (out_stream_V_id_V_1_state.read()[0]);
}

void my_filter_buffer::thread_out_stream_V_keep_V_1_ack_in() {
    out_stream_V_keep_V_1_ack_in =  (sc_logic) (out_stream_V_keep_V_1_state.read()[1]);
}

void my_filter_buffer::thread_out_stream_V_keep_V_1_ack_out() {
    out_stream_V_keep_V_1_ack_out = out_stream_TREADY.read();
}

void my_filter_buffer::thread_out_stream_V_keep_V_1_data_out() {
    out_stream_V_keep_V_1_data_out = ap_const_lv4_1;
}

void my_filter_buffer::thread_out_stream_V_keep_V_1_sel() {
    out_stream_V_keep_V_1_sel = out_stream_V_keep_V_1_sel_rd.read();
}

void my_filter_buffer::thread_out_stream_V_keep_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))))) {
        out_stream_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_out_stream_V_keep_V_1_vld_out() {
    out_stream_V_keep_V_1_vld_out =  (sc_logic) (out_stream_V_keep_V_1_state.read()[0]);
}

void my_filter_buffer::thread_out_stream_V_last_V_1_ack_in() {
    out_stream_V_last_V_1_ack_in =  (sc_logic) (out_stream_V_last_V_1_state.read()[1]);
}

void my_filter_buffer::thread_out_stream_V_last_V_1_ack_out() {
    out_stream_V_last_V_1_ack_out = out_stream_TREADY.read();
}

void my_filter_buffer::thread_out_stream_V_last_V_1_data_out() {
    out_stream_V_last_V_1_data_out = ap_const_lv1_0;
}

void my_filter_buffer::thread_out_stream_V_last_V_1_sel() {
    out_stream_V_last_V_1_sel = out_stream_V_last_V_1_sel_rd.read();
}

void my_filter_buffer::thread_out_stream_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))))) {
        out_stream_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_out_stream_V_last_V_1_vld_out() {
    out_stream_V_last_V_1_vld_out =  (sc_logic) (out_stream_V_last_V_1_state.read()[0]);
}

void my_filter_buffer::thread_out_stream_V_strb_V_1_ack_in() {
    out_stream_V_strb_V_1_ack_in =  (sc_logic) (out_stream_V_strb_V_1_state.read()[1]);
}

void my_filter_buffer::thread_out_stream_V_strb_V_1_ack_out() {
    out_stream_V_strb_V_1_ack_out = out_stream_TREADY.read();
}

void my_filter_buffer::thread_out_stream_V_strb_V_1_data_out() {
    out_stream_V_strb_V_1_data_out = ap_const_lv4_1;
}

void my_filter_buffer::thread_out_stream_V_strb_V_1_sel() {
    out_stream_V_strb_V_1_sel = out_stream_V_strb_V_1_sel_rd.read();
}

void my_filter_buffer::thread_out_stream_V_strb_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))))) {
        out_stream_V_strb_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_V_strb_V_1_vld_in = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_out_stream_V_strb_V_1_vld_out() {
    out_stream_V_strb_V_1_vld_out =  (sc_logic) (out_stream_V_strb_V_1_state.read()[0]);
}

void my_filter_buffer::thread_out_stream_V_user_V_1_ack_in() {
    out_stream_V_user_V_1_ack_in =  (sc_logic) (out_stream_V_user_V_1_state.read()[1]);
}

void my_filter_buffer::thread_out_stream_V_user_V_1_ack_out() {
    out_stream_V_user_V_1_ack_out = out_stream_TREADY.read();
}

void my_filter_buffer::thread_out_stream_V_user_V_1_data_out() {
    out_stream_V_user_V_1_data_out = ap_const_lv2_1;
}

void my_filter_buffer::thread_out_stream_V_user_V_1_sel() {
    out_stream_V_user_V_1_sel = out_stream_V_user_V_1_sel_rd.read();
}

void my_filter_buffer::thread_out_stream_V_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))))) {
        out_stream_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void my_filter_buffer::thread_out_stream_V_user_V_1_vld_out() {
    out_stream_V_user_V_1_vld_out =  (sc_logic) (out_stream_V_user_V_1_state.read()[0]);
}

void my_filter_buffer::thread_p_i2_i_fu_1056_p2() {
    p_i2_i_fu_1056_p2 = (ap_pipeline_reg_pp3_iter3_tmp_i_i_mid2_reg_1329.read() & rev_fu_1050_p2.read());
}

void my_filter_buffer::thread_read_count_fu_858_p2() {
    read_count_fu_858_p2 = (!read_count_1_fu_186.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(read_count_1_fu_186.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void my_filter_buffer::thread_result_2_0_1_i_fu_1037_p3() {
    result_2_0_1_i_fu_1037_p3 = (!ap_pipeline_reg_pp3_iter3_tmp_i_i_mid2_reg_1329.read()[0].is_01())? sc_lv<32>(): ((ap_pipeline_reg_pp3_iter3_tmp_i_i_mid2_reg_1329.read()[0].to_bool())? result_3_0_1_i_reg_1479.read(): ap_const_lv32_0);
}

void my_filter_buffer::thread_result_2_0_2_i_fu_1066_p3() {
    result_2_0_2_i_fu_1066_p3 = (!p_i2_i_fu_1056_p2.read()[0].is_01())? sc_lv<32>(): ((p_i2_i_fu_1056_p2.read()[0].to_bool())? result_3_0_2_i_fu_1061_p2.read(): result_2_0_1_i_fu_1037_p3.read());
}

void my_filter_buffer::thread_result_2_1_2_i_fu_1106_p3() {
    result_2_1_2_i_fu_1106_p3 = (!tmp_10_fu_1093_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_10_fu_1093_p3.read()[0].to_bool())? result_3_1_1_i_fu_1084_p2.read(): result_3_1_2_i_fu_1101_p2.read());
}

void my_filter_buffer::thread_result_2_1_i_fu_1079_p3() {
    result_2_1_i_fu_1079_p3 = (!ap_pipeline_reg_pp3_iter4_tmp_3_i_i_reg_1342.read()[0].is_01())? sc_lv<32>(): ((ap_pipeline_reg_pp3_iter4_tmp_3_i_i_reg_1342.read()[0].to_bool())? result_3_1_i_reg_1509.read(): result_2_0_2_i_reg_1504.read());
}

void my_filter_buffer::thread_result_2_2_1_i_fu_1145_p3() {
    result_2_2_1_i_fu_1145_p3 = (!ap_pipeline_reg_pp3_iter5_tmp_i2_i_mid2_v_reg_1398.read()[0].is_01())? sc_lv<32>(): ((ap_pipeline_reg_pp3_iter5_tmp_i2_i_mid2_v_reg_1398.read()[0].to_bool())? result_2_1_2_i_reg_1529.read(): result_3_2_1_i_fu_1140_p2.read());
}

void my_filter_buffer::thread_result_2_2_i_fu_1134_p3() {
    result_2_2_i_fu_1134_p3 = (!or_cond1_i6_i_fu_1129_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond1_i6_i_fu_1129_p2.read()[0].to_bool())? result_3_2_i_reg_1535.read(): result_2_1_2_i_reg_1529.read());
}

void my_filter_buffer::thread_result_2_i_fu_1023_p3() {
    result_2_i_fu_1023_p3 = (!or_cond1_i_i_fu_1019_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond1_i_i_fu_1019_p2.read()[0].to_bool())? grp_fu_923_p2.read(): ap_const_lv32_0);
}

void my_filter_buffer::thread_result_3_0_1_i_fu_1031_p2() {
    result_3_0_1_i_fu_1031_p2 = (!grp_fu_933_p2.read().is_01() || !result_2_i_fu_1023_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(grp_fu_933_p2.read()) + sc_biguint<32>(result_2_i_fu_1023_p3.read()));
}

void my_filter_buffer::thread_result_3_0_2_i_fu_1061_p2() {
    result_3_0_2_i_fu_1061_p2 = (!tmp_9_0_2_i_reg_1484.read().is_01() || !result_2_0_1_i_fu_1037_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_9_0_2_i_reg_1484.read()) + sc_biguint<32>(result_2_0_1_i_fu_1037_p3.read()));
}

void my_filter_buffer::thread_result_3_1_1_i_fu_1084_p2() {
    result_3_1_1_i_fu_1084_p2 = (!ap_pipeline_reg_pp3_iter4_tmp_9_1_1_i_reg_1494.read().is_01() || !result_2_1_i_fu_1079_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_pipeline_reg_pp3_iter4_tmp_9_1_1_i_reg_1494.read()) + sc_biguint<32>(result_2_1_i_fu_1079_p3.read()));
}

void my_filter_buffer::thread_result_3_1_2_i_fu_1101_p2() {
    result_3_1_2_i_fu_1101_p2 = (!ap_pipeline_reg_pp3_iter4_tmp_9_1_2_i_reg_1499.read().is_01() || !result_3_1_1_i_fu_1084_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_pipeline_reg_pp3_iter4_tmp_9_1_2_i_reg_1499.read()) + sc_biguint<32>(result_3_1_1_i_fu_1084_p2.read()));
}

void my_filter_buffer::thread_result_3_1_i_fu_1074_p2() {
    result_3_1_i_fu_1074_p2 = (!tmp_9_1_i_reg_1489.read().is_01() || !result_2_0_2_i_fu_1066_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_9_1_i_reg_1489.read()) + sc_biguint<32>(result_2_0_2_i_fu_1066_p3.read()));
}

void my_filter_buffer::thread_result_3_2_1_i_fu_1140_p2() {
    result_3_2_1_i_fu_1140_p2 = (!ap_pipeline_reg_pp3_iter5_tmp_9_2_1_i_reg_1519.read().is_01() || !result_2_2_i_fu_1134_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_pipeline_reg_pp3_iter5_tmp_9_2_1_i_reg_1519.read()) + sc_biguint<32>(result_2_2_i_fu_1134_p3.read()));
}

void my_filter_buffer::thread_result_3_2_2_i_fu_1164_p2() {
    result_3_2_2_i_fu_1164_p2 = (!ap_pipeline_reg_pp3_iter5_tmp_9_2_2_i_reg_1524.read().is_01() || !result_2_2_1_i_fu_1145_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_pipeline_reg_pp3_iter5_tmp_9_2_2_i_reg_1524.read()) + sc_biguint<32>(result_2_2_1_i_fu_1145_p3.read()));
}

void my_filter_buffer::thread_result_3_2_i_fu_1114_p2() {
    result_3_2_i_fu_1114_p2 = (!tmp_9_2_i_reg_1514.read().is_01() || !result_2_1_2_i_fu_1106_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_9_2_i_reg_1514.read()) + sc_biguint<32>(result_2_1_2_i_fu_1106_p3.read()));
}

void my_filter_buffer::thread_rev_fu_1050_p2() {
    rev_fu_1050_p2 = (tmp_9_fu_1043_p3.read() ^ ap_const_lv1_1);
}

void my_filter_buffer::thread_tmp_10_fu_1093_p3() {
    tmp_10_fu_1093_p3 = tmp_5_fu_1089_p2.read().range(9, 9);
}

void my_filter_buffer::thread_tmp_11_fu_1156_p3() {
    tmp_11_fu_1156_p3 = tmp_8_fu_1151_p2.read().range(9, 9);
}

void my_filter_buffer::thread_tmp_12_fu_842_p4() {
    tmp_12_fu_842_p4 = read_count_1_fu_186.read().range(31, 18);
}

void my_filter_buffer::thread_tmp_1_fu_629_p1() {
    tmp_1_fu_629_p1 = tmp_3_mid2_v_fu_621_p3.read().range(1-1, 0);
}

void my_filter_buffer::thread_tmp_3_i_i_fu_830_p2() {
    tmp_3_i_i_fu_830_p2 = (!x_assign_mid2_fu_794_p3.read().is_01() || !ap_const_lv10_0.is_01())? sc_lv<1>(): sc_lv<1>(x_assign_mid2_fu_794_p3.read() != ap_const_lv10_0);
}

void my_filter_buffer::thread_tmp_3_mid2_v_fu_621_p3() {
    tmp_3_mid2_v_fu_621_p3 = (!exitcond_fu_601_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_fu_601_p2.read()[0].to_bool())? y9_fu_615_p2.read(): y2_phi_fu_389_p4.read());
}

void my_filter_buffer::thread_tmp_5_fu_1089_p2() {
    tmp_5_fu_1089_p2 = (ap_pipeline_reg_pp3_iter4_y_assign_mid2_reg_1336.read() | ap_pipeline_reg_pp3_iter4_x_4_reg_1349.read());
}

void my_filter_buffer::thread_tmp_7_fu_905_p3() {
    tmp_7_fu_905_p3 = y_assign_1_mid1_fu_899_p2.read().range(9, 9);
}

void my_filter_buffer::thread_tmp_8_fu_1151_p2() {
    tmp_8_fu_1151_p2 = (y_assign_1_mid2_fu_1119_p3.read() | ap_pipeline_reg_pp3_iter5_x_4_reg_1349.read());
}

void my_filter_buffer::thread_tmp_9_fu_1043_p3() {
    tmp_9_fu_1043_p3 = ap_pipeline_reg_pp3_iter3_x_4_reg_1349.read().range(9, 9);
}

void my_filter_buffer::thread_tmp_cast8_fu_663_p1() {
    tmp_cast8_fu_663_p1 = esl_sext<9,3>(tmp_s_fu_657_p2.read());
}

void my_filter_buffer::thread_tmp_cast_fu_667_p1() {
    tmp_cast_fu_667_p1 = esl_zext<32,9>(tmp_cast8_fu_663_p1.read());
}

void my_filter_buffer::thread_tmp_i2_i_mid2_fu_1124_p2() {
    tmp_i2_i_mid2_fu_1124_p2 = (ap_pipeline_reg_pp3_iter5_tmp_i2_i_mid2_v_reg_1398.read() ^ ap_const_lv1_1);
}

void my_filter_buffer::thread_tmp_i2_i_mid2_v_fu_913_p3() {
    tmp_i2_i_mid2_v_fu_913_p3 = (!exitcond2_reg_1323.read()[0].is_01())? sc_lv<1>(): ((exitcond2_reg_1323.read()[0].to_bool())? tmp_7_fu_905_p3.read(): tmp_3_reg_1309.read());
}

void my_filter_buffer::thread_tmp_i_i_fu_753_p2() {
    tmp_i_i_fu_753_p2 = (!y_assign_phi_fu_470_p4.read().is_01() || !ap_const_lv10_0.is_01())? sc_lv<1>(): sc_lv<1>(y_assign_phi_fu_470_p4.read() != ap_const_lv10_0);
}

void my_filter_buffer::thread_tmp_i_i_mid1_fu_802_p2() {
    tmp_i_i_mid1_fu_802_p2 = (!y_fu_759_p2.read().is_01() || !ap_const_lv10_0.is_01())? sc_lv<1>(): sc_lv<1>(y_fu_759_p2.read() != ap_const_lv10_0);
}

void my_filter_buffer::thread_tmp_i_i_mid2_fu_808_p3() {
    tmp_i_i_mid2_fu_808_p3 = (!exitcond2_fu_788_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond2_fu_788_p2.read()[0].to_bool())? tmp_i_i_mid1_fu_802_p2.read(): tmp_i_i_fu_753_p2.read());
}

void my_filter_buffer::thread_tmp_s_fu_657_p2() {
    tmp_s_fu_657_p2 = (!ap_const_lv3_5.is_01() || !x3_cast4_cast_fu_653_p1.read().is_01())? sc_lv<3>(): (sc_bigint<3>(ap_const_lv3_5) + sc_biguint<3>(x3_cast4_cast_fu_653_p1.read()));
}

void my_filter_buffer::thread_val_out_fu_1169_p3() {
    val_out_fu_1169_p3 = (!tmp_11_fu_1156_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_11_fu_1156_p3.read()[0].to_bool())? result_2_2_1_i_fu_1145_p3.read(): result_3_2_2_i_fu_1164_p2.read());
}

void my_filter_buffer::thread_window_1_0_phi_fu_503_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1314.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()))) {
        window_1_0_phi_fu_503_p4 = window_1_1_reg_489.read();
    } else {
        window_1_0_phi_fu_503_p4 = window_1_0_reg_500.read();
    }
}

void my_filter_buffer::thread_window_1_1_2_fu_685_p3() {
    window_1_1_2_fu_685_p3 = (!tmp_1_reg_1210.read()[0].is_01())? sc_lv<32>(): ((tmp_1_reg_1210.read()[0].to_bool())? line_buf_0_q0.read(): line_buf_1_q0.read());
}

void my_filter_buffer::thread_window_1_1_phi_fu_492_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1314.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()))) {
        window_1_1_phi_fu_492_p4 = window_1_2_reg_1449.read();
    } else {
        window_1_1_phi_fu_492_p4 = window_1_1_reg_489.read();
    }
}

void my_filter_buffer::thread_window_2_0_phi_fu_526_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1314.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()))) {
        window_2_0_phi_fu_526_p4 = window_2_1_reg_512.read();
    } else {
        window_2_0_phi_fu_526_p4 = window_2_0_reg_523.read();
    }
}

void my_filter_buffer::thread_window_2_1_phi_fu_515_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1314.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()))) {
        window_2_1_phi_fu_515_p4 = window_2_2_reg_535.read();
    } else {
        window_2_1_phi_fu_515_p4 = window_2_1_reg_512.read();
    }
}

void my_filter_buffer::thread_window_2_2_1_11_fu_692_p3() {
    window_2_2_1_11_fu_692_p3 = (!cond1_reg_1233.read()[0].is_01())? sc_lv<32>(): ((cond1_reg_1233.read()[0].to_bool())? window_1_2_1_reg_420.read(): window_1_1_2_fu_685_p3.read());
}

void my_filter_buffer::thread_window_2_2_2_fu_699_p3() {
    window_2_2_2_fu_699_p3 = (!cond1_reg_1233.read()[0].is_01())? sc_lv<32>(): ((cond1_reg_1233.read()[0].to_bool())? window_1_1_2_fu_685_p3.read(): window_1_1_1_reg_432.read());
}

void my_filter_buffer::thread_window_2_2_4_fu_706_p3() {
    window_2_2_4_fu_706_p3 = (!cond1_reg_1233.read()[0].is_01())? sc_lv<32>(): ((cond1_reg_1233.read()[0].to_bool())? window_2_2_1_reg_396.read(): window_1_1_2_fu_685_p3.read());
}

void my_filter_buffer::thread_window_2_2_5_fu_713_p3() {
    window_2_2_5_fu_713_p3 = (!cond1_reg_1233.read()[0].is_01())? sc_lv<32>(): ((cond1_reg_1233.read()[0].to_bool())? window_1_1_2_fu_685_p3.read(): window_2_1_1_reg_408.read());
}

void my_filter_buffer::thread_window_2_2_6_fu_720_p3() {
    window_2_2_6_fu_720_p3 = (!cond_mid2_reg_1215.read()[0].is_01())? sc_lv<32>(): ((cond_mid2_reg_1215.read()[0].to_bool())? window_2_2_1_reg_396.read(): window_2_2_4_fu_706_p3.read());
}

void my_filter_buffer::thread_window_2_2_7_fu_727_p3() {
    window_2_2_7_fu_727_p3 = (!cond_mid2_reg_1215.read()[0].is_01())? sc_lv<32>(): ((cond_mid2_reg_1215.read()[0].to_bool())? window_2_1_1_reg_408.read(): window_2_2_5_fu_713_p3.read());
}

void my_filter_buffer::thread_window_2_2_8_fu_734_p3() {
    window_2_2_8_fu_734_p3 = (!cond_mid2_reg_1215.read()[0].is_01())? sc_lv<32>(): ((cond_mid2_reg_1215.read()[0].to_bool())? window_2_2_1_11_fu_692_p3.read(): window_1_2_1_reg_420.read());
}

void my_filter_buffer::thread_window_2_2_9_fu_741_p3() {
    window_2_2_9_fu_741_p3 = (!cond_mid2_reg_1215.read()[0].is_01())? sc_lv<32>(): ((cond_mid2_reg_1215.read()[0].to_bool())? window_2_2_2_fu_699_p3.read(): window_1_1_1_reg_432.read());
}

void my_filter_buffer::thread_x1_cast6_fu_584_p1() {
    x1_cast6_fu_584_p1 = esl_zext<32,10>(x1_reg_362.read());
}

void my_filter_buffer::thread_x1_phi_fu_366_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()))) {
        x1_phi_fu_366_p4 = x_2_reg_1191.read();
    } else {
        x1_phi_fu_366_p4 = x1_reg_362.read();
    }
}

void my_filter_buffer::thread_x3_cast4_cast_fu_653_p1() {
    x3_cast4_cast_fu_653_p1 = esl_zext<3,2>(x3_mid2_fu_607_p3.read());
}

void my_filter_buffer::thread_x3_mid2_fu_607_p3() {
    x3_mid2_fu_607_p3 = (!exitcond_fu_601_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_fu_601_p2.read()[0].to_bool())? ap_const_lv2_1: x3_reg_444.read());
}

void my_filter_buffer::thread_x5_cast1_fu_824_p1() {
    x5_cast1_fu_824_p1 = esl_zext<32,10>(x_assign_mid2_fu_794_p3.read());
}

void my_filter_buffer::thread_x_1_fu_561_p2() {
    x_1_fu_561_p2 = (!x_phi_fu_354_p4.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(x_phi_fu_354_p4.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void my_filter_buffer::thread_x_2_fu_578_p2() {
    x_2_fu_578_p2 = (!x1_phi_fu_366_p4.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(x1_phi_fu_366_p4.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void my_filter_buffer::thread_x_3_fu_679_p2() {
    x_3_fu_679_p2 = (!ap_const_lv2_1.is_01() || !x3_mid2_fu_607_p3.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(x3_mid2_fu_607_p3.read()));
}

void my_filter_buffer::thread_x_4_fu_836_p2() {
    x_4_fu_836_p2 = (!x_assign_mid2_fu_794_p3.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(x_assign_mid2_fu_794_p3.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void my_filter_buffer::thread_x_assign_mid2_fu_794_p3() {
    x_assign_mid2_fu_794_p3 = (!exitcond2_fu_788_p2.read()[0].is_01())? sc_lv<10>(): ((exitcond2_fu_788_p2.read()[0].to_bool())? ap_const_lv10_0: x_assign_phi_fu_482_p4.read());
}

void my_filter_buffer::thread_x_assign_phi_fu_482_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1314.read()))) {
        x_assign_phi_fu_482_p4 = x_4_reg_1349.read();
    } else {
        x_assign_phi_fu_482_p4 = x_assign_reg_478.read();
    }
}

void my_filter_buffer::thread_x_cast7_fu_567_p1() {
    x_cast7_fu_567_p1 = esl_zext<32,10>(x_reg_350.read());
}

void my_filter_buffer::thread_x_phi_fu_354_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()))) {
        x_phi_fu_354_p4 = x_1_reg_1182.read();
    } else {
        x_phi_fu_354_p4 = x_reg_350.read();
    }
}

void my_filter_buffer::thread_y2_phi_fu_389_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1196.read()))) {
        y2_phi_fu_389_p4 = tmp_3_mid2_v_reg_1205.read();
    } else {
        y2_phi_fu_389_p4 = y2_reg_385.read();
    }
}

void my_filter_buffer::thread_y9_fu_615_p2() {
    y9_fu_615_p2 = (!ap_const_lv2_1.is_01() || !y2_phi_fu_389_p4.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(y2_phi_fu_389_p4.read()));
}

void my_filter_buffer::thread_y_assign_1_mid1_fu_899_p2() {
    y_assign_1_mid1_fu_899_p2 = (!y_assign_reg_466.read().is_01() || !ap_const_lv10_2.is_01())? sc_lv<10>(): (sc_biguint<10>(y_assign_reg_466.read()) + sc_biguint<10>(ap_const_lv10_2));
}

void my_filter_buffer::thread_y_assign_1_mid2_fu_1119_p3() {
    y_assign_1_mid2_fu_1119_p3 = (!ap_pipeline_reg_pp3_iter5_exitcond2_reg_1323.read()[0].is_01())? sc_lv<10>(): ((ap_pipeline_reg_pp3_iter5_exitcond2_reg_1323.read()[0].to_bool())? ap_pipeline_reg_pp3_iter5_y_assign_1_mid1_reg_1393.read(): ap_pipeline_reg_pp3_iter5_y_reg_1304.read());
}

void my_filter_buffer::thread_y_assign_mid2_fu_816_p3() {
    y_assign_mid2_fu_816_p3 = (!exitcond2_fu_788_p2.read()[0].is_01())? sc_lv<10>(): ((exitcond2_fu_788_p2.read()[0].to_bool())? y_fu_759_p2.read(): y_assign_phi_fu_470_p4.read());
}

void my_filter_buffer::thread_y_assign_phi_fu_470_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1314.read()))) {
        y_assign_phi_fu_470_p4 = y_assign_mid2_reg_1336.read();
    } else {
        y_assign_phi_fu_470_p4 = y_assign_reg_466.read();
    }
}

void my_filter_buffer::thread_y_fu_759_p2() {
    y_fu_759_p2 = (!y_assign_phi_fu_470_p4.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(y_assign_phi_fu_470_p4.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void my_filter_buffer::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_555_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_555_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 8 : 
            if (!(!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_572_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && esl_seteq<1,1,1>(in_stream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_572_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            break;
        case 32 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_589_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            break;
        case 128 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read())) && !(!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read())) || (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_995.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter5_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_exitcond_flatten8_reg_1314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_in.read()))) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read())))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            }
            break;
        case 256 : 
            if (!esl_seteq<1,1,1>(ap_condition_1922.read(), ap_const_boolean_1)) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state19;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXX";
            break;
    }
}

void my_filter_buffer::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_TDATA\" :  \"" << in_stream_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_TVALID\" :  \"" << in_stream_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"in_stream_TREADY\" :  \"" << in_stream_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_TKEEP\" :  \"" << in_stream_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_TSTRB\" :  \"" << in_stream_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_TUSER\" :  \"" << in_stream_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_TLAST\" :  \"" << in_stream_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_TID\" :  \"" << in_stream_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_TDEST\" :  \"" << in_stream_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TDATA\" :  \"" << out_stream_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TVALID\" :  \"" << out_stream_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_stream_TREADY\" :  \"" << out_stream_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TKEEP\" :  \"" << out_stream_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TSTRB\" :  \"" << out_stream_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TUSER\" :  \"" << out_stream_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TLAST\" :  \"" << out_stream_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TID\" :  \"" << out_stream_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TDEST\" :  \"" << out_stream_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_AWVALID\" :  \"" << s_axi_CTRL_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_AWREADY\" :  \"" << s_axi_CTRL_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_AWADDR\" :  \"" << s_axi_CTRL_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WVALID\" :  \"" << s_axi_CTRL_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_WREADY\" :  \"" << s_axi_CTRL_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WDATA\" :  \"" << s_axi_CTRL_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WSTRB\" :  \"" << s_axi_CTRL_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_ARVALID\" :  \"" << s_axi_CTRL_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_ARREADY\" :  \"" << s_axi_CTRL_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_ARADDR\" :  \"" << s_axi_CTRL_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RVALID\" :  \"" << s_axi_CTRL_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_RREADY\" :  \"" << s_axi_CTRL_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RDATA\" :  \"" << s_axi_CTRL_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RRESP\" :  \"" << s_axi_CTRL_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BVALID\" :  \"" << s_axi_CTRL_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BREADY\" :  \"" << s_axi_CTRL_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BRESP\" :  \"" << s_axi_CTRL_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_KERNEL_BUS_AWVALID\" :  \"" << s_axi_KERNEL_BUS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_KERNEL_BUS_AWREADY\" :  \"" << s_axi_KERNEL_BUS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_KERNEL_BUS_AWADDR\" :  \"" << s_axi_KERNEL_BUS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_KERNEL_BUS_WVALID\" :  \"" << s_axi_KERNEL_BUS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_KERNEL_BUS_WREADY\" :  \"" << s_axi_KERNEL_BUS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_KERNEL_BUS_WDATA\" :  \"" << s_axi_KERNEL_BUS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_KERNEL_BUS_WSTRB\" :  \"" << s_axi_KERNEL_BUS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_KERNEL_BUS_ARVALID\" :  \"" << s_axi_KERNEL_BUS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_KERNEL_BUS_ARREADY\" :  \"" << s_axi_KERNEL_BUS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_KERNEL_BUS_ARADDR\" :  \"" << s_axi_KERNEL_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_KERNEL_BUS_RVALID\" :  \"" << s_axi_KERNEL_BUS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_KERNEL_BUS_RREADY\" :  \"" << s_axi_KERNEL_BUS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_KERNEL_BUS_RDATA\" :  \"" << s_axi_KERNEL_BUS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_KERNEL_BUS_RRESP\" :  \"" << s_axi_KERNEL_BUS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_KERNEL_BUS_BVALID\" :  \"" << s_axi_KERNEL_BUS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_KERNEL_BUS_BREADY\" :  \"" << s_axi_KERNEL_BUS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_KERNEL_BUS_BRESP\" :  \"" << s_axi_KERNEL_BUS_BRESP.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

