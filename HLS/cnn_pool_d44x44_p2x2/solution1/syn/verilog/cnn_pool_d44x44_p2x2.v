// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cnn_pool_d44x44_p2x2,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.220000,HLS_SYN_LAT=1996,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=811,HLS_SYN_LUT=1093}" *)

module cnn_pool_d44x44_p2x2 (
        ap_clk,
        ap_rst_n,
        inStream_TDATA,
        inStream_TVALID,
        inStream_TREADY,
        inStream_TKEEP,
        inStream_TSTRB,
        inStream_TUSER,
        inStream_TLAST,
        inStream_TID,
        inStream_TDEST,
        outStream_TDATA,
        outStream_TVALID,
        outStream_TREADY,
        outStream_TKEEP,
        outStream_TSTRB,
        outStream_TUSER,
        outStream_TLAST,
        outStream_TID,
        outStream_TDEST,
        s_axi_CTRL_AWVALID,
        s_axi_CTRL_AWREADY,
        s_axi_CTRL_AWADDR,
        s_axi_CTRL_WVALID,
        s_axi_CTRL_WREADY,
        s_axi_CTRL_WDATA,
        s_axi_CTRL_WSTRB,
        s_axi_CTRL_ARVALID,
        s_axi_CTRL_ARREADY,
        s_axi_CTRL_ARADDR,
        s_axi_CTRL_RVALID,
        s_axi_CTRL_RREADY,
        s_axi_CTRL_RDATA,
        s_axi_CTRL_RRESP,
        s_axi_CTRL_BVALID,
        s_axi_CTRL_BREADY,
        s_axi_CTRL_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 9'b1;
parameter    ap_ST_fsm_pp0_stage0 = 9'b10;
parameter    ap_ST_fsm_state4 = 9'b100;
parameter    ap_ST_fsm_pp1_stage0 = 9'b1000;
parameter    ap_ST_fsm_state7 = 9'b10000;
parameter    ap_ST_fsm_pp2_stage0 = 9'b100000;
parameter    ap_ST_fsm_state10 = 9'b1000000;
parameter    ap_ST_fsm_pp3_stage0 = 9'b10000000;
parameter    ap_ST_fsm_state15 = 9'b100000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_7 = 32'b111;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv6_2A = 6'b101010;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv6_2C = 6'b101100;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv6_2B = 6'b101011;
parameter    ap_const_lv11_790 = 11'b11110010000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv32_790 = 32'b11110010000;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv21_0 = 21'b000000000000000000000;
parameter    ap_const_lv32_1E4 = 32'b111100100;
parameter    ap_const_lv32_8 = 32'b1000;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (C_S_AXI_CTRL_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] inStream_TDATA;
input   inStream_TVALID;
output   inStream_TREADY;
input  [3:0] inStream_TKEEP;
input  [3:0] inStream_TSTRB;
input  [1:0] inStream_TUSER;
input  [0:0] inStream_TLAST;
input  [4:0] inStream_TID;
input  [5:0] inStream_TDEST;
output  [31:0] outStream_TDATA;
output   outStream_TVALID;
input   outStream_TREADY;
output  [3:0] outStream_TKEEP;
output  [3:0] outStream_TSTRB;
output  [1:0] outStream_TUSER;
output  [0:0] outStream_TLAST;
output  [4:0] outStream_TID;
output  [5:0] outStream_TDEST;
input   s_axi_CTRL_AWVALID;
output   s_axi_CTRL_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1 : 0] s_axi_CTRL_AWADDR;
input   s_axi_CTRL_WVALID;
output   s_axi_CTRL_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1 : 0] s_axi_CTRL_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1 : 0] s_axi_CTRL_WSTRB;
input   s_axi_CTRL_ARVALID;
output   s_axi_CTRL_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1 : 0] s_axi_CTRL_ARADDR;
output   s_axi_CTRL_RVALID;
input   s_axi_CTRL_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1 : 0] s_axi_CTRL_RDATA;
output  [1:0] s_axi_CTRL_RRESP;
output   s_axi_CTRL_BVALID;
input   s_axi_CTRL_BREADY;
output  [1:0] s_axi_CTRL_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg    ap_ready;
reg   [31:0] inStream_V_data_V_0_data_out;
wire    inStream_V_data_V_0_vld_in;
wire    inStream_V_data_V_0_vld_out;
wire    inStream_V_data_V_0_ack_in;
reg    inStream_V_data_V_0_ack_out;
reg   [31:0] inStream_V_data_V_0_payload_A;
reg   [31:0] inStream_V_data_V_0_payload_B;
reg    inStream_V_data_V_0_sel_rd;
reg    inStream_V_data_V_0_sel_wr;
wire    inStream_V_data_V_0_sel;
wire    inStream_V_data_V_0_load_A;
wire    inStream_V_data_V_0_load_B;
reg   [1:0] inStream_V_data_V_0_state;
wire    inStream_V_data_V_0_state_cmp_full;
wire    inStream_V_dest_V_0_vld_in;
reg    inStream_V_dest_V_0_ack_out;
reg   [1:0] inStream_V_dest_V_0_state;
reg   [31:0] outStream_V_data_V_1_data_out;
reg    outStream_V_data_V_1_vld_in;
wire    outStream_V_data_V_1_vld_out;
wire    outStream_V_data_V_1_ack_in;
wire    outStream_V_data_V_1_ack_out;
reg   [31:0] outStream_V_data_V_1_payload_A;
reg   [31:0] outStream_V_data_V_1_payload_B;
reg    outStream_V_data_V_1_sel_rd;
reg    outStream_V_data_V_1_sel_wr;
wire    outStream_V_data_V_1_sel;
wire    outStream_V_data_V_1_load_A;
wire    outStream_V_data_V_1_load_B;
reg   [1:0] outStream_V_data_V_1_state;
wire    outStream_V_data_V_1_state_cmp_full;
wire   [3:0] outStream_V_keep_V_1_data_out;
reg    outStream_V_keep_V_1_vld_in;
wire    outStream_V_keep_V_1_vld_out;
wire    outStream_V_keep_V_1_ack_in;
wire    outStream_V_keep_V_1_ack_out;
reg    outStream_V_keep_V_1_sel_rd;
wire    outStream_V_keep_V_1_sel;
reg   [1:0] outStream_V_keep_V_1_state;
wire   [3:0] outStream_V_strb_V_1_data_out;
reg    outStream_V_strb_V_1_vld_in;
wire    outStream_V_strb_V_1_vld_out;
wire    outStream_V_strb_V_1_ack_in;
wire    outStream_V_strb_V_1_ack_out;
reg    outStream_V_strb_V_1_sel_rd;
wire    outStream_V_strb_V_1_sel;
reg   [1:0] outStream_V_strb_V_1_state;
wire   [1:0] outStream_V_user_V_1_data_out;
reg    outStream_V_user_V_1_vld_in;
wire    outStream_V_user_V_1_vld_out;
wire    outStream_V_user_V_1_ack_in;
wire    outStream_V_user_V_1_ack_out;
reg    outStream_V_user_V_1_sel_rd;
wire    outStream_V_user_V_1_sel;
reg   [1:0] outStream_V_user_V_1_state;
reg   [0:0] outStream_V_last_V_1_data_out;
reg    outStream_V_last_V_1_vld_in;
wire    outStream_V_last_V_1_vld_out;
wire    outStream_V_last_V_1_ack_in;
wire    outStream_V_last_V_1_ack_out;
reg   [0:0] outStream_V_last_V_1_payload_A;
reg   [0:0] outStream_V_last_V_1_payload_B;
reg    outStream_V_last_V_1_sel_rd;
reg    outStream_V_last_V_1_sel_wr;
wire    outStream_V_last_V_1_sel;
wire    outStream_V_last_V_1_load_A;
wire    outStream_V_last_V_1_load_B;
reg   [1:0] outStream_V_last_V_1_state;
wire    outStream_V_last_V_1_state_cmp_full;
wire   [4:0] outStream_V_id_V_1_data_out;
reg    outStream_V_id_V_1_vld_in;
wire    outStream_V_id_V_1_vld_out;
wire    outStream_V_id_V_1_ack_in;
wire    outStream_V_id_V_1_ack_out;
reg    outStream_V_id_V_1_sel_rd;
wire    outStream_V_id_V_1_sel;
reg   [1:0] outStream_V_id_V_1_state;
wire   [5:0] outStream_V_dest_V_1_data_out;
reg    outStream_V_dest_V_1_vld_in;
wire    outStream_V_dest_V_1_vld_out;
wire    outStream_V_dest_V_1_ack_in;
wire    outStream_V_dest_V_1_ack_out;
reg    outStream_V_dest_V_1_sel_rd;
wire    outStream_V_dest_V_1_sel;
reg   [1:0] outStream_V_dest_V_1_state;
wire   [31:0] ctrl;
reg    inStream_TDATA_blk_n;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] exitcond1_reg_883;
wire   [0:0] ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
reg   [0:0] exitcond4_reg_892;
wire   [0:0] ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
reg   [0:0] exitcond_flatten8_reg_1006;
reg   [0:0] tmp_7_reg_1036;
reg    outStream_TDATA_blk_n;
reg    ap_enable_reg_pp3_iter2;
reg   [0:0] tmp_reg_1020;
reg   [0:0] ap_pipeline_reg_pp3_iter1_tmp_reg_1020;
reg    ap_enable_reg_pp3_iter3;
reg   [0:0] ap_pipeline_reg_pp3_iter2_tmp_reg_1020;
reg   [5:0] x_reg_285;
reg   [5:0] x1_reg_297;
reg   [2:0] indvar_flatten_reg_309;
reg   [1:0] y3_reg_320;
reg   [31:0] window_1_2_1_reg_331;
reg   [31:0] window_1_1_1_reg_343;
reg   [1:0] x4_reg_355;
reg   [10:0] indvar_flatten6_reg_366;
reg   [5:0] y_assign_reg_377;
reg   [5:0] x_assign_reg_388;
reg   [31:0] window_1_1_reg_399;
reg   [31:0] window_1_0_reg_410;
reg   [31:0] ctrl_read_reg_878;
wire   [0:0] exitcond1_fu_428_p2;
wire   [5:0] x_1_fu_434_p2;
reg   [5:0] x_1_reg_887;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond4_fu_445_p2;
wire   [5:0] x_2_fu_451_p2;
reg   [5:0] x_2_reg_896;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond_flatten_fu_462_p2;
reg   [0:0] exitcond_flatten_reg_901;
wire   [0:0] ap_CS_fsm_pp2_stage0;
wire   [2:0] indvar_flatten_next_fu_468_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [1:0] tmp_3_mid2_v_fu_494_p3;
reg   [1:0] tmp_3_mid2_v_reg_910;
wire   [0:0] tmp_10_fu_502_p1;
reg   [0:0] tmp_10_reg_915;
wire   [0:0] cond_mid2_fu_518_p3;
reg   [0:0] cond_mid2_reg_920;
wire   [0:0] cond1_fu_542_p2;
reg   [0:0] cond1_reg_936;
wire   [1:0] x_3_fu_548_p2;
wire   [31:0] window_2_2_4_fu_575_p3;
reg    ap_enable_reg_pp2_iter1;
wire   [31:0] window_2_2_5_fu_582_p3;
wire   [0:0] tmp_9_fu_589_p1;
reg   [0:0] tmp_9_reg_1001;
wire   [0:0] ap_CS_fsm_state10;
wire   [0:0] exitcond_flatten8_fu_602_p2;
reg    ap_condition_1038;
reg   [0:0] ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1006;
wire   [10:0] indvar_flatten_next7_fu_608_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [5:0] y_assign_cast7_mid2_s_fu_634_p3;
reg   [5:0] y_assign_cast7_mid2_s_reg_1015;
wire   [0:0] tmp_fu_656_p2;
reg   [5:0] lineBuffer_0_addr_2_reg_1024;
reg   [5:0] lineBuffer_1_addr_2_reg_1030;
reg   [5:0] ap_pipeline_reg_pp3_iter1_lineBuffer_1_addr_2_reg_1030;
wire   [0:0] tmp_7_fu_665_p2;
wire   [5:0] x_4_fu_682_p2;
wire   [31:0] maxValue_17_0_maxVal_fu_735_p3;
reg   [31:0] maxValue_17_0_maxVal_reg_1045;
wire   [0:0] tmp_13_fu_761_p3;
reg   [0:0] tmp_13_reg_1051;
wire   [19:0] result_fu_795_p3;
reg   [19:0] result_reg_1056;
wire   [31:0] lineBuffer_1_q0;
reg   [31:0] windowRightCol_1_reg_1061;
wire   [31:0] tmp_data_V_2_fu_854_p3;
wire   [0:0] tmp_last_V_fu_862_p2;
wire   [0:0] ap_CS_fsm_state4;
wire   [0:0] ap_CS_fsm_state7;
reg   [5:0] lineBuffer_0_address0;
reg    lineBuffer_0_ce0;
reg    lineBuffer_0_we0;
wire   [31:0] lineBuffer_0_q0;
reg    lineBuffer_0_ce1;
reg    lineBuffer_0_we1;
reg   [5:0] lineBuffer_1_address0;
reg    lineBuffer_1_ce0;
reg    lineBuffer_1_we0;
reg    lineBuffer_1_ce1;
reg    lineBuffer_1_we1;
reg   [5:0] x_phi_fu_289_p4;
reg   [5:0] x1_phi_fu_301_p4;
reg   [1:0] y3_phi_fu_324_p4;
reg   [5:0] y_assign_phi_fu_381_p4;
reg   [31:0] window_1_0_phi_fu_413_p4;
wire   [31:0] x_cast_fu_440_p1;
wire   [31:0] x1_cast_fu_457_p1;
wire   [31:0] tmp_5_cast_fu_536_p1;
wire   [31:0] x_assign_cast5_fu_650_p1;
reg   [31:0] window_0_0_read_as_fu_146;
reg   [31:0] window_0_0_fu_150;
reg   [31:0] window_0_1_fu_154;
reg   [31:0] window_1_0_read_as_fu_158;
reg   [31:0] writeCount_1_fu_162;
wire   [31:0] writeCount_fu_816_p2;
reg   [31:0] readCount_1_fu_166;
wire   [31:0] readCount_fu_671_p2;
reg   [31:0] window_2_2_2_fu_170;
wire   [0:0] exitcond_fu_474_p2;
wire   [1:0] y9_fu_488_p2;
wire   [0:0] cond_mid1_fu_506_p2;
wire   [0:0] cond_fu_512_p2;
wire   [1:0] x4_mid2_fu_480_p3;
wire   [5:0] x4_cast9_fu_526_p1;
wire   [5:0] tmp_5_fu_530_p2;
wire   [31:0] window_2_2_7_fu_554_p3;
wire   [31:0] window_2_2_fu_561_p3;
wire   [31:0] window_2_2_1_fu_568_p3;
wire   [0:0] exitcond2_fu_614_p2;
wire   [5:0] y_s_fu_628_p2;
wire   [5:0] x_assign_mid2_fu_620_p3;
wire   [0:0] tmp_11_fu_642_p1;
wire   [0:0] tmp_12_fu_646_p1;
wire   [0:0] tmp_4_0_1_i_fu_715_p2;
wire   [31:0] maxValue_0_1_maxVal_fu_721_p3;
wire   [0:0] tmp_4_1_i_fu_729_p2;
wire   [31:0] tmp4_fu_749_p2;
wire   [31:0] tmp3_fu_743_p2;
wire   [31:0] a_assign_fu_755_p2;
wire   [31:0] tmp_1_i_i_fu_769_p2;
wire   [19:0] tmp_3_fu_775_p4;
wire   [19:0] tmp_6_fu_785_p4;
wire   [0:0] tmp_4_1_1_i_fu_822_p2;
wire   [20:0] result_cast_fu_834_p1;
wire   [20:0] tmp_4_i_i_fu_837_p2;
wire   [20:0] result_1_fu_843_p3;
wire  signed [31:0] result_1_cast_fu_850_p1;
wire   [31:0] sel_SEBB_i_fu_827_p3;
wire   [0:0] ap_CS_fsm_state15;
reg    ap_condition_1527;
reg   [8:0] ap_NS_fsm;
reg    ap_condition_1049;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'b1;
#0 inStream_V_data_V_0_sel_rd = 1'b0;
#0 inStream_V_data_V_0_sel_wr = 1'b0;
#0 inStream_V_data_V_0_state = 2'b00;
#0 inStream_V_dest_V_0_state = 2'b00;
#0 outStream_V_data_V_1_sel_rd = 1'b0;
#0 outStream_V_data_V_1_sel_wr = 1'b0;
#0 outStream_V_data_V_1_state = 2'b00;
#0 outStream_V_keep_V_1_sel_rd = 1'b0;
#0 outStream_V_keep_V_1_state = 2'b00;
#0 outStream_V_strb_V_1_sel_rd = 1'b0;
#0 outStream_V_strb_V_1_state = 2'b00;
#0 outStream_V_user_V_1_sel_rd = 1'b0;
#0 outStream_V_user_V_1_state = 2'b00;
#0 outStream_V_last_V_1_sel_rd = 1'b0;
#0 outStream_V_last_V_1_sel_wr = 1'b0;
#0 outStream_V_last_V_1_state = 2'b00;
#0 outStream_V_id_V_1_sel_rd = 1'b0;
#0 outStream_V_id_V_1_state = 2'b00;
#0 outStream_V_dest_V_1_sel_rd = 1'b0;
#0 outStream_V_dest_V_1_state = 2'b00;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
end

cnn_pool_d44x44_p2x2_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
cnn_pool_d44x44_p2x2_CTRL_s_axi_U(
    .AWVALID(s_axi_CTRL_AWVALID),
    .AWREADY(s_axi_CTRL_AWREADY),
    .AWADDR(s_axi_CTRL_AWADDR),
    .WVALID(s_axi_CTRL_WVALID),
    .WREADY(s_axi_CTRL_WREADY),
    .WDATA(s_axi_CTRL_WDATA),
    .WSTRB(s_axi_CTRL_WSTRB),
    .ARVALID(s_axi_CTRL_ARVALID),
    .ARREADY(s_axi_CTRL_ARREADY),
    .ARADDR(s_axi_CTRL_ARADDR),
    .RVALID(s_axi_CTRL_RVALID),
    .RREADY(s_axi_CTRL_RREADY),
    .RDATA(s_axi_CTRL_RDATA),
    .RRESP(s_axi_CTRL_RRESP),
    .BVALID(s_axi_CTRL_BVALID),
    .BREADY(s_axi_CTRL_BREADY),
    .BRESP(s_axi_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .ctrl(ctrl)
);

cnn_pool_d44x44_pbkb #(
    .DataWidth( 32 ),
    .AddressRange( 44 ),
    .AddressWidth( 6 ))
lineBuffer_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(lineBuffer_0_address0),
    .ce0(lineBuffer_0_ce0),
    .we0(lineBuffer_0_we0),
    .d0(inStream_V_data_V_0_data_out),
    .q0(lineBuffer_0_q0),
    .address1(lineBuffer_0_addr_2_reg_1024),
    .ce1(lineBuffer_0_ce1),
    .we1(lineBuffer_0_we1),
    .d1(lineBuffer_1_q0)
);

cnn_pool_d44x44_pbkb #(
    .DataWidth( 32 ),
    .AddressRange( 44 ),
    .AddressWidth( 6 ))
lineBuffer_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(lineBuffer_1_address0),
    .ce0(lineBuffer_1_ce0),
    .we0(lineBuffer_1_we0),
    .d0(inStream_V_data_V_0_data_out),
    .q0(lineBuffer_1_q0),
    .address1(ap_pipeline_reg_pp3_iter1_lineBuffer_1_addr_2_reg_1030),
    .ce1(lineBuffer_1_ce1),
    .we1(lineBuffer_1_we1),
    .d1(window_2_2_2_fu_170)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_883) & (inStream_V_data_V_0_vld_out == 1'b0)) & ~(1'b0 == exitcond1_fu_428_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_883) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == exitcond1_fu_428_p2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_883) & (inStream_V_data_V_0_vld_out == 1'b0)) & ~(1'b0 == exitcond1_fu_428_p2)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_892) & (inStream_V_data_V_0_vld_out == 1'b0)) & ~(1'b0 == exitcond4_fu_445_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_892) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == exitcond4_fu_445_p2))) begin
            ap_enable_reg_pp1_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_892) & (inStream_V_data_V_0_vld_out == 1'b0)) & ~(1'b0 == exitcond4_fu_445_p2)))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~(1'b0 == exitcond_flatten_fu_462_p2))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond_flatten_fu_462_p2))) begin
            ap_enable_reg_pp2_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~(1'b0 == exitcond_flatten_fu_462_p2)))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))) & ~(1'b0 == exitcond_flatten8_fu_602_p2))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((ap_condition_1049 == 1'b1)) begin
            if (~(1'b1 == ap_enable_reg_pp3_iter0)) begin
                ap_enable_reg_pp3_iter2 <= 1'b0;
            end else if ((1'b1 == ap_enable_reg_pp3_iter0)) begin
                ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)))) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp3_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_data_V_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == inStream_V_data_V_0_ack_out) & (1'b1 == inStream_V_data_V_0_vld_out))) begin
            inStream_V_data_V_0_sel_rd <= ~inStream_V_data_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_data_V_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == inStream_V_data_V_0_vld_in) & (1'b1 == inStream_V_data_V_0_ack_in))) begin
            inStream_V_data_V_0_sel_wr <= ~inStream_V_data_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_data_V_0_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == inStream_V_data_V_0_vld_in) & (1'b1 == inStream_V_data_V_0_ack_out) & (inStream_V_data_V_0_state == ap_const_lv2_3)) | ((1'b0 == inStream_V_data_V_0_vld_in) & (inStream_V_data_V_0_state == ap_const_lv2_2)))) begin
            inStream_V_data_V_0_state <= ap_const_lv2_2;
        end else if ((((1'b1 == inStream_V_data_V_0_vld_in) & (1'b0 == inStream_V_data_V_0_ack_out) & (inStream_V_data_V_0_state == ap_const_lv2_3)) | ((1'b0 == inStream_V_data_V_0_ack_out) & (inStream_V_data_V_0_state == ap_const_lv2_1)))) begin
            inStream_V_data_V_0_state <= ap_const_lv2_1;
        end else if ((((1'b1 == inStream_V_data_V_0_vld_in) & (inStream_V_data_V_0_state == ap_const_lv2_2)) | ((1'b1 == inStream_V_data_V_0_ack_out) & (inStream_V_data_V_0_state == ap_const_lv2_1)) | ((inStream_V_data_V_0_state == ap_const_lv2_3) & ~((1'b1 == inStream_V_data_V_0_vld_in) & (1'b0 == inStream_V_data_V_0_ack_out)) & ~((1'b0 == inStream_V_data_V_0_vld_in) & (1'b1 == inStream_V_data_V_0_ack_out))))) begin
            inStream_V_data_V_0_state <= ap_const_lv2_3;
        end else begin
            inStream_V_data_V_0_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_dest_V_0_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == inStream_V_dest_V_0_vld_in) & (1'b1 == inStream_V_dest_V_0_ack_out) & (ap_const_lv2_3 == inStream_V_dest_V_0_state)) | ((1'b0 == inStream_V_dest_V_0_vld_in) & (ap_const_lv2_2 == inStream_V_dest_V_0_state)))) begin
            inStream_V_dest_V_0_state <= ap_const_lv2_2;
        end else if ((((1'b1 == inStream_V_dest_V_0_vld_in) & (1'b0 == inStream_V_dest_V_0_ack_out) & (ap_const_lv2_3 == inStream_V_dest_V_0_state)) | ((1'b0 == inStream_V_dest_V_0_ack_out) & (ap_const_lv2_1 == inStream_V_dest_V_0_state)))) begin
            inStream_V_dest_V_0_state <= ap_const_lv2_1;
        end else if ((((1'b1 == inStream_V_dest_V_0_vld_in) & (ap_const_lv2_2 == inStream_V_dest_V_0_state)) | ((1'b1 == inStream_V_dest_V_0_ack_out) & (ap_const_lv2_1 == inStream_V_dest_V_0_state)) | ((ap_const_lv2_3 == inStream_V_dest_V_0_state) & ~((1'b1 == inStream_V_dest_V_0_vld_in) & (1'b0 == inStream_V_dest_V_0_ack_out)) & ~((1'b0 == inStream_V_dest_V_0_vld_in) & (1'b1 == inStream_V_dest_V_0_ack_out))))) begin
            inStream_V_dest_V_0_state <= ap_const_lv2_3;
        end else begin
            inStream_V_dest_V_0_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_data_V_1_ack_out) & (1'b1 == outStream_V_data_V_1_vld_out))) begin
            outStream_V_data_V_1_sel_rd <= ~outStream_V_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_data_V_1_vld_in) & (1'b1 == outStream_V_data_V_1_ack_in))) begin
            outStream_V_data_V_1_sel_wr <= ~outStream_V_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_data_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_data_V_1_vld_in) & (1'b1 == outStream_V_data_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_data_V_1_state)) | ((1'b0 == outStream_V_data_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_data_V_1_state)))) begin
            outStream_V_data_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_data_V_1_vld_in) & (1'b0 == outStream_V_data_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_data_V_1_state)) | ((1'b0 == outStream_V_data_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_data_V_1_state)))) begin
            outStream_V_data_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_data_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_data_V_1_state)) | ((1'b1 == outStream_V_data_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_data_V_1_state)) | ((ap_const_lv2_3 == outStream_V_data_V_1_state) & ~((1'b1 == outStream_V_data_V_1_vld_in) & (1'b0 == outStream_V_data_V_1_ack_out)) & ~((1'b0 == outStream_V_data_V_1_vld_in) & (1'b1 == outStream_V_data_V_1_ack_out))))) begin
            outStream_V_data_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_data_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_dest_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_dest_V_1_ack_out) & (1'b1 == outStream_V_dest_V_1_vld_out))) begin
            outStream_V_dest_V_1_sel_rd <= ~outStream_V_dest_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_dest_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_dest_V_1_vld_in) & (1'b1 == outStream_V_dest_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_dest_V_1_state)) | ((1'b0 == outStream_V_dest_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_dest_V_1_state)))) begin
            outStream_V_dest_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_dest_V_1_vld_in) & (1'b0 == outStream_V_dest_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_dest_V_1_state)) | ((1'b0 == outStream_V_dest_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_dest_V_1_state)))) begin
            outStream_V_dest_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_dest_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_dest_V_1_state)) | ((1'b1 == outStream_V_dest_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_dest_V_1_state)) | ((ap_const_lv2_3 == outStream_V_dest_V_1_state) & ~((1'b1 == outStream_V_dest_V_1_vld_in) & (1'b0 == outStream_V_dest_V_1_ack_out)) & ~((1'b0 == outStream_V_dest_V_1_vld_in) & (1'b1 == outStream_V_dest_V_1_ack_out))))) begin
            outStream_V_dest_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_dest_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_id_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_id_V_1_ack_out) & (1'b1 == outStream_V_id_V_1_vld_out))) begin
            outStream_V_id_V_1_sel_rd <= ~outStream_V_id_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_id_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_id_V_1_vld_in) & (1'b1 == outStream_V_id_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_id_V_1_state)) | ((1'b0 == outStream_V_id_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_id_V_1_state)))) begin
            outStream_V_id_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_id_V_1_vld_in) & (1'b0 == outStream_V_id_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_id_V_1_state)) | ((1'b0 == outStream_V_id_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_id_V_1_state)))) begin
            outStream_V_id_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_id_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_id_V_1_state)) | ((1'b1 == outStream_V_id_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_id_V_1_state)) | ((ap_const_lv2_3 == outStream_V_id_V_1_state) & ~((1'b1 == outStream_V_id_V_1_vld_in) & (1'b0 == outStream_V_id_V_1_ack_out)) & ~((1'b0 == outStream_V_id_V_1_vld_in) & (1'b1 == outStream_V_id_V_1_ack_out))))) begin
            outStream_V_id_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_id_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_keep_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_keep_V_1_ack_out) & (1'b1 == outStream_V_keep_V_1_vld_out))) begin
            outStream_V_keep_V_1_sel_rd <= ~outStream_V_keep_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_keep_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_keep_V_1_vld_in) & (1'b1 == outStream_V_keep_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_keep_V_1_state)) | ((1'b0 == outStream_V_keep_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_keep_V_1_state)))) begin
            outStream_V_keep_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_keep_V_1_vld_in) & (1'b0 == outStream_V_keep_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_keep_V_1_state)) | ((1'b0 == outStream_V_keep_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_keep_V_1_state)))) begin
            outStream_V_keep_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_keep_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_keep_V_1_state)) | ((1'b1 == outStream_V_keep_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_keep_V_1_state)) | ((ap_const_lv2_3 == outStream_V_keep_V_1_state) & ~((1'b1 == outStream_V_keep_V_1_vld_in) & (1'b0 == outStream_V_keep_V_1_ack_out)) & ~((1'b0 == outStream_V_keep_V_1_vld_in) & (1'b1 == outStream_V_keep_V_1_ack_out))))) begin
            outStream_V_keep_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_keep_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_last_V_1_ack_out) & (1'b1 == outStream_V_last_V_1_vld_out))) begin
            outStream_V_last_V_1_sel_rd <= ~outStream_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_last_V_1_vld_in) & (1'b1 == outStream_V_last_V_1_ack_in))) begin
            outStream_V_last_V_1_sel_wr <= ~outStream_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_last_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_last_V_1_vld_in) & (1'b1 == outStream_V_last_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_last_V_1_state)) | ((1'b0 == outStream_V_last_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_last_V_1_state)))) begin
            outStream_V_last_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_last_V_1_vld_in) & (1'b0 == outStream_V_last_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_last_V_1_state)) | ((1'b0 == outStream_V_last_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_last_V_1_state)))) begin
            outStream_V_last_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_last_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_last_V_1_state)) | ((1'b1 == outStream_V_last_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_last_V_1_state)) | ((ap_const_lv2_3 == outStream_V_last_V_1_state) & ~((1'b1 == outStream_V_last_V_1_vld_in) & (1'b0 == outStream_V_last_V_1_ack_out)) & ~((1'b0 == outStream_V_last_V_1_vld_in) & (1'b1 == outStream_V_last_V_1_ack_out))))) begin
            outStream_V_last_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_last_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_strb_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_strb_V_1_ack_out) & (1'b1 == outStream_V_strb_V_1_vld_out))) begin
            outStream_V_strb_V_1_sel_rd <= ~outStream_V_strb_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_strb_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_strb_V_1_vld_in) & (1'b1 == outStream_V_strb_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_strb_V_1_state)) | ((1'b0 == outStream_V_strb_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_strb_V_1_state)))) begin
            outStream_V_strb_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_strb_V_1_vld_in) & (1'b0 == outStream_V_strb_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_strb_V_1_state)) | ((1'b0 == outStream_V_strb_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_strb_V_1_state)))) begin
            outStream_V_strb_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_strb_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_strb_V_1_state)) | ((1'b1 == outStream_V_strb_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_strb_V_1_state)) | ((ap_const_lv2_3 == outStream_V_strb_V_1_state) & ~((1'b1 == outStream_V_strb_V_1_vld_in) & (1'b0 == outStream_V_strb_V_1_ack_out)) & ~((1'b0 == outStream_V_strb_V_1_vld_in) & (1'b1 == outStream_V_strb_V_1_ack_out))))) begin
            outStream_V_strb_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_strb_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_user_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_user_V_1_ack_out) & (1'b1 == outStream_V_user_V_1_vld_out))) begin
            outStream_V_user_V_1_sel_rd <= ~outStream_V_user_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_user_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_user_V_1_vld_in) & (1'b1 == outStream_V_user_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_user_V_1_state)) | ((1'b0 == outStream_V_user_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_user_V_1_state)))) begin
            outStream_V_user_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_user_V_1_vld_in) & (1'b0 == outStream_V_user_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_user_V_1_state)) | ((1'b0 == outStream_V_user_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_user_V_1_state)))) begin
            outStream_V_user_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_user_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_user_V_1_state)) | ((1'b1 == outStream_V_user_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_user_V_1_state)) | ((ap_const_lv2_3 == outStream_V_user_V_1_state) & ~((1'b1 == outStream_V_user_V_1_vld_in) & (1'b0 == outStream_V_user_V_1_ack_out)) & ~((1'b0 == outStream_V_user_V_1_vld_in) & (1'b1 == outStream_V_user_V_1_ack_out))))) begin
            outStream_V_user_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_user_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond_flatten8_fu_602_p2))) begin
        indvar_flatten6_reg_366 <= indvar_flatten_next7_fu_608_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        indvar_flatten6_reg_366 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        indvar_flatten_reg_309 <= ap_const_lv3_0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond_flatten_fu_462_p2))) begin
        indvar_flatten_reg_309 <= indvar_flatten_next_fu_468_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond_flatten8_fu_602_p2) & ~(1'b0 == tmp_7_fu_665_p2))) begin
        readCount_1_fu_166 <= readCount_fu_671_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        readCount_1_fu_166 <= ap_const_lv32_2E;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp3_iter2) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1006))) begin
        window_1_0_reg_410 <= window_1_1_reg_399;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        window_1_0_reg_410 <= window_1_1_1_reg_343;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp3_iter2) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1006))) begin
        window_1_1_reg_399 <= windowRightCol_1_reg_1061;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        window_1_1_reg_399 <= window_1_2_1_reg_331;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        writeCount_1_fu_162 <= writeCount_fu_816_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        writeCount_1_fu_162 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        x1_reg_297 <= ap_const_lv6_0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_892) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_892) & (inStream_V_data_V_0_vld_out == 1'b0)))) begin
        x1_reg_297 <= x_2_reg_896;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        x4_reg_355 <= ap_const_lv2_1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond_flatten_fu_462_p2))) begin
        x4_reg_355 <= x_3_fu_548_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond_flatten8_fu_602_p2))) begin
        x_assign_reg_388 <= x_4_fu_682_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        x_assign_reg_388 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_883) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_883) & (inStream_V_data_V_0_vld_out == 1'b0)))) begin
        x_reg_285 <= x_1_reg_887;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        x_reg_285 <= ap_const_lv6_2A;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        y3_reg_320 <= ap_const_lv2_1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten_reg_901))) begin
        y3_reg_320 <= tmp_3_mid2_v_reg_910;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_flatten8_reg_1006) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        y_assign_reg_377 <= y_assign_cast7_mid2_s_reg_1015;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_assign_reg_377 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1006 <= exitcond_flatten8_reg_1006;
        ap_pipeline_reg_pp3_iter1_lineBuffer_1_addr_2_reg_1030 <= lineBuffer_1_addr_2_reg_1030;
        ap_pipeline_reg_pp3_iter1_tmp_reg_1020 <= tmp_reg_1020;
        exitcond_flatten8_reg_1006 <= exitcond_flatten8_fu_602_p2;
    end
end

always @ (posedge ap_clk) begin
    if (~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)))) begin
        ap_pipeline_reg_pp3_iter2_tmp_reg_1020 <= ap_pipeline_reg_pp3_iter1_tmp_reg_1020;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond_flatten_fu_462_p2))) begin
        cond1_reg_936 <= cond1_fu_542_p2;
        cond_mid2_reg_920 <= cond_mid2_fu_518_p3;
        tmp_10_reg_915 <= tmp_10_fu_502_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        ctrl_read_reg_878 <= ctrl;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_883) & (inStream_V_data_V_0_vld_out == 1'b0)))) begin
        exitcond1_reg_883 <= exitcond1_fu_428_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_892) & (inStream_V_data_V_0_vld_out == 1'b0)))) begin
        exitcond4_reg_892 <= exitcond4_fu_445_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp2_stage0)) begin
        exitcond_flatten_reg_901 <= exitcond_flatten_fu_462_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == inStream_V_data_V_0_load_A)) begin
        inStream_V_data_V_0_payload_A <= inStream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == inStream_V_data_V_0_load_B)) begin
        inStream_V_data_V_0_payload_B <= inStream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b0 == exitcond_flatten8_fu_602_p2))) begin
        lineBuffer_0_addr_2_reg_1024 <= x_assign_cast5_fu_650_p1;
        lineBuffer_1_addr_2_reg_1030 <= x_assign_cast5_fu_650_p1;
        tmp_7_reg_1036 <= tmp_7_fu_665_p2;
        tmp_reg_1020 <= tmp_fu_656_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == exitcond_flatten8_reg_1006) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))) & ~(1'b0 == tmp_reg_1020) & (1'b0 == tmp_9_reg_1001))) begin
        maxValue_17_0_maxVal_reg_1045 <= maxValue_17_0_maxVal_fu_735_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == outStream_V_data_V_1_load_A)) begin
        outStream_V_data_V_1_payload_A <= tmp_data_V_2_fu_854_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == outStream_V_data_V_1_load_B)) begin
        outStream_V_data_V_1_payload_B <= tmp_data_V_2_fu_854_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == outStream_V_last_V_1_load_A)) begin
        outStream_V_last_V_1_payload_A <= tmp_last_V_fu_862_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == outStream_V_last_V_1_load_B)) begin
        outStream_V_last_V_1_payload_B <= tmp_last_V_fu_862_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == exitcond_flatten8_reg_1006) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))) & ~(1'b0 == tmp_reg_1020) & ~(1'b0 == tmp_9_reg_1001))) begin
        result_reg_1056 <= result_fu_795_p3;
        tmp_13_reg_1051 <= a_assign_fu_755_p2[ap_const_lv32_1F];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond_flatten_fu_462_p2))) begin
        tmp_3_mid2_v_reg_910 <= tmp_3_mid2_v_fu_494_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_9_reg_1001 <= tmp_9_fu_589_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_flatten8_reg_1006) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        windowRightCol_1_reg_1061 <= lineBuffer_1_q0;
        window_0_1_fu_154 <= lineBuffer_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        window_0_0_fu_150 <= window_0_1_fu_154;
        window_0_0_read_as_fu_146 <= window_0_0_fu_150;
        window_1_0_read_as_fu_158 <= window_1_0_phi_fu_413_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten_reg_901))) begin
        window_1_1_1_reg_343 <= window_2_2_5_fu_582_p3;
        window_1_2_1_reg_331 <= window_2_2_4_fu_575_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_flatten8_reg_1006) & ~(1'b0 == tmp_7_reg_1036) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        window_2_2_2_fu_170 <= inStream_V_data_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_883) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond1_fu_428_p2))) begin
        x_1_reg_887 <= x_1_fu_434_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_892) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        x_2_reg_896 <= x_2_fu_451_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond_flatten8_fu_602_p2))) begin
        y_assign_cast7_mid2_s_reg_1015 <= y_assign_cast7_mid2_s_fu_634_p3;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & ~(ap_condition_1527 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & ~(ap_condition_1527 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_883)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_892)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_flatten8_reg_1006) & ~(1'b0 == tmp_7_reg_1036)))) begin
        inStream_TDATA_blk_n = inStream_V_data_V_0_state[1'b0];
    end else begin
        inStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_883) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_883) & (inStream_V_data_V_0_vld_out == 1'b0))) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_892) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_892) & (inStream_V_data_V_0_vld_out == 1'b0))) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_flatten8_reg_1006) & ~(1'b0 == tmp_7_reg_1036) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)))))) begin
        inStream_V_data_V_0_ack_out = 1'b1;
    end else begin
        inStream_V_data_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == inStream_V_data_V_0_sel)) begin
        inStream_V_data_V_0_data_out = inStream_V_data_V_0_payload_B;
    end else begin
        inStream_V_data_V_0_data_out = inStream_V_data_V_0_payload_A;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_883) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_883) & (inStream_V_data_V_0_vld_out == 1'b0))) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_892) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_892) & (inStream_V_data_V_0_vld_out == 1'b0))) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_flatten8_reg_1006) & ~(1'b0 == tmp_7_reg_1036) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)))))) begin
        inStream_V_dest_V_0_ack_out = 1'b1;
    end else begin
        inStream_V_dest_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter0))) begin
        lineBuffer_0_address0 = x_assign_cast5_fu_650_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        lineBuffer_0_address0 = tmp_5_cast_fu_536_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        lineBuffer_0_address0 = x_cast_fu_440_p1;
    end else begin
        lineBuffer_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_883) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        lineBuffer_0_ce0 = 1'b1;
    end else begin
        lineBuffer_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        lineBuffer_0_ce1 = 1'b1;
    end else begin
        lineBuffer_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_883) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_883) & (inStream_V_data_V_0_vld_out == 1'b0)))) begin
        lineBuffer_0_we0 = 1'b1;
    end else begin
        lineBuffer_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_flatten8_reg_1006) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        lineBuffer_0_we1 = 1'b1;
    end else begin
        lineBuffer_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter0))) begin
        lineBuffer_1_address0 = x_assign_cast5_fu_650_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        lineBuffer_1_address0 = tmp_5_cast_fu_536_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        lineBuffer_1_address0 = x1_cast_fu_457_p1;
    end else begin
        lineBuffer_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter0)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_892) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        lineBuffer_1_ce0 = 1'b1;
    end else begin
        lineBuffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter2) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        lineBuffer_1_ce1 = 1'b1;
    end else begin
        lineBuffer_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_892) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_892) & (inStream_V_data_V_0_vld_out == 1'b0)))) begin
        lineBuffer_1_we0 = 1'b1;
    end else begin
        lineBuffer_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter2) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1006))) begin
        lineBuffer_1_we1 = 1'b1;
    end else begin
        lineBuffer_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020)))) begin
        outStream_TDATA_blk_n = outStream_V_data_V_1_state[1'b1];
    end else begin
        outStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == outStream_V_data_V_1_sel)) begin
        outStream_V_data_V_1_data_out = outStream_V_data_V_1_payload_B;
    end else begin
        outStream_V_data_V_1_data_out = outStream_V_data_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_data_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_dest_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_dest_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_id_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_id_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_keep_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_keep_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == outStream_V_last_V_1_sel)) begin
        outStream_V_last_V_1_data_out = outStream_V_last_V_1_payload_B;
    end else begin
        outStream_V_last_V_1_data_out = outStream_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_last_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_strb_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_strb_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_user_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_user_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1006))) begin
        window_1_0_phi_fu_413_p4 = window_1_1_reg_399;
    end else begin
        window_1_0_phi_fu_413_p4 = window_1_0_reg_410;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_892))) begin
        x1_phi_fu_301_p4 = x_2_reg_896;
    end else begin
        x1_phi_fu_301_p4 = x1_reg_297;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_883))) begin
        x_phi_fu_289_p4 = x_1_reg_887;
    end else begin
        x_phi_fu_289_p4 = x_reg_285;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten_reg_901))) begin
        y3_phi_fu_324_p4 = tmp_3_mid2_v_reg_910;
    end else begin
        y3_phi_fu_324_p4 = y3_reg_320;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_flatten8_reg_1006))) begin
        y_assign_phi_fu_381_p4 = y_assign_cast7_mid2_s_reg_1015;
    end else begin
        y_assign_phi_fu_381_p4 = y_assign_reg_377;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~(~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_883) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond1_fu_428_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_883) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond1_fu_428_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~(~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_892) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == exitcond4_fu_445_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_892) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == exitcond4_fu_445_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp2_iter0) & ~(1'b0 == exitcond_flatten_fu_462_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp3_iter3) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))) & ~(1'b1 == ap_enable_reg_pp3_iter2)) & ~((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))) & ~(1'b1 == ap_enable_reg_pp3_iter0) & ~(1'b1 == ap_enable_reg_pp3_iter2)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((1'b1 == ap_enable_reg_pp3_iter3) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))) & ~(1'b1 == ap_enable_reg_pp3_iter2)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in))) & ~(1'b1 == ap_enable_reg_pp3_iter0) & ~(1'b1 == ap_enable_reg_pp3_iter2)))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            if (~(ap_condition_1527 == 1'b1)) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_assign_fu_755_p2 = (tmp4_fu_749_p2 + tmp3_fu_743_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state15 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state7 = ap_CS_fsm[ap_const_lv32_4];

always @ (*) begin
    ap_condition_1038 = ((1'b0 == exitcond_flatten8_reg_1006) & ~(1'b0 == tmp_7_reg_1036) & (inStream_V_data_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_condition_1049 = ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1038 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == ap_pipeline_reg_pp3_iter2_tmp_reg_1020) & (1'b0 == outStream_V_data_V_1_ack_in)));
end

always @ (*) begin
    ap_condition_1527 = ((outStream_V_data_V_1_ack_in == 1'b0) | (outStream_V_keep_V_1_ack_in == 1'b0) | (outStream_V_strb_V_1_ack_in == 1'b0) | (outStream_V_user_V_1_ack_in == 1'b0) | (outStream_V_last_V_1_ack_in == 1'b0) | (outStream_V_id_V_1_ack_in == 1'b0) | (outStream_V_dest_V_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cond1_fu_542_p2 = ((x4_mid2_fu_480_p3 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign cond_fu_512_p2 = ((y3_phi_fu_324_p4 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign cond_mid1_fu_506_p2 = ((y3_phi_fu_324_p4 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign cond_mid2_fu_518_p3 = ((exitcond_fu_474_p2[0:0] === 1'b1) ? cond_mid1_fu_506_p2 : cond_fu_512_p2);

assign exitcond1_fu_428_p2 = ((x_phi_fu_289_p4 == ap_const_lv6_2C) ? 1'b1 : 1'b0);

assign exitcond2_fu_614_p2 = ((x_assign_reg_388 == ap_const_lv6_2C) ? 1'b1 : 1'b0);

assign exitcond4_fu_445_p2 = ((x1_phi_fu_301_p4 == ap_const_lv6_2C) ? 1'b1 : 1'b0);

assign exitcond_flatten8_fu_602_p2 = ((indvar_flatten6_reg_366 == ap_const_lv11_790) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_462_p2 = ((indvar_flatten_reg_309 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign exitcond_fu_474_p2 = ((x4_reg_355 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign inStream_TREADY = inStream_V_dest_V_0_state[1'b1];

assign inStream_V_data_V_0_ack_in = inStream_V_data_V_0_state[1'b1];

assign inStream_V_data_V_0_load_A = (inStream_V_data_V_0_state_cmp_full & ~inStream_V_data_V_0_sel_wr);

assign inStream_V_data_V_0_load_B = (inStream_V_data_V_0_sel_wr & inStream_V_data_V_0_state_cmp_full);

assign inStream_V_data_V_0_sel = inStream_V_data_V_0_sel_rd;

assign inStream_V_data_V_0_state_cmp_full = ((inStream_V_data_V_0_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign inStream_V_data_V_0_vld_in = inStream_TVALID;

assign inStream_V_data_V_0_vld_out = inStream_V_data_V_0_state[1'b0];

assign inStream_V_dest_V_0_vld_in = inStream_TVALID;

assign indvar_flatten_next7_fu_608_p2 = (indvar_flatten6_reg_366 + ap_const_lv11_1);

assign indvar_flatten_next_fu_468_p2 = (indvar_flatten_reg_309 + ap_const_lv3_1);

assign maxValue_0_1_maxVal_fu_721_p3 = ((tmp_4_0_1_i_fu_715_p2[0:0] === 1'b1) ? window_0_0_fu_150 : window_0_0_read_as_fu_146);

assign maxValue_17_0_maxVal_fu_735_p3 = ((tmp_4_1_i_fu_729_p2[0:0] === 1'b1) ? window_1_0_read_as_fu_158 : maxValue_0_1_maxVal_fu_721_p3);

assign outStream_TDATA = outStream_V_data_V_1_data_out;

assign outStream_TDEST = outStream_V_dest_V_1_data_out;

assign outStream_TID = outStream_V_id_V_1_data_out;

assign outStream_TKEEP = outStream_V_keep_V_1_data_out;

assign outStream_TLAST = outStream_V_last_V_1_data_out;

assign outStream_TSTRB = outStream_V_strb_V_1_data_out;

assign outStream_TUSER = outStream_V_user_V_1_data_out;

assign outStream_TVALID = outStream_V_dest_V_1_state[1'b0];

assign outStream_V_data_V_1_ack_in = outStream_V_data_V_1_state[1'b1];

assign outStream_V_data_V_1_ack_out = outStream_TREADY;

assign outStream_V_data_V_1_load_A = (outStream_V_data_V_1_state_cmp_full & ~outStream_V_data_V_1_sel_wr);

assign outStream_V_data_V_1_load_B = (outStream_V_data_V_1_sel_wr & outStream_V_data_V_1_state_cmp_full);

assign outStream_V_data_V_1_sel = outStream_V_data_V_1_sel_rd;

assign outStream_V_data_V_1_state_cmp_full = ((outStream_V_data_V_1_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign outStream_V_data_V_1_vld_out = outStream_V_data_V_1_state[1'b0];

assign outStream_V_dest_V_1_ack_in = outStream_V_dest_V_1_state[1'b1];

assign outStream_V_dest_V_1_ack_out = outStream_TREADY;

assign outStream_V_dest_V_1_data_out = ap_const_lv6_0;

assign outStream_V_dest_V_1_sel = outStream_V_dest_V_1_sel_rd;

assign outStream_V_dest_V_1_vld_out = outStream_V_dest_V_1_state[1'b0];

assign outStream_V_id_V_1_ack_in = outStream_V_id_V_1_state[1'b1];

assign outStream_V_id_V_1_ack_out = outStream_TREADY;

assign outStream_V_id_V_1_data_out = ap_const_lv5_0;

assign outStream_V_id_V_1_sel = outStream_V_id_V_1_sel_rd;

assign outStream_V_id_V_1_vld_out = outStream_V_id_V_1_state[1'b0];

assign outStream_V_keep_V_1_ack_in = outStream_V_keep_V_1_state[1'b1];

assign outStream_V_keep_V_1_ack_out = outStream_TREADY;

assign outStream_V_keep_V_1_data_out = ap_const_lv4_F;

assign outStream_V_keep_V_1_sel = outStream_V_keep_V_1_sel_rd;

assign outStream_V_keep_V_1_vld_out = outStream_V_keep_V_1_state[1'b0];

assign outStream_V_last_V_1_ack_in = outStream_V_last_V_1_state[1'b1];

assign outStream_V_last_V_1_ack_out = outStream_TREADY;

assign outStream_V_last_V_1_load_A = (outStream_V_last_V_1_state_cmp_full & ~outStream_V_last_V_1_sel_wr);

assign outStream_V_last_V_1_load_B = (outStream_V_last_V_1_sel_wr & outStream_V_last_V_1_state_cmp_full);

assign outStream_V_last_V_1_sel = outStream_V_last_V_1_sel_rd;

assign outStream_V_last_V_1_state_cmp_full = ((outStream_V_last_V_1_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign outStream_V_last_V_1_vld_out = outStream_V_last_V_1_state[1'b0];

assign outStream_V_strb_V_1_ack_in = outStream_V_strb_V_1_state[1'b1];

assign outStream_V_strb_V_1_ack_out = outStream_TREADY;

assign outStream_V_strb_V_1_data_out = ap_const_lv4_0;

assign outStream_V_strb_V_1_sel = outStream_V_strb_V_1_sel_rd;

assign outStream_V_strb_V_1_vld_out = outStream_V_strb_V_1_state[1'b0];

assign outStream_V_user_V_1_ack_in = outStream_V_user_V_1_state[1'b1];

assign outStream_V_user_V_1_ack_out = outStream_TREADY;

assign outStream_V_user_V_1_data_out = ap_const_lv2_0;

assign outStream_V_user_V_1_sel = outStream_V_user_V_1_sel_rd;

assign outStream_V_user_V_1_vld_out = outStream_V_user_V_1_state[1'b0];

assign readCount_fu_671_p2 = (readCount_1_fu_166 + ap_const_lv32_1);

assign result_1_cast_fu_850_p1 = $signed(result_1_fu_843_p3);

assign result_1_fu_843_p3 = ((tmp_13_reg_1051[0:0] === 1'b1) ? tmp_4_i_i_fu_837_p2 : result_cast_fu_834_p1);

assign result_cast_fu_834_p1 = result_reg_1056;

assign result_fu_795_p3 = ((tmp_13_fu_761_p3[0:0] === 1'b1) ? tmp_3_fu_775_p4 : tmp_6_fu_785_p4);

assign sel_SEBB_i_fu_827_p3 = ((tmp_4_1_1_i_fu_822_p2[0:0] === 1'b1) ? window_1_0_reg_410 : maxValue_17_0_maxVal_reg_1045);

assign tmp3_fu_743_p2 = (window_0_0_read_as_fu_146 + window_1_0_read_as_fu_158);

assign tmp4_fu_749_p2 = (window_0_0_fu_150 + window_1_0_phi_fu_413_p4);

assign tmp_10_fu_502_p1 = tmp_3_mid2_v_fu_494_p3[0:0];

assign tmp_11_fu_642_p1 = y_assign_cast7_mid2_s_fu_634_p3[0:0];

assign tmp_12_fu_646_p1 = x_assign_mid2_fu_620_p3[0:0];

assign tmp_13_fu_761_p3 = a_assign_fu_755_p2[ap_const_lv32_1F];

assign tmp_1_i_i_fu_769_p2 = (ap_const_lv32_0 - a_assign_fu_755_p2);

assign tmp_3_fu_775_p4 = {{tmp_1_i_i_fu_769_p2[ap_const_lv32_15 : ap_const_lv32_2]}};

assign tmp_3_mid2_v_fu_494_p3 = ((exitcond_fu_474_p2[0:0] === 1'b1) ? y9_fu_488_p2 : y3_phi_fu_324_p4);

assign tmp_4_0_1_i_fu_715_p2 = ((window_0_0_fu_150 > window_0_0_read_as_fu_146) ? 1'b1 : 1'b0);

assign tmp_4_1_1_i_fu_822_p2 = ((maxValue_17_0_maxVal_reg_1045 < window_1_0_reg_410) ? 1'b1 : 1'b0);

assign tmp_4_1_i_fu_729_p2 = ((maxValue_0_1_maxVal_fu_721_p3 < window_1_0_read_as_fu_158) ? 1'b1 : 1'b0);

assign tmp_4_i_i_fu_837_p2 = (ap_const_lv21_0 - result_cast_fu_834_p1);

assign tmp_5_cast_fu_536_p1 = tmp_5_fu_530_p2;

assign tmp_5_fu_530_p2 = ($signed(ap_const_lv6_2B) + $signed(x4_cast9_fu_526_p1));

assign tmp_6_fu_785_p4 = {{a_assign_fu_755_p2[ap_const_lv32_15 : ap_const_lv32_2]}};

assign tmp_7_fu_665_p2 = (($signed(readCount_1_fu_166) < $signed(32'b11110010000)) ? 1'b1 : 1'b0);

assign tmp_9_fu_589_p1 = ctrl_read_reg_878[0:0];

assign tmp_data_V_2_fu_854_p3 = ((tmp_9_reg_1001[0:0] === 1'b1) ? result_1_cast_fu_850_p1 : sel_SEBB_i_fu_827_p3);

assign tmp_fu_656_p2 = (tmp_11_fu_642_p1 & tmp_12_fu_646_p1);

assign tmp_last_V_fu_862_p2 = ((writeCount_fu_816_p2 == ap_const_lv32_1E4) ? 1'b1 : 1'b0);

assign window_2_2_1_fu_568_p3 = ((cond1_reg_936[0:0] === 1'b1) ? window_2_2_7_fu_554_p3 : window_1_1_1_reg_343);

assign window_2_2_4_fu_575_p3 = ((cond_mid2_reg_920[0:0] === 1'b1) ? window_2_2_fu_561_p3 : window_1_2_1_reg_331);

assign window_2_2_5_fu_582_p3 = ((cond_mid2_reg_920[0:0] === 1'b1) ? window_2_2_1_fu_568_p3 : window_1_1_1_reg_343);

assign window_2_2_7_fu_554_p3 = ((tmp_10_reg_915[0:0] === 1'b1) ? lineBuffer_0_q0 : lineBuffer_1_q0);

assign window_2_2_fu_561_p3 = ((cond1_reg_936[0:0] === 1'b1) ? window_1_2_1_reg_331 : window_2_2_7_fu_554_p3);

assign writeCount_fu_816_p2 = (writeCount_1_fu_162 + ap_const_lv32_1);

assign x1_cast_fu_457_p1 = x1_reg_297;

assign x4_cast9_fu_526_p1 = x4_mid2_fu_480_p3;

assign x4_mid2_fu_480_p3 = ((exitcond_fu_474_p2[0:0] === 1'b1) ? ap_const_lv2_1 : x4_reg_355);

assign x_1_fu_434_p2 = (x_phi_fu_289_p4 + ap_const_lv6_1);

assign x_2_fu_451_p2 = (x1_phi_fu_301_p4 + ap_const_lv6_1);

assign x_3_fu_548_p2 = (ap_const_lv2_1 + x4_mid2_fu_480_p3);

assign x_4_fu_682_p2 = (x_assign_mid2_fu_620_p3 + ap_const_lv6_1);

assign x_assign_cast5_fu_650_p1 = x_assign_mid2_fu_620_p3;

assign x_assign_mid2_fu_620_p3 = ((exitcond2_fu_614_p2[0:0] === 1'b1) ? ap_const_lv6_0 : x_assign_reg_388);

assign x_cast_fu_440_p1 = x_reg_285;

assign y9_fu_488_p2 = (ap_const_lv2_1 + y3_phi_fu_324_p4);

assign y_assign_cast7_mid2_s_fu_634_p3 = ((exitcond2_fu_614_p2[0:0] === 1'b1) ? y_s_fu_628_p2 : y_assign_phi_fu_381_p4);

assign y_s_fu_628_p2 = (ap_const_lv6_1 + y_assign_phi_fu_381_p4);

endmodule //cnn_pool_d44x44_p2x2
