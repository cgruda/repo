// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cnn_pool_d4x4_p2x2,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.220000,HLS_SYN_LAT=37,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1214,HLS_SYN_LUT=2093}" *)

module cnn_pool_d4x4_p2x2 (
        ap_clk,
        ap_rst_n,
        inStream_TDATA,
        inStream_TVALID,
        inStream_TREADY,
        inStream_TKEEP,
        inStream_TSTRB,
        inStream_TUSER,
        inStream_TLAST,
        inStream_TID,
        inStream_TDEST,
        outStream_TDATA,
        outStream_TVALID,
        outStream_TREADY,
        outStream_TKEEP,
        outStream_TSTRB,
        outStream_TUSER,
        outStream_TLAST,
        outStream_TID,
        outStream_TDEST,
        s_axi_CTRL_AWVALID,
        s_axi_CTRL_AWREADY,
        s_axi_CTRL_AWADDR,
        s_axi_CTRL_WVALID,
        s_axi_CTRL_WREADY,
        s_axi_CTRL_WDATA,
        s_axi_CTRL_WSTRB,
        s_axi_CTRL_ARVALID,
        s_axi_CTRL_ARREADY,
        s_axi_CTRL_ARADDR,
        s_axi_CTRL_RVALID,
        s_axi_CTRL_RREADY,
        s_axi_CTRL_RDATA,
        s_axi_CTRL_RRESP,
        s_axi_CTRL_BVALID,
        s_axi_CTRL_BREADY,
        s_axi_CTRL_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 9'b1;
parameter    ap_ST_fsm_pp0_stage0 = 9'b10;
parameter    ap_ST_fsm_state4 = 9'b100;
parameter    ap_ST_fsm_pp1_stage0 = 9'b1000;
parameter    ap_ST_fsm_state7 = 9'b10000;
parameter    ap_ST_fsm_pp2_stage0 = 9'b100000;
parameter    ap_ST_fsm_state10 = 9'b1000000;
parameter    ap_ST_fsm_pp3_stage0 = 9'b10000000;
parameter    ap_ST_fsm_state16 = 9'b100000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_7 = 32'b111;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv3_2 = 3'b10;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv28_1 = 28'b1;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv21_0 = 21'b000000000000000000000;
parameter    ap_const_lv32_8 = 32'b1000;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (C_S_AXI_CTRL_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] inStream_TDATA;
input   inStream_TVALID;
output   inStream_TREADY;
input  [3:0] inStream_TKEEP;
input  [3:0] inStream_TSTRB;
input  [1:0] inStream_TUSER;
input  [0:0] inStream_TLAST;
input  [4:0] inStream_TID;
input  [5:0] inStream_TDEST;
output  [31:0] outStream_TDATA;
output   outStream_TVALID;
input   outStream_TREADY;
output  [3:0] outStream_TKEEP;
output  [3:0] outStream_TSTRB;
output  [1:0] outStream_TUSER;
output  [0:0] outStream_TLAST;
output  [4:0] outStream_TID;
output  [5:0] outStream_TDEST;
input   s_axi_CTRL_AWVALID;
output   s_axi_CTRL_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1 : 0] s_axi_CTRL_AWADDR;
input   s_axi_CTRL_WVALID;
output   s_axi_CTRL_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1 : 0] s_axi_CTRL_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1 : 0] s_axi_CTRL_WSTRB;
input   s_axi_CTRL_ARVALID;
output   s_axi_CTRL_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1 : 0] s_axi_CTRL_ARADDR;
output   s_axi_CTRL_RVALID;
input   s_axi_CTRL_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1 : 0] s_axi_CTRL_RDATA;
output  [1:0] s_axi_CTRL_RRESP;
output   s_axi_CTRL_BVALID;
input   s_axi_CTRL_BREADY;
output  [1:0] s_axi_CTRL_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg    ap_ready;
reg   [31:0] inStream_V_data_V_0_data_out;
wire    inStream_V_data_V_0_vld_in;
wire    inStream_V_data_V_0_vld_out;
wire    inStream_V_data_V_0_ack_in;
reg    inStream_V_data_V_0_ack_out;
reg   [31:0] inStream_V_data_V_0_payload_A;
reg   [31:0] inStream_V_data_V_0_payload_B;
reg    inStream_V_data_V_0_sel_rd;
reg    inStream_V_data_V_0_sel_wr;
wire    inStream_V_data_V_0_sel;
wire    inStream_V_data_V_0_load_A;
wire    inStream_V_data_V_0_load_B;
reg   [1:0] inStream_V_data_V_0_state;
wire    inStream_V_data_V_0_state_cmp_full;
wire    inStream_V_dest_V_0_vld_in;
reg    inStream_V_dest_V_0_ack_out;
reg   [1:0] inStream_V_dest_V_0_state;
reg   [31:0] outStream_V_data_V_1_data_out;
reg    outStream_V_data_V_1_vld_in;
wire    outStream_V_data_V_1_vld_out;
wire    outStream_V_data_V_1_ack_in;
wire    outStream_V_data_V_1_ack_out;
reg   [31:0] outStream_V_data_V_1_payload_A;
reg   [31:0] outStream_V_data_V_1_payload_B;
reg    outStream_V_data_V_1_sel_rd;
reg    outStream_V_data_V_1_sel_wr;
wire    outStream_V_data_V_1_sel;
wire    outStream_V_data_V_1_load_A;
wire    outStream_V_data_V_1_load_B;
reg   [1:0] outStream_V_data_V_1_state;
wire    outStream_V_data_V_1_state_cmp_full;
wire   [3:0] outStream_V_keep_V_1_data_out;
reg    outStream_V_keep_V_1_vld_in;
wire    outStream_V_keep_V_1_vld_out;
wire    outStream_V_keep_V_1_ack_in;
wire    outStream_V_keep_V_1_ack_out;
reg    outStream_V_keep_V_1_sel_rd;
wire    outStream_V_keep_V_1_sel;
reg   [1:0] outStream_V_keep_V_1_state;
wire   [3:0] outStream_V_strb_V_1_data_out;
reg    outStream_V_strb_V_1_vld_in;
wire    outStream_V_strb_V_1_vld_out;
wire    outStream_V_strb_V_1_ack_in;
wire    outStream_V_strb_V_1_ack_out;
reg    outStream_V_strb_V_1_sel_rd;
wire    outStream_V_strb_V_1_sel;
reg   [1:0] outStream_V_strb_V_1_state;
wire   [1:0] outStream_V_user_V_1_data_out;
reg    outStream_V_user_V_1_vld_in;
wire    outStream_V_user_V_1_vld_out;
wire    outStream_V_user_V_1_ack_in;
wire    outStream_V_user_V_1_ack_out;
reg    outStream_V_user_V_1_sel_rd;
wire    outStream_V_user_V_1_sel;
reg   [1:0] outStream_V_user_V_1_state;
reg   [0:0] outStream_V_last_V_1_data_out;
reg    outStream_V_last_V_1_vld_in;
wire    outStream_V_last_V_1_vld_out;
wire    outStream_V_last_V_1_ack_in;
wire    outStream_V_last_V_1_ack_out;
reg   [0:0] outStream_V_last_V_1_payload_A;
reg   [0:0] outStream_V_last_V_1_payload_B;
reg    outStream_V_last_V_1_sel_rd;
reg    outStream_V_last_V_1_sel_wr;
wire    outStream_V_last_V_1_sel;
wire    outStream_V_last_V_1_load_A;
wire    outStream_V_last_V_1_load_B;
reg   [1:0] outStream_V_last_V_1_state;
wire    outStream_V_last_V_1_state_cmp_full;
wire   [4:0] outStream_V_id_V_1_data_out;
reg    outStream_V_id_V_1_vld_in;
wire    outStream_V_id_V_1_vld_out;
wire    outStream_V_id_V_1_ack_in;
wire    outStream_V_id_V_1_ack_out;
reg    outStream_V_id_V_1_sel_rd;
wire    outStream_V_id_V_1_sel;
reg   [1:0] outStream_V_id_V_1_state;
wire   [5:0] outStream_V_dest_V_1_data_out;
reg    outStream_V_dest_V_1_vld_in;
wire    outStream_V_dest_V_1_vld_out;
wire    outStream_V_dest_V_1_ack_in;
wire    outStream_V_dest_V_1_ack_out;
reg    outStream_V_dest_V_1_sel_rd;
wire    outStream_V_dest_V_1_sel;
reg   [1:0] outStream_V_dest_V_1_state;
wire   [31:0] ctrl;
reg    inStream_TDATA_blk_n;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] exitcond1_reg_1290;
wire   [0:0] ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
reg   [0:0] exitcond4_reg_1315;
wire   [0:0] ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
reg   [0:0] exitcond_flatten8_reg_1462;
reg   [0:0] icmp_reg_1471;
reg    outStream_TDATA_blk_n;
reg    ap_enable_reg_pp3_iter3;
reg   [0:0] tmp_5_reg_1480;
reg    ap_enable_reg_pp3_iter4;
reg   [0:0] ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480;
reg   [31:0] lineBuffer_0_3_reg_226;
reg   [31:0] lineBuffer_0_2_reg_238;
reg   [2:0] x_reg_250;
reg   [31:0] lineBuffer_1_3_reg_261;
reg   [31:0] lineBuffer_1_2_reg_273;
reg   [31:0] lineBuffer_1_3_5_reg_285;
reg   [31:0] lineBuffer_1_3_8_reg_297;
reg   [2:0] x1_reg_309;
reg   [2:0] indvar_flatten_reg_320;
reg   [1:0] y3_reg_331;
reg   [31:0] window_1_2_1_reg_342;
reg   [31:0] window_1_1_1_reg_354;
reg   [1:0] x4_reg_366;
reg   [4:0] indvar_flatten6_reg_377;
reg   [2:0] y_assign_reg_388;
reg   [31:0] lineBuffer_1_3_3_reg_399;
reg   [31:0] lineBuffer_1_2_3_reg_409;
reg   [31:0] lineBuffer_1_3_17_reg_419;
reg   [31:0] lineBuffer_1_3_1_reg_429;
reg   [31:0] lineBuffer_0_3_3_reg_439;
reg   [31:0] lineBuffer_0_2_s_reg_449;
reg   [31:0] window_1_1_reg_459;
reg   [31:0] window_1_0_reg_470;
reg   [2:0] x_assign_reg_482;
reg   [31:0] ctrl_read_reg_1285;
wire   [0:0] exitcond1_fu_497_p2;
wire   [0:0] cond_fu_507_p2;
reg   [0:0] cond_reg_1294;
wire   [2:0] x_1_fu_513_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] lineBuffer_0_3_1_fu_519_p3;
wire   [31:0] lineBuffer_0_3_4_fu_526_p3;
wire   [0:0] exitcond4_fu_533_p2;
wire   [2:0] x_2_fu_539_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [1:0] tmp_9_fu_545_p1;
reg   [1:0] tmp_9_reg_1324;
wire   [31:0] lineBuffer_1_3_2_fu_578_p3;
wire   [31:0] lineBuffer_1_3_4_fu_594_p3;
wire   [31:0] lineBuffer_1_3_7_fu_610_p3;
wire   [31:0] lineBuffer_1_3_9_fu_618_p3;
wire   [0:0] exitcond_flatten_fu_626_p2;
reg   [0:0] exitcond_flatten_reg_1351;
wire   [0:0] ap_CS_fsm_pp2_stage0;
wire   [2:0] indvar_flatten_next_fu_632_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [1:0] x4_mid2_fu_644_p3;
reg   [1:0] x4_mid2_reg_1360;
wire   [1:0] tmp_3_mid2_v_fu_658_p3;
reg   [1:0] tmp_3_mid2_v_reg_1369;
wire   [0:0] tmp_11_fu_666_p1;
reg   [0:0] tmp_11_reg_1374;
wire   [0:0] cond1_mid2_fu_682_p3;
reg   [0:0] cond1_mid2_reg_1380;
wire   [1:0] x_3_fu_690_p2;
wire   [31:0] window_2_2_3_fu_795_p3;
reg    ap_enable_reg_pp2_iter1;
wire   [31:0] window_2_2_4_fu_802_p3;
wire   [0:0] tmp_10_fu_809_p1;
reg   [0:0] tmp_10_reg_1457;
wire   [0:0] ap_CS_fsm_state10;
wire   [0:0] exitcond_flatten8_fu_822_p2;
reg    ap_condition_1080;
reg   [0:0] ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462;
reg   [0:0] ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462;
wire   [4:0] indvar_flatten_next7_fu_828_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] icmp_fu_847_p2;
wire   [2:0] y_assign_cast_mid2_v_fu_916_p3;
reg   [2:0] y_assign_cast_mid2_v_reg_1475;
reg    ap_enable_reg_pp3_iter2;
wire   [0:0] tmp_5_fu_932_p2;
wire   [31:0] maxValue_17_0_maxVal_fu_958_p3;
reg   [31:0] maxValue_17_0_maxVal_reg_1484;
wire   [0:0] tmp_14_fu_984_p3;
reg   [0:0] tmp_14_reg_1490;
wire   [19:0] result_fu_1018_p3;
reg   [19:0] result_reg_1495;
wire   [31:0] lineBuffer_0_3_15_fu_1050_p6;
reg   [31:0] lineBuffer_0_3_15_reg_1500;
wire   [31:0] lineBuffer_0_3_6_fu_1096_p3;
wire   [31:0] lineBuffer_0_3_7_fu_1112_p3;
wire   [31:0] lineBuffer_1_3_10_fu_1170_p3;
wire   [31:0] lineBuffer_1_3_11_fu_1186_p3;
wire   [31:0] lineBuffer_1_3_19_fu_1202_p3;
wire   [31:0] lineBuffer_1_3_20_fu_1210_p3;
wire   [2:0] x_4_fu_1218_p2;
wire   [31:0] tmp_data_V_fu_1265_p3;
wire   [0:0] tmp_last_V_fu_1273_p2;
wire   [0:0] ap_CS_fsm_state4;
wire   [0:0] ap_CS_fsm_state7;
reg   [1:0] y3_phi_fu_335_p4;
reg   [2:0] y_assign_phi_fu_392_p4;
reg   [31:0] window_1_0_phi_fu_473_p4;
reg   [31:0] window_0_0_read_as_fu_136;
reg   [31:0] window_0_0_fu_140;
reg   [31:0] window_0_1_fu_144;
wire   [31:0] windowRightCol_0_fu_1036_p6;
reg   [31:0] window_1_0_read_as_fu_148;
reg   [31:0] lineBuffer_0_3_5_fu_152;
wire   [31:0] lineBuffer_0_3_14_fu_1136_p3;
reg   [31:0] lineBuffer_0_3_8_fu_156;
wire   [31:0] lineBuffer_0_3_13_fu_1128_p3;
reg   [31:0] writeCount_1_fu_160;
wire   [31:0] writeCount_fu_1227_p2;
reg   [31:0] readCount_1_fu_164;
wire   [31:0] readCount_fu_853_p2;
reg   [31:0] window_2_2_2_fu_168;
wire   [1:0] tmp_7_fu_503_p1;
wire   [0:0] sel_tmp9_fu_559_p2;
wire   [0:0] sel_tmp7_fu_554_p2;
wire   [0:0] sel_tmp_fu_549_p2;
wire   [0:0] or_cond_fu_564_p2;
wire   [31:0] newSel_fu_570_p3;
wire   [31:0] newSel2_fu_586_p3;
wire   [31:0] lineBuffer_1_3_6_fu_602_p3;
wire   [0:0] exitcond_fu_638_p2;
wire   [1:0] y9_fu_652_p2;
wire   [0:0] cond1_mid1_fu_670_p2;
wire   [0:0] cond1_fu_676_p2;
wire   [0:0] sel_tmp5_fu_701_p2;
wire   [0:0] sel_tmp6_fu_706_p2;
wire   [0:0] sel_tmp8_fu_711_p2;
wire   [0:0] tmp1_fu_721_p2;
wire   [0:0] tmp_fu_716_p2;
wire   [0:0] sel_tmp1_fu_727_p2;
wire   [0:0] sel_tmp3_fu_741_p2;
wire   [0:0] sel_tmp13_mid2_fu_696_p2;
wire   [0:0] sel_tmp4_fu_746_p2;
wire   [31:0] sel_tmp2_fu_733_p3;
wire   [0:0] sel_tmp11_fu_760_p2;
wire   [0:0] sel_tmp12_fu_765_p2;
wire   [31:0] sel_tmp10_fu_752_p3;
wire   [31:0] window_2_2_7_fu_771_p3;
wire   [31:0] window_2_2_fu_779_p3;
wire   [31:0] window_2_2_1_fu_787_p3;
wire   [27:0] tmp_16_fu_837_p4;
wire   [0:0] exitcond2_fu_896_p2;
wire   [2:0] y_s_fu_910_p2;
wire   [2:0] x_assign_mid2_fu_902_p3;
wire   [0:0] tmp_12_fu_924_p1;
wire   [0:0] tmp_13_fu_928_p1;
wire   [0:0] tmp_4_0_1_i_fu_938_p2;
wire   [31:0] maxValue_0_1_maxVal_fu_944_p3;
wire   [0:0] tmp_4_1_i_fu_952_p2;
wire   [31:0] tmp7_fu_972_p2;
wire   [31:0] tmp6_fu_966_p2;
wire   [31:0] a_assign_fu_978_p2;
wire   [31:0] tmp_1_i_i_fu_992_p2;
wire   [19:0] tmp_3_fu_998_p4;
wire   [19:0] tmp_6_fu_1008_p4;
wire   [1:0] tmp_15_fu_1032_p1;
wire   [0:0] sel_tmp15_fu_1076_p2;
wire   [0:0] sel_tmp14_fu_1070_p2;
wire   [0:0] sel_tmp13_fu_1064_p2;
wire   [0:0] or_cond2_fu_1082_p2;
wire   [31:0] newSel4_fu_1088_p3;
wire   [31:0] newSel6_fu_1104_p3;
wire   [31:0] lineBuffer_0_3_9_fu_1120_p3;
wire   [31:0] newSel8_fu_1162_p3;
wire   [31:0] newSel1_fu_1178_p3;
wire   [31:0] lineBuffer_1_3_18_fu_1194_p3;
wire   [0:0] tmp_4_1_1_i_fu_1233_p2;
wire   [20:0] result_cast_fu_1245_p1;
wire   [20:0] tmp_4_i_i_fu_1248_p2;
wire   [20:0] result_1_fu_1254_p3;
wire  signed [31:0] result_1_cast_fu_1261_p1;
wire   [31:0] sel_SEBB_i_fu_1238_p3;
wire   [0:0] ap_CS_fsm_state16;
reg    ap_condition_1749;
reg   [8:0] ap_NS_fsm;
reg    ap_condition_1091;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'b1;
#0 inStream_V_data_V_0_sel_rd = 1'b0;
#0 inStream_V_data_V_0_sel_wr = 1'b0;
#0 inStream_V_data_V_0_state = 2'b00;
#0 inStream_V_dest_V_0_state = 2'b00;
#0 outStream_V_data_V_1_sel_rd = 1'b0;
#0 outStream_V_data_V_1_sel_wr = 1'b0;
#0 outStream_V_data_V_1_state = 2'b00;
#0 outStream_V_keep_V_1_sel_rd = 1'b0;
#0 outStream_V_keep_V_1_state = 2'b00;
#0 outStream_V_strb_V_1_sel_rd = 1'b0;
#0 outStream_V_strb_V_1_state = 2'b00;
#0 outStream_V_user_V_1_sel_rd = 1'b0;
#0 outStream_V_user_V_1_state = 2'b00;
#0 outStream_V_last_V_1_sel_rd = 1'b0;
#0 outStream_V_last_V_1_sel_wr = 1'b0;
#0 outStream_V_last_V_1_state = 2'b00;
#0 outStream_V_id_V_1_sel_rd = 1'b0;
#0 outStream_V_id_V_1_state = 2'b00;
#0 outStream_V_dest_V_1_sel_rd = 1'b0;
#0 outStream_V_dest_V_1_state = 2'b00;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
end

cnn_pool_d4x4_p2x2_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
cnn_pool_d4x4_p2x2_CTRL_s_axi_U(
    .AWVALID(s_axi_CTRL_AWVALID),
    .AWREADY(s_axi_CTRL_AWREADY),
    .AWADDR(s_axi_CTRL_AWADDR),
    .WVALID(s_axi_CTRL_WVALID),
    .WREADY(s_axi_CTRL_WREADY),
    .WDATA(s_axi_CTRL_WDATA),
    .WSTRB(s_axi_CTRL_WSTRB),
    .ARVALID(s_axi_CTRL_ARVALID),
    .ARREADY(s_axi_CTRL_ARREADY),
    .ARADDR(s_axi_CTRL_ARADDR),
    .RVALID(s_axi_CTRL_RVALID),
    .RREADY(s_axi_CTRL_RREADY),
    .RDATA(s_axi_CTRL_RDATA),
    .RRESP(s_axi_CTRL_RRESP),
    .BVALID(s_axi_CTRL_BVALID),
    .BREADY(s_axi_CTRL_BREADY),
    .BRESP(s_axi_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .ctrl(ctrl)
);

cnn_pool_d4x4_p2xbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
cnn_pool_d4x4_p2xbkb_U0(
    .din1(lineBuffer_0_3_5_fu_152),
    .din2(lineBuffer_0_3_8_fu_156),
    .din3(lineBuffer_0_2_s_reg_449),
    .din4(lineBuffer_0_3_3_reg_439),
    .din5(tmp_15_fu_1032_p1),
    .dout(windowRightCol_0_fu_1036_p6)
);

cnn_pool_d4x4_p2xbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
cnn_pool_d4x4_p2xbkb_U1(
    .din1(lineBuffer_1_3_1_reg_429),
    .din2(lineBuffer_1_3_17_reg_419),
    .din3(lineBuffer_1_2_3_reg_409),
    .din4(lineBuffer_1_3_3_reg_399),
    .din5(tmp_15_fu_1032_p1),
    .dout(lineBuffer_0_3_15_fu_1050_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1290) & (inStream_V_data_V_0_vld_out == 1'b0)) & ~(1'b0 == exitcond1_fu_497_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1290) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == exitcond1_fu_497_p2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1290) & (inStream_V_data_V_0_vld_out == 1'b0)) & ~(1'b0 == exitcond1_fu_497_p2)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1315) & (inStream_V_data_V_0_vld_out == 1'b0)) & ~(1'b0 == exitcond4_fu_533_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1315) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == exitcond4_fu_533_p2))) begin
            ap_enable_reg_pp1_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1315) & (inStream_V_data_V_0_vld_out == 1'b0)) & ~(1'b0 == exitcond4_fu_533_p2)))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~(1'b0 == exitcond_flatten_fu_626_p2))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond_flatten_fu_626_p2))) begin
            ap_enable_reg_pp2_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~(1'b0 == exitcond_flatten_fu_626_p2)))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))) & ~(1'b0 == exitcond_flatten8_fu_822_p2))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)))) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((ap_condition_1091 == 1'b1)) begin
            if (~(1'b1 == ap_enable_reg_pp3_iter1)) begin
                ap_enable_reg_pp3_iter3 <= 1'b0;
            end else if ((1'b1 == ap_enable_reg_pp3_iter1)) begin
                ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)))) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp3_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_data_V_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == inStream_V_data_V_0_ack_out) & (1'b1 == inStream_V_data_V_0_vld_out))) begin
            inStream_V_data_V_0_sel_rd <= ~inStream_V_data_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_data_V_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == inStream_V_data_V_0_vld_in) & (1'b1 == inStream_V_data_V_0_ack_in))) begin
            inStream_V_data_V_0_sel_wr <= ~inStream_V_data_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_data_V_0_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == inStream_V_data_V_0_vld_in) & (1'b1 == inStream_V_data_V_0_ack_out) & (inStream_V_data_V_0_state == ap_const_lv2_3)) | ((1'b0 == inStream_V_data_V_0_vld_in) & (inStream_V_data_V_0_state == ap_const_lv2_2)))) begin
            inStream_V_data_V_0_state <= ap_const_lv2_2;
        end else if ((((1'b1 == inStream_V_data_V_0_vld_in) & (1'b0 == inStream_V_data_V_0_ack_out) & (inStream_V_data_V_0_state == ap_const_lv2_3)) | ((1'b0 == inStream_V_data_V_0_ack_out) & (inStream_V_data_V_0_state == ap_const_lv2_1)))) begin
            inStream_V_data_V_0_state <= ap_const_lv2_1;
        end else if ((((1'b1 == inStream_V_data_V_0_vld_in) & (inStream_V_data_V_0_state == ap_const_lv2_2)) | ((1'b1 == inStream_V_data_V_0_ack_out) & (inStream_V_data_V_0_state == ap_const_lv2_1)) | ((inStream_V_data_V_0_state == ap_const_lv2_3) & ~((1'b1 == inStream_V_data_V_0_vld_in) & (1'b0 == inStream_V_data_V_0_ack_out)) & ~((1'b0 == inStream_V_data_V_0_vld_in) & (1'b1 == inStream_V_data_V_0_ack_out))))) begin
            inStream_V_data_V_0_state <= ap_const_lv2_3;
        end else begin
            inStream_V_data_V_0_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_dest_V_0_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == inStream_V_dest_V_0_vld_in) & (1'b1 == inStream_V_dest_V_0_ack_out) & (ap_const_lv2_3 == inStream_V_dest_V_0_state)) | ((1'b0 == inStream_V_dest_V_0_vld_in) & (ap_const_lv2_2 == inStream_V_dest_V_0_state)))) begin
            inStream_V_dest_V_0_state <= ap_const_lv2_2;
        end else if ((((1'b1 == inStream_V_dest_V_0_vld_in) & (1'b0 == inStream_V_dest_V_0_ack_out) & (ap_const_lv2_3 == inStream_V_dest_V_0_state)) | ((1'b0 == inStream_V_dest_V_0_ack_out) & (ap_const_lv2_1 == inStream_V_dest_V_0_state)))) begin
            inStream_V_dest_V_0_state <= ap_const_lv2_1;
        end else if ((((1'b1 == inStream_V_dest_V_0_vld_in) & (ap_const_lv2_2 == inStream_V_dest_V_0_state)) | ((1'b1 == inStream_V_dest_V_0_ack_out) & (ap_const_lv2_1 == inStream_V_dest_V_0_state)) | ((ap_const_lv2_3 == inStream_V_dest_V_0_state) & ~((1'b1 == inStream_V_dest_V_0_vld_in) & (1'b0 == inStream_V_dest_V_0_ack_out)) & ~((1'b0 == inStream_V_dest_V_0_vld_in) & (1'b1 == inStream_V_dest_V_0_ack_out))))) begin
            inStream_V_dest_V_0_state <= ap_const_lv2_3;
        end else begin
            inStream_V_dest_V_0_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_data_V_1_ack_out) & (1'b1 == outStream_V_data_V_1_vld_out))) begin
            outStream_V_data_V_1_sel_rd <= ~outStream_V_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_data_V_1_vld_in) & (1'b1 == outStream_V_data_V_1_ack_in))) begin
            outStream_V_data_V_1_sel_wr <= ~outStream_V_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_data_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_data_V_1_vld_in) & (1'b1 == outStream_V_data_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_data_V_1_state)) | ((1'b0 == outStream_V_data_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_data_V_1_state)))) begin
            outStream_V_data_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_data_V_1_vld_in) & (1'b0 == outStream_V_data_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_data_V_1_state)) | ((1'b0 == outStream_V_data_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_data_V_1_state)))) begin
            outStream_V_data_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_data_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_data_V_1_state)) | ((1'b1 == outStream_V_data_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_data_V_1_state)) | ((ap_const_lv2_3 == outStream_V_data_V_1_state) & ~((1'b1 == outStream_V_data_V_1_vld_in) & (1'b0 == outStream_V_data_V_1_ack_out)) & ~((1'b0 == outStream_V_data_V_1_vld_in) & (1'b1 == outStream_V_data_V_1_ack_out))))) begin
            outStream_V_data_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_data_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_dest_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_dest_V_1_ack_out) & (1'b1 == outStream_V_dest_V_1_vld_out))) begin
            outStream_V_dest_V_1_sel_rd <= ~outStream_V_dest_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_dest_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_dest_V_1_vld_in) & (1'b1 == outStream_V_dest_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_dest_V_1_state)) | ((1'b0 == outStream_V_dest_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_dest_V_1_state)))) begin
            outStream_V_dest_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_dest_V_1_vld_in) & (1'b0 == outStream_V_dest_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_dest_V_1_state)) | ((1'b0 == outStream_V_dest_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_dest_V_1_state)))) begin
            outStream_V_dest_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_dest_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_dest_V_1_state)) | ((1'b1 == outStream_V_dest_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_dest_V_1_state)) | ((ap_const_lv2_3 == outStream_V_dest_V_1_state) & ~((1'b1 == outStream_V_dest_V_1_vld_in) & (1'b0 == outStream_V_dest_V_1_ack_out)) & ~((1'b0 == outStream_V_dest_V_1_vld_in) & (1'b1 == outStream_V_dest_V_1_ack_out))))) begin
            outStream_V_dest_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_dest_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_id_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_id_V_1_ack_out) & (1'b1 == outStream_V_id_V_1_vld_out))) begin
            outStream_V_id_V_1_sel_rd <= ~outStream_V_id_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_id_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_id_V_1_vld_in) & (1'b1 == outStream_V_id_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_id_V_1_state)) | ((1'b0 == outStream_V_id_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_id_V_1_state)))) begin
            outStream_V_id_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_id_V_1_vld_in) & (1'b0 == outStream_V_id_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_id_V_1_state)) | ((1'b0 == outStream_V_id_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_id_V_1_state)))) begin
            outStream_V_id_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_id_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_id_V_1_state)) | ((1'b1 == outStream_V_id_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_id_V_1_state)) | ((ap_const_lv2_3 == outStream_V_id_V_1_state) & ~((1'b1 == outStream_V_id_V_1_vld_in) & (1'b0 == outStream_V_id_V_1_ack_out)) & ~((1'b0 == outStream_V_id_V_1_vld_in) & (1'b1 == outStream_V_id_V_1_ack_out))))) begin
            outStream_V_id_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_id_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_keep_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_keep_V_1_ack_out) & (1'b1 == outStream_V_keep_V_1_vld_out))) begin
            outStream_V_keep_V_1_sel_rd <= ~outStream_V_keep_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_keep_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_keep_V_1_vld_in) & (1'b1 == outStream_V_keep_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_keep_V_1_state)) | ((1'b0 == outStream_V_keep_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_keep_V_1_state)))) begin
            outStream_V_keep_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_keep_V_1_vld_in) & (1'b0 == outStream_V_keep_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_keep_V_1_state)) | ((1'b0 == outStream_V_keep_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_keep_V_1_state)))) begin
            outStream_V_keep_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_keep_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_keep_V_1_state)) | ((1'b1 == outStream_V_keep_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_keep_V_1_state)) | ((ap_const_lv2_3 == outStream_V_keep_V_1_state) & ~((1'b1 == outStream_V_keep_V_1_vld_in) & (1'b0 == outStream_V_keep_V_1_ack_out)) & ~((1'b0 == outStream_V_keep_V_1_vld_in) & (1'b1 == outStream_V_keep_V_1_ack_out))))) begin
            outStream_V_keep_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_keep_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_last_V_1_ack_out) & (1'b1 == outStream_V_last_V_1_vld_out))) begin
            outStream_V_last_V_1_sel_rd <= ~outStream_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_last_V_1_vld_in) & (1'b1 == outStream_V_last_V_1_ack_in))) begin
            outStream_V_last_V_1_sel_wr <= ~outStream_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_last_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_last_V_1_vld_in) & (1'b1 == outStream_V_last_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_last_V_1_state)) | ((1'b0 == outStream_V_last_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_last_V_1_state)))) begin
            outStream_V_last_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_last_V_1_vld_in) & (1'b0 == outStream_V_last_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_last_V_1_state)) | ((1'b0 == outStream_V_last_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_last_V_1_state)))) begin
            outStream_V_last_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_last_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_last_V_1_state)) | ((1'b1 == outStream_V_last_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_last_V_1_state)) | ((ap_const_lv2_3 == outStream_V_last_V_1_state) & ~((1'b1 == outStream_V_last_V_1_vld_in) & (1'b0 == outStream_V_last_V_1_ack_out)) & ~((1'b0 == outStream_V_last_V_1_vld_in) & (1'b1 == outStream_V_last_V_1_ack_out))))) begin
            outStream_V_last_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_last_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_strb_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_strb_V_1_ack_out) & (1'b1 == outStream_V_strb_V_1_vld_out))) begin
            outStream_V_strb_V_1_sel_rd <= ~outStream_V_strb_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_strb_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_strb_V_1_vld_in) & (1'b1 == outStream_V_strb_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_strb_V_1_state)) | ((1'b0 == outStream_V_strb_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_strb_V_1_state)))) begin
            outStream_V_strb_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_strb_V_1_vld_in) & (1'b0 == outStream_V_strb_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_strb_V_1_state)) | ((1'b0 == outStream_V_strb_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_strb_V_1_state)))) begin
            outStream_V_strb_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_strb_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_strb_V_1_state)) | ((1'b1 == outStream_V_strb_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_strb_V_1_state)) | ((ap_const_lv2_3 == outStream_V_strb_V_1_state) & ~((1'b1 == outStream_V_strb_V_1_vld_in) & (1'b0 == outStream_V_strb_V_1_ack_out)) & ~((1'b0 == outStream_V_strb_V_1_vld_in) & (1'b1 == outStream_V_strb_V_1_ack_out))))) begin
            outStream_V_strb_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_strb_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_user_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_user_V_1_ack_out) & (1'b1 == outStream_V_user_V_1_vld_out))) begin
            outStream_V_user_V_1_sel_rd <= ~outStream_V_user_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_user_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_user_V_1_vld_in) & (1'b1 == outStream_V_user_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_user_V_1_state)) | ((1'b0 == outStream_V_user_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_user_V_1_state)))) begin
            outStream_V_user_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_user_V_1_vld_in) & (1'b0 == outStream_V_user_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_user_V_1_state)) | ((1'b0 == outStream_V_user_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_user_V_1_state)))) begin
            outStream_V_user_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_user_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_user_V_1_state)) | ((1'b1 == outStream_V_user_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_user_V_1_state)) | ((ap_const_lv2_3 == outStream_V_user_V_1_state) & ~((1'b1 == outStream_V_user_V_1_vld_in) & (1'b0 == outStream_V_user_V_1_ack_out)) & ~((1'b0 == outStream_V_user_V_1_vld_in) & (1'b1 == outStream_V_user_V_1_ack_out))))) begin
            outStream_V_user_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_user_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond_flatten8_fu_822_p2))) begin
        indvar_flatten6_reg_377 <= indvar_flatten_next7_fu_828_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        indvar_flatten6_reg_377 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        indvar_flatten_reg_320 <= ap_const_lv3_0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond_flatten_fu_626_p2))) begin
        indvar_flatten_reg_320 <= indvar_flatten_next_fu_632_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462))) begin
        lineBuffer_0_2_s_reg_449 <= lineBuffer_0_3_7_fu_1112_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lineBuffer_0_2_s_reg_449 <= lineBuffer_0_2_reg_238;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462))) begin
        lineBuffer_0_3_3_reg_439 <= lineBuffer_0_3_6_fu_1096_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lineBuffer_0_3_3_reg_439 <= lineBuffer_0_3_reg_226;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462))) begin
        lineBuffer_1_2_3_reg_409 <= lineBuffer_1_3_11_fu_1186_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lineBuffer_1_2_3_reg_409 <= lineBuffer_1_2_reg_273;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462))) begin
        lineBuffer_1_3_17_reg_419 <= lineBuffer_1_3_19_fu_1202_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lineBuffer_1_3_17_reg_419 <= lineBuffer_1_3_5_reg_285;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462))) begin
        lineBuffer_1_3_1_reg_429 <= lineBuffer_1_3_20_fu_1210_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lineBuffer_1_3_1_reg_429 <= lineBuffer_1_3_8_reg_297;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462))) begin
        lineBuffer_1_3_3_reg_399 <= lineBuffer_1_3_10_fu_1170_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lineBuffer_1_3_3_reg_399 <= lineBuffer_1_3_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond_flatten8_fu_822_p2) & ~(1'b0 == icmp_fu_847_p2))) begin
        readCount_1_fu_164 <= readCount_fu_853_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        readCount_1_fu_164 <= ap_const_lv32_6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp3_iter3) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b0 == ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462))) begin
        window_1_0_reg_470 <= window_1_1_reg_459;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        window_1_0_reg_470 <= window_1_1_1_reg_354;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp3_iter3) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b0 == ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462))) begin
        window_1_1_reg_459 <= lineBuffer_0_3_15_reg_1500;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        window_1_1_reg_459 <= window_1_2_1_reg_342;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        writeCount_1_fu_160 <= writeCount_fu_1227_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        writeCount_1_fu_160 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        x1_reg_309 <= ap_const_lv3_0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1315) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == exitcond4_fu_533_p2))) begin
        x1_reg_309 <= x_2_fu_539_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        x4_reg_366 <= ap_const_lv2_1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond_flatten_fu_626_p2))) begin
        x4_reg_366 <= x_3_fu_690_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462))) begin
        x_assign_reg_482 <= x_4_fu_1218_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        x_assign_reg_482 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1290) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == exitcond1_fu_497_p2) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        x_reg_250 <= x_1_fu_513_p2;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        x_reg_250 <= ap_const_lv3_2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        y3_reg_331 <= ap_const_lv2_1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten_reg_1351))) begin
        y3_reg_331 <= tmp_3_mid2_v_reg_1369;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp3_iter3) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b0 == ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462))) begin
        y_assign_reg_388 <= y_assign_cast_mid2_v_reg_1475;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_assign_reg_388 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462 <= exitcond_flatten8_reg_1462;
        exitcond_flatten8_reg_1462 <= exitcond_flatten8_fu_822_p2;
    end
end

always @ (posedge ap_clk) begin
    if (~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)))) begin
        ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462 <= ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462;
        ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 <= tmp_5_reg_1480;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond_flatten_fu_626_p2))) begin
        cond1_mid2_reg_1380 <= cond1_mid2_fu_682_p3;
        tmp_11_reg_1374 <= tmp_11_fu_666_p1;
        x4_mid2_reg_1360 <= x4_mid2_fu_644_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1290) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == exitcond1_fu_497_p2))) begin
        cond_reg_1294 <= cond_fu_507_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        ctrl_read_reg_1285 <= ctrl;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1290) & (inStream_V_data_V_0_vld_out == 1'b0)))) begin
        exitcond1_reg_1290 <= exitcond1_fu_497_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1315) & (inStream_V_data_V_0_vld_out == 1'b0)))) begin
        exitcond4_reg_1315 <= exitcond4_fu_533_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp2_stage0)) begin
        exitcond_flatten_reg_1351 <= exitcond_flatten_fu_626_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b0 == exitcond_flatten8_fu_822_p2))) begin
        icmp_reg_1471 <= icmp_fu_847_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == inStream_V_data_V_0_load_A)) begin
        inStream_V_data_V_0_payload_A <= inStream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == inStream_V_data_V_0_load_B)) begin
        inStream_V_data_V_0_payload_B <= inStream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1290) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1290) & (inStream_V_data_V_0_vld_out == 1'b0)))) begin
        lineBuffer_0_2_reg_238 <= lineBuffer_0_3_4_fu_526_p3;
        lineBuffer_0_3_reg_226 <= lineBuffer_0_3_1_fu_519_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462))) begin
        lineBuffer_0_3_15_reg_1500 <= lineBuffer_0_3_15_fu_1050_p6;
        lineBuffer_0_3_5_fu_152 <= lineBuffer_0_3_14_fu_1136_p3;
        lineBuffer_0_3_8_fu_156 <= lineBuffer_0_3_13_fu_1128_p3;
        window_0_1_fu_144 <= windowRightCol_0_fu_1036_p6;
        y_assign_cast_mid2_v_reg_1475 <= y_assign_cast_mid2_v_fu_916_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1315) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1315) & (inStream_V_data_V_0_vld_out == 1'b0)))) begin
        lineBuffer_1_2_reg_273 <= lineBuffer_1_3_4_fu_594_p3;
        lineBuffer_1_3_5_reg_285 <= lineBuffer_1_3_7_fu_610_p3;
        lineBuffer_1_3_8_reg_297 <= lineBuffer_1_3_9_fu_618_p3;
        lineBuffer_1_3_reg_261 <= lineBuffer_1_3_2_fu_578_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462) & ~(1'b0 == tmp_5_fu_932_p2) & (1'b0 == tmp_10_reg_1457))) begin
        maxValue_17_0_maxVal_reg_1484 <= maxValue_17_0_maxVal_fu_958_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == outStream_V_data_V_1_load_A)) begin
        outStream_V_data_V_1_payload_A <= tmp_data_V_fu_1265_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == outStream_V_data_V_1_load_B)) begin
        outStream_V_data_V_1_payload_B <= tmp_data_V_fu_1265_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == outStream_V_last_V_1_load_A)) begin
        outStream_V_last_V_1_payload_A <= tmp_last_V_fu_1273_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == outStream_V_last_V_1_load_B)) begin
        outStream_V_last_V_1_payload_B <= tmp_last_V_fu_1273_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462) & ~(1'b0 == tmp_5_fu_932_p2) & ~(1'b0 == tmp_10_reg_1457))) begin
        result_reg_1495 <= result_fu_1018_p3;
        tmp_14_reg_1490 <= a_assign_fu_978_p2[ap_const_lv32_1F];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_10_reg_1457 <= tmp_10_fu_809_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond_flatten_fu_626_p2))) begin
        tmp_3_mid2_v_reg_1369 <= tmp_3_mid2_v_fu_658_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462))) begin
        tmp_5_reg_1480 <= tmp_5_fu_932_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1315) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == exitcond4_fu_533_p2))) begin
        tmp_9_reg_1324 <= tmp_9_fu_545_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter2))) begin
        window_0_0_fu_140 <= window_0_1_fu_144;
        window_0_0_read_as_fu_136 <= window_0_0_fu_140;
        window_1_0_read_as_fu_148 <= window_1_0_phi_fu_473_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten_reg_1351))) begin
        window_1_1_1_reg_354 <= window_2_2_4_fu_802_p3;
        window_1_2_1_reg_342 <= window_2_2_3_fu_795_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_flatten8_reg_1462) & ~(1'b0 == icmp_reg_1471) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        window_2_2_2_fu_168 <= inStream_V_data_V_0_data_out;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & ~(ap_condition_1749 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & ~(ap_condition_1749 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1290)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1315)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_flatten8_reg_1462) & ~(1'b0 == icmp_reg_1471)))) begin
        inStream_TDATA_blk_n = inStream_V_data_V_0_state[1'b0];
    end else begin
        inStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1290) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1290) & (inStream_V_data_V_0_vld_out == 1'b0))) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1315) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1315) & (inStream_V_data_V_0_vld_out == 1'b0))) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_flatten8_reg_1462) & ~(1'b0 == icmp_reg_1471) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)))))) begin
        inStream_V_data_V_0_ack_out = 1'b1;
    end else begin
        inStream_V_data_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == inStream_V_data_V_0_sel)) begin
        inStream_V_data_V_0_data_out = inStream_V_data_V_0_payload_B;
    end else begin
        inStream_V_data_V_0_data_out = inStream_V_data_V_0_payload_A;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1290) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1290) & (inStream_V_data_V_0_vld_out == 1'b0))) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1315) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1315) & (inStream_V_data_V_0_vld_out == 1'b0))) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_flatten8_reg_1462) & ~(1'b0 == icmp_reg_1471) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)))))) begin
        inStream_V_dest_V_0_ack_out = 1'b1;
    end else begin
        inStream_V_dest_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)))) begin
        outStream_TDATA_blk_n = outStream_V_data_V_1_state[1'b1];
    end else begin
        outStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == outStream_V_data_V_1_sel)) begin
        outStream_V_data_V_1_data_out = outStream_V_data_V_1_payload_B;
    end else begin
        outStream_V_data_V_1_data_out = outStream_V_data_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_data_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_dest_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_dest_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_id_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_id_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_keep_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_keep_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == outStream_V_last_V_1_sel)) begin
        outStream_V_last_V_1_data_out = outStream_V_last_V_1_payload_B;
    end else begin
        outStream_V_last_V_1_data_out = outStream_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_last_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_strb_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_strb_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_user_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_user_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter3) & (1'b0 == ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462))) begin
        window_1_0_phi_fu_473_p4 = window_1_1_reg_459;
    end else begin
        window_1_0_phi_fu_473_p4 = window_1_0_reg_470;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten_reg_1351))) begin
        y3_phi_fu_335_p4 = tmp_3_mid2_v_reg_1369;
    end else begin
        y3_phi_fu_335_p4 = y3_reg_331;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter3) & (1'b0 == ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462))) begin
        y_assign_phi_fu_392_p4 = y_assign_cast_mid2_v_reg_1475;
    end else begin
        y_assign_phi_fu_392_p4 = y_assign_reg_388;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~(~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1290) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond1_fu_497_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond1_reg_1290) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond1_fu_497_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~(~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1315) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == exitcond4_fu_533_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond4_reg_1315) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == exitcond4_fu_533_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp2_iter0) & ~(1'b0 == exitcond_flatten_fu_626_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp3_iter4) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))) & ~(1'b1 == ap_enable_reg_pp3_iter3)) & ~(~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b1 == ap_enable_reg_pp3_iter1) & ~(1'b1 == ap_enable_reg_pp3_iter3)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((1'b1 == ap_enable_reg_pp3_iter4) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))) & ~(1'b1 == ap_enable_reg_pp3_iter3)) | (~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b1 == ap_enable_reg_pp3_iter1) & ~(1'b1 == ap_enable_reg_pp3_iter3)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            if (~(ap_condition_1749 == 1'b1)) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_assign_fu_978_p2 = (tmp7_fu_972_p2 + tmp6_fu_966_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state16 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state7 = ap_CS_fsm[ap_const_lv32_4];

always @ (*) begin
    ap_condition_1080 = ((1'b0 == exitcond_flatten8_reg_1462) & ~(1'b0 == icmp_reg_1471) & (inStream_V_data_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_condition_1091 = ~(((1'b1 == ap_enable_reg_pp3_iter1) & (ap_condition_1080 == 1'b1)) | ((1'b1 == ap_enable_reg_pp3_iter3) & ~(1'b0 == tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter4) & ~(1'b0 == ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480) & (1'b0 == outStream_V_data_V_1_ack_in)));
end

always @ (*) begin
    ap_condition_1749 = ((outStream_V_data_V_1_ack_in == 1'b0) | (outStream_V_keep_V_1_ack_in == 1'b0) | (outStream_V_strb_V_1_ack_in == 1'b0) | (outStream_V_user_V_1_ack_in == 1'b0) | (outStream_V_last_V_1_ack_in == 1'b0) | (outStream_V_id_V_1_ack_in == 1'b0) | (outStream_V_dest_V_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cond1_fu_676_p2 = ((y3_phi_fu_335_p4 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign cond1_mid1_fu_670_p2 = ((y3_phi_fu_335_p4 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign cond1_mid2_fu_682_p3 = ((exitcond_fu_638_p2[0:0] === 1'b1) ? cond1_mid1_fu_670_p2 : cond1_fu_676_p2);

assign cond_fu_507_p2 = ((tmp_7_fu_503_p1 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign exitcond1_fu_497_p2 = ((x_reg_250 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign exitcond2_fu_896_p2 = ((x_assign_reg_482 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign exitcond4_fu_533_p2 = ((x1_reg_309 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign exitcond_flatten8_fu_822_p2 = ((indvar_flatten6_reg_377 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_626_p2 = ((indvar_flatten_reg_320 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign exitcond_fu_638_p2 = ((x4_reg_366 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign icmp_fu_847_p2 = (($signed(tmp_16_fu_837_p4) < $signed(28'b1)) ? 1'b1 : 1'b0);

assign inStream_TREADY = inStream_V_dest_V_0_state[1'b1];

assign inStream_V_data_V_0_ack_in = inStream_V_data_V_0_state[1'b1];

assign inStream_V_data_V_0_load_A = (inStream_V_data_V_0_state_cmp_full & ~inStream_V_data_V_0_sel_wr);

assign inStream_V_data_V_0_load_B = (inStream_V_data_V_0_sel_wr & inStream_V_data_V_0_state_cmp_full);

assign inStream_V_data_V_0_sel = inStream_V_data_V_0_sel_rd;

assign inStream_V_data_V_0_state_cmp_full = ((inStream_V_data_V_0_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign inStream_V_data_V_0_vld_in = inStream_TVALID;

assign inStream_V_data_V_0_vld_out = inStream_V_data_V_0_state[1'b0];

assign inStream_V_dest_V_0_vld_in = inStream_TVALID;

assign indvar_flatten_next7_fu_828_p2 = (indvar_flatten6_reg_377 + ap_const_lv5_1);

assign indvar_flatten_next_fu_632_p2 = (indvar_flatten_reg_320 + ap_const_lv3_1);

assign lineBuffer_0_3_13_fu_1128_p3 = ((sel_tmp15_fu_1076_p2[0:0] === 1'b1) ? lineBuffer_0_3_8_fu_156 : lineBuffer_0_3_9_fu_1120_p3);

assign lineBuffer_0_3_14_fu_1136_p3 = ((sel_tmp15_fu_1076_p2[0:0] === 1'b1) ? lineBuffer_0_3_15_fu_1050_p6 : lineBuffer_0_3_5_fu_152);

assign lineBuffer_0_3_1_fu_519_p3 = ((cond_reg_1294[0:0] === 1'b1) ? lineBuffer_0_3_reg_226 : inStream_V_data_V_0_data_out);

assign lineBuffer_0_3_4_fu_526_p3 = ((cond_reg_1294[0:0] === 1'b1) ? inStream_V_data_V_0_data_out : lineBuffer_0_2_reg_238);

assign lineBuffer_0_3_6_fu_1096_p3 = ((or_cond2_fu_1082_p2[0:0] === 1'b1) ? lineBuffer_0_3_3_reg_439 : newSel4_fu_1088_p3);

assign lineBuffer_0_3_7_fu_1112_p3 = ((or_cond2_fu_1082_p2[0:0] === 1'b1) ? lineBuffer_0_2_s_reg_449 : newSel6_fu_1104_p3);

assign lineBuffer_0_3_9_fu_1120_p3 = ((sel_tmp14_fu_1070_p2[0:0] === 1'b1) ? lineBuffer_0_3_15_fu_1050_p6 : lineBuffer_0_3_8_fu_156);

assign lineBuffer_1_3_10_fu_1170_p3 = ((or_cond2_fu_1082_p2[0:0] === 1'b1) ? lineBuffer_1_3_3_reg_399 : newSel8_fu_1162_p3);

assign lineBuffer_1_3_11_fu_1186_p3 = ((or_cond2_fu_1082_p2[0:0] === 1'b1) ? lineBuffer_1_2_3_reg_409 : newSel1_fu_1178_p3);

assign lineBuffer_1_3_18_fu_1194_p3 = ((sel_tmp14_fu_1070_p2[0:0] === 1'b1) ? window_2_2_2_fu_168 : lineBuffer_1_3_17_reg_419);

assign lineBuffer_1_3_19_fu_1202_p3 = ((sel_tmp15_fu_1076_p2[0:0] === 1'b1) ? lineBuffer_1_3_17_reg_419 : lineBuffer_1_3_18_fu_1194_p3);

assign lineBuffer_1_3_20_fu_1210_p3 = ((sel_tmp15_fu_1076_p2[0:0] === 1'b1) ? window_2_2_2_fu_168 : lineBuffer_1_3_1_reg_429);

assign lineBuffer_1_3_2_fu_578_p3 = ((or_cond_fu_564_p2[0:0] === 1'b1) ? lineBuffer_1_3_reg_261 : newSel_fu_570_p3);

assign lineBuffer_1_3_4_fu_594_p3 = ((or_cond_fu_564_p2[0:0] === 1'b1) ? lineBuffer_1_2_reg_273 : newSel2_fu_586_p3);

assign lineBuffer_1_3_6_fu_602_p3 = ((sel_tmp7_fu_554_p2[0:0] === 1'b1) ? inStream_V_data_V_0_data_out : lineBuffer_1_3_5_reg_285);

assign lineBuffer_1_3_7_fu_610_p3 = ((sel_tmp9_fu_559_p2[0:0] === 1'b1) ? lineBuffer_1_3_5_reg_285 : lineBuffer_1_3_6_fu_602_p3);

assign lineBuffer_1_3_9_fu_618_p3 = ((sel_tmp9_fu_559_p2[0:0] === 1'b1) ? inStream_V_data_V_0_data_out : lineBuffer_1_3_8_reg_297);

assign maxValue_0_1_maxVal_fu_944_p3 = ((tmp_4_0_1_i_fu_938_p2[0:0] === 1'b1) ? window_0_0_fu_140 : window_0_0_read_as_fu_136);

assign maxValue_17_0_maxVal_fu_958_p3 = ((tmp_4_1_i_fu_952_p2[0:0] === 1'b1) ? window_1_0_read_as_fu_148 : maxValue_0_1_maxVal_fu_944_p3);

assign newSel1_fu_1178_p3 = ((sel_tmp13_fu_1064_p2[0:0] === 1'b1) ? window_2_2_2_fu_168 : lineBuffer_1_2_3_reg_409);

assign newSel2_fu_586_p3 = ((sel_tmp_fu_549_p2[0:0] === 1'b1) ? inStream_V_data_V_0_data_out : lineBuffer_1_2_reg_273);

assign newSel4_fu_1088_p3 = ((sel_tmp13_fu_1064_p2[0:0] === 1'b1) ? lineBuffer_0_3_3_reg_439 : lineBuffer_0_3_15_fu_1050_p6);

assign newSel6_fu_1104_p3 = ((sel_tmp13_fu_1064_p2[0:0] === 1'b1) ? lineBuffer_0_3_15_fu_1050_p6 : lineBuffer_0_2_s_reg_449);

assign newSel8_fu_1162_p3 = ((sel_tmp13_fu_1064_p2[0:0] === 1'b1) ? lineBuffer_1_3_3_reg_399 : window_2_2_2_fu_168);

assign newSel_fu_570_p3 = ((sel_tmp_fu_549_p2[0:0] === 1'b1) ? lineBuffer_1_3_reg_261 : inStream_V_data_V_0_data_out);

assign or_cond2_fu_1082_p2 = (sel_tmp15_fu_1076_p2 | sel_tmp14_fu_1070_p2);

assign or_cond_fu_564_p2 = (sel_tmp9_fu_559_p2 | sel_tmp7_fu_554_p2);

assign outStream_TDATA = outStream_V_data_V_1_data_out;

assign outStream_TDEST = outStream_V_dest_V_1_data_out;

assign outStream_TID = outStream_V_id_V_1_data_out;

assign outStream_TKEEP = outStream_V_keep_V_1_data_out;

assign outStream_TLAST = outStream_V_last_V_1_data_out;

assign outStream_TSTRB = outStream_V_strb_V_1_data_out;

assign outStream_TUSER = outStream_V_user_V_1_data_out;

assign outStream_TVALID = outStream_V_dest_V_1_state[1'b0];

assign outStream_V_data_V_1_ack_in = outStream_V_data_V_1_state[1'b1];

assign outStream_V_data_V_1_ack_out = outStream_TREADY;

assign outStream_V_data_V_1_load_A = (outStream_V_data_V_1_state_cmp_full & ~outStream_V_data_V_1_sel_wr);

assign outStream_V_data_V_1_load_B = (outStream_V_data_V_1_sel_wr & outStream_V_data_V_1_state_cmp_full);

assign outStream_V_data_V_1_sel = outStream_V_data_V_1_sel_rd;

assign outStream_V_data_V_1_state_cmp_full = ((outStream_V_data_V_1_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign outStream_V_data_V_1_vld_out = outStream_V_data_V_1_state[1'b0];

assign outStream_V_dest_V_1_ack_in = outStream_V_dest_V_1_state[1'b1];

assign outStream_V_dest_V_1_ack_out = outStream_TREADY;

assign outStream_V_dest_V_1_data_out = ap_const_lv6_0;

assign outStream_V_dest_V_1_sel = outStream_V_dest_V_1_sel_rd;

assign outStream_V_dest_V_1_vld_out = outStream_V_dest_V_1_state[1'b0];

assign outStream_V_id_V_1_ack_in = outStream_V_id_V_1_state[1'b1];

assign outStream_V_id_V_1_ack_out = outStream_TREADY;

assign outStream_V_id_V_1_data_out = ap_const_lv5_0;

assign outStream_V_id_V_1_sel = outStream_V_id_V_1_sel_rd;

assign outStream_V_id_V_1_vld_out = outStream_V_id_V_1_state[1'b0];

assign outStream_V_keep_V_1_ack_in = outStream_V_keep_V_1_state[1'b1];

assign outStream_V_keep_V_1_ack_out = outStream_TREADY;

assign outStream_V_keep_V_1_data_out = ap_const_lv4_F;

assign outStream_V_keep_V_1_sel = outStream_V_keep_V_1_sel_rd;

assign outStream_V_keep_V_1_vld_out = outStream_V_keep_V_1_state[1'b0];

assign outStream_V_last_V_1_ack_in = outStream_V_last_V_1_state[1'b1];

assign outStream_V_last_V_1_ack_out = outStream_TREADY;

assign outStream_V_last_V_1_load_A = (outStream_V_last_V_1_state_cmp_full & ~outStream_V_last_V_1_sel_wr);

assign outStream_V_last_V_1_load_B = (outStream_V_last_V_1_sel_wr & outStream_V_last_V_1_state_cmp_full);

assign outStream_V_last_V_1_sel = outStream_V_last_V_1_sel_rd;

assign outStream_V_last_V_1_state_cmp_full = ((outStream_V_last_V_1_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign outStream_V_last_V_1_vld_out = outStream_V_last_V_1_state[1'b0];

assign outStream_V_strb_V_1_ack_in = outStream_V_strb_V_1_state[1'b1];

assign outStream_V_strb_V_1_ack_out = outStream_TREADY;

assign outStream_V_strb_V_1_data_out = ap_const_lv4_0;

assign outStream_V_strb_V_1_sel = outStream_V_strb_V_1_sel_rd;

assign outStream_V_strb_V_1_vld_out = outStream_V_strb_V_1_state[1'b0];

assign outStream_V_user_V_1_ack_in = outStream_V_user_V_1_state[1'b1];

assign outStream_V_user_V_1_ack_out = outStream_TREADY;

assign outStream_V_user_V_1_data_out = ap_const_lv2_0;

assign outStream_V_user_V_1_sel = outStream_V_user_V_1_sel_rd;

assign outStream_V_user_V_1_vld_out = outStream_V_user_V_1_state[1'b0];

assign readCount_fu_853_p2 = (readCount_1_fu_164 + ap_const_lv32_1);

assign result_1_cast_fu_1261_p1 = $signed(result_1_fu_1254_p3);

assign result_1_fu_1254_p3 = ((tmp_14_reg_1490[0:0] === 1'b1) ? tmp_4_i_i_fu_1248_p2 : result_cast_fu_1245_p1);

assign result_cast_fu_1245_p1 = result_reg_1495;

assign result_fu_1018_p3 = ((tmp_14_fu_984_p3[0:0] === 1'b1) ? tmp_3_fu_998_p4 : tmp_6_fu_1008_p4);

assign sel_SEBB_i_fu_1238_p3 = ((tmp_4_1_1_i_fu_1233_p2[0:0] === 1'b1) ? window_1_0_reg_470 : maxValue_17_0_maxVal_reg_1484);

assign sel_tmp10_fu_752_p3 = ((sel_tmp4_fu_746_p2[0:0] === 1'b1) ? lineBuffer_1_3_5_reg_285 : sel_tmp2_fu_733_p3);

assign sel_tmp11_fu_760_p2 = ((x4_mid2_reg_1360 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign sel_tmp12_fu_765_p2 = (sel_tmp11_fu_760_p2 & sel_tmp13_mid2_fu_696_p2);

assign sel_tmp13_fu_1064_p2 = ((tmp_15_fu_1032_p1 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign sel_tmp13_mid2_fu_696_p2 = (tmp_11_reg_1374 ^ 1'b1);

assign sel_tmp14_fu_1070_p2 = ((tmp_15_fu_1032_p1 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign sel_tmp15_fu_1076_p2 = ((tmp_15_fu_1032_p1 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign sel_tmp1_fu_727_p2 = (tmp1_fu_721_p2 & tmp_fu_716_p2);

assign sel_tmp2_fu_733_p3 = ((sel_tmp1_fu_727_p2[0:0] === 1'b1) ? lineBuffer_0_3_reg_226 : lineBuffer_1_3_reg_261);

assign sel_tmp3_fu_741_p2 = ((x4_mid2_reg_1360 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign sel_tmp4_fu_746_p2 = (sel_tmp3_fu_741_p2 & sel_tmp13_mid2_fu_696_p2);

assign sel_tmp5_fu_701_p2 = ((x4_mid2_reg_1360 != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign sel_tmp6_fu_706_p2 = ((x4_mid2_reg_1360 != ap_const_lv2_2) ? 1'b1 : 1'b0);

assign sel_tmp7_fu_554_p2 = ((tmp_9_reg_1324 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign sel_tmp8_fu_711_p2 = ((x4_mid2_reg_1360 != ap_const_lv2_3) ? 1'b1 : 1'b0);

assign sel_tmp9_fu_559_p2 = ((tmp_9_reg_1324 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign sel_tmp_fu_549_p2 = ((tmp_9_reg_1324 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign tmp1_fu_721_p2 = (sel_tmp6_fu_706_p2 & sel_tmp8_fu_711_p2);

assign tmp6_fu_966_p2 = (window_0_0_read_as_fu_136 + window_1_0_read_as_fu_148);

assign tmp7_fu_972_p2 = (window_0_0_fu_140 + window_1_0_phi_fu_473_p4);

assign tmp_10_fu_809_p1 = ctrl_read_reg_1285[0:0];

assign tmp_11_fu_666_p1 = tmp_3_mid2_v_fu_658_p3[0:0];

assign tmp_12_fu_924_p1 = y_assign_cast_mid2_v_fu_916_p3[0:0];

assign tmp_13_fu_928_p1 = x_assign_mid2_fu_902_p3[0:0];

assign tmp_14_fu_984_p3 = a_assign_fu_978_p2[ap_const_lv32_1F];

assign tmp_15_fu_1032_p1 = x_assign_mid2_fu_902_p3[1:0];

assign tmp_16_fu_837_p4 = {{readCount_1_fu_164[ap_const_lv32_1F : ap_const_lv32_4]}};

assign tmp_1_i_i_fu_992_p2 = (ap_const_lv32_0 - a_assign_fu_978_p2);

assign tmp_3_fu_998_p4 = {{tmp_1_i_i_fu_992_p2[ap_const_lv32_15 : ap_const_lv32_2]}};

assign tmp_3_mid2_v_fu_658_p3 = ((exitcond_fu_638_p2[0:0] === 1'b1) ? y9_fu_652_p2 : y3_phi_fu_335_p4);

assign tmp_4_0_1_i_fu_938_p2 = ((window_0_0_fu_140 > window_0_0_read_as_fu_136) ? 1'b1 : 1'b0);

assign tmp_4_1_1_i_fu_1233_p2 = ((maxValue_17_0_maxVal_reg_1484 < window_1_0_reg_470) ? 1'b1 : 1'b0);

assign tmp_4_1_i_fu_952_p2 = ((maxValue_0_1_maxVal_fu_944_p3 < window_1_0_read_as_fu_148) ? 1'b1 : 1'b0);

assign tmp_4_i_i_fu_1248_p2 = (ap_const_lv21_0 - result_cast_fu_1245_p1);

assign tmp_5_fu_932_p2 = (tmp_12_fu_924_p1 & tmp_13_fu_928_p1);

assign tmp_6_fu_1008_p4 = {{a_assign_fu_978_p2[ap_const_lv32_15 : ap_const_lv32_2]}};

assign tmp_7_fu_503_p1 = x_reg_250[1:0];

assign tmp_9_fu_545_p1 = x1_reg_309[1:0];

assign tmp_data_V_fu_1265_p3 = ((tmp_10_reg_1457[0:0] === 1'b1) ? result_1_cast_fu_1261_p1 : sel_SEBB_i_fu_1238_p3);

assign tmp_fu_716_p2 = (tmp_11_reg_1374 & sel_tmp5_fu_701_p2);

assign tmp_last_V_fu_1273_p2 = ((writeCount_fu_1227_p2 == ap_const_lv32_4) ? 1'b1 : 1'b0);

assign window_2_2_1_fu_787_p3 = ((sel_tmp11_fu_760_p2[0:0] === 1'b1) ? window_2_2_7_fu_771_p3 : window_1_1_1_reg_354);

assign window_2_2_3_fu_795_p3 = ((cond1_mid2_reg_1380[0:0] === 1'b1) ? window_2_2_fu_779_p3 : window_1_2_1_reg_342);

assign window_2_2_4_fu_802_p3 = ((cond1_mid2_reg_1380[0:0] === 1'b1) ? window_2_2_1_fu_787_p3 : window_1_1_1_reg_354);

assign window_2_2_7_fu_771_p3 = ((sel_tmp12_fu_765_p2[0:0] === 1'b1) ? lineBuffer_1_3_8_reg_297 : sel_tmp10_fu_752_p3);

assign window_2_2_fu_779_p3 = ((sel_tmp11_fu_760_p2[0:0] === 1'b1) ? window_1_2_1_reg_342 : sel_tmp10_fu_752_p3);

assign writeCount_fu_1227_p2 = (writeCount_1_fu_160 + ap_const_lv32_1);

assign x4_mid2_fu_644_p3 = ((exitcond_fu_638_p2[0:0] === 1'b1) ? ap_const_lv2_1 : x4_reg_366);

assign x_1_fu_513_p2 = (ap_const_lv3_1 + x_reg_250);

assign x_2_fu_539_p2 = (x1_reg_309 + ap_const_lv3_1);

assign x_3_fu_690_p2 = (ap_const_lv2_1 + x4_mid2_fu_644_p3);

assign x_4_fu_1218_p2 = (x_assign_mid2_fu_902_p3 + ap_const_lv3_1);

assign x_assign_mid2_fu_902_p3 = ((exitcond2_fu_896_p2[0:0] === 1'b1) ? ap_const_lv3_0 : x_assign_reg_482);

assign y9_fu_652_p2 = (ap_const_lv2_1 + y3_phi_fu_335_p4);

assign y_assign_cast_mid2_v_fu_916_p3 = ((exitcond2_fu_896_p2[0:0] === 1'b1) ? y_s_fu_910_p2 : y_assign_phi_fu_392_p4);

assign y_s_fu_910_p2 = (ap_const_lv3_1 + y_assign_phi_fu_392_p4);

endmodule //cnn_pool_d4x4_p2x2
