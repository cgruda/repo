-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_pool_d4x4_p2x2 is
generic (
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    inStream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    inStream_TVALID : IN STD_LOGIC;
    inStream_TREADY : OUT STD_LOGIC;
    inStream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    inStream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    inStream_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
    inStream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    inStream_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    inStream_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
    outStream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    outStream_TVALID : OUT STD_LOGIC;
    outStream_TREADY : IN STD_LOGIC;
    outStream_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    outStream_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    outStream_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
    outStream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    outStream_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    outStream_TDEST : OUT STD_LOGIC_VECTOR (5 downto 0);
    s_axi_CTRL_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_WVALID : IN STD_LOGIC;
    s_axi_CTRL_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_RREADY : IN STD_LOGIC;
    s_axi_CTRL_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of cnn_pool_d4x4_p2x2 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "cnn_pool_d4x4_p2x2,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.220000,HLS_SYN_LAT=37,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1214,HLS_SYN_LUT=2093}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv28_1 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal inStream_V_data_V_0_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal inStream_V_data_V_0_vld_in : STD_LOGIC;
    signal inStream_V_data_V_0_vld_out : STD_LOGIC;
    signal inStream_V_data_V_0_ack_in : STD_LOGIC;
    signal inStream_V_data_V_0_ack_out : STD_LOGIC;
    signal inStream_V_data_V_0_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal inStream_V_data_V_0_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal inStream_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal inStream_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal inStream_V_data_V_0_sel : STD_LOGIC;
    signal inStream_V_data_V_0_load_A : STD_LOGIC;
    signal inStream_V_data_V_0_load_B : STD_LOGIC;
    signal inStream_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal inStream_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal inStream_V_dest_V_0_vld_in : STD_LOGIC;
    signal inStream_V_dest_V_0_ack_out : STD_LOGIC;
    signal inStream_V_dest_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal outStream_V_data_V_1_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal outStream_V_data_V_1_vld_in : STD_LOGIC;
    signal outStream_V_data_V_1_vld_out : STD_LOGIC;
    signal outStream_V_data_V_1_ack_in : STD_LOGIC;
    signal outStream_V_data_V_1_ack_out : STD_LOGIC;
    signal outStream_V_data_V_1_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal outStream_V_data_V_1_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal outStream_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal outStream_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal outStream_V_data_V_1_sel : STD_LOGIC;
    signal outStream_V_data_V_1_load_A : STD_LOGIC;
    signal outStream_V_data_V_1_load_B : STD_LOGIC;
    signal outStream_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal outStream_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal outStream_V_keep_V_1_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal outStream_V_keep_V_1_vld_in : STD_LOGIC;
    signal outStream_V_keep_V_1_vld_out : STD_LOGIC;
    signal outStream_V_keep_V_1_ack_in : STD_LOGIC;
    signal outStream_V_keep_V_1_ack_out : STD_LOGIC;
    signal outStream_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal outStream_V_keep_V_1_sel : STD_LOGIC;
    signal outStream_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal outStream_V_strb_V_1_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal outStream_V_strb_V_1_vld_in : STD_LOGIC;
    signal outStream_V_strb_V_1_vld_out : STD_LOGIC;
    signal outStream_V_strb_V_1_ack_in : STD_LOGIC;
    signal outStream_V_strb_V_1_ack_out : STD_LOGIC;
    signal outStream_V_strb_V_1_sel_rd : STD_LOGIC := '0';
    signal outStream_V_strb_V_1_sel : STD_LOGIC;
    signal outStream_V_strb_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal outStream_V_user_V_1_data_out : STD_LOGIC_VECTOR (1 downto 0);
    signal outStream_V_user_V_1_vld_in : STD_LOGIC;
    signal outStream_V_user_V_1_vld_out : STD_LOGIC;
    signal outStream_V_user_V_1_ack_in : STD_LOGIC;
    signal outStream_V_user_V_1_ack_out : STD_LOGIC;
    signal outStream_V_user_V_1_sel_rd : STD_LOGIC := '0';
    signal outStream_V_user_V_1_sel : STD_LOGIC;
    signal outStream_V_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal outStream_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal outStream_V_last_V_1_vld_in : STD_LOGIC;
    signal outStream_V_last_V_1_vld_out : STD_LOGIC;
    signal outStream_V_last_V_1_ack_in : STD_LOGIC;
    signal outStream_V_last_V_1_ack_out : STD_LOGIC;
    signal outStream_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal outStream_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal outStream_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal outStream_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal outStream_V_last_V_1_sel : STD_LOGIC;
    signal outStream_V_last_V_1_load_A : STD_LOGIC;
    signal outStream_V_last_V_1_load_B : STD_LOGIC;
    signal outStream_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal outStream_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal outStream_V_id_V_1_data_out : STD_LOGIC_VECTOR (4 downto 0);
    signal outStream_V_id_V_1_vld_in : STD_LOGIC;
    signal outStream_V_id_V_1_vld_out : STD_LOGIC;
    signal outStream_V_id_V_1_ack_in : STD_LOGIC;
    signal outStream_V_id_V_1_ack_out : STD_LOGIC;
    signal outStream_V_id_V_1_sel_rd : STD_LOGIC := '0';
    signal outStream_V_id_V_1_sel : STD_LOGIC;
    signal outStream_V_id_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal outStream_V_dest_V_1_data_out : STD_LOGIC_VECTOR (5 downto 0);
    signal outStream_V_dest_V_1_vld_in : STD_LOGIC;
    signal outStream_V_dest_V_1_vld_out : STD_LOGIC;
    signal outStream_V_dest_V_1_ack_in : STD_LOGIC;
    signal outStream_V_dest_V_1_ack_out : STD_LOGIC;
    signal outStream_V_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal outStream_V_dest_V_1_sel : STD_LOGIC;
    signal outStream_V_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ctrl : STD_LOGIC_VECTOR (31 downto 0);
    signal inStream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal exitcond1_reg_1290 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal exitcond4_reg_1315 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal exitcond_flatten8_reg_1462 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1471 : STD_LOGIC_VECTOR (0 downto 0);
    signal outStream_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp3_iter3 : STD_LOGIC := '0';
    signal tmp_5_reg_1480 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp3_iter4 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 : STD_LOGIC_VECTOR (0 downto 0);
    signal lineBuffer_0_3_reg_226 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_0_2_reg_238 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_reg_250 : STD_LOGIC_VECTOR (2 downto 0);
    signal lineBuffer_1_3_reg_261 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_1_2_reg_273 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_1_3_5_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_1_3_8_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal x1_reg_309 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_reg_320 : STD_LOGIC_VECTOR (2 downto 0);
    signal y3_reg_331 : STD_LOGIC_VECTOR (1 downto 0);
    signal window_1_2_1_reg_342 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_1_1_1_reg_354 : STD_LOGIC_VECTOR (31 downto 0);
    signal x4_reg_366 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten6_reg_377 : STD_LOGIC_VECTOR (4 downto 0);
    signal y_assign_reg_388 : STD_LOGIC_VECTOR (2 downto 0);
    signal lineBuffer_1_3_3_reg_399 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_1_2_3_reg_409 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_1_3_17_reg_419 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_1_3_1_reg_429 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_0_3_3_reg_439 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_0_2_s_reg_449 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_1_1_reg_459 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_1_0_reg_470 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_reg_482 : STD_LOGIC_VECTOR (2 downto 0);
    signal ctrl_read_reg_1285 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond1_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_reg_1294 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_1_fu_513_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal lineBuffer_0_3_1_fu_519_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_0_3_4_fu_526_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond4_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_2_fu_539_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal tmp_9_fu_545_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_9_reg_1324 : STD_LOGIC_VECTOR (1 downto 0);
    signal lineBuffer_1_3_2_fu_578_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_1_3_4_fu_594_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_1_3_7_fu_610_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_1_3_9_fu_618_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_flatten_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1351 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal indvar_flatten_next_fu_632_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal x4_mid2_fu_644_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal x4_mid2_reg_1360 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_mid2_v_fu_658_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_mid2_v_reg_1369 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_fu_666_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_1374 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond1_mid2_fu_682_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond1_mid2_reg_1380 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_3_fu_690_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal window_2_2_3_fu_795_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal window_2_2_4_fu_802_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_809_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1457 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal exitcond_flatten8_fu_822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_1080 : BOOLEAN;
    signal ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next7_fu_828_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal icmp_fu_847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_assign_cast_mid2_v_fu_916_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal y_assign_cast_mid2_v_reg_1475 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal tmp_5_fu_932_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal maxValue_17_0_maxVal_fu_958_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxValue_17_0_maxVal_reg_1484 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_984_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_1490 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_fu_1018_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal result_reg_1495 : STD_LOGIC_VECTOR (19 downto 0);
    signal lineBuffer_0_3_15_fu_1050_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_0_3_15_reg_1500 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_0_3_6_fu_1096_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_0_3_7_fu_1112_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_1_3_10_fu_1170_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_1_3_11_fu_1186_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_1_3_19_fu_1202_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_1_3_20_fu_1210_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_4_fu_1218_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_data_V_fu_1265_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_last_V_fu_1273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal y3_phi_fu_335_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_assign_phi_fu_392_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal window_1_0_phi_fu_473_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_0_0_read_as_fu_136 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_0_0_fu_140 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_0_1_fu_144 : STD_LOGIC_VECTOR (31 downto 0);
    signal windowRightCol_0_fu_1036_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_1_0_read_as_fu_148 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_0_3_5_fu_152 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_0_3_14_fu_1136_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_0_3_8_fu_156 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_0_3_13_fu_1128_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal writeCount_1_fu_160 : STD_LOGIC_VECTOR (31 downto 0);
    signal writeCount_fu_1227_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal readCount_1_fu_164 : STD_LOGIC_VECTOR (31 downto 0);
    signal readCount_fu_853_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_2_2_2_fu_168 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_503_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp9_fu_559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_570_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel2_fu_586_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_1_3_6_fu_602_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y9_fu_652_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal cond1_mid1_fu_670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond1_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_mid2_fu_696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_733_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp11_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_fu_765_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp10_fu_752_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_2_2_7_fu_771_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_2_2_fu_779_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_2_2_1_fu_787_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_837_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal exitcond2_fu_896_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_s_fu_910_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal x_assign_mid2_fu_902_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_12_fu_924_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_928_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_0_1_i_fu_938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal maxValue_0_1_maxVal_fu_944_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_1_i_fu_952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_fu_972_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_fu_966_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_assign_fu_978_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_i_i_fu_992_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_998_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_6_fu_1008_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_15_fu_1032_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp15_fu_1076_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp14_fu_1070_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_fu_1064_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_fu_1082_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel4_fu_1088_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel6_fu_1104_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_0_3_9_fu_1120_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel8_fu_1162_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel1_fu_1178_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_1_3_18_fu_1194_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_1_1_i_fu_1233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_cast_fu_1245_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_4_i_i_fu_1248_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal result_1_fu_1254_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal result_1_cast_fu_1261_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_SEBB_i_fu_1238_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_condition_1749 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_condition_1091 : BOOLEAN;

    component cnn_pool_d4x4_p2xbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_pool_d4x4_p2x2_CTRL_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ctrl : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U : component cnn_pool_d4x4_p2x2_CTRL_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_AWVALID,
        AWREADY => s_axi_CTRL_AWREADY,
        AWADDR => s_axi_CTRL_AWADDR,
        WVALID => s_axi_CTRL_WVALID,
        WREADY => s_axi_CTRL_WREADY,
        WDATA => s_axi_CTRL_WDATA,
        WSTRB => s_axi_CTRL_WSTRB,
        ARVALID => s_axi_CTRL_ARVALID,
        ARREADY => s_axi_CTRL_ARREADY,
        ARADDR => s_axi_CTRL_ARADDR,
        RVALID => s_axi_CTRL_RVALID,
        RREADY => s_axi_CTRL_RREADY,
        RDATA => s_axi_CTRL_RDATA,
        RRESP => s_axi_CTRL_RRESP,
        BVALID => s_axi_CTRL_BVALID,
        BREADY => s_axi_CTRL_BREADY,
        BRESP => s_axi_CTRL_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        ctrl => ctrl);

    cnn_pool_d4x4_p2xbkb_U0 : component cnn_pool_d4x4_p2xbkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => lineBuffer_0_3_5_fu_152,
        din2 => lineBuffer_0_3_8_fu_156,
        din3 => lineBuffer_0_2_s_reg_449,
        din4 => lineBuffer_0_3_3_reg_439,
        din5 => tmp_15_fu_1032_p1,
        dout => windowRightCol_0_fu_1036_p6);

    cnn_pool_d4x4_p2xbkb_U1 : component cnn_pool_d4x4_p2xbkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => lineBuffer_1_3_1_reg_429,
        din2 => lineBuffer_1_3_17_reg_419,
        din3 => lineBuffer_1_2_3_reg_409,
        din4 => lineBuffer_1_3_3_reg_399,
        din5 => tmp_15_fu_1032_p1,
        dout => lineBuffer_0_3_15_fu_1050_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_1290) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and not((ap_const_lv1_0 = exitcond1_fu_497_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_1290) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_lv1_0 = exitcond1_fu_497_p2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_1290) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and not((ap_const_lv1_0 = exitcond1_fu_497_p2))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_1315) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and not((ap_const_lv1_0 = exitcond4_fu_533_p2)))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_1315) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_lv1_0 = exitcond4_fu_533_p2))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_1315) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and not((ap_const_lv1_0 = exitcond4_fu_533_p2))))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and not((ap_const_lv1_0 = exitcond_flatten_fu_626_p2)))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_626_p2))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and not((ap_const_lv1_0 = exitcond_flatten_fu_626_p2))))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond_flatten8_fu_822_p2)))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in))))) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
            else
                if ((ap_condition_1091 = ap_const_boolean_1)) then
                    if (not((ap_const_logic_1 = ap_enable_reg_pp3_iter1))) then 
                        ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = ap_enable_reg_pp3_iter1)) then 
                        ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter4 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in))))) then 
                    ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                    ap_enable_reg_pp3_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    inStream_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = inStream_V_data_V_0_ack_out) and (ap_const_logic_1 = inStream_V_data_V_0_vld_out))) then 
                                        inStream_V_data_V_0_sel_rd <= not(inStream_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    inStream_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = inStream_V_data_V_0_vld_in) and (ap_const_logic_1 = inStream_V_data_V_0_ack_in))) then 
                                        inStream_V_data_V_0_sel_wr <= not(inStream_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    inStream_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = inStream_V_data_V_0_vld_in) and (ap_const_logic_1 = inStream_V_data_V_0_ack_out) and (inStream_V_data_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = inStream_V_data_V_0_vld_in) and (inStream_V_data_V_0_state = ap_const_lv2_2)))) then 
                    inStream_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = inStream_V_data_V_0_vld_in) and (ap_const_logic_0 = inStream_V_data_V_0_ack_out) and (inStream_V_data_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = inStream_V_data_V_0_ack_out) and (inStream_V_data_V_0_state = ap_const_lv2_1)))) then 
                    inStream_V_data_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = inStream_V_data_V_0_vld_in) and (inStream_V_data_V_0_state = ap_const_lv2_2)) or ((ap_const_logic_1 = inStream_V_data_V_0_ack_out) and (inStream_V_data_V_0_state = ap_const_lv2_1)) or ((inStream_V_data_V_0_state = ap_const_lv2_3) and not(((ap_const_logic_1 = inStream_V_data_V_0_vld_in) and (ap_const_logic_0 = inStream_V_data_V_0_ack_out))) and not(((ap_const_logic_0 = inStream_V_data_V_0_vld_in) and (ap_const_logic_1 = inStream_V_data_V_0_ack_out)))))) then 
                    inStream_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    inStream_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    inStream_V_dest_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_dest_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = inStream_V_dest_V_0_vld_in) and (ap_const_logic_1 = inStream_V_dest_V_0_ack_out) and (ap_const_lv2_3 = inStream_V_dest_V_0_state)) or ((ap_const_logic_0 = inStream_V_dest_V_0_vld_in) and (ap_const_lv2_2 = inStream_V_dest_V_0_state)))) then 
                    inStream_V_dest_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = inStream_V_dest_V_0_vld_in) and (ap_const_logic_0 = inStream_V_dest_V_0_ack_out) and (ap_const_lv2_3 = inStream_V_dest_V_0_state)) or ((ap_const_logic_0 = inStream_V_dest_V_0_ack_out) and (ap_const_lv2_1 = inStream_V_dest_V_0_state)))) then 
                    inStream_V_dest_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = inStream_V_dest_V_0_vld_in) and (ap_const_lv2_2 = inStream_V_dest_V_0_state)) or ((ap_const_logic_1 = inStream_V_dest_V_0_ack_out) and (ap_const_lv2_1 = inStream_V_dest_V_0_state)) or ((ap_const_lv2_3 = inStream_V_dest_V_0_state) and not(((ap_const_logic_1 = inStream_V_dest_V_0_vld_in) and (ap_const_logic_0 = inStream_V_dest_V_0_ack_out))) and not(((ap_const_logic_0 = inStream_V_dest_V_0_vld_in) and (ap_const_logic_1 = inStream_V_dest_V_0_ack_out)))))) then 
                    inStream_V_dest_V_0_state <= ap_const_lv2_3;
                else 
                    inStream_V_dest_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    outStream_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_data_V_1_ack_out) and (ap_const_logic_1 = outStream_V_data_V_1_vld_out))) then 
                                        outStream_V_data_V_1_sel_rd <= not(outStream_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_data_V_1_vld_in) and (ap_const_logic_1 = outStream_V_data_V_1_ack_in))) then 
                                        outStream_V_data_V_1_sel_wr <= not(outStream_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = outStream_V_data_V_1_vld_in) and (ap_const_logic_1 = outStream_V_data_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_data_V_1_state)) or ((ap_const_logic_0 = outStream_V_data_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_data_V_1_state)))) then 
                    outStream_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = outStream_V_data_V_1_vld_in) and (ap_const_logic_0 = outStream_V_data_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_data_V_1_state)) or ((ap_const_logic_0 = outStream_V_data_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_data_V_1_state)))) then 
                    outStream_V_data_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = outStream_V_data_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_data_V_1_state)) or ((ap_const_logic_1 = outStream_V_data_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_data_V_1_state)) or ((ap_const_lv2_3 = outStream_V_data_V_1_state) and not(((ap_const_logic_1 = outStream_V_data_V_1_vld_in) and (ap_const_logic_0 = outStream_V_data_V_1_ack_out))) and not(((ap_const_logic_0 = outStream_V_data_V_1_vld_in) and (ap_const_logic_1 = outStream_V_data_V_1_ack_out)))))) then 
                    outStream_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    outStream_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    outStream_V_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_dest_V_1_ack_out) and (ap_const_logic_1 = outStream_V_dest_V_1_vld_out))) then 
                                        outStream_V_dest_V_1_sel_rd <= not(outStream_V_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = outStream_V_dest_V_1_vld_in) and (ap_const_logic_1 = outStream_V_dest_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_dest_V_1_state)) or ((ap_const_logic_0 = outStream_V_dest_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_dest_V_1_state)))) then 
                    outStream_V_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = outStream_V_dest_V_1_vld_in) and (ap_const_logic_0 = outStream_V_dest_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_dest_V_1_state)) or ((ap_const_logic_0 = outStream_V_dest_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_dest_V_1_state)))) then 
                    outStream_V_dest_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = outStream_V_dest_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_dest_V_1_state)) or ((ap_const_logic_1 = outStream_V_dest_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_dest_V_1_state)) or ((ap_const_lv2_3 = outStream_V_dest_V_1_state) and not(((ap_const_logic_1 = outStream_V_dest_V_1_vld_in) and (ap_const_logic_0 = outStream_V_dest_V_1_ack_out))) and not(((ap_const_logic_0 = outStream_V_dest_V_1_vld_in) and (ap_const_logic_1 = outStream_V_dest_V_1_ack_out)))))) then 
                    outStream_V_dest_V_1_state <= ap_const_lv2_3;
                else 
                    outStream_V_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    outStream_V_id_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_id_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_id_V_1_ack_out) and (ap_const_logic_1 = outStream_V_id_V_1_vld_out))) then 
                                        outStream_V_id_V_1_sel_rd <= not(outStream_V_id_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_id_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_id_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = outStream_V_id_V_1_vld_in) and (ap_const_logic_1 = outStream_V_id_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_id_V_1_state)) or ((ap_const_logic_0 = outStream_V_id_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_id_V_1_state)))) then 
                    outStream_V_id_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = outStream_V_id_V_1_vld_in) and (ap_const_logic_0 = outStream_V_id_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_id_V_1_state)) or ((ap_const_logic_0 = outStream_V_id_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_id_V_1_state)))) then 
                    outStream_V_id_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = outStream_V_id_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_id_V_1_state)) or ((ap_const_logic_1 = outStream_V_id_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_id_V_1_state)) or ((ap_const_lv2_3 = outStream_V_id_V_1_state) and not(((ap_const_logic_1 = outStream_V_id_V_1_vld_in) and (ap_const_logic_0 = outStream_V_id_V_1_ack_out))) and not(((ap_const_logic_0 = outStream_V_id_V_1_vld_in) and (ap_const_logic_1 = outStream_V_id_V_1_ack_out)))))) then 
                    outStream_V_id_V_1_state <= ap_const_lv2_3;
                else 
                    outStream_V_id_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    outStream_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_keep_V_1_ack_out) and (ap_const_logic_1 = outStream_V_keep_V_1_vld_out))) then 
                                        outStream_V_keep_V_1_sel_rd <= not(outStream_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = outStream_V_keep_V_1_vld_in) and (ap_const_logic_1 = outStream_V_keep_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_keep_V_1_state)) or ((ap_const_logic_0 = outStream_V_keep_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_keep_V_1_state)))) then 
                    outStream_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = outStream_V_keep_V_1_vld_in) and (ap_const_logic_0 = outStream_V_keep_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_keep_V_1_state)) or ((ap_const_logic_0 = outStream_V_keep_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_keep_V_1_state)))) then 
                    outStream_V_keep_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = outStream_V_keep_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_keep_V_1_state)) or ((ap_const_logic_1 = outStream_V_keep_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_keep_V_1_state)) or ((ap_const_lv2_3 = outStream_V_keep_V_1_state) and not(((ap_const_logic_1 = outStream_V_keep_V_1_vld_in) and (ap_const_logic_0 = outStream_V_keep_V_1_ack_out))) and not(((ap_const_logic_0 = outStream_V_keep_V_1_vld_in) and (ap_const_logic_1 = outStream_V_keep_V_1_ack_out)))))) then 
                    outStream_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    outStream_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    outStream_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_last_V_1_ack_out) and (ap_const_logic_1 = outStream_V_last_V_1_vld_out))) then 
                                        outStream_V_last_V_1_sel_rd <= not(outStream_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_last_V_1_vld_in) and (ap_const_logic_1 = outStream_V_last_V_1_ack_in))) then 
                                        outStream_V_last_V_1_sel_wr <= not(outStream_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = outStream_V_last_V_1_vld_in) and (ap_const_logic_1 = outStream_V_last_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_last_V_1_state)) or ((ap_const_logic_0 = outStream_V_last_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_last_V_1_state)))) then 
                    outStream_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = outStream_V_last_V_1_vld_in) and (ap_const_logic_0 = outStream_V_last_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_last_V_1_state)) or ((ap_const_logic_0 = outStream_V_last_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_last_V_1_state)))) then 
                    outStream_V_last_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = outStream_V_last_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_last_V_1_state)) or ((ap_const_logic_1 = outStream_V_last_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_last_V_1_state)) or ((ap_const_lv2_3 = outStream_V_last_V_1_state) and not(((ap_const_logic_1 = outStream_V_last_V_1_vld_in) and (ap_const_logic_0 = outStream_V_last_V_1_ack_out))) and not(((ap_const_logic_0 = outStream_V_last_V_1_vld_in) and (ap_const_logic_1 = outStream_V_last_V_1_ack_out)))))) then 
                    outStream_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    outStream_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    outStream_V_strb_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_strb_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_strb_V_1_ack_out) and (ap_const_logic_1 = outStream_V_strb_V_1_vld_out))) then 
                                        outStream_V_strb_V_1_sel_rd <= not(outStream_V_strb_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_strb_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_strb_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = outStream_V_strb_V_1_vld_in) and (ap_const_logic_1 = outStream_V_strb_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_strb_V_1_state)) or ((ap_const_logic_0 = outStream_V_strb_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_strb_V_1_state)))) then 
                    outStream_V_strb_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = outStream_V_strb_V_1_vld_in) and (ap_const_logic_0 = outStream_V_strb_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_strb_V_1_state)) or ((ap_const_logic_0 = outStream_V_strb_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_strb_V_1_state)))) then 
                    outStream_V_strb_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = outStream_V_strb_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_strb_V_1_state)) or ((ap_const_logic_1 = outStream_V_strb_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_strb_V_1_state)) or ((ap_const_lv2_3 = outStream_V_strb_V_1_state) and not(((ap_const_logic_1 = outStream_V_strb_V_1_vld_in) and (ap_const_logic_0 = outStream_V_strb_V_1_ack_out))) and not(((ap_const_logic_0 = outStream_V_strb_V_1_vld_in) and (ap_const_logic_1 = outStream_V_strb_V_1_ack_out)))))) then 
                    outStream_V_strb_V_1_state <= ap_const_lv2_3;
                else 
                    outStream_V_strb_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    outStream_V_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_user_V_1_ack_out) and (ap_const_logic_1 = outStream_V_user_V_1_vld_out))) then 
                                        outStream_V_user_V_1_sel_rd <= not(outStream_V_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = outStream_V_user_V_1_vld_in) and (ap_const_logic_1 = outStream_V_user_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_user_V_1_state)) or ((ap_const_logic_0 = outStream_V_user_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_user_V_1_state)))) then 
                    outStream_V_user_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = outStream_V_user_V_1_vld_in) and (ap_const_logic_0 = outStream_V_user_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_user_V_1_state)) or ((ap_const_logic_0 = outStream_V_user_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_user_V_1_state)))) then 
                    outStream_V_user_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = outStream_V_user_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_user_V_1_state)) or ((ap_const_logic_1 = outStream_V_user_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_user_V_1_state)) or ((ap_const_lv2_3 = outStream_V_user_V_1_state) and not(((ap_const_logic_1 = outStream_V_user_V_1_vld_in) and (ap_const_logic_0 = outStream_V_user_V_1_ack_out))) and not(((ap_const_logic_0 = outStream_V_user_V_1_vld_in) and (ap_const_logic_1 = outStream_V_user_V_1_ack_out)))))) then 
                    outStream_V_user_V_1_state <= ap_const_lv2_3;
                else 
                    outStream_V_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten6_reg_377_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0) and (ap_const_lv1_0 = exitcond_flatten8_fu_822_p2))) then 
                indvar_flatten6_reg_377 <= indvar_flatten_next7_fu_828_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                indvar_flatten6_reg_377 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                indvar_flatten_reg_320 <= ap_const_lv3_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_626_p2))) then 
                indvar_flatten_reg_320 <= indvar_flatten_next_fu_632_p2;
            end if; 
        end if;
    end process;

    lineBuffer_0_2_s_reg_449_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp3_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462))) then 
                lineBuffer_0_2_s_reg_449 <= lineBuffer_0_3_7_fu_1112_p3;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                lineBuffer_0_2_s_reg_449 <= lineBuffer_0_2_reg_238;
            end if; 
        end if;
    end process;

    lineBuffer_0_3_3_reg_439_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp3_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462))) then 
                lineBuffer_0_3_3_reg_439 <= lineBuffer_0_3_6_fu_1096_p3;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                lineBuffer_0_3_3_reg_439 <= lineBuffer_0_3_reg_226;
            end if; 
        end if;
    end process;

    lineBuffer_1_2_3_reg_409_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp3_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462))) then 
                lineBuffer_1_2_3_reg_409 <= lineBuffer_1_3_11_fu_1186_p3;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                lineBuffer_1_2_3_reg_409 <= lineBuffer_1_2_reg_273;
            end if; 
        end if;
    end process;

    lineBuffer_1_3_17_reg_419_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp3_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462))) then 
                lineBuffer_1_3_17_reg_419 <= lineBuffer_1_3_19_fu_1202_p3;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                lineBuffer_1_3_17_reg_419 <= lineBuffer_1_3_5_reg_285;
            end if; 
        end if;
    end process;

    lineBuffer_1_3_1_reg_429_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp3_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462))) then 
                lineBuffer_1_3_1_reg_429 <= lineBuffer_1_3_20_fu_1210_p3;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                lineBuffer_1_3_1_reg_429 <= lineBuffer_1_3_8_reg_297;
            end if; 
        end if;
    end process;

    lineBuffer_1_3_3_reg_399_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp3_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462))) then 
                lineBuffer_1_3_3_reg_399 <= lineBuffer_1_3_10_fu_1170_p3;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                lineBuffer_1_3_3_reg_399 <= lineBuffer_1_3_reg_261;
            end if; 
        end if;
    end process;

    readCount_1_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0) and (ap_const_lv1_0 = exitcond_flatten8_fu_822_p2) and not((ap_const_lv1_0 = icmp_fu_847_p2)))) then 
                readCount_1_fu_164 <= readCount_fu_853_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                readCount_1_fu_164 <= ap_const_lv32_6;
            end if; 
        end if;
    end process;

    window_1_0_reg_470_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462))) then 
                window_1_0_reg_470 <= window_1_1_reg_459;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                window_1_0_reg_470 <= window_1_1_1_reg_354;
            end if; 
        end if;
    end process;

    window_1_1_reg_459_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462))) then 
                window_1_1_reg_459 <= lineBuffer_0_3_15_reg_1500;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                window_1_1_reg_459 <= window_1_2_1_reg_342;
            end if; 
        end if;
    end process;

    writeCount_1_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
                writeCount_1_fu_160 <= writeCount_fu_1227_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                writeCount_1_fu_160 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    x1_reg_309_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
                x1_reg_309 <= ap_const_lv3_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_1315) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond4_fu_533_p2))) then 
                x1_reg_309 <= x_2_fu_539_p2;
            end if; 
        end if;
    end process;

    x4_reg_366_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                x4_reg_366 <= ap_const_lv2_1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_626_p2))) then 
                x4_reg_366 <= x_3_fu_690_p2;
            end if; 
        end if;
    end process;

    x_assign_reg_482_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp3_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462))) then 
                x_assign_reg_482 <= x_4_fu_1218_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                x_assign_reg_482 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    x_reg_250_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_1290) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_lv1_0 = exitcond1_fu_497_p2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
                x_reg_250 <= x_1_fu_513_p2;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                x_reg_250 <= ap_const_lv3_2;
            end if; 
        end if;
    end process;

    y3_reg_331_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                y3_reg_331 <= ap_const_lv2_1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1351))) then 
                y3_reg_331 <= tmp_3_mid2_v_reg_1369;
            end if; 
        end if;
    end process;

    y_assign_reg_388_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462))) then 
                y_assign_reg_388 <= y_assign_cast_mid2_v_reg_1475;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                y_assign_reg_388 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then
                ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462 <= exitcond_flatten8_reg_1462;
                exitcond_flatten8_reg_1462 <= exitcond_flatten8_fu_822_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in))))) then
                ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462 <= ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462;
                ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 <= tmp_5_reg_1480;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_626_p2))) then
                cond1_mid2_reg_1380 <= cond1_mid2_fu_682_p3;
                tmp_11_reg_1374 <= tmp_11_fu_666_p1;
                x4_mid2_reg_1360 <= x4_mid2_fu_644_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_1290) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_lv1_0 = exitcond1_fu_497_p2))) then
                cond_reg_1294 <= cond_fu_507_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then
                ctrl_read_reg_1285 <= ctrl;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_1290) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))))) then
                exitcond1_reg_1290 <= exitcond1_fu_497_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_1315) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))))) then
                exitcond4_reg_1315 <= exitcond4_fu_533_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0))) then
                exitcond_flatten_reg_1351 <= exitcond_flatten_fu_626_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = exitcond_flatten8_fu_822_p2))) then
                icmp_reg_1471 <= icmp_fu_847_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = inStream_V_data_V_0_load_A)) then
                inStream_V_data_V_0_payload_A <= inStream_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = inStream_V_data_V_0_load_B)) then
                inStream_V_data_V_0_payload_B <= inStream_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_1290) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_1290) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))))) then
                lineBuffer_0_2_reg_238 <= lineBuffer_0_3_4_fu_526_p3;
                lineBuffer_0_3_reg_226 <= lineBuffer_0_3_1_fu_519_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp3_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462))) then
                lineBuffer_0_3_15_reg_1500 <= lineBuffer_0_3_15_fu_1050_p6;
                lineBuffer_0_3_5_fu_152 <= lineBuffer_0_3_14_fu_1136_p3;
                lineBuffer_0_3_8_fu_156 <= lineBuffer_0_3_13_fu_1128_p3;
                window_0_1_fu_144 <= windowRightCol_0_fu_1036_p6;
                y_assign_cast_mid2_v_reg_1475 <= y_assign_cast_mid2_v_fu_916_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_1315) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_1315) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))))) then
                lineBuffer_1_2_reg_273 <= lineBuffer_1_3_4_fu_594_p3;
                lineBuffer_1_3_5_reg_285 <= lineBuffer_1_3_7_fu_610_p3;
                lineBuffer_1_3_8_reg_297 <= lineBuffer_1_3_9_fu_618_p3;
                lineBuffer_1_3_reg_261 <= lineBuffer_1_3_2_fu_578_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462) and not((ap_const_lv1_0 = tmp_5_fu_932_p2)) and (ap_const_lv1_0 = tmp_10_reg_1457))) then
                maxValue_17_0_maxVal_reg_1484 <= maxValue_17_0_maxVal_fu_958_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = outStream_V_data_V_1_load_A)) then
                outStream_V_data_V_1_payload_A <= tmp_data_V_fu_1265_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = outStream_V_data_V_1_load_B)) then
                outStream_V_data_V_1_payload_B <= tmp_data_V_fu_1265_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = outStream_V_last_V_1_load_A)) then
                outStream_V_last_V_1_payload_A <= tmp_last_V_fu_1273_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = outStream_V_last_V_1_load_B)) then
                outStream_V_last_V_1_payload_B <= tmp_last_V_fu_1273_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462) and not((ap_const_lv1_0 = tmp_5_fu_932_p2)) and not((ap_const_lv1_0 = tmp_10_reg_1457)))) then
                result_reg_1495 <= result_fu_1018_p3;
                tmp_14_reg_1490 <= a_assign_fu_978_p2(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state10))) then
                tmp_10_reg_1457 <= tmp_10_fu_809_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_626_p2))) then
                tmp_3_mid2_v_reg_1369 <= tmp_3_mid2_v_fu_658_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462))) then
                tmp_5_reg_1480 <= tmp_5_fu_932_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_1315) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_lv1_0 = exitcond4_fu_533_p2))) then
                tmp_9_reg_1324 <= tmp_9_fu_545_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp3_iter2))) then
                window_0_0_fu_140 <= window_0_1_fu_144;
                window_0_0_read_as_fu_136 <= window_0_0_fu_140;
                window_1_0_read_as_fu_148 <= window_1_0_phi_fu_473_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1351))) then
                window_1_1_1_reg_354 <= window_2_2_4_fu_802_p3;
                window_1_2_1_reg_342 <= window_2_2_3_fu_795_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_const_lv1_0 = exitcond_flatten8_reg_1462) and not((ap_const_lv1_0 = icmp_reg_1471)) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then
                window_2_2_2_fu_168 <= inStream_V_data_V_0_data_out;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, inStream_V_data_V_0_vld_out, outStream_V_data_V_1_ack_in, ap_enable_reg_pp0_iter1, exitcond1_reg_1290, ap_enable_reg_pp1_iter1, exitcond4_reg_1315, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter3, tmp_5_reg_1480, ap_enable_reg_pp3_iter4, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480, exitcond1_fu_497_p2, ap_enable_reg_pp0_iter0, exitcond4_fu_533_p2, ap_enable_reg_pp1_iter0, exitcond_flatten_fu_626_p2, ap_enable_reg_pp2_iter0, ap_condition_1080, ap_enable_reg_pp3_iter2, ap_condition_1749)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_1290) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond1_fu_497_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_1290) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond1_fu_497_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if (not((not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_1315) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and not((ap_const_lv1_0 = exitcond4_fu_533_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_1315) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and not((ap_const_lv1_0 = exitcond4_fu_533_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and not((ap_const_lv1_0 = exitcond_flatten_fu_626_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and not((ap_const_logic_1 = ap_enable_reg_pp3_iter3)))) and not((not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_logic_1 = ap_enable_reg_pp3_iter1)) and not((ap_const_logic_1 = ap_enable_reg_pp3_iter3)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif ((((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and not((ap_const_logic_1 = ap_enable_reg_pp3_iter3))) or (not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_logic_1 = ap_enable_reg_pp3_iter1)) and not((ap_const_logic_1 = ap_enable_reg_pp3_iter3))))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state16 => 
                if (not((ap_condition_1749 = ap_const_boolean_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    a_assign_fu_978_p2 <= std_logic_vector(unsigned(tmp7_fu_972_p2) + unsigned(tmp6_fu_966_p2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state10 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state16 <= ap_CS_fsm(8 downto 8);
    ap_CS_fsm_state4 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state7 <= ap_CS_fsm(4 downto 4);

    ap_condition_1080_assign_proc : process(inStream_V_data_V_0_vld_out, exitcond_flatten8_reg_1462, icmp_reg_1471)
    begin
                ap_condition_1080 <= ((ap_const_lv1_0 = exitcond_flatten8_reg_1462) and not((ap_const_lv1_0 = icmp_reg_1471)) and (inStream_V_data_V_0_vld_out = ap_const_logic_0));
    end process;


    ap_condition_1091_assign_proc : process(outStream_V_data_V_1_ack_in, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter3, tmp_5_reg_1480, ap_enable_reg_pp3_iter4, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480, ap_condition_1080)
    begin
                ap_condition_1091 <= not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in))));
    end process;


    ap_condition_1749_assign_proc : process(outStream_V_data_V_1_ack_in, outStream_V_keep_V_1_ack_in, outStream_V_strb_V_1_ack_in, outStream_V_user_V_1_ack_in, outStream_V_last_V_1_ack_in, outStream_V_id_V_1_ack_in, outStream_V_dest_V_1_ack_in)
    begin
                ap_condition_1749 <= ((outStream_V_data_V_1_ack_in = ap_const_logic_0) or (outStream_V_keep_V_1_ack_in = ap_const_logic_0) or (outStream_V_strb_V_1_ack_in = ap_const_logic_0) or (outStream_V_user_V_1_ack_in = ap_const_logic_0) or (outStream_V_last_V_1_ack_in = ap_const_logic_0) or (outStream_V_id_V_1_ack_in = ap_const_logic_0) or (outStream_V_dest_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state16, ap_condition_1749)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state16) and not((ap_condition_1749 = ap_const_boolean_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state16, ap_condition_1749)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state16) and not((ap_condition_1749 = ap_const_boolean_1)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    cond1_fu_676_p2 <= "1" when (y3_phi_fu_335_p4 = ap_const_lv2_1) else "0";
    cond1_mid1_fu_670_p2 <= "1" when (y3_phi_fu_335_p4 = ap_const_lv2_0) else "0";
    cond1_mid2_fu_682_p3 <= 
        cond1_mid1_fu_670_p2 when (exitcond_fu_638_p2(0) = '1') else 
        cond1_fu_676_p2;
    cond_fu_507_p2 <= "1" when (tmp_7_fu_503_p1 = ap_const_lv2_2) else "0";
    exitcond1_fu_497_p2 <= "1" when (x_reg_250 = ap_const_lv3_4) else "0";
    exitcond2_fu_896_p2 <= "1" when (x_assign_reg_482 = ap_const_lv3_4) else "0";
    exitcond4_fu_533_p2 <= "1" when (x1_reg_309 = ap_const_lv3_4) else "0";
    exitcond_flatten8_fu_822_p2 <= "1" when (indvar_flatten6_reg_377 = ap_const_lv5_10) else "0";
    exitcond_flatten_fu_626_p2 <= "1" when (indvar_flatten_reg_320 = ap_const_lv3_4) else "0";
    exitcond_fu_638_p2 <= "1" when (x4_reg_366 = ap_const_lv2_3) else "0";
    icmp_fu_847_p2 <= "1" when (signed(tmp_16_fu_837_p4) < signed(ap_const_lv28_1)) else "0";

    inStream_TDATA_blk_n_assign_proc : process(inStream_V_data_V_0_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond1_reg_1290, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond4_reg_1315, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, exitcond_flatten8_reg_1462, icmp_reg_1471)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_1290)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_1315)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_const_lv1_0 = exitcond_flatten8_reg_1462) and not((ap_const_lv1_0 = icmp_reg_1471))))) then 
            inStream_TDATA_blk_n <= inStream_V_data_V_0_state(0);
        else 
            inStream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    inStream_TREADY <= inStream_V_dest_V_0_state(1);
    inStream_V_data_V_0_ack_in <= inStream_V_data_V_0_state(1);

    inStream_V_data_V_0_ack_out_assign_proc : process(inStream_V_data_V_0_vld_out, outStream_V_data_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond1_reg_1290, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond4_reg_1315, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, exitcond_flatten8_reg_1462, icmp_reg_1471, ap_enable_reg_pp3_iter3, tmp_5_reg_1480, ap_enable_reg_pp3_iter4, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480, ap_condition_1080)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_1290) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_1290) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_1315) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_1315) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_const_lv1_0 = exitcond_flatten8_reg_1462) and not((ap_const_lv1_0 = icmp_reg_1471)) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in))))))) then 
            inStream_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            inStream_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    inStream_V_data_V_0_data_out_assign_proc : process(inStream_V_data_V_0_payload_A, inStream_V_data_V_0_payload_B, inStream_V_data_V_0_sel)
    begin
        if ((ap_const_logic_1 = inStream_V_data_V_0_sel)) then 
            inStream_V_data_V_0_data_out <= inStream_V_data_V_0_payload_B;
        else 
            inStream_V_data_V_0_data_out <= inStream_V_data_V_0_payload_A;
        end if; 
    end process;

    inStream_V_data_V_0_load_A <= (inStream_V_data_V_0_state_cmp_full and not(inStream_V_data_V_0_sel_wr));
    inStream_V_data_V_0_load_B <= (inStream_V_data_V_0_sel_wr and inStream_V_data_V_0_state_cmp_full);
    inStream_V_data_V_0_sel <= inStream_V_data_V_0_sel_rd;
    inStream_V_data_V_0_state_cmp_full <= '0' when (inStream_V_data_V_0_state = ap_const_lv2_1) else '1';
    inStream_V_data_V_0_vld_in <= inStream_TVALID;
    inStream_V_data_V_0_vld_out <= inStream_V_data_V_0_state(0);

    inStream_V_dest_V_0_ack_out_assign_proc : process(inStream_V_data_V_0_vld_out, outStream_V_data_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond1_reg_1290, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond4_reg_1315, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, exitcond_flatten8_reg_1462, icmp_reg_1471, ap_enable_reg_pp3_iter3, tmp_5_reg_1480, ap_enable_reg_pp3_iter4, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480, ap_condition_1080)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_1290) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_1290) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_1315) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_1315) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_const_lv1_0 = exitcond_flatten8_reg_1462) and not((ap_const_lv1_0 = icmp_reg_1471)) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in))))))) then 
            inStream_V_dest_V_0_ack_out <= ap_const_logic_1;
        else 
            inStream_V_dest_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    inStream_V_dest_V_0_vld_in <= inStream_TVALID;
    indvar_flatten_next7_fu_828_p2 <= std_logic_vector(unsigned(indvar_flatten6_reg_377) + unsigned(ap_const_lv5_1));
    indvar_flatten_next_fu_632_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_320) + unsigned(ap_const_lv3_1));
    lineBuffer_0_3_13_fu_1128_p3 <= 
        lineBuffer_0_3_8_fu_156 when (sel_tmp15_fu_1076_p2(0) = '1') else 
        lineBuffer_0_3_9_fu_1120_p3;
    lineBuffer_0_3_14_fu_1136_p3 <= 
        lineBuffer_0_3_15_fu_1050_p6 when (sel_tmp15_fu_1076_p2(0) = '1') else 
        lineBuffer_0_3_5_fu_152;
    lineBuffer_0_3_1_fu_519_p3 <= 
        lineBuffer_0_3_reg_226 when (cond_reg_1294(0) = '1') else 
        inStream_V_data_V_0_data_out;
    lineBuffer_0_3_4_fu_526_p3 <= 
        inStream_V_data_V_0_data_out when (cond_reg_1294(0) = '1') else 
        lineBuffer_0_2_reg_238;
    lineBuffer_0_3_6_fu_1096_p3 <= 
        lineBuffer_0_3_3_reg_439 when (or_cond2_fu_1082_p2(0) = '1') else 
        newSel4_fu_1088_p3;
    lineBuffer_0_3_7_fu_1112_p3 <= 
        lineBuffer_0_2_s_reg_449 when (or_cond2_fu_1082_p2(0) = '1') else 
        newSel6_fu_1104_p3;
    lineBuffer_0_3_9_fu_1120_p3 <= 
        lineBuffer_0_3_15_fu_1050_p6 when (sel_tmp14_fu_1070_p2(0) = '1') else 
        lineBuffer_0_3_8_fu_156;
    lineBuffer_1_3_10_fu_1170_p3 <= 
        lineBuffer_1_3_3_reg_399 when (or_cond2_fu_1082_p2(0) = '1') else 
        newSel8_fu_1162_p3;
    lineBuffer_1_3_11_fu_1186_p3 <= 
        lineBuffer_1_2_3_reg_409 when (or_cond2_fu_1082_p2(0) = '1') else 
        newSel1_fu_1178_p3;
    lineBuffer_1_3_18_fu_1194_p3 <= 
        window_2_2_2_fu_168 when (sel_tmp14_fu_1070_p2(0) = '1') else 
        lineBuffer_1_3_17_reg_419;
    lineBuffer_1_3_19_fu_1202_p3 <= 
        lineBuffer_1_3_17_reg_419 when (sel_tmp15_fu_1076_p2(0) = '1') else 
        lineBuffer_1_3_18_fu_1194_p3;
    lineBuffer_1_3_20_fu_1210_p3 <= 
        window_2_2_2_fu_168 when (sel_tmp15_fu_1076_p2(0) = '1') else 
        lineBuffer_1_3_1_reg_429;
    lineBuffer_1_3_2_fu_578_p3 <= 
        lineBuffer_1_3_reg_261 when (or_cond_fu_564_p2(0) = '1') else 
        newSel_fu_570_p3;
    lineBuffer_1_3_4_fu_594_p3 <= 
        lineBuffer_1_2_reg_273 when (or_cond_fu_564_p2(0) = '1') else 
        newSel2_fu_586_p3;
    lineBuffer_1_3_6_fu_602_p3 <= 
        inStream_V_data_V_0_data_out when (sel_tmp7_fu_554_p2(0) = '1') else 
        lineBuffer_1_3_5_reg_285;
    lineBuffer_1_3_7_fu_610_p3 <= 
        lineBuffer_1_3_5_reg_285 when (sel_tmp9_fu_559_p2(0) = '1') else 
        lineBuffer_1_3_6_fu_602_p3;
    lineBuffer_1_3_9_fu_618_p3 <= 
        inStream_V_data_V_0_data_out when (sel_tmp9_fu_559_p2(0) = '1') else 
        lineBuffer_1_3_8_reg_297;
    maxValue_0_1_maxVal_fu_944_p3 <= 
        window_0_0_fu_140 when (tmp_4_0_1_i_fu_938_p2(0) = '1') else 
        window_0_0_read_as_fu_136;
    maxValue_17_0_maxVal_fu_958_p3 <= 
        window_1_0_read_as_fu_148 when (tmp_4_1_i_fu_952_p2(0) = '1') else 
        maxValue_0_1_maxVal_fu_944_p3;
    newSel1_fu_1178_p3 <= 
        window_2_2_2_fu_168 when (sel_tmp13_fu_1064_p2(0) = '1') else 
        lineBuffer_1_2_3_reg_409;
    newSel2_fu_586_p3 <= 
        inStream_V_data_V_0_data_out when (sel_tmp_fu_549_p2(0) = '1') else 
        lineBuffer_1_2_reg_273;
    newSel4_fu_1088_p3 <= 
        lineBuffer_0_3_3_reg_439 when (sel_tmp13_fu_1064_p2(0) = '1') else 
        lineBuffer_0_3_15_fu_1050_p6;
    newSel6_fu_1104_p3 <= 
        lineBuffer_0_3_15_fu_1050_p6 when (sel_tmp13_fu_1064_p2(0) = '1') else 
        lineBuffer_0_2_s_reg_449;
    newSel8_fu_1162_p3 <= 
        lineBuffer_1_3_3_reg_399 when (sel_tmp13_fu_1064_p2(0) = '1') else 
        window_2_2_2_fu_168;
    newSel_fu_570_p3 <= 
        lineBuffer_1_3_reg_261 when (sel_tmp_fu_549_p2(0) = '1') else 
        inStream_V_data_V_0_data_out;
    or_cond2_fu_1082_p2 <= (sel_tmp15_fu_1076_p2 or sel_tmp14_fu_1070_p2);
    or_cond_fu_564_p2 <= (sel_tmp9_fu_559_p2 or sel_tmp7_fu_554_p2);
    outStream_TDATA <= outStream_V_data_V_1_data_out;

    outStream_TDATA_blk_n_assign_proc : process(outStream_V_data_V_1_state, ap_enable_reg_pp3_iter3, tmp_5_reg_1480, ap_enable_reg_pp3_iter4, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480))) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480))))) then 
            outStream_TDATA_blk_n <= outStream_V_data_V_1_state(1);
        else 
            outStream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    outStream_TDEST <= outStream_V_dest_V_1_data_out;
    outStream_TID <= outStream_V_id_V_1_data_out;
    outStream_TKEEP <= outStream_V_keep_V_1_data_out;
    outStream_TLAST <= outStream_V_last_V_1_data_out;
    outStream_TSTRB <= outStream_V_strb_V_1_data_out;
    outStream_TUSER <= outStream_V_user_V_1_data_out;
    outStream_TVALID <= outStream_V_dest_V_1_state(0);
    outStream_V_data_V_1_ack_in <= outStream_V_data_V_1_state(1);
    outStream_V_data_V_1_ack_out <= outStream_TREADY;

    outStream_V_data_V_1_data_out_assign_proc : process(outStream_V_data_V_1_payload_A, outStream_V_data_V_1_payload_B, outStream_V_data_V_1_sel)
    begin
        if ((ap_const_logic_1 = outStream_V_data_V_1_sel)) then 
            outStream_V_data_V_1_data_out <= outStream_V_data_V_1_payload_B;
        else 
            outStream_V_data_V_1_data_out <= outStream_V_data_V_1_payload_A;
        end if; 
    end process;

    outStream_V_data_V_1_load_A <= (outStream_V_data_V_1_state_cmp_full and not(outStream_V_data_V_1_sel_wr));
    outStream_V_data_V_1_load_B <= (outStream_V_data_V_1_sel_wr and outStream_V_data_V_1_state_cmp_full);
    outStream_V_data_V_1_sel <= outStream_V_data_V_1_sel_rd;
    outStream_V_data_V_1_state_cmp_full <= '0' when (outStream_V_data_V_1_state = ap_const_lv2_1) else '1';

    outStream_V_data_V_1_vld_in_assign_proc : process(outStream_V_data_V_1_ack_in, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter3, tmp_5_reg_1480, ap_enable_reg_pp3_iter4, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480, ap_condition_1080)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            outStream_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            outStream_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    outStream_V_data_V_1_vld_out <= outStream_V_data_V_1_state(0);
    outStream_V_dest_V_1_ack_in <= outStream_V_dest_V_1_state(1);
    outStream_V_dest_V_1_ack_out <= outStream_TREADY;
    outStream_V_dest_V_1_data_out <= ap_const_lv6_0;
    outStream_V_dest_V_1_sel <= outStream_V_dest_V_1_sel_rd;

    outStream_V_dest_V_1_vld_in_assign_proc : process(outStream_V_data_V_1_ack_in, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter3, tmp_5_reg_1480, ap_enable_reg_pp3_iter4, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480, ap_condition_1080)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            outStream_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            outStream_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    outStream_V_dest_V_1_vld_out <= outStream_V_dest_V_1_state(0);
    outStream_V_id_V_1_ack_in <= outStream_V_id_V_1_state(1);
    outStream_V_id_V_1_ack_out <= outStream_TREADY;
    outStream_V_id_V_1_data_out <= ap_const_lv5_0;
    outStream_V_id_V_1_sel <= outStream_V_id_V_1_sel_rd;

    outStream_V_id_V_1_vld_in_assign_proc : process(outStream_V_data_V_1_ack_in, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter3, tmp_5_reg_1480, ap_enable_reg_pp3_iter4, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480, ap_condition_1080)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            outStream_V_id_V_1_vld_in <= ap_const_logic_1;
        else 
            outStream_V_id_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    outStream_V_id_V_1_vld_out <= outStream_V_id_V_1_state(0);
    outStream_V_keep_V_1_ack_in <= outStream_V_keep_V_1_state(1);
    outStream_V_keep_V_1_ack_out <= outStream_TREADY;
    outStream_V_keep_V_1_data_out <= ap_const_lv4_F;
    outStream_V_keep_V_1_sel <= outStream_V_keep_V_1_sel_rd;

    outStream_V_keep_V_1_vld_in_assign_proc : process(outStream_V_data_V_1_ack_in, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter3, tmp_5_reg_1480, ap_enable_reg_pp3_iter4, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480, ap_condition_1080)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            outStream_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            outStream_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    outStream_V_keep_V_1_vld_out <= outStream_V_keep_V_1_state(0);
    outStream_V_last_V_1_ack_in <= outStream_V_last_V_1_state(1);
    outStream_V_last_V_1_ack_out <= outStream_TREADY;

    outStream_V_last_V_1_data_out_assign_proc : process(outStream_V_last_V_1_payload_A, outStream_V_last_V_1_payload_B, outStream_V_last_V_1_sel)
    begin
        if ((ap_const_logic_1 = outStream_V_last_V_1_sel)) then 
            outStream_V_last_V_1_data_out <= outStream_V_last_V_1_payload_B;
        else 
            outStream_V_last_V_1_data_out <= outStream_V_last_V_1_payload_A;
        end if; 
    end process;

    outStream_V_last_V_1_load_A <= (outStream_V_last_V_1_state_cmp_full and not(outStream_V_last_V_1_sel_wr));
    outStream_V_last_V_1_load_B <= (outStream_V_last_V_1_sel_wr and outStream_V_last_V_1_state_cmp_full);
    outStream_V_last_V_1_sel <= outStream_V_last_V_1_sel_rd;
    outStream_V_last_V_1_state_cmp_full <= '0' when (outStream_V_last_V_1_state = ap_const_lv2_1) else '1';

    outStream_V_last_V_1_vld_in_assign_proc : process(outStream_V_data_V_1_ack_in, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter3, tmp_5_reg_1480, ap_enable_reg_pp3_iter4, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480, ap_condition_1080)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            outStream_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            outStream_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    outStream_V_last_V_1_vld_out <= outStream_V_last_V_1_state(0);
    outStream_V_strb_V_1_ack_in <= outStream_V_strb_V_1_state(1);
    outStream_V_strb_V_1_ack_out <= outStream_TREADY;
    outStream_V_strb_V_1_data_out <= ap_const_lv4_0;
    outStream_V_strb_V_1_sel <= outStream_V_strb_V_1_sel_rd;

    outStream_V_strb_V_1_vld_in_assign_proc : process(outStream_V_data_V_1_ack_in, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter3, tmp_5_reg_1480, ap_enable_reg_pp3_iter4, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480, ap_condition_1080)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            outStream_V_strb_V_1_vld_in <= ap_const_logic_1;
        else 
            outStream_V_strb_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    outStream_V_strb_V_1_vld_out <= outStream_V_strb_V_1_state(0);
    outStream_V_user_V_1_ack_in <= outStream_V_user_V_1_state(1);
    outStream_V_user_V_1_ack_out <= outStream_TREADY;
    outStream_V_user_V_1_data_out <= ap_const_lv2_0;
    outStream_V_user_V_1_sel <= outStream_V_user_V_1_sel_rd;

    outStream_V_user_V_1_vld_in_assign_proc : process(outStream_V_data_V_1_ack_in, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter3, tmp_5_reg_1480, ap_enable_reg_pp3_iter4, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480, ap_condition_1080)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1080 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter4) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            outStream_V_user_V_1_vld_in <= ap_const_logic_1;
        else 
            outStream_V_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    outStream_V_user_V_1_vld_out <= outStream_V_user_V_1_state(0);
    readCount_fu_853_p2 <= std_logic_vector(unsigned(readCount_1_fu_164) + unsigned(ap_const_lv32_1));
        result_1_cast_fu_1261_p1 <= std_logic_vector(resize(signed(result_1_fu_1254_p3),32));

    result_1_fu_1254_p3 <= 
        tmp_4_i_i_fu_1248_p2 when (tmp_14_reg_1490(0) = '1') else 
        result_cast_fu_1245_p1;
    result_cast_fu_1245_p1 <= std_logic_vector(resize(unsigned(result_reg_1495),21));
    result_fu_1018_p3 <= 
        tmp_3_fu_998_p4 when (tmp_14_fu_984_p3(0) = '1') else 
        tmp_6_fu_1008_p4;
    sel_SEBB_i_fu_1238_p3 <= 
        window_1_0_reg_470 when (tmp_4_1_1_i_fu_1233_p2(0) = '1') else 
        maxValue_17_0_maxVal_reg_1484;
    sel_tmp10_fu_752_p3 <= 
        lineBuffer_1_3_5_reg_285 when (sel_tmp4_fu_746_p2(0) = '1') else 
        sel_tmp2_fu_733_p3;
    sel_tmp11_fu_760_p2 <= "1" when (x4_mid2_reg_1360 = ap_const_lv2_1) else "0";
    sel_tmp12_fu_765_p2 <= (sel_tmp11_fu_760_p2 and sel_tmp13_mid2_fu_696_p2);
    sel_tmp13_fu_1064_p2 <= "1" when (tmp_15_fu_1032_p1 = ap_const_lv2_2) else "0";
    sel_tmp13_mid2_fu_696_p2 <= (tmp_11_reg_1374 xor ap_const_lv1_1);
    sel_tmp14_fu_1070_p2 <= "1" when (tmp_15_fu_1032_p1 = ap_const_lv2_1) else "0";
    sel_tmp15_fu_1076_p2 <= "1" when (tmp_15_fu_1032_p1 = ap_const_lv2_0) else "0";
    sel_tmp1_fu_727_p2 <= (tmp1_fu_721_p2 and tmp_fu_716_p2);
    sel_tmp2_fu_733_p3 <= 
        lineBuffer_0_3_reg_226 when (sel_tmp1_fu_727_p2(0) = '1') else 
        lineBuffer_1_3_reg_261;
    sel_tmp3_fu_741_p2 <= "1" when (x4_mid2_reg_1360 = ap_const_lv2_2) else "0";
    sel_tmp4_fu_746_p2 <= (sel_tmp3_fu_741_p2 and sel_tmp13_mid2_fu_696_p2);
    sel_tmp5_fu_701_p2 <= "0" when (x4_mid2_reg_1360 = ap_const_lv2_1) else "1";
    sel_tmp6_fu_706_p2 <= "0" when (x4_mid2_reg_1360 = ap_const_lv2_2) else "1";
    sel_tmp7_fu_554_p2 <= "1" when (tmp_9_reg_1324 = ap_const_lv2_1) else "0";
    sel_tmp8_fu_711_p2 <= "0" when (x4_mid2_reg_1360 = ap_const_lv2_3) else "1";
    sel_tmp9_fu_559_p2 <= "1" when (tmp_9_reg_1324 = ap_const_lv2_0) else "0";
    sel_tmp_fu_549_p2 <= "1" when (tmp_9_reg_1324 = ap_const_lv2_2) else "0";
    tmp1_fu_721_p2 <= (sel_tmp6_fu_706_p2 and sel_tmp8_fu_711_p2);
    tmp6_fu_966_p2 <= std_logic_vector(unsigned(window_0_0_read_as_fu_136) + unsigned(window_1_0_read_as_fu_148));
    tmp7_fu_972_p2 <= std_logic_vector(unsigned(window_0_0_fu_140) + unsigned(window_1_0_phi_fu_473_p4));
    tmp_10_fu_809_p1 <= ctrl_read_reg_1285(1 - 1 downto 0);
    tmp_11_fu_666_p1 <= tmp_3_mid2_v_fu_658_p3(1 - 1 downto 0);
    tmp_12_fu_924_p1 <= y_assign_cast_mid2_v_fu_916_p3(1 - 1 downto 0);
    tmp_13_fu_928_p1 <= x_assign_mid2_fu_902_p3(1 - 1 downto 0);
    tmp_14_fu_984_p3 <= a_assign_fu_978_p2(31 downto 31);
    tmp_15_fu_1032_p1 <= x_assign_mid2_fu_902_p3(2 - 1 downto 0);
    tmp_16_fu_837_p4 <= readCount_1_fu_164(31 downto 4);
    tmp_1_i_i_fu_992_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(a_assign_fu_978_p2));
    tmp_3_fu_998_p4 <= tmp_1_i_i_fu_992_p2(21 downto 2);
    tmp_3_mid2_v_fu_658_p3 <= 
        y9_fu_652_p2 when (exitcond_fu_638_p2(0) = '1') else 
        y3_phi_fu_335_p4;
    tmp_4_0_1_i_fu_938_p2 <= "1" when (unsigned(window_0_0_fu_140) > unsigned(window_0_0_read_as_fu_136)) else "0";
    tmp_4_1_1_i_fu_1233_p2 <= "1" when (unsigned(maxValue_17_0_maxVal_reg_1484) < unsigned(window_1_0_reg_470)) else "0";
    tmp_4_1_i_fu_952_p2 <= "1" when (unsigned(maxValue_0_1_maxVal_fu_944_p3) < unsigned(window_1_0_read_as_fu_148)) else "0";
    tmp_4_i_i_fu_1248_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(result_cast_fu_1245_p1));
    tmp_5_fu_932_p2 <= (tmp_12_fu_924_p1 and tmp_13_fu_928_p1);
    tmp_6_fu_1008_p4 <= a_assign_fu_978_p2(21 downto 2);
    tmp_7_fu_503_p1 <= x_reg_250(2 - 1 downto 0);
    tmp_9_fu_545_p1 <= x1_reg_309(2 - 1 downto 0);
    tmp_data_V_fu_1265_p3 <= 
        result_1_cast_fu_1261_p1 when (tmp_10_reg_1457(0) = '1') else 
        sel_SEBB_i_fu_1238_p3;
    tmp_fu_716_p2 <= (tmp_11_reg_1374 and sel_tmp5_fu_701_p2);
    tmp_last_V_fu_1273_p2 <= "1" when (writeCount_fu_1227_p2 = ap_const_lv32_4) else "0";

    window_1_0_phi_fu_473_p4_assign_proc : process(ap_enable_reg_pp3_iter3, window_1_1_reg_459, window_1_0_reg_470, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462))) then 
            window_1_0_phi_fu_473_p4 <= window_1_1_reg_459;
        else 
            window_1_0_phi_fu_473_p4 <= window_1_0_reg_470;
        end if; 
    end process;

    window_2_2_1_fu_787_p3 <= 
        window_2_2_7_fu_771_p3 when (sel_tmp11_fu_760_p2(0) = '1') else 
        window_1_1_1_reg_354;
    window_2_2_3_fu_795_p3 <= 
        window_2_2_fu_779_p3 when (cond1_mid2_reg_1380(0) = '1') else 
        window_1_2_1_reg_342;
    window_2_2_4_fu_802_p3 <= 
        window_2_2_1_fu_787_p3 when (cond1_mid2_reg_1380(0) = '1') else 
        window_1_1_1_reg_354;
    window_2_2_7_fu_771_p3 <= 
        lineBuffer_1_3_8_reg_297 when (sel_tmp12_fu_765_p2(0) = '1') else 
        sel_tmp10_fu_752_p3;
    window_2_2_fu_779_p3 <= 
        window_1_2_1_reg_342 when (sel_tmp11_fu_760_p2(0) = '1') else 
        sel_tmp10_fu_752_p3;
    writeCount_fu_1227_p2 <= std_logic_vector(unsigned(writeCount_1_fu_160) + unsigned(ap_const_lv32_1));
    x4_mid2_fu_644_p3 <= 
        ap_const_lv2_1 when (exitcond_fu_638_p2(0) = '1') else 
        x4_reg_366;
    x_1_fu_513_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(x_reg_250));
    x_2_fu_539_p2 <= std_logic_vector(unsigned(x1_reg_309) + unsigned(ap_const_lv3_1));
    x_3_fu_690_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(x4_mid2_fu_644_p3));
    x_4_fu_1218_p2 <= std_logic_vector(unsigned(x_assign_mid2_fu_902_p3) + unsigned(ap_const_lv3_1));
    x_assign_mid2_fu_902_p3 <= 
        ap_const_lv3_0 when (exitcond2_fu_896_p2(0) = '1') else 
        x_assign_reg_482;

    y3_phi_fu_335_p4_assign_proc : process(y3_reg_331, exitcond_flatten_reg_1351, ap_CS_fsm_pp2_stage0, tmp_3_mid2_v_reg_1369, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1351))) then 
            y3_phi_fu_335_p4 <= tmp_3_mid2_v_reg_1369;
        else 
            y3_phi_fu_335_p4 <= y3_reg_331;
        end if; 
    end process;

    y9_fu_652_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(y3_phi_fu_335_p4));
    y_assign_cast_mid2_v_fu_916_p3 <= 
        y_s_fu_910_p2 when (exitcond2_fu_896_p2(0) = '1') else 
        y_assign_phi_fu_392_p4;

    y_assign_phi_fu_392_p4_assign_proc : process(ap_enable_reg_pp3_iter3, y_assign_reg_388, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462, y_assign_cast_mid2_v_reg_1475)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462))) then 
            y_assign_phi_fu_392_p4 <= y_assign_cast_mid2_v_reg_1475;
        else 
            y_assign_phi_fu_392_p4 <= y_assign_reg_388;
        end if; 
    end process;

    y_s_fu_910_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(y_assign_phi_fu_392_p4));
end behav;
