// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "cnn_pool_d4x4_p2x2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic cnn_pool_d4x4_p2x2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic cnn_pool_d4x4_p2x2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> cnn_pool_d4x4_p2x2::ap_ST_fsm_state1 = "1";
const sc_lv<9> cnn_pool_d4x4_p2x2::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<9> cnn_pool_d4x4_p2x2::ap_ST_fsm_state4 = "100";
const sc_lv<9> cnn_pool_d4x4_p2x2::ap_ST_fsm_pp1_stage0 = "1000";
const sc_lv<9> cnn_pool_d4x4_p2x2::ap_ST_fsm_state7 = "10000";
const sc_lv<9> cnn_pool_d4x4_p2x2::ap_ST_fsm_pp2_stage0 = "100000";
const sc_lv<9> cnn_pool_d4x4_p2x2::ap_ST_fsm_state10 = "1000000";
const sc_lv<9> cnn_pool_d4x4_p2x2::ap_ST_fsm_pp3_stage0 = "10000000";
const sc_lv<9> cnn_pool_d4x4_p2x2::ap_ST_fsm_state16 = "100000000";
const sc_lv<32> cnn_pool_d4x4_p2x2::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> cnn_pool_d4x4_p2x2::ap_const_lv1_1 = "1";
const bool cnn_pool_d4x4_p2x2::ap_const_boolean_1 = true;
const sc_lv<1> cnn_pool_d4x4_p2x2::ap_const_lv1_0 = "0";
const sc_lv<2> cnn_pool_d4x4_p2x2::ap_const_lv2_0 = "00";
const sc_lv<2> cnn_pool_d4x4_p2x2::ap_const_lv2_2 = "10";
const sc_lv<2> cnn_pool_d4x4_p2x2::ap_const_lv2_3 = "11";
const sc_lv<2> cnn_pool_d4x4_p2x2::ap_const_lv2_1 = "1";
const sc_lv<32> cnn_pool_d4x4_p2x2::ap_const_lv32_1 = "1";
const sc_lv<32> cnn_pool_d4x4_p2x2::ap_const_lv32_3 = "11";
const sc_lv<32> cnn_pool_d4x4_p2x2::ap_const_lv32_7 = "111";
const int cnn_pool_d4x4_p2x2::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> cnn_pool_d4x4_p2x2::ap_const_lv32_5 = "101";
const sc_lv<32> cnn_pool_d4x4_p2x2::ap_const_lv32_6 = "110";
const sc_lv<32> cnn_pool_d4x4_p2x2::ap_const_lv32_2 = "10";
const sc_lv<32> cnn_pool_d4x4_p2x2::ap_const_lv32_4 = "100";
const sc_lv<3> cnn_pool_d4x4_p2x2::ap_const_lv3_2 = "10";
const sc_lv<3> cnn_pool_d4x4_p2x2::ap_const_lv3_0 = "000";
const sc_lv<5> cnn_pool_d4x4_p2x2::ap_const_lv5_0 = "00000";
const sc_lv<4> cnn_pool_d4x4_p2x2::ap_const_lv4_F = "1111";
const sc_lv<4> cnn_pool_d4x4_p2x2::ap_const_lv4_0 = "0000";
const sc_lv<6> cnn_pool_d4x4_p2x2::ap_const_lv6_0 = "000000";
const sc_lv<3> cnn_pool_d4x4_p2x2::ap_const_lv3_4 = "100";
const sc_lv<3> cnn_pool_d4x4_p2x2::ap_const_lv3_1 = "1";
const sc_lv<5> cnn_pool_d4x4_p2x2::ap_const_lv5_10 = "10000";
const sc_lv<5> cnn_pool_d4x4_p2x2::ap_const_lv5_1 = "1";
const sc_lv<32> cnn_pool_d4x4_p2x2::ap_const_lv32_1F = "11111";
const sc_lv<28> cnn_pool_d4x4_p2x2::ap_const_lv28_1 = "1";
const sc_lv<32> cnn_pool_d4x4_p2x2::ap_const_lv32_15 = "10101";
const sc_lv<21> cnn_pool_d4x4_p2x2::ap_const_lv21_0 = "000000000000000000000";
const sc_lv<32> cnn_pool_d4x4_p2x2::ap_const_lv32_8 = "1000";

cnn_pool_d4x4_p2x2::cnn_pool_d4x4_p2x2(sc_module_name name) : sc_module(name), mVcdFile(0) {
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U = new cnn_pool_d4x4_p2x2_CTRL_s_axi<C_S_AXI_CTRL_ADDR_WIDTH,C_S_AXI_CTRL_DATA_WIDTH>("cnn_pool_d4x4_p2x2_CTRL_s_axi_U");
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->AWVALID(s_axi_CTRL_AWVALID);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->AWREADY(s_axi_CTRL_AWREADY);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->AWADDR(s_axi_CTRL_AWADDR);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->WVALID(s_axi_CTRL_WVALID);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->WREADY(s_axi_CTRL_WREADY);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->WDATA(s_axi_CTRL_WDATA);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->WSTRB(s_axi_CTRL_WSTRB);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->ARVALID(s_axi_CTRL_ARVALID);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->ARREADY(s_axi_CTRL_ARREADY);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->ARADDR(s_axi_CTRL_ARADDR);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->RVALID(s_axi_CTRL_RVALID);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->RREADY(s_axi_CTRL_RREADY);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->RDATA(s_axi_CTRL_RDATA);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->RRESP(s_axi_CTRL_RRESP);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->BVALID(s_axi_CTRL_BVALID);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->BREADY(s_axi_CTRL_BREADY);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->BRESP(s_axi_CTRL_BRESP);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->ACLK(ap_clk);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->ARESET(ap_rst_n_inv);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->ACLK_EN(ap_var_for_const0);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->ap_start(ap_start);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->interrupt(interrupt);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->ap_ready(ap_ready);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->ap_done(ap_done);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->ap_idle(ap_idle);
    cnn_pool_d4x4_p2x2_CTRL_s_axi_U->ctrl(ctrl);
    cnn_pool_d4x4_p2xbkb_U0 = new cnn_pool_d4x4_p2xbkb<1,1,32,32,32,32,2,32>("cnn_pool_d4x4_p2xbkb_U0");
    cnn_pool_d4x4_p2xbkb_U0->din1(lineBuffer_0_3_5_fu_152);
    cnn_pool_d4x4_p2xbkb_U0->din2(lineBuffer_0_3_8_fu_156);
    cnn_pool_d4x4_p2xbkb_U0->din3(lineBuffer_0_2_s_reg_449);
    cnn_pool_d4x4_p2xbkb_U0->din4(lineBuffer_0_3_3_reg_439);
    cnn_pool_d4x4_p2xbkb_U0->din5(tmp_15_fu_1032_p1);
    cnn_pool_d4x4_p2xbkb_U0->dout(windowRightCol_0_fu_1036_p6);
    cnn_pool_d4x4_p2xbkb_U1 = new cnn_pool_d4x4_p2xbkb<1,1,32,32,32,32,2,32>("cnn_pool_d4x4_p2xbkb_U1");
    cnn_pool_d4x4_p2xbkb_U1->din1(lineBuffer_1_3_1_reg_429);
    cnn_pool_d4x4_p2xbkb_U1->din2(lineBuffer_1_3_17_reg_419);
    cnn_pool_d4x4_p2xbkb_U1->din3(lineBuffer_1_2_3_reg_409);
    cnn_pool_d4x4_p2xbkb_U1->din4(lineBuffer_1_3_3_reg_399);
    cnn_pool_d4x4_p2xbkb_U1->din5(tmp_15_fu_1032_p1);
    cnn_pool_d4x4_p2xbkb_U1->dout(lineBuffer_0_3_15_fu_1050_p6);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_assign_fu_978_p2);
    sensitive << ( tmp7_fu_972_p2 );
    sensitive << ( tmp6_fu_966_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp2_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp3_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_condition_1080);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( exitcond_flatten8_reg_1462 );
    sensitive << ( icmp_reg_1471 );

    SC_METHOD(thread_ap_condition_1091);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( tmp_5_reg_1480 );
    sensitive << ( ap_enable_reg_pp3_iter4 );
    sensitive << ( ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 );
    sensitive << ( ap_condition_1080 );

    SC_METHOD(thread_ap_condition_1749);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( outStream_V_keep_V_1_ack_in );
    sensitive << ( outStream_V_strb_V_1_ack_in );
    sensitive << ( outStream_V_user_V_1_ack_in );
    sensitive << ( outStream_V_last_V_1_ack_in );
    sensitive << ( outStream_V_id_V_1_ack_in );
    sensitive << ( outStream_V_dest_V_1_ack_in );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_condition_1749 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_condition_1749 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_cond1_fu_676_p2);
    sensitive << ( exitcond_flatten_fu_626_p2 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( y3_phi_fu_335_p4 );

    SC_METHOD(thread_cond1_mid1_fu_670_p2);
    sensitive << ( exitcond_flatten_fu_626_p2 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( y3_phi_fu_335_p4 );

    SC_METHOD(thread_cond1_mid2_fu_682_p3);
    sensitive << ( exitcond_fu_638_p2 );
    sensitive << ( cond1_mid1_fu_670_p2 );
    sensitive << ( cond1_fu_676_p2 );

    SC_METHOD(thread_cond_fu_507_p2);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1290 );
    sensitive << ( exitcond1_fu_497_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_7_fu_503_p1 );

    SC_METHOD(thread_exitcond1_fu_497_p2);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1290 );
    sensitive << ( x_reg_250 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond2_fu_896_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( tmp_5_reg_1480 );
    sensitive << ( ap_enable_reg_pp3_iter4 );
    sensitive << ( ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 );
    sensitive << ( x_assign_reg_482 );
    sensitive << ( ap_condition_1080 );
    sensitive << ( ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462 );
    sensitive << ( ap_enable_reg_pp3_iter2 );

    SC_METHOD(thread_exitcond4_fu_533_p2);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1315 );
    sensitive << ( x1_reg_309 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_exitcond_flatten8_fu_822_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( tmp_5_reg_1480 );
    sensitive << ( ap_enable_reg_pp3_iter4 );
    sensitive << ( ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 );
    sensitive << ( indvar_flatten6_reg_377 );
    sensitive << ( ap_condition_1080 );
    sensitive << ( ap_enable_reg_pp3_iter0 );

    SC_METHOD(thread_exitcond_flatten_fu_626_p2);
    sensitive << ( indvar_flatten_reg_320 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_exitcond_fu_638_p2);
    sensitive << ( x4_reg_366 );
    sensitive << ( exitcond_flatten_fu_626_p2 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_icmp_fu_847_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( tmp_5_reg_1480 );
    sensitive << ( ap_enable_reg_pp3_iter4 );
    sensitive << ( ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 );
    sensitive << ( exitcond_flatten8_fu_822_p2 );
    sensitive << ( ap_condition_1080 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( tmp_16_fu_837_p4 );

    SC_METHOD(thread_inStream_TDATA_blk_n);
    sensitive << ( inStream_V_data_V_0_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1290 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1315 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1462 );
    sensitive << ( icmp_reg_1471 );

    SC_METHOD(thread_inStream_TREADY);
    sensitive << ( inStream_V_dest_V_0_state );

    SC_METHOD(thread_inStream_V_data_V_0_ack_in);
    sensitive << ( inStream_V_data_V_0_state );

    SC_METHOD(thread_inStream_V_data_V_0_ack_out);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1290 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1315 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1462 );
    sensitive << ( icmp_reg_1471 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( tmp_5_reg_1480 );
    sensitive << ( ap_enable_reg_pp3_iter4 );
    sensitive << ( ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 );
    sensitive << ( ap_condition_1080 );

    SC_METHOD(thread_inStream_V_data_V_0_data_out);
    sensitive << ( inStream_V_data_V_0_payload_A );
    sensitive << ( inStream_V_data_V_0_payload_B );
    sensitive << ( inStream_V_data_V_0_sel );

    SC_METHOD(thread_inStream_V_data_V_0_load_A);
    sensitive << ( inStream_V_data_V_0_sel_wr );
    sensitive << ( inStream_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_inStream_V_data_V_0_load_B);
    sensitive << ( inStream_V_data_V_0_sel_wr );
    sensitive << ( inStream_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_inStream_V_data_V_0_sel);
    sensitive << ( inStream_V_data_V_0_sel_rd );

    SC_METHOD(thread_inStream_V_data_V_0_state_cmp_full);
    sensitive << ( inStream_V_data_V_0_state );

    SC_METHOD(thread_inStream_V_data_V_0_vld_in);
    sensitive << ( inStream_TVALID );

    SC_METHOD(thread_inStream_V_data_V_0_vld_out);
    sensitive << ( inStream_V_data_V_0_state );

    SC_METHOD(thread_inStream_V_dest_V_0_ack_out);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1290 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1315 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1462 );
    sensitive << ( icmp_reg_1471 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( tmp_5_reg_1480 );
    sensitive << ( ap_enable_reg_pp3_iter4 );
    sensitive << ( ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 );
    sensitive << ( ap_condition_1080 );

    SC_METHOD(thread_inStream_V_dest_V_0_vld_in);
    sensitive << ( inStream_TVALID );

    SC_METHOD(thread_indvar_flatten_next7_fu_828_p2);
    sensitive << ( indvar_flatten6_reg_377 );

    SC_METHOD(thread_indvar_flatten_next_fu_632_p2);
    sensitive << ( indvar_flatten_reg_320 );

    SC_METHOD(thread_lineBuffer_0_3_13_fu_1128_p3);
    sensitive << ( lineBuffer_0_3_8_fu_156 );
    sensitive << ( sel_tmp15_fu_1076_p2 );
    sensitive << ( lineBuffer_0_3_9_fu_1120_p3 );

    SC_METHOD(thread_lineBuffer_0_3_14_fu_1136_p3);
    sensitive << ( lineBuffer_0_3_15_fu_1050_p6 );
    sensitive << ( lineBuffer_0_3_5_fu_152 );
    sensitive << ( sel_tmp15_fu_1076_p2 );

    SC_METHOD(thread_lineBuffer_0_3_1_fu_519_p3);
    sensitive << ( inStream_V_data_V_0_data_out );
    sensitive << ( lineBuffer_0_3_reg_226 );
    sensitive << ( cond_reg_1294 );

    SC_METHOD(thread_lineBuffer_0_3_4_fu_526_p3);
    sensitive << ( inStream_V_data_V_0_data_out );
    sensitive << ( lineBuffer_0_2_reg_238 );
    sensitive << ( cond_reg_1294 );

    SC_METHOD(thread_lineBuffer_0_3_6_fu_1096_p3);
    sensitive << ( lineBuffer_0_3_3_reg_439 );
    sensitive << ( or_cond2_fu_1082_p2 );
    sensitive << ( newSel4_fu_1088_p3 );

    SC_METHOD(thread_lineBuffer_0_3_7_fu_1112_p3);
    sensitive << ( lineBuffer_0_2_s_reg_449 );
    sensitive << ( or_cond2_fu_1082_p2 );
    sensitive << ( newSel6_fu_1104_p3 );

    SC_METHOD(thread_lineBuffer_0_3_9_fu_1120_p3);
    sensitive << ( lineBuffer_0_3_15_fu_1050_p6 );
    sensitive << ( lineBuffer_0_3_8_fu_156 );
    sensitive << ( sel_tmp14_fu_1070_p2 );

    SC_METHOD(thread_lineBuffer_1_3_10_fu_1170_p3);
    sensitive << ( lineBuffer_1_3_3_reg_399 );
    sensitive << ( or_cond2_fu_1082_p2 );
    sensitive << ( newSel8_fu_1162_p3 );

    SC_METHOD(thread_lineBuffer_1_3_11_fu_1186_p3);
    sensitive << ( lineBuffer_1_2_3_reg_409 );
    sensitive << ( or_cond2_fu_1082_p2 );
    sensitive << ( newSel1_fu_1178_p3 );

    SC_METHOD(thread_lineBuffer_1_3_18_fu_1194_p3);
    sensitive << ( lineBuffer_1_3_17_reg_419 );
    sensitive << ( window_2_2_2_fu_168 );
    sensitive << ( sel_tmp14_fu_1070_p2 );

    SC_METHOD(thread_lineBuffer_1_3_19_fu_1202_p3);
    sensitive << ( lineBuffer_1_3_17_reg_419 );
    sensitive << ( sel_tmp15_fu_1076_p2 );
    sensitive << ( lineBuffer_1_3_18_fu_1194_p3 );

    SC_METHOD(thread_lineBuffer_1_3_20_fu_1210_p3);
    sensitive << ( lineBuffer_1_3_1_reg_429 );
    sensitive << ( window_2_2_2_fu_168 );
    sensitive << ( sel_tmp15_fu_1076_p2 );

    SC_METHOD(thread_lineBuffer_1_3_2_fu_578_p3);
    sensitive << ( lineBuffer_1_3_reg_261 );
    sensitive << ( or_cond_fu_564_p2 );
    sensitive << ( newSel_fu_570_p3 );

    SC_METHOD(thread_lineBuffer_1_3_4_fu_594_p3);
    sensitive << ( lineBuffer_1_2_reg_273 );
    sensitive << ( or_cond_fu_564_p2 );
    sensitive << ( newSel2_fu_586_p3 );

    SC_METHOD(thread_lineBuffer_1_3_6_fu_602_p3);
    sensitive << ( inStream_V_data_V_0_data_out );
    sensitive << ( lineBuffer_1_3_5_reg_285 );
    sensitive << ( sel_tmp7_fu_554_p2 );

    SC_METHOD(thread_lineBuffer_1_3_7_fu_610_p3);
    sensitive << ( lineBuffer_1_3_5_reg_285 );
    sensitive << ( sel_tmp9_fu_559_p2 );
    sensitive << ( lineBuffer_1_3_6_fu_602_p3 );

    SC_METHOD(thread_lineBuffer_1_3_9_fu_618_p3);
    sensitive << ( inStream_V_data_V_0_data_out );
    sensitive << ( lineBuffer_1_3_8_reg_297 );
    sensitive << ( sel_tmp9_fu_559_p2 );

    SC_METHOD(thread_maxValue_0_1_maxVal_fu_944_p3);
    sensitive << ( window_0_0_read_as_fu_136 );
    sensitive << ( window_0_0_fu_140 );
    sensitive << ( tmp_4_0_1_i_fu_938_p2 );

    SC_METHOD(thread_maxValue_17_0_maxVal_fu_958_p3);
    sensitive << ( window_1_0_read_as_fu_148 );
    sensitive << ( maxValue_0_1_maxVal_fu_944_p3 );
    sensitive << ( tmp_4_1_i_fu_952_p2 );

    SC_METHOD(thread_newSel1_fu_1178_p3);
    sensitive << ( lineBuffer_1_2_3_reg_409 );
    sensitive << ( window_2_2_2_fu_168 );
    sensitive << ( sel_tmp13_fu_1064_p2 );

    SC_METHOD(thread_newSel2_fu_586_p3);
    sensitive << ( inStream_V_data_V_0_data_out );
    sensitive << ( lineBuffer_1_2_reg_273 );
    sensitive << ( sel_tmp_fu_549_p2 );

    SC_METHOD(thread_newSel4_fu_1088_p3);
    sensitive << ( lineBuffer_0_3_3_reg_439 );
    sensitive << ( lineBuffer_0_3_15_fu_1050_p6 );
    sensitive << ( sel_tmp13_fu_1064_p2 );

    SC_METHOD(thread_newSel6_fu_1104_p3);
    sensitive << ( lineBuffer_0_2_s_reg_449 );
    sensitive << ( lineBuffer_0_3_15_fu_1050_p6 );
    sensitive << ( sel_tmp13_fu_1064_p2 );

    SC_METHOD(thread_newSel8_fu_1162_p3);
    sensitive << ( lineBuffer_1_3_3_reg_399 );
    sensitive << ( window_2_2_2_fu_168 );
    sensitive << ( sel_tmp13_fu_1064_p2 );

    SC_METHOD(thread_newSel_fu_570_p3);
    sensitive << ( inStream_V_data_V_0_data_out );
    sensitive << ( lineBuffer_1_3_reg_261 );
    sensitive << ( sel_tmp_fu_549_p2 );

    SC_METHOD(thread_or_cond2_fu_1082_p2);
    sensitive << ( sel_tmp15_fu_1076_p2 );
    sensitive << ( sel_tmp14_fu_1070_p2 );

    SC_METHOD(thread_or_cond_fu_564_p2);
    sensitive << ( sel_tmp9_fu_559_p2 );
    sensitive << ( sel_tmp7_fu_554_p2 );

    SC_METHOD(thread_outStream_TDATA);
    sensitive << ( outStream_V_data_V_1_data_out );

    SC_METHOD(thread_outStream_TDATA_blk_n);
    sensitive << ( outStream_V_data_V_1_state );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( tmp_5_reg_1480 );
    sensitive << ( ap_enable_reg_pp3_iter4 );
    sensitive << ( ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 );

    SC_METHOD(thread_outStream_TDEST);
    sensitive << ( outStream_V_dest_V_1_data_out );

    SC_METHOD(thread_outStream_TID);
    sensitive << ( outStream_V_id_V_1_data_out );

    SC_METHOD(thread_outStream_TKEEP);
    sensitive << ( outStream_V_keep_V_1_data_out );

    SC_METHOD(thread_outStream_TLAST);
    sensitive << ( outStream_V_last_V_1_data_out );

    SC_METHOD(thread_outStream_TSTRB);
    sensitive << ( outStream_V_strb_V_1_data_out );

    SC_METHOD(thread_outStream_TUSER);
    sensitive << ( outStream_V_user_V_1_data_out );

    SC_METHOD(thread_outStream_TVALID);
    sensitive << ( outStream_V_dest_V_1_state );

    SC_METHOD(thread_outStream_V_data_V_1_ack_in);
    sensitive << ( outStream_V_data_V_1_state );

    SC_METHOD(thread_outStream_V_data_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_data_V_1_data_out);
    sensitive << ( outStream_V_data_V_1_payload_A );
    sensitive << ( outStream_V_data_V_1_payload_B );
    sensitive << ( outStream_V_data_V_1_sel );

    SC_METHOD(thread_outStream_V_data_V_1_load_A);
    sensitive << ( outStream_V_data_V_1_sel_wr );
    sensitive << ( outStream_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_data_V_1_load_B);
    sensitive << ( outStream_V_data_V_1_sel_wr );
    sensitive << ( outStream_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_data_V_1_sel);
    sensitive << ( outStream_V_data_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_data_V_1_state_cmp_full);
    sensitive << ( outStream_V_data_V_1_state );

    SC_METHOD(thread_outStream_V_data_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( tmp_5_reg_1480 );
    sensitive << ( ap_enable_reg_pp3_iter4 );
    sensitive << ( ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 );
    sensitive << ( ap_condition_1080 );

    SC_METHOD(thread_outStream_V_data_V_1_vld_out);
    sensitive << ( outStream_V_data_V_1_state );

    SC_METHOD(thread_outStream_V_dest_V_1_ack_in);
    sensitive << ( outStream_V_dest_V_1_state );

    SC_METHOD(thread_outStream_V_dest_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_dest_V_1_data_out);
    sensitive << ( outStream_V_dest_V_1_sel );

    SC_METHOD(thread_outStream_V_dest_V_1_sel);
    sensitive << ( outStream_V_dest_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_dest_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( tmp_5_reg_1480 );
    sensitive << ( ap_enable_reg_pp3_iter4 );
    sensitive << ( ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 );
    sensitive << ( ap_condition_1080 );

    SC_METHOD(thread_outStream_V_dest_V_1_vld_out);
    sensitive << ( outStream_V_dest_V_1_state );

    SC_METHOD(thread_outStream_V_id_V_1_ack_in);
    sensitive << ( outStream_V_id_V_1_state );

    SC_METHOD(thread_outStream_V_id_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_id_V_1_data_out);
    sensitive << ( outStream_V_id_V_1_sel );

    SC_METHOD(thread_outStream_V_id_V_1_sel);
    sensitive << ( outStream_V_id_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_id_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( tmp_5_reg_1480 );
    sensitive << ( ap_enable_reg_pp3_iter4 );
    sensitive << ( ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 );
    sensitive << ( ap_condition_1080 );

    SC_METHOD(thread_outStream_V_id_V_1_vld_out);
    sensitive << ( outStream_V_id_V_1_state );

    SC_METHOD(thread_outStream_V_keep_V_1_ack_in);
    sensitive << ( outStream_V_keep_V_1_state );

    SC_METHOD(thread_outStream_V_keep_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_keep_V_1_data_out);
    sensitive << ( outStream_V_keep_V_1_sel );

    SC_METHOD(thread_outStream_V_keep_V_1_sel);
    sensitive << ( outStream_V_keep_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_keep_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( tmp_5_reg_1480 );
    sensitive << ( ap_enable_reg_pp3_iter4 );
    sensitive << ( ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 );
    sensitive << ( ap_condition_1080 );

    SC_METHOD(thread_outStream_V_keep_V_1_vld_out);
    sensitive << ( outStream_V_keep_V_1_state );

    SC_METHOD(thread_outStream_V_last_V_1_ack_in);
    sensitive << ( outStream_V_last_V_1_state );

    SC_METHOD(thread_outStream_V_last_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_last_V_1_data_out);
    sensitive << ( outStream_V_last_V_1_payload_A );
    sensitive << ( outStream_V_last_V_1_payload_B );
    sensitive << ( outStream_V_last_V_1_sel );

    SC_METHOD(thread_outStream_V_last_V_1_load_A);
    sensitive << ( outStream_V_last_V_1_sel_wr );
    sensitive << ( outStream_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_last_V_1_load_B);
    sensitive << ( outStream_V_last_V_1_sel_wr );
    sensitive << ( outStream_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_last_V_1_sel);
    sensitive << ( outStream_V_last_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_last_V_1_state_cmp_full);
    sensitive << ( outStream_V_last_V_1_state );

    SC_METHOD(thread_outStream_V_last_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( tmp_5_reg_1480 );
    sensitive << ( ap_enable_reg_pp3_iter4 );
    sensitive << ( ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 );
    sensitive << ( ap_condition_1080 );

    SC_METHOD(thread_outStream_V_last_V_1_vld_out);
    sensitive << ( outStream_V_last_V_1_state );

    SC_METHOD(thread_outStream_V_strb_V_1_ack_in);
    sensitive << ( outStream_V_strb_V_1_state );

    SC_METHOD(thread_outStream_V_strb_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_strb_V_1_data_out);
    sensitive << ( outStream_V_strb_V_1_sel );

    SC_METHOD(thread_outStream_V_strb_V_1_sel);
    sensitive << ( outStream_V_strb_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_strb_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( tmp_5_reg_1480 );
    sensitive << ( ap_enable_reg_pp3_iter4 );
    sensitive << ( ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 );
    sensitive << ( ap_condition_1080 );

    SC_METHOD(thread_outStream_V_strb_V_1_vld_out);
    sensitive << ( outStream_V_strb_V_1_state );

    SC_METHOD(thread_outStream_V_user_V_1_ack_in);
    sensitive << ( outStream_V_user_V_1_state );

    SC_METHOD(thread_outStream_V_user_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_user_V_1_data_out);
    sensitive << ( outStream_V_user_V_1_sel );

    SC_METHOD(thread_outStream_V_user_V_1_sel);
    sensitive << ( outStream_V_user_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_user_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( tmp_5_reg_1480 );
    sensitive << ( ap_enable_reg_pp3_iter4 );
    sensitive << ( ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 );
    sensitive << ( ap_condition_1080 );

    SC_METHOD(thread_outStream_V_user_V_1_vld_out);
    sensitive << ( outStream_V_user_V_1_state );

    SC_METHOD(thread_readCount_fu_853_p2);
    sensitive << ( readCount_1_fu_164 );

    SC_METHOD(thread_result_1_cast_fu_1261_p1);
    sensitive << ( result_1_fu_1254_p3 );

    SC_METHOD(thread_result_1_fu_1254_p3);
    sensitive << ( tmp_14_reg_1490 );
    sensitive << ( result_cast_fu_1245_p1 );
    sensitive << ( tmp_4_i_i_fu_1248_p2 );

    SC_METHOD(thread_result_cast_fu_1245_p1);
    sensitive << ( result_reg_1495 );

    SC_METHOD(thread_result_fu_1018_p3);
    sensitive << ( tmp_14_fu_984_p3 );
    sensitive << ( tmp_3_fu_998_p4 );
    sensitive << ( tmp_6_fu_1008_p4 );

    SC_METHOD(thread_sel_SEBB_i_fu_1238_p3);
    sensitive << ( window_1_0_reg_470 );
    sensitive << ( maxValue_17_0_maxVal_reg_1484 );
    sensitive << ( tmp_4_1_1_i_fu_1233_p2 );

    SC_METHOD(thread_sel_tmp10_fu_752_p3);
    sensitive << ( lineBuffer_1_3_5_reg_285 );
    sensitive << ( sel_tmp4_fu_746_p2 );
    sensitive << ( sel_tmp2_fu_733_p3 );

    SC_METHOD(thread_sel_tmp11_fu_760_p2);
    sensitive << ( exitcond_flatten_reg_1351 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( x4_mid2_reg_1360 );
    sensitive << ( ap_enable_reg_pp2_iter1 );

    SC_METHOD(thread_sel_tmp12_fu_765_p2);
    sensitive << ( sel_tmp13_mid2_fu_696_p2 );
    sensitive << ( sel_tmp11_fu_760_p2 );

    SC_METHOD(thread_sel_tmp13_fu_1064_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( tmp_5_reg_1480 );
    sensitive << ( ap_enable_reg_pp3_iter4 );
    sensitive << ( ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 );
    sensitive << ( ap_condition_1080 );
    sensitive << ( ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462 );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( tmp_15_fu_1032_p1 );

    SC_METHOD(thread_sel_tmp13_mid2_fu_696_p2);
    sensitive << ( tmp_11_reg_1374 );

    SC_METHOD(thread_sel_tmp14_fu_1070_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( tmp_5_reg_1480 );
    sensitive << ( ap_enable_reg_pp3_iter4 );
    sensitive << ( ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 );
    sensitive << ( ap_condition_1080 );
    sensitive << ( ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462 );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( tmp_15_fu_1032_p1 );

    SC_METHOD(thread_sel_tmp15_fu_1076_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( tmp_5_reg_1480 );
    sensitive << ( ap_enable_reg_pp3_iter4 );
    sensitive << ( ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 );
    sensitive << ( ap_condition_1080 );
    sensitive << ( ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462 );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( tmp_15_fu_1032_p1 );

    SC_METHOD(thread_sel_tmp1_fu_727_p2);
    sensitive << ( tmp1_fu_721_p2 );
    sensitive << ( tmp_fu_716_p2 );

    SC_METHOD(thread_sel_tmp2_fu_733_p3);
    sensitive << ( lineBuffer_0_3_reg_226 );
    sensitive << ( lineBuffer_1_3_reg_261 );
    sensitive << ( sel_tmp1_fu_727_p2 );

    SC_METHOD(thread_sel_tmp3_fu_741_p2);
    sensitive << ( exitcond_flatten_reg_1351 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( x4_mid2_reg_1360 );
    sensitive << ( ap_enable_reg_pp2_iter1 );

    SC_METHOD(thread_sel_tmp4_fu_746_p2);
    sensitive << ( sel_tmp3_fu_741_p2 );
    sensitive << ( sel_tmp13_mid2_fu_696_p2 );

    SC_METHOD(thread_sel_tmp5_fu_701_p2);
    sensitive << ( exitcond_flatten_reg_1351 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( x4_mid2_reg_1360 );
    sensitive << ( ap_enable_reg_pp2_iter1 );

    SC_METHOD(thread_sel_tmp6_fu_706_p2);
    sensitive << ( exitcond_flatten_reg_1351 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( x4_mid2_reg_1360 );
    sensitive << ( ap_enable_reg_pp2_iter1 );

    SC_METHOD(thread_sel_tmp7_fu_554_p2);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1315 );
    sensitive << ( tmp_9_reg_1324 );

    SC_METHOD(thread_sel_tmp8_fu_711_p2);
    sensitive << ( exitcond_flatten_reg_1351 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( x4_mid2_reg_1360 );
    sensitive << ( ap_enable_reg_pp2_iter1 );

    SC_METHOD(thread_sel_tmp9_fu_559_p2);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1315 );
    sensitive << ( tmp_9_reg_1324 );

    SC_METHOD(thread_sel_tmp_fu_549_p2);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1315 );
    sensitive << ( tmp_9_reg_1324 );

    SC_METHOD(thread_tmp1_fu_721_p2);
    sensitive << ( sel_tmp6_fu_706_p2 );
    sensitive << ( sel_tmp8_fu_711_p2 );

    SC_METHOD(thread_tmp6_fu_966_p2);
    sensitive << ( window_0_0_read_as_fu_136 );
    sensitive << ( window_1_0_read_as_fu_148 );

    SC_METHOD(thread_tmp7_fu_972_p2);
    sensitive << ( window_1_0_phi_fu_473_p4 );
    sensitive << ( window_0_0_fu_140 );

    SC_METHOD(thread_tmp_10_fu_809_p1);
    sensitive << ( ctrl_read_reg_1285 );

    SC_METHOD(thread_tmp_11_fu_666_p1);
    sensitive << ( tmp_3_mid2_v_fu_658_p3 );

    SC_METHOD(thread_tmp_12_fu_924_p1);
    sensitive << ( y_assign_cast_mid2_v_fu_916_p3 );

    SC_METHOD(thread_tmp_13_fu_928_p1);
    sensitive << ( x_assign_mid2_fu_902_p3 );

    SC_METHOD(thread_tmp_14_fu_984_p3);
    sensitive << ( a_assign_fu_978_p2 );

    SC_METHOD(thread_tmp_15_fu_1032_p1);
    sensitive << ( x_assign_mid2_fu_902_p3 );

    SC_METHOD(thread_tmp_16_fu_837_p4);
    sensitive << ( readCount_1_fu_164 );

    SC_METHOD(thread_tmp_1_i_i_fu_992_p2);
    sensitive << ( a_assign_fu_978_p2 );

    SC_METHOD(thread_tmp_3_fu_998_p4);
    sensitive << ( tmp_1_i_i_fu_992_p2 );

    SC_METHOD(thread_tmp_3_mid2_v_fu_658_p3);
    sensitive << ( y3_phi_fu_335_p4 );
    sensitive << ( exitcond_fu_638_p2 );
    sensitive << ( y9_fu_652_p2 );

    SC_METHOD(thread_tmp_4_0_1_i_fu_938_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( tmp_5_reg_1480 );
    sensitive << ( ap_enable_reg_pp3_iter4 );
    sensitive << ( ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 );
    sensitive << ( tmp_10_reg_1457 );
    sensitive << ( ap_condition_1080 );
    sensitive << ( ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462 );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( tmp_5_fu_932_p2 );
    sensitive << ( window_0_0_read_as_fu_136 );
    sensitive << ( window_0_0_fu_140 );

    SC_METHOD(thread_tmp_4_1_1_i_fu_1233_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( tmp_5_reg_1480 );
    sensitive << ( ap_enable_reg_pp3_iter4 );
    sensitive << ( ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 );
    sensitive << ( window_1_0_reg_470 );
    sensitive << ( tmp_10_reg_1457 );
    sensitive << ( ap_condition_1080 );
    sensitive << ( maxValue_17_0_maxVal_reg_1484 );

    SC_METHOD(thread_tmp_4_1_i_fu_952_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( tmp_5_reg_1480 );
    sensitive << ( ap_enable_reg_pp3_iter4 );
    sensitive << ( ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 );
    sensitive << ( tmp_10_reg_1457 );
    sensitive << ( ap_condition_1080 );
    sensitive << ( ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462 );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( tmp_5_fu_932_p2 );
    sensitive << ( window_1_0_read_as_fu_148 );
    sensitive << ( maxValue_0_1_maxVal_fu_944_p3 );

    SC_METHOD(thread_tmp_4_i_i_fu_1248_p2);
    sensitive << ( result_cast_fu_1245_p1 );

    SC_METHOD(thread_tmp_5_fu_932_p2);
    sensitive << ( tmp_12_fu_924_p1 );
    sensitive << ( tmp_13_fu_928_p1 );

    SC_METHOD(thread_tmp_6_fu_1008_p4);
    sensitive << ( a_assign_fu_978_p2 );

    SC_METHOD(thread_tmp_7_fu_503_p1);
    sensitive << ( x_reg_250 );

    SC_METHOD(thread_tmp_9_fu_545_p1);
    sensitive << ( x1_reg_309 );

    SC_METHOD(thread_tmp_data_V_fu_1265_p3);
    sensitive << ( tmp_10_reg_1457 );
    sensitive << ( result_1_cast_fu_1261_p1 );
    sensitive << ( sel_SEBB_i_fu_1238_p3 );

    SC_METHOD(thread_tmp_fu_716_p2);
    sensitive << ( tmp_11_reg_1374 );
    sensitive << ( sel_tmp5_fu_701_p2 );

    SC_METHOD(thread_tmp_last_V_fu_1273_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( tmp_5_reg_1480 );
    sensitive << ( ap_enable_reg_pp3_iter4 );
    sensitive << ( ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 );
    sensitive << ( ap_condition_1080 );
    sensitive << ( writeCount_fu_1227_p2 );

    SC_METHOD(thread_window_1_0_phi_fu_473_p4);
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( window_1_1_reg_459 );
    sensitive << ( window_1_0_reg_470 );
    sensitive << ( ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462 );

    SC_METHOD(thread_window_2_2_1_fu_787_p3);
    sensitive << ( window_1_1_1_reg_354 );
    sensitive << ( sel_tmp11_fu_760_p2 );
    sensitive << ( window_2_2_7_fu_771_p3 );

    SC_METHOD(thread_window_2_2_3_fu_795_p3);
    sensitive << ( window_1_2_1_reg_342 );
    sensitive << ( cond1_mid2_reg_1380 );
    sensitive << ( window_2_2_fu_779_p3 );

    SC_METHOD(thread_window_2_2_4_fu_802_p3);
    sensitive << ( window_1_1_1_reg_354 );
    sensitive << ( cond1_mid2_reg_1380 );
    sensitive << ( window_2_2_1_fu_787_p3 );

    SC_METHOD(thread_window_2_2_7_fu_771_p3);
    sensitive << ( lineBuffer_1_3_8_reg_297 );
    sensitive << ( sel_tmp12_fu_765_p2 );
    sensitive << ( sel_tmp10_fu_752_p3 );

    SC_METHOD(thread_window_2_2_fu_779_p3);
    sensitive << ( window_1_2_1_reg_342 );
    sensitive << ( sel_tmp11_fu_760_p2 );
    sensitive << ( sel_tmp10_fu_752_p3 );

    SC_METHOD(thread_writeCount_fu_1227_p2);
    sensitive << ( writeCount_1_fu_160 );

    SC_METHOD(thread_x4_mid2_fu_644_p3);
    sensitive << ( x4_reg_366 );
    sensitive << ( exitcond_fu_638_p2 );

    SC_METHOD(thread_x_1_fu_513_p2);
    sensitive << ( x_reg_250 );

    SC_METHOD(thread_x_2_fu_539_p2);
    sensitive << ( x1_reg_309 );

    SC_METHOD(thread_x_3_fu_690_p2);
    sensitive << ( x4_mid2_fu_644_p3 );

    SC_METHOD(thread_x_4_fu_1218_p2);
    sensitive << ( x_assign_mid2_fu_902_p3 );

    SC_METHOD(thread_x_assign_mid2_fu_902_p3);
    sensitive << ( x_assign_reg_482 );
    sensitive << ( exitcond2_fu_896_p2 );

    SC_METHOD(thread_y3_phi_fu_335_p4);
    sensitive << ( y3_reg_331 );
    sensitive << ( exitcond_flatten_reg_1351 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( tmp_3_mid2_v_reg_1369 );
    sensitive << ( ap_enable_reg_pp2_iter1 );

    SC_METHOD(thread_y9_fu_652_p2);
    sensitive << ( y3_phi_fu_335_p4 );

    SC_METHOD(thread_y_assign_cast_mid2_v_fu_916_p3);
    sensitive << ( y_assign_phi_fu_392_p4 );
    sensitive << ( exitcond2_fu_896_p2 );
    sensitive << ( y_s_fu_910_p2 );

    SC_METHOD(thread_y_assign_phi_fu_392_p4);
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( y_assign_reg_388 );
    sensitive << ( ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462 );
    sensitive << ( y_assign_cast_mid2_v_reg_1475 );

    SC_METHOD(thread_y_s_fu_910_p2);
    sensitive << ( y_assign_phi_fu_392_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1290 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1315 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( tmp_5_reg_1480 );
    sensitive << ( ap_enable_reg_pp3_iter4 );
    sensitive << ( ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 );
    sensitive << ( exitcond1_fu_497_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond4_fu_533_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( exitcond_flatten_fu_626_p2 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_condition_1080 );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( ap_condition_1749 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000001";
    inStream_V_data_V_0_sel_rd = SC_LOGIC_0;
    inStream_V_data_V_0_sel_wr = SC_LOGIC_0;
    inStream_V_data_V_0_state = "00";
    inStream_V_dest_V_0_state = "00";
    outStream_V_data_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_data_V_1_sel_wr = SC_LOGIC_0;
    outStream_V_data_V_1_state = "00";
    outStream_V_keep_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_keep_V_1_state = "00";
    outStream_V_strb_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_strb_V_1_state = "00";
    outStream_V_user_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_user_V_1_state = "00";
    outStream_V_last_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_last_V_1_sel_wr = SC_LOGIC_0;
    outStream_V_last_V_1_state = "00";
    outStream_V_id_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_id_V_1_state = "00";
    outStream_V_dest_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_dest_V_1_state = "00";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "cnn_pool_d4x4_p2x2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, inStream_TDATA, "(port)inStream_TDATA");
    sc_trace(mVcdFile, inStream_TVALID, "(port)inStream_TVALID");
    sc_trace(mVcdFile, inStream_TREADY, "(port)inStream_TREADY");
    sc_trace(mVcdFile, inStream_TKEEP, "(port)inStream_TKEEP");
    sc_trace(mVcdFile, inStream_TSTRB, "(port)inStream_TSTRB");
    sc_trace(mVcdFile, inStream_TUSER, "(port)inStream_TUSER");
    sc_trace(mVcdFile, inStream_TLAST, "(port)inStream_TLAST");
    sc_trace(mVcdFile, inStream_TID, "(port)inStream_TID");
    sc_trace(mVcdFile, inStream_TDEST, "(port)inStream_TDEST");
    sc_trace(mVcdFile, outStream_TDATA, "(port)outStream_TDATA");
    sc_trace(mVcdFile, outStream_TVALID, "(port)outStream_TVALID");
    sc_trace(mVcdFile, outStream_TREADY, "(port)outStream_TREADY");
    sc_trace(mVcdFile, outStream_TKEEP, "(port)outStream_TKEEP");
    sc_trace(mVcdFile, outStream_TSTRB, "(port)outStream_TSTRB");
    sc_trace(mVcdFile, outStream_TUSER, "(port)outStream_TUSER");
    sc_trace(mVcdFile, outStream_TLAST, "(port)outStream_TLAST");
    sc_trace(mVcdFile, outStream_TID, "(port)outStream_TID");
    sc_trace(mVcdFile, outStream_TDEST, "(port)outStream_TDEST");
    sc_trace(mVcdFile, s_axi_CTRL_AWVALID, "(port)s_axi_CTRL_AWVALID");
    sc_trace(mVcdFile, s_axi_CTRL_AWREADY, "(port)s_axi_CTRL_AWREADY");
    sc_trace(mVcdFile, s_axi_CTRL_AWADDR, "(port)s_axi_CTRL_AWADDR");
    sc_trace(mVcdFile, s_axi_CTRL_WVALID, "(port)s_axi_CTRL_WVALID");
    sc_trace(mVcdFile, s_axi_CTRL_WREADY, "(port)s_axi_CTRL_WREADY");
    sc_trace(mVcdFile, s_axi_CTRL_WDATA, "(port)s_axi_CTRL_WDATA");
    sc_trace(mVcdFile, s_axi_CTRL_WSTRB, "(port)s_axi_CTRL_WSTRB");
    sc_trace(mVcdFile, s_axi_CTRL_ARVALID, "(port)s_axi_CTRL_ARVALID");
    sc_trace(mVcdFile, s_axi_CTRL_ARREADY, "(port)s_axi_CTRL_ARREADY");
    sc_trace(mVcdFile, s_axi_CTRL_ARADDR, "(port)s_axi_CTRL_ARADDR");
    sc_trace(mVcdFile, s_axi_CTRL_RVALID, "(port)s_axi_CTRL_RVALID");
    sc_trace(mVcdFile, s_axi_CTRL_RREADY, "(port)s_axi_CTRL_RREADY");
    sc_trace(mVcdFile, s_axi_CTRL_RDATA, "(port)s_axi_CTRL_RDATA");
    sc_trace(mVcdFile, s_axi_CTRL_RRESP, "(port)s_axi_CTRL_RRESP");
    sc_trace(mVcdFile, s_axi_CTRL_BVALID, "(port)s_axi_CTRL_BVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BREADY, "(port)s_axi_CTRL_BREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BRESP, "(port)s_axi_CTRL_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, inStream_V_data_V_0_data_out, "inStream_V_data_V_0_data_out");
    sc_trace(mVcdFile, inStream_V_data_V_0_vld_in, "inStream_V_data_V_0_vld_in");
    sc_trace(mVcdFile, inStream_V_data_V_0_vld_out, "inStream_V_data_V_0_vld_out");
    sc_trace(mVcdFile, inStream_V_data_V_0_ack_in, "inStream_V_data_V_0_ack_in");
    sc_trace(mVcdFile, inStream_V_data_V_0_ack_out, "inStream_V_data_V_0_ack_out");
    sc_trace(mVcdFile, inStream_V_data_V_0_payload_A, "inStream_V_data_V_0_payload_A");
    sc_trace(mVcdFile, inStream_V_data_V_0_payload_B, "inStream_V_data_V_0_payload_B");
    sc_trace(mVcdFile, inStream_V_data_V_0_sel_rd, "inStream_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, inStream_V_data_V_0_sel_wr, "inStream_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, inStream_V_data_V_0_sel, "inStream_V_data_V_0_sel");
    sc_trace(mVcdFile, inStream_V_data_V_0_load_A, "inStream_V_data_V_0_load_A");
    sc_trace(mVcdFile, inStream_V_data_V_0_load_B, "inStream_V_data_V_0_load_B");
    sc_trace(mVcdFile, inStream_V_data_V_0_state, "inStream_V_data_V_0_state");
    sc_trace(mVcdFile, inStream_V_data_V_0_state_cmp_full, "inStream_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, inStream_V_dest_V_0_vld_in, "inStream_V_dest_V_0_vld_in");
    sc_trace(mVcdFile, inStream_V_dest_V_0_ack_out, "inStream_V_dest_V_0_ack_out");
    sc_trace(mVcdFile, inStream_V_dest_V_0_state, "inStream_V_dest_V_0_state");
    sc_trace(mVcdFile, outStream_V_data_V_1_data_out, "outStream_V_data_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_data_V_1_vld_in, "outStream_V_data_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_data_V_1_vld_out, "outStream_V_data_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_data_V_1_ack_in, "outStream_V_data_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_data_V_1_ack_out, "outStream_V_data_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_data_V_1_payload_A, "outStream_V_data_V_1_payload_A");
    sc_trace(mVcdFile, outStream_V_data_V_1_payload_B, "outStream_V_data_V_1_payload_B");
    sc_trace(mVcdFile, outStream_V_data_V_1_sel_rd, "outStream_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_data_V_1_sel_wr, "outStream_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, outStream_V_data_V_1_sel, "outStream_V_data_V_1_sel");
    sc_trace(mVcdFile, outStream_V_data_V_1_load_A, "outStream_V_data_V_1_load_A");
    sc_trace(mVcdFile, outStream_V_data_V_1_load_B, "outStream_V_data_V_1_load_B");
    sc_trace(mVcdFile, outStream_V_data_V_1_state, "outStream_V_data_V_1_state");
    sc_trace(mVcdFile, outStream_V_data_V_1_state_cmp_full, "outStream_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, outStream_V_keep_V_1_data_out, "outStream_V_keep_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_keep_V_1_vld_in, "outStream_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_keep_V_1_vld_out, "outStream_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_keep_V_1_ack_in, "outStream_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_keep_V_1_ack_out, "outStream_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_keep_V_1_sel_rd, "outStream_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_keep_V_1_sel, "outStream_V_keep_V_1_sel");
    sc_trace(mVcdFile, outStream_V_keep_V_1_state, "outStream_V_keep_V_1_state");
    sc_trace(mVcdFile, outStream_V_strb_V_1_data_out, "outStream_V_strb_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_strb_V_1_vld_in, "outStream_V_strb_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_strb_V_1_vld_out, "outStream_V_strb_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_strb_V_1_ack_in, "outStream_V_strb_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_strb_V_1_ack_out, "outStream_V_strb_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_strb_V_1_sel_rd, "outStream_V_strb_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_strb_V_1_sel, "outStream_V_strb_V_1_sel");
    sc_trace(mVcdFile, outStream_V_strb_V_1_state, "outStream_V_strb_V_1_state");
    sc_trace(mVcdFile, outStream_V_user_V_1_data_out, "outStream_V_user_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_user_V_1_vld_in, "outStream_V_user_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_user_V_1_vld_out, "outStream_V_user_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_user_V_1_ack_in, "outStream_V_user_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_user_V_1_ack_out, "outStream_V_user_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_user_V_1_sel_rd, "outStream_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_user_V_1_sel, "outStream_V_user_V_1_sel");
    sc_trace(mVcdFile, outStream_V_user_V_1_state, "outStream_V_user_V_1_state");
    sc_trace(mVcdFile, outStream_V_last_V_1_data_out, "outStream_V_last_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_last_V_1_vld_in, "outStream_V_last_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_last_V_1_vld_out, "outStream_V_last_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_last_V_1_ack_in, "outStream_V_last_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_last_V_1_ack_out, "outStream_V_last_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_last_V_1_payload_A, "outStream_V_last_V_1_payload_A");
    sc_trace(mVcdFile, outStream_V_last_V_1_payload_B, "outStream_V_last_V_1_payload_B");
    sc_trace(mVcdFile, outStream_V_last_V_1_sel_rd, "outStream_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_last_V_1_sel_wr, "outStream_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, outStream_V_last_V_1_sel, "outStream_V_last_V_1_sel");
    sc_trace(mVcdFile, outStream_V_last_V_1_load_A, "outStream_V_last_V_1_load_A");
    sc_trace(mVcdFile, outStream_V_last_V_1_load_B, "outStream_V_last_V_1_load_B");
    sc_trace(mVcdFile, outStream_V_last_V_1_state, "outStream_V_last_V_1_state");
    sc_trace(mVcdFile, outStream_V_last_V_1_state_cmp_full, "outStream_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, outStream_V_id_V_1_data_out, "outStream_V_id_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_id_V_1_vld_in, "outStream_V_id_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_id_V_1_vld_out, "outStream_V_id_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_id_V_1_ack_in, "outStream_V_id_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_id_V_1_ack_out, "outStream_V_id_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_id_V_1_sel_rd, "outStream_V_id_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_id_V_1_sel, "outStream_V_id_V_1_sel");
    sc_trace(mVcdFile, outStream_V_id_V_1_state, "outStream_V_id_V_1_state");
    sc_trace(mVcdFile, outStream_V_dest_V_1_data_out, "outStream_V_dest_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_dest_V_1_vld_in, "outStream_V_dest_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_dest_V_1_vld_out, "outStream_V_dest_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_dest_V_1_ack_in, "outStream_V_dest_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_dest_V_1_ack_out, "outStream_V_dest_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_dest_V_1_sel_rd, "outStream_V_dest_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_dest_V_1_sel, "outStream_V_dest_V_1_sel");
    sc_trace(mVcdFile, outStream_V_dest_V_1_state, "outStream_V_dest_V_1_state");
    sc_trace(mVcdFile, ctrl, "ctrl");
    sc_trace(mVcdFile, inStream_TDATA_blk_n, "inStream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, exitcond1_reg_1290, "exitcond1_reg_1290");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, exitcond4_reg_1315, "exitcond4_reg_1315");
    sc_trace(mVcdFile, ap_CS_fsm_pp3_stage0, "ap_CS_fsm_pp3_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter1, "ap_enable_reg_pp3_iter1");
    sc_trace(mVcdFile, exitcond_flatten8_reg_1462, "exitcond_flatten8_reg_1462");
    sc_trace(mVcdFile, icmp_reg_1471, "icmp_reg_1471");
    sc_trace(mVcdFile, outStream_TDATA_blk_n, "outStream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter3, "ap_enable_reg_pp3_iter3");
    sc_trace(mVcdFile, tmp_5_reg_1480, "tmp_5_reg_1480");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter4, "ap_enable_reg_pp3_iter4");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480, "ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480");
    sc_trace(mVcdFile, lineBuffer_0_3_reg_226, "lineBuffer_0_3_reg_226");
    sc_trace(mVcdFile, lineBuffer_0_2_reg_238, "lineBuffer_0_2_reg_238");
    sc_trace(mVcdFile, x_reg_250, "x_reg_250");
    sc_trace(mVcdFile, lineBuffer_1_3_reg_261, "lineBuffer_1_3_reg_261");
    sc_trace(mVcdFile, lineBuffer_1_2_reg_273, "lineBuffer_1_2_reg_273");
    sc_trace(mVcdFile, lineBuffer_1_3_5_reg_285, "lineBuffer_1_3_5_reg_285");
    sc_trace(mVcdFile, lineBuffer_1_3_8_reg_297, "lineBuffer_1_3_8_reg_297");
    sc_trace(mVcdFile, x1_reg_309, "x1_reg_309");
    sc_trace(mVcdFile, indvar_flatten_reg_320, "indvar_flatten_reg_320");
    sc_trace(mVcdFile, y3_reg_331, "y3_reg_331");
    sc_trace(mVcdFile, window_1_2_1_reg_342, "window_1_2_1_reg_342");
    sc_trace(mVcdFile, window_1_1_1_reg_354, "window_1_1_1_reg_354");
    sc_trace(mVcdFile, x4_reg_366, "x4_reg_366");
    sc_trace(mVcdFile, indvar_flatten6_reg_377, "indvar_flatten6_reg_377");
    sc_trace(mVcdFile, y_assign_reg_388, "y_assign_reg_388");
    sc_trace(mVcdFile, lineBuffer_1_3_3_reg_399, "lineBuffer_1_3_3_reg_399");
    sc_trace(mVcdFile, lineBuffer_1_2_3_reg_409, "lineBuffer_1_2_3_reg_409");
    sc_trace(mVcdFile, lineBuffer_1_3_17_reg_419, "lineBuffer_1_3_17_reg_419");
    sc_trace(mVcdFile, lineBuffer_1_3_1_reg_429, "lineBuffer_1_3_1_reg_429");
    sc_trace(mVcdFile, lineBuffer_0_3_3_reg_439, "lineBuffer_0_3_3_reg_439");
    sc_trace(mVcdFile, lineBuffer_0_2_s_reg_449, "lineBuffer_0_2_s_reg_449");
    sc_trace(mVcdFile, window_1_1_reg_459, "window_1_1_reg_459");
    sc_trace(mVcdFile, window_1_0_reg_470, "window_1_0_reg_470");
    sc_trace(mVcdFile, x_assign_reg_482, "x_assign_reg_482");
    sc_trace(mVcdFile, ctrl_read_reg_1285, "ctrl_read_reg_1285");
    sc_trace(mVcdFile, exitcond1_fu_497_p2, "exitcond1_fu_497_p2");
    sc_trace(mVcdFile, cond_fu_507_p2, "cond_fu_507_p2");
    sc_trace(mVcdFile, cond_reg_1294, "cond_reg_1294");
    sc_trace(mVcdFile, x_1_fu_513_p2, "x_1_fu_513_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, lineBuffer_0_3_1_fu_519_p3, "lineBuffer_0_3_1_fu_519_p3");
    sc_trace(mVcdFile, lineBuffer_0_3_4_fu_526_p3, "lineBuffer_0_3_4_fu_526_p3");
    sc_trace(mVcdFile, exitcond4_fu_533_p2, "exitcond4_fu_533_p2");
    sc_trace(mVcdFile, x_2_fu_539_p2, "x_2_fu_539_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, tmp_9_fu_545_p1, "tmp_9_fu_545_p1");
    sc_trace(mVcdFile, tmp_9_reg_1324, "tmp_9_reg_1324");
    sc_trace(mVcdFile, lineBuffer_1_3_2_fu_578_p3, "lineBuffer_1_3_2_fu_578_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_4_fu_594_p3, "lineBuffer_1_3_4_fu_594_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_7_fu_610_p3, "lineBuffer_1_3_7_fu_610_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_9_fu_618_p3, "lineBuffer_1_3_9_fu_618_p3");
    sc_trace(mVcdFile, exitcond_flatten_fu_626_p2, "exitcond_flatten_fu_626_p2");
    sc_trace(mVcdFile, exitcond_flatten_reg_1351, "exitcond_flatten_reg_1351");
    sc_trace(mVcdFile, ap_CS_fsm_pp2_stage0, "ap_CS_fsm_pp2_stage0");
    sc_trace(mVcdFile, indvar_flatten_next_fu_632_p2, "indvar_flatten_next_fu_632_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter0, "ap_enable_reg_pp2_iter0");
    sc_trace(mVcdFile, x4_mid2_fu_644_p3, "x4_mid2_fu_644_p3");
    sc_trace(mVcdFile, x4_mid2_reg_1360, "x4_mid2_reg_1360");
    sc_trace(mVcdFile, tmp_3_mid2_v_fu_658_p3, "tmp_3_mid2_v_fu_658_p3");
    sc_trace(mVcdFile, tmp_3_mid2_v_reg_1369, "tmp_3_mid2_v_reg_1369");
    sc_trace(mVcdFile, tmp_11_fu_666_p1, "tmp_11_fu_666_p1");
    sc_trace(mVcdFile, tmp_11_reg_1374, "tmp_11_reg_1374");
    sc_trace(mVcdFile, cond1_mid2_fu_682_p3, "cond1_mid2_fu_682_p3");
    sc_trace(mVcdFile, cond1_mid2_reg_1380, "cond1_mid2_reg_1380");
    sc_trace(mVcdFile, x_3_fu_690_p2, "x_3_fu_690_p2");
    sc_trace(mVcdFile, window_2_2_3_fu_795_p3, "window_2_2_3_fu_795_p3");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter1, "ap_enable_reg_pp2_iter1");
    sc_trace(mVcdFile, window_2_2_4_fu_802_p3, "window_2_2_4_fu_802_p3");
    sc_trace(mVcdFile, tmp_10_fu_809_p1, "tmp_10_fu_809_p1");
    sc_trace(mVcdFile, tmp_10_reg_1457, "tmp_10_reg_1457");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, exitcond_flatten8_fu_822_p2, "exitcond_flatten8_fu_822_p2");
    sc_trace(mVcdFile, ap_condition_1080, "ap_condition_1080");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462, "ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462, "ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462");
    sc_trace(mVcdFile, indvar_flatten_next7_fu_828_p2, "indvar_flatten_next7_fu_828_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter0, "ap_enable_reg_pp3_iter0");
    sc_trace(mVcdFile, icmp_fu_847_p2, "icmp_fu_847_p2");
    sc_trace(mVcdFile, y_assign_cast_mid2_v_fu_916_p3, "y_assign_cast_mid2_v_fu_916_p3");
    sc_trace(mVcdFile, y_assign_cast_mid2_v_reg_1475, "y_assign_cast_mid2_v_reg_1475");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter2, "ap_enable_reg_pp3_iter2");
    sc_trace(mVcdFile, tmp_5_fu_932_p2, "tmp_5_fu_932_p2");
    sc_trace(mVcdFile, maxValue_17_0_maxVal_fu_958_p3, "maxValue_17_0_maxVal_fu_958_p3");
    sc_trace(mVcdFile, maxValue_17_0_maxVal_reg_1484, "maxValue_17_0_maxVal_reg_1484");
    sc_trace(mVcdFile, tmp_14_fu_984_p3, "tmp_14_fu_984_p3");
    sc_trace(mVcdFile, tmp_14_reg_1490, "tmp_14_reg_1490");
    sc_trace(mVcdFile, result_fu_1018_p3, "result_fu_1018_p3");
    sc_trace(mVcdFile, result_reg_1495, "result_reg_1495");
    sc_trace(mVcdFile, lineBuffer_0_3_15_fu_1050_p6, "lineBuffer_0_3_15_fu_1050_p6");
    sc_trace(mVcdFile, lineBuffer_0_3_15_reg_1500, "lineBuffer_0_3_15_reg_1500");
    sc_trace(mVcdFile, lineBuffer_0_3_6_fu_1096_p3, "lineBuffer_0_3_6_fu_1096_p3");
    sc_trace(mVcdFile, lineBuffer_0_3_7_fu_1112_p3, "lineBuffer_0_3_7_fu_1112_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_10_fu_1170_p3, "lineBuffer_1_3_10_fu_1170_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_11_fu_1186_p3, "lineBuffer_1_3_11_fu_1186_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_19_fu_1202_p3, "lineBuffer_1_3_19_fu_1202_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_20_fu_1210_p3, "lineBuffer_1_3_20_fu_1210_p3");
    sc_trace(mVcdFile, x_4_fu_1218_p2, "x_4_fu_1218_p2");
    sc_trace(mVcdFile, tmp_data_V_fu_1265_p3, "tmp_data_V_fu_1265_p3");
    sc_trace(mVcdFile, tmp_last_V_fu_1273_p2, "tmp_last_V_fu_1273_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, y3_phi_fu_335_p4, "y3_phi_fu_335_p4");
    sc_trace(mVcdFile, y_assign_phi_fu_392_p4, "y_assign_phi_fu_392_p4");
    sc_trace(mVcdFile, window_1_0_phi_fu_473_p4, "window_1_0_phi_fu_473_p4");
    sc_trace(mVcdFile, window_0_0_read_as_fu_136, "window_0_0_read_as_fu_136");
    sc_trace(mVcdFile, window_0_0_fu_140, "window_0_0_fu_140");
    sc_trace(mVcdFile, window_0_1_fu_144, "window_0_1_fu_144");
    sc_trace(mVcdFile, windowRightCol_0_fu_1036_p6, "windowRightCol_0_fu_1036_p6");
    sc_trace(mVcdFile, window_1_0_read_as_fu_148, "window_1_0_read_as_fu_148");
    sc_trace(mVcdFile, lineBuffer_0_3_5_fu_152, "lineBuffer_0_3_5_fu_152");
    sc_trace(mVcdFile, lineBuffer_0_3_14_fu_1136_p3, "lineBuffer_0_3_14_fu_1136_p3");
    sc_trace(mVcdFile, lineBuffer_0_3_8_fu_156, "lineBuffer_0_3_8_fu_156");
    sc_trace(mVcdFile, lineBuffer_0_3_13_fu_1128_p3, "lineBuffer_0_3_13_fu_1128_p3");
    sc_trace(mVcdFile, writeCount_1_fu_160, "writeCount_1_fu_160");
    sc_trace(mVcdFile, writeCount_fu_1227_p2, "writeCount_fu_1227_p2");
    sc_trace(mVcdFile, readCount_1_fu_164, "readCount_1_fu_164");
    sc_trace(mVcdFile, readCount_fu_853_p2, "readCount_fu_853_p2");
    sc_trace(mVcdFile, window_2_2_2_fu_168, "window_2_2_2_fu_168");
    sc_trace(mVcdFile, tmp_7_fu_503_p1, "tmp_7_fu_503_p1");
    sc_trace(mVcdFile, sel_tmp9_fu_559_p2, "sel_tmp9_fu_559_p2");
    sc_trace(mVcdFile, sel_tmp7_fu_554_p2, "sel_tmp7_fu_554_p2");
    sc_trace(mVcdFile, sel_tmp_fu_549_p2, "sel_tmp_fu_549_p2");
    sc_trace(mVcdFile, or_cond_fu_564_p2, "or_cond_fu_564_p2");
    sc_trace(mVcdFile, newSel_fu_570_p3, "newSel_fu_570_p3");
    sc_trace(mVcdFile, newSel2_fu_586_p3, "newSel2_fu_586_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_6_fu_602_p3, "lineBuffer_1_3_6_fu_602_p3");
    sc_trace(mVcdFile, exitcond_fu_638_p2, "exitcond_fu_638_p2");
    sc_trace(mVcdFile, y9_fu_652_p2, "y9_fu_652_p2");
    sc_trace(mVcdFile, cond1_mid1_fu_670_p2, "cond1_mid1_fu_670_p2");
    sc_trace(mVcdFile, cond1_fu_676_p2, "cond1_fu_676_p2");
    sc_trace(mVcdFile, sel_tmp5_fu_701_p2, "sel_tmp5_fu_701_p2");
    sc_trace(mVcdFile, sel_tmp6_fu_706_p2, "sel_tmp6_fu_706_p2");
    sc_trace(mVcdFile, sel_tmp8_fu_711_p2, "sel_tmp8_fu_711_p2");
    sc_trace(mVcdFile, tmp1_fu_721_p2, "tmp1_fu_721_p2");
    sc_trace(mVcdFile, tmp_fu_716_p2, "tmp_fu_716_p2");
    sc_trace(mVcdFile, sel_tmp1_fu_727_p2, "sel_tmp1_fu_727_p2");
    sc_trace(mVcdFile, sel_tmp3_fu_741_p2, "sel_tmp3_fu_741_p2");
    sc_trace(mVcdFile, sel_tmp13_mid2_fu_696_p2, "sel_tmp13_mid2_fu_696_p2");
    sc_trace(mVcdFile, sel_tmp4_fu_746_p2, "sel_tmp4_fu_746_p2");
    sc_trace(mVcdFile, sel_tmp2_fu_733_p3, "sel_tmp2_fu_733_p3");
    sc_trace(mVcdFile, sel_tmp11_fu_760_p2, "sel_tmp11_fu_760_p2");
    sc_trace(mVcdFile, sel_tmp12_fu_765_p2, "sel_tmp12_fu_765_p2");
    sc_trace(mVcdFile, sel_tmp10_fu_752_p3, "sel_tmp10_fu_752_p3");
    sc_trace(mVcdFile, window_2_2_7_fu_771_p3, "window_2_2_7_fu_771_p3");
    sc_trace(mVcdFile, window_2_2_fu_779_p3, "window_2_2_fu_779_p3");
    sc_trace(mVcdFile, window_2_2_1_fu_787_p3, "window_2_2_1_fu_787_p3");
    sc_trace(mVcdFile, tmp_16_fu_837_p4, "tmp_16_fu_837_p4");
    sc_trace(mVcdFile, exitcond2_fu_896_p2, "exitcond2_fu_896_p2");
    sc_trace(mVcdFile, y_s_fu_910_p2, "y_s_fu_910_p2");
    sc_trace(mVcdFile, x_assign_mid2_fu_902_p3, "x_assign_mid2_fu_902_p3");
    sc_trace(mVcdFile, tmp_12_fu_924_p1, "tmp_12_fu_924_p1");
    sc_trace(mVcdFile, tmp_13_fu_928_p1, "tmp_13_fu_928_p1");
    sc_trace(mVcdFile, tmp_4_0_1_i_fu_938_p2, "tmp_4_0_1_i_fu_938_p2");
    sc_trace(mVcdFile, maxValue_0_1_maxVal_fu_944_p3, "maxValue_0_1_maxVal_fu_944_p3");
    sc_trace(mVcdFile, tmp_4_1_i_fu_952_p2, "tmp_4_1_i_fu_952_p2");
    sc_trace(mVcdFile, tmp7_fu_972_p2, "tmp7_fu_972_p2");
    sc_trace(mVcdFile, tmp6_fu_966_p2, "tmp6_fu_966_p2");
    sc_trace(mVcdFile, a_assign_fu_978_p2, "a_assign_fu_978_p2");
    sc_trace(mVcdFile, tmp_1_i_i_fu_992_p2, "tmp_1_i_i_fu_992_p2");
    sc_trace(mVcdFile, tmp_3_fu_998_p4, "tmp_3_fu_998_p4");
    sc_trace(mVcdFile, tmp_6_fu_1008_p4, "tmp_6_fu_1008_p4");
    sc_trace(mVcdFile, tmp_15_fu_1032_p1, "tmp_15_fu_1032_p1");
    sc_trace(mVcdFile, sel_tmp15_fu_1076_p2, "sel_tmp15_fu_1076_p2");
    sc_trace(mVcdFile, sel_tmp14_fu_1070_p2, "sel_tmp14_fu_1070_p2");
    sc_trace(mVcdFile, sel_tmp13_fu_1064_p2, "sel_tmp13_fu_1064_p2");
    sc_trace(mVcdFile, or_cond2_fu_1082_p2, "or_cond2_fu_1082_p2");
    sc_trace(mVcdFile, newSel4_fu_1088_p3, "newSel4_fu_1088_p3");
    sc_trace(mVcdFile, newSel6_fu_1104_p3, "newSel6_fu_1104_p3");
    sc_trace(mVcdFile, lineBuffer_0_3_9_fu_1120_p3, "lineBuffer_0_3_9_fu_1120_p3");
    sc_trace(mVcdFile, newSel8_fu_1162_p3, "newSel8_fu_1162_p3");
    sc_trace(mVcdFile, newSel1_fu_1178_p3, "newSel1_fu_1178_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_18_fu_1194_p3, "lineBuffer_1_3_18_fu_1194_p3");
    sc_trace(mVcdFile, tmp_4_1_1_i_fu_1233_p2, "tmp_4_1_1_i_fu_1233_p2");
    sc_trace(mVcdFile, result_cast_fu_1245_p1, "result_cast_fu_1245_p1");
    sc_trace(mVcdFile, tmp_4_i_i_fu_1248_p2, "tmp_4_i_i_fu_1248_p2");
    sc_trace(mVcdFile, result_1_fu_1254_p3, "result_1_fu_1254_p3");
    sc_trace(mVcdFile, result_1_cast_fu_1261_p1, "result_1_cast_fu_1261_p1");
    sc_trace(mVcdFile, sel_SEBB_i_fu_1238_p3, "sel_SEBB_i_fu_1238_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_condition_1749, "ap_condition_1749");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_condition_1091, "ap_condition_1091");
#endif

    }
    mHdltvinHandle.open("cnn_pool_d4x4_p2x2.hdltvin.dat");
    mHdltvoutHandle.open("cnn_pool_d4x4_p2x2.hdltvout.dat");
}

cnn_pool_d4x4_p2x2::~cnn_pool_d4x4_p2x2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete cnn_pool_d4x4_p2x2_CTRL_s_axi_U;
    delete cnn_pool_d4x4_p2xbkb_U0;
    delete cnn_pool_d4x4_p2xbkb_U1;
}

void cnn_pool_d4x4_p2x2::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void cnn_pool_d4x4_p2x2::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1290.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_497_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1290.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_497_p2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1290.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_497_p2.read())))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1315.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_533_p2.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1315.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_533_p2.read()))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read())) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1315.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_533_p2.read())))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_626_p2.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_626_p2.read()))) {
            ap_enable_reg_pp2_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read())) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_626_p2.read())))) {
            ap_enable_reg_pp2_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_822_p2.read()))) {
            ap_enable_reg_pp3_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
            ap_enable_reg_pp3_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
            ap_enable_reg_pp3_iter1 = ap_enable_reg_pp3_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
            ap_enable_reg_pp3_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter2 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter2 = ap_enable_reg_pp3_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_1091.read(), ap_const_boolean_1)) {
            if (!esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read())) {
                ap_enable_reg_pp3_iter3 = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read())) {
                ap_enable_reg_pp3_iter3 = ap_enable_reg_pp3_iter2.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter4 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter4 = ap_enable_reg_pp3_iter3.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
            ap_enable_reg_pp3_iter4 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_out.read()))) {
            inStream_V_data_V_0_sel_rd =  (sc_logic) (~inStream_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_in.read()))) {
            inStream_V_data_V_0_sel_wr =  (sc_logic) (~inStream_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            inStream_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            inStream_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_out.read()))))) {
            inStream_V_data_V_0_state = ap_const_lv2_3;
        } else {
            inStream_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, inStream_V_dest_V_0_state.read())))) {
            inStream_V_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, inStream_V_dest_V_0_state.read())))) {
            inStream_V_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, inStream_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, inStream_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_ack_out.read()))))) {
            inStream_V_dest_V_0_state = ap_const_lv2_3;
        } else {
            inStream_V_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_822_p2.read()))) {
        indvar_flatten6_reg_377 = indvar_flatten_next7_fu_828_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        indvar_flatten6_reg_377 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        indvar_flatten_reg_320 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_626_p2.read()))) {
        indvar_flatten_reg_320 = indvar_flatten_next_fu_632_p2.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462.read()))) {
        lineBuffer_0_2_s_reg_449 = lineBuffer_0_3_7_fu_1112_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        lineBuffer_0_2_s_reg_449 = lineBuffer_0_2_reg_238.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462.read()))) {
        lineBuffer_0_3_3_reg_439 = lineBuffer_0_3_6_fu_1096_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        lineBuffer_0_3_3_reg_439 = lineBuffer_0_3_reg_226.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462.read()))) {
        lineBuffer_1_2_3_reg_409 = lineBuffer_1_3_11_fu_1186_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        lineBuffer_1_2_3_reg_409 = lineBuffer_1_2_reg_273.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462.read()))) {
        lineBuffer_1_3_17_reg_419 = lineBuffer_1_3_19_fu_1202_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        lineBuffer_1_3_17_reg_419 = lineBuffer_1_3_5_reg_285.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462.read()))) {
        lineBuffer_1_3_1_reg_429 = lineBuffer_1_3_20_fu_1210_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        lineBuffer_1_3_1_reg_429 = lineBuffer_1_3_8_reg_297.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462.read()))) {
        lineBuffer_1_3_3_reg_399 = lineBuffer_1_3_10_fu_1170_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        lineBuffer_1_3_3_reg_399 = lineBuffer_1_3_reg_261.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_out.read()))) {
            outStream_V_data_V_1_sel_rd =  (sc_logic) (~outStream_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_in.read()))) {
            outStream_V_data_V_1_sel_wr =  (sc_logic) (~outStream_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_data_V_1_state.read())))) {
            outStream_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_data_V_1_state.read())))) {
            outStream_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_out.read()))))) {
            outStream_V_data_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_dest_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_vld_out.read()))) {
            outStream_V_dest_V_1_sel_rd =  (sc_logic) (~outStream_V_dest_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_dest_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_dest_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_dest_V_1_state.read())))) {
            outStream_V_dest_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_dest_V_1_state.read())))) {
            outStream_V_dest_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_dest_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_ack_out.read()))))) {
            outStream_V_dest_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_dest_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_id_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_vld_out.read()))) {
            outStream_V_id_V_1_sel_rd =  (sc_logic) (~outStream_V_id_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_id_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_id_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_id_V_1_state.read())))) {
            outStream_V_id_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_id_V_1_state.read())))) {
            outStream_V_id_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_id_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_ack_out.read()))))) {
            outStream_V_id_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_id_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_vld_out.read()))) {
            outStream_V_keep_V_1_sel_rd =  (sc_logic) (~outStream_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_keep_V_1_state.read())))) {
            outStream_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_keep_V_1_state.read())))) {
            outStream_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_ack_out.read()))))) {
            outStream_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_out.read()))) {
            outStream_V_last_V_1_sel_rd =  (sc_logic) (~outStream_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_in.read()))) {
            outStream_V_last_V_1_sel_wr =  (sc_logic) (~outStream_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_last_V_1_state.read())))) {
            outStream_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_last_V_1_state.read())))) {
            outStream_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_out.read()))))) {
            outStream_V_last_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_strb_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_vld_out.read()))) {
            outStream_V_strb_V_1_sel_rd =  (sc_logic) (~outStream_V_strb_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_strb_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_strb_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_strb_V_1_state.read())))) {
            outStream_V_strb_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_strb_V_1_state.read())))) {
            outStream_V_strb_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_strb_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_ack_out.read()))))) {
            outStream_V_strb_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_strb_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_vld_out.read()))) {
            outStream_V_user_V_1_sel_rd =  (sc_logic) (~outStream_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_user_V_1_state.read())))) {
            outStream_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_user_V_1_state.read())))) {
            outStream_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_ack_out.read()))))) {
            outStream_V_user_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_822_p2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_847_p2.read()))) {
        readCount_1_fu_164 = readCount_fu_853_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        readCount_1_fu_164 = ap_const_lv32_6;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462.read()))) {
        window_1_0_reg_470 = window_1_1_reg_459.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        window_1_0_reg_470 = window_1_1_1_reg_354.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462.read()))) {
        window_1_1_reg_459 = lineBuffer_0_3_15_reg_1500.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        window_1_1_reg_459 = window_1_2_1_reg_342.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        writeCount_1_fu_160 = writeCount_fu_1227_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        writeCount_1_fu_160 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        x1_reg_309 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1315.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_533_p2.read()))) {
        x1_reg_309 = x_2_fu_539_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        x4_reg_366 = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_626_p2.read()))) {
        x4_reg_366 = x_3_fu_690_p2.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462.read()))) {
        x_assign_reg_482 = x_4_fu_1218_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        x_assign_reg_482 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1290.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_497_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        x_reg_250 = x_1_fu_513_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        x_reg_250 = ap_const_lv3_2;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        y3_reg_331 = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1351.read()))) {
        y3_reg_331 = tmp_3_mid2_v_reg_1369.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462.read()))) {
        y_assign_reg_388 = y_assign_cast_mid2_v_reg_1475.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        y_assign_reg_388 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462 = exitcond_flatten8_reg_1462.read();
        exitcond_flatten8_reg_1462 = exitcond_flatten8_fu_822_p2.read();
    }
    if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
        ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462 = ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462.read();
        ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480 = tmp_5_reg_1480.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_626_p2.read()))) {
        cond1_mid2_reg_1380 = cond1_mid2_fu_682_p3.read();
        tmp_11_reg_1374 = tmp_11_fu_666_p1.read();
        x4_mid2_reg_1360 = x4_mid2_fu_644_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1290.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_497_p2.read()))) {
        cond_reg_1294 = cond_fu_507_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        ctrl_read_reg_1285 = ctrl.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1290.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)))) {
        exitcond1_reg_1290 = exitcond1_fu_497_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1315.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)))) {
        exitcond4_reg_1315 = exitcond4_fu_533_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()))) {
        exitcond_flatten_reg_1351 = exitcond_flatten_fu_626_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_822_p2.read()))) {
        icmp_reg_1471 = icmp_fu_847_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_load_A.read())) {
        inStream_V_data_V_0_payload_A = inStream_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_load_B.read())) {
        inStream_V_data_V_0_payload_B = inStream_TDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1290.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1290.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)))) {
        lineBuffer_0_2_reg_238 = lineBuffer_0_3_4_fu_526_p3.read();
        lineBuffer_0_3_reg_226 = lineBuffer_0_3_1_fu_519_p3.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462.read()))) {
        lineBuffer_0_3_15_reg_1500 = lineBuffer_0_3_15_fu_1050_p6.read();
        lineBuffer_0_3_5_fu_152 = lineBuffer_0_3_14_fu_1136_p3.read();
        lineBuffer_0_3_8_fu_156 = lineBuffer_0_3_13_fu_1128_p3.read();
        window_0_1_fu_144 = windowRightCol_0_fu_1036_p6.read();
        y_assign_cast_mid2_v_reg_1475 = y_assign_cast_mid2_v_fu_916_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1315.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1315.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)))) {
        lineBuffer_1_2_reg_273 = lineBuffer_1_3_4_fu_594_p3.read();
        lineBuffer_1_3_5_reg_285 = lineBuffer_1_3_7_fu_610_p3.read();
        lineBuffer_1_3_8_reg_297 = lineBuffer_1_3_9_fu_618_p3.read();
        lineBuffer_1_3_reg_261 = lineBuffer_1_3_2_fu_578_p3.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_932_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1457.read()))) {
        maxValue_17_0_maxVal_reg_1484 = maxValue_17_0_maxVal_fu_958_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_load_A.read())) {
        outStream_V_data_V_1_payload_A = tmp_data_V_fu_1265_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_load_B.read())) {
        outStream_V_data_V_1_payload_B = tmp_data_V_fu_1265_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_load_A.read())) {
        outStream_V_last_V_1_payload_A = tmp_last_V_fu_1273_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_load_B.read())) {
        outStream_V_last_V_1_payload_B = tmp_last_V_fu_1273_p2.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_932_p2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_1457.read()))) {
        result_reg_1495 = result_fu_1018_p3.read();
        tmp_14_reg_1490 = a_assign_fu_978_p2.read().range(31, 31);
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        tmp_10_reg_1457 = tmp_10_fu_809_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_626_p2.read()))) {
        tmp_3_mid2_v_reg_1369 = tmp_3_mid2_v_fu_658_p3.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1462.read()))) {
        tmp_5_reg_1480 = tmp_5_fu_932_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1315.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_533_p2.read()))) {
        tmp_9_reg_1324 = tmp_9_fu_545_p1.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()))) {
        window_0_0_fu_140 = window_0_1_fu_144.read();
        window_0_0_read_as_fu_136 = window_0_0_fu_140.read();
        window_1_0_read_as_fu_148 = window_1_0_phi_fu_473_p4.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1351.read()))) {
        window_1_1_1_reg_354 = window_2_2_4_fu_802_p3.read();
        window_1_2_1_reg_342 = window_2_2_3_fu_795_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1462.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1471.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        window_2_2_2_fu_168 = inStream_V_data_V_0_data_out.read();
    }
}

void cnn_pool_d4x4_p2x2::thread_a_assign_fu_978_p2() {
    a_assign_fu_978_p2 = (!tmp7_fu_972_p2.read().is_01() || !tmp6_fu_966_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp7_fu_972_p2.read()) + sc_biguint<32>(tmp6_fu_966_p2.read()));
}

void cnn_pool_d4x4_p2x2::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(1, 1);
}

void cnn_pool_d4x4_p2x2::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read().range(3, 3);
}

void cnn_pool_d4x4_p2x2::thread_ap_CS_fsm_pp2_stage0() {
    ap_CS_fsm_pp2_stage0 = ap_CS_fsm.read().range(5, 5);
}

void cnn_pool_d4x4_p2x2::thread_ap_CS_fsm_pp3_stage0() {
    ap_CS_fsm_pp3_stage0 = ap_CS_fsm.read().range(7, 7);
}

void cnn_pool_d4x4_p2x2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void cnn_pool_d4x4_p2x2::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read().range(6, 6);
}

void cnn_pool_d4x4_p2x2::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read().range(8, 8);
}

void cnn_pool_d4x4_p2x2::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(2, 2);
}

void cnn_pool_d4x4_p2x2::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read().range(4, 4);
}

void cnn_pool_d4x4_p2x2::thread_ap_condition_1080() {
    ap_condition_1080 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1462.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1471.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0));
}

void cnn_pool_d4x4_p2x2::thread_ap_condition_1091() {
    ap_condition_1091 = !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())));
}

void cnn_pool_d4x4_p2x2::thread_ap_condition_1749() {
    ap_condition_1749 = (esl_seteq<1,1,1>(outStream_V_data_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_user_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_dest_V_1_ack_in.read(), ap_const_logic_0));
}

void cnn_pool_d4x4_p2x2::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()) && 
         !esl_seteq<1,1,1>(ap_condition_1749.read(), ap_const_boolean_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void cnn_pool_d4x4_p2x2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void cnn_pool_d4x4_p2x2::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()) && 
         !esl_seteq<1,1,1>(ap_condition_1749.read(), ap_const_boolean_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void cnn_pool_d4x4_p2x2::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void cnn_pool_d4x4_p2x2::thread_cond1_fu_676_p2() {
    cond1_fu_676_p2 = (!y3_phi_fu_335_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(y3_phi_fu_335_p4.read() == ap_const_lv2_1);
}

void cnn_pool_d4x4_p2x2::thread_cond1_mid1_fu_670_p2() {
    cond1_mid1_fu_670_p2 = (!y3_phi_fu_335_p4.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(y3_phi_fu_335_p4.read() == ap_const_lv2_0);
}

void cnn_pool_d4x4_p2x2::thread_cond1_mid2_fu_682_p3() {
    cond1_mid2_fu_682_p3 = (!exitcond_fu_638_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond_fu_638_p2.read()[0].to_bool())? cond1_mid1_fu_670_p2.read(): cond1_fu_676_p2.read());
}

void cnn_pool_d4x4_p2x2::thread_cond_fu_507_p2() {
    cond_fu_507_p2 = (!tmp_7_fu_503_p1.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(tmp_7_fu_503_p1.read() == ap_const_lv2_2);
}

void cnn_pool_d4x4_p2x2::thread_exitcond1_fu_497_p2() {
    exitcond1_fu_497_p2 = (!x_reg_250.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(x_reg_250.read() == ap_const_lv3_4);
}

void cnn_pool_d4x4_p2x2::thread_exitcond2_fu_896_p2() {
    exitcond2_fu_896_p2 = (!x_assign_reg_482.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(x_assign_reg_482.read() == ap_const_lv3_4);
}

void cnn_pool_d4x4_p2x2::thread_exitcond4_fu_533_p2() {
    exitcond4_fu_533_p2 = (!x1_reg_309.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(x1_reg_309.read() == ap_const_lv3_4);
}

void cnn_pool_d4x4_p2x2::thread_exitcond_flatten8_fu_822_p2() {
    exitcond_flatten8_fu_822_p2 = (!indvar_flatten6_reg_377.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten6_reg_377.read() == ap_const_lv5_10);
}

void cnn_pool_d4x4_p2x2::thread_exitcond_flatten_fu_626_p2() {
    exitcond_flatten_fu_626_p2 = (!indvar_flatten_reg_320.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_320.read() == ap_const_lv3_4);
}

void cnn_pool_d4x4_p2x2::thread_exitcond_fu_638_p2() {
    exitcond_fu_638_p2 = (!x4_reg_366.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(x4_reg_366.read() == ap_const_lv2_3);
}

void cnn_pool_d4x4_p2x2::thread_icmp_fu_847_p2() {
    icmp_fu_847_p2 = (!tmp_16_fu_837_p4.read().is_01() || !ap_const_lv28_1.is_01())? sc_lv<1>(): (sc_bigint<28>(tmp_16_fu_837_p4.read()) < sc_bigint<28>(ap_const_lv28_1));
}

void cnn_pool_d4x4_p2x2::thread_inStream_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1290.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1315.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1462.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1471.read())))) {
        inStream_TDATA_blk_n =  (sc_logic) (inStream_V_data_V_0_state.read()[0]);
    } else {
        inStream_TDATA_blk_n = ap_const_logic_1;
    }
}

void cnn_pool_d4x4_p2x2::thread_inStream_TREADY() {
    inStream_TREADY =  (sc_logic) (inStream_V_dest_V_0_state.read()[1]);
}

void cnn_pool_d4x4_p2x2::thread_inStream_V_data_V_0_ack_in() {
    inStream_V_data_V_0_ack_in =  (sc_logic) (inStream_V_data_V_0_state.read()[1]);
}

void cnn_pool_d4x4_p2x2::thread_inStream_V_data_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1290.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1290.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1315.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1315.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1462.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1471.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))))) {
        inStream_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        inStream_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void cnn_pool_d4x4_p2x2::thread_inStream_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_sel.read())) {
        inStream_V_data_V_0_data_out = inStream_V_data_V_0_payload_B.read();
    } else {
        inStream_V_data_V_0_data_out = inStream_V_data_V_0_payload_A.read();
    }
}

void cnn_pool_d4x4_p2x2::thread_inStream_V_data_V_0_load_A() {
    inStream_V_data_V_0_load_A = (inStream_V_data_V_0_state_cmp_full.read() & ~inStream_V_data_V_0_sel_wr.read());
}

void cnn_pool_d4x4_p2x2::thread_inStream_V_data_V_0_load_B() {
    inStream_V_data_V_0_load_B = (inStream_V_data_V_0_sel_wr.read() & inStream_V_data_V_0_state_cmp_full.read());
}

void cnn_pool_d4x4_p2x2::thread_inStream_V_data_V_0_sel() {
    inStream_V_data_V_0_sel = inStream_V_data_V_0_sel_rd.read();
}

void cnn_pool_d4x4_p2x2::thread_inStream_V_data_V_0_state_cmp_full() {
    inStream_V_data_V_0_state_cmp_full =  (sc_logic) ((!inStream_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(inStream_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void cnn_pool_d4x4_p2x2::thread_inStream_V_data_V_0_vld_in() {
    inStream_V_data_V_0_vld_in = inStream_TVALID.read();
}

void cnn_pool_d4x4_p2x2::thread_inStream_V_data_V_0_vld_out() {
    inStream_V_data_V_0_vld_out =  (sc_logic) (inStream_V_data_V_0_state.read()[0]);
}

void cnn_pool_d4x4_p2x2::thread_inStream_V_dest_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1290.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1290.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1315.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1315.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1462.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1471.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))))) {
        inStream_V_dest_V_0_ack_out = ap_const_logic_1;
    } else {
        inStream_V_dest_V_0_ack_out = ap_const_logic_0;
    }
}

void cnn_pool_d4x4_p2x2::thread_inStream_V_dest_V_0_vld_in() {
    inStream_V_dest_V_0_vld_in = inStream_TVALID.read();
}

void cnn_pool_d4x4_p2x2::thread_indvar_flatten_next7_fu_828_p2() {
    indvar_flatten_next7_fu_828_p2 = (!indvar_flatten6_reg_377.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(indvar_flatten6_reg_377.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void cnn_pool_d4x4_p2x2::thread_indvar_flatten_next_fu_632_p2() {
    indvar_flatten_next_fu_632_p2 = (!indvar_flatten_reg_320.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(indvar_flatten_reg_320.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void cnn_pool_d4x4_p2x2::thread_lineBuffer_0_3_13_fu_1128_p3() {
    lineBuffer_0_3_13_fu_1128_p3 = (!sel_tmp15_fu_1076_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp15_fu_1076_p2.read()[0].to_bool())? lineBuffer_0_3_8_fu_156.read(): lineBuffer_0_3_9_fu_1120_p3.read());
}

void cnn_pool_d4x4_p2x2::thread_lineBuffer_0_3_14_fu_1136_p3() {
    lineBuffer_0_3_14_fu_1136_p3 = (!sel_tmp15_fu_1076_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp15_fu_1076_p2.read()[0].to_bool())? lineBuffer_0_3_15_fu_1050_p6.read(): lineBuffer_0_3_5_fu_152.read());
}

void cnn_pool_d4x4_p2x2::thread_lineBuffer_0_3_1_fu_519_p3() {
    lineBuffer_0_3_1_fu_519_p3 = (!cond_reg_1294.read()[0].is_01())? sc_lv<32>(): ((cond_reg_1294.read()[0].to_bool())? lineBuffer_0_3_reg_226.read(): inStream_V_data_V_0_data_out.read());
}

void cnn_pool_d4x4_p2x2::thread_lineBuffer_0_3_4_fu_526_p3() {
    lineBuffer_0_3_4_fu_526_p3 = (!cond_reg_1294.read()[0].is_01())? sc_lv<32>(): ((cond_reg_1294.read()[0].to_bool())? inStream_V_data_V_0_data_out.read(): lineBuffer_0_2_reg_238.read());
}

void cnn_pool_d4x4_p2x2::thread_lineBuffer_0_3_6_fu_1096_p3() {
    lineBuffer_0_3_6_fu_1096_p3 = (!or_cond2_fu_1082_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond2_fu_1082_p2.read()[0].to_bool())? lineBuffer_0_3_3_reg_439.read(): newSel4_fu_1088_p3.read());
}

void cnn_pool_d4x4_p2x2::thread_lineBuffer_0_3_7_fu_1112_p3() {
    lineBuffer_0_3_7_fu_1112_p3 = (!or_cond2_fu_1082_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond2_fu_1082_p2.read()[0].to_bool())? lineBuffer_0_2_s_reg_449.read(): newSel6_fu_1104_p3.read());
}

void cnn_pool_d4x4_p2x2::thread_lineBuffer_0_3_9_fu_1120_p3() {
    lineBuffer_0_3_9_fu_1120_p3 = (!sel_tmp14_fu_1070_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp14_fu_1070_p2.read()[0].to_bool())? lineBuffer_0_3_15_fu_1050_p6.read(): lineBuffer_0_3_8_fu_156.read());
}

void cnn_pool_d4x4_p2x2::thread_lineBuffer_1_3_10_fu_1170_p3() {
    lineBuffer_1_3_10_fu_1170_p3 = (!or_cond2_fu_1082_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond2_fu_1082_p2.read()[0].to_bool())? lineBuffer_1_3_3_reg_399.read(): newSel8_fu_1162_p3.read());
}

void cnn_pool_d4x4_p2x2::thread_lineBuffer_1_3_11_fu_1186_p3() {
    lineBuffer_1_3_11_fu_1186_p3 = (!or_cond2_fu_1082_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond2_fu_1082_p2.read()[0].to_bool())? lineBuffer_1_2_3_reg_409.read(): newSel1_fu_1178_p3.read());
}

void cnn_pool_d4x4_p2x2::thread_lineBuffer_1_3_18_fu_1194_p3() {
    lineBuffer_1_3_18_fu_1194_p3 = (!sel_tmp14_fu_1070_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp14_fu_1070_p2.read()[0].to_bool())? window_2_2_2_fu_168.read(): lineBuffer_1_3_17_reg_419.read());
}

void cnn_pool_d4x4_p2x2::thread_lineBuffer_1_3_19_fu_1202_p3() {
    lineBuffer_1_3_19_fu_1202_p3 = (!sel_tmp15_fu_1076_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp15_fu_1076_p2.read()[0].to_bool())? lineBuffer_1_3_17_reg_419.read(): lineBuffer_1_3_18_fu_1194_p3.read());
}

void cnn_pool_d4x4_p2x2::thread_lineBuffer_1_3_20_fu_1210_p3() {
    lineBuffer_1_3_20_fu_1210_p3 = (!sel_tmp15_fu_1076_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp15_fu_1076_p2.read()[0].to_bool())? window_2_2_2_fu_168.read(): lineBuffer_1_3_1_reg_429.read());
}

void cnn_pool_d4x4_p2x2::thread_lineBuffer_1_3_2_fu_578_p3() {
    lineBuffer_1_3_2_fu_578_p3 = (!or_cond_fu_564_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond_fu_564_p2.read()[0].to_bool())? lineBuffer_1_3_reg_261.read(): newSel_fu_570_p3.read());
}

void cnn_pool_d4x4_p2x2::thread_lineBuffer_1_3_4_fu_594_p3() {
    lineBuffer_1_3_4_fu_594_p3 = (!or_cond_fu_564_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond_fu_564_p2.read()[0].to_bool())? lineBuffer_1_2_reg_273.read(): newSel2_fu_586_p3.read());
}

void cnn_pool_d4x4_p2x2::thread_lineBuffer_1_3_6_fu_602_p3() {
    lineBuffer_1_3_6_fu_602_p3 = (!sel_tmp7_fu_554_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp7_fu_554_p2.read()[0].to_bool())? inStream_V_data_V_0_data_out.read(): lineBuffer_1_3_5_reg_285.read());
}

void cnn_pool_d4x4_p2x2::thread_lineBuffer_1_3_7_fu_610_p3() {
    lineBuffer_1_3_7_fu_610_p3 = (!sel_tmp9_fu_559_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp9_fu_559_p2.read()[0].to_bool())? lineBuffer_1_3_5_reg_285.read(): lineBuffer_1_3_6_fu_602_p3.read());
}

void cnn_pool_d4x4_p2x2::thread_lineBuffer_1_3_9_fu_618_p3() {
    lineBuffer_1_3_9_fu_618_p3 = (!sel_tmp9_fu_559_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp9_fu_559_p2.read()[0].to_bool())? inStream_V_data_V_0_data_out.read(): lineBuffer_1_3_8_reg_297.read());
}

void cnn_pool_d4x4_p2x2::thread_maxValue_0_1_maxVal_fu_944_p3() {
    maxValue_0_1_maxVal_fu_944_p3 = (!tmp_4_0_1_i_fu_938_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_4_0_1_i_fu_938_p2.read()[0].to_bool())? window_0_0_fu_140.read(): window_0_0_read_as_fu_136.read());
}

void cnn_pool_d4x4_p2x2::thread_maxValue_17_0_maxVal_fu_958_p3() {
    maxValue_17_0_maxVal_fu_958_p3 = (!tmp_4_1_i_fu_952_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_4_1_i_fu_952_p2.read()[0].to_bool())? window_1_0_read_as_fu_148.read(): maxValue_0_1_maxVal_fu_944_p3.read());
}

void cnn_pool_d4x4_p2x2::thread_newSel1_fu_1178_p3() {
    newSel1_fu_1178_p3 = (!sel_tmp13_fu_1064_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp13_fu_1064_p2.read()[0].to_bool())? window_2_2_2_fu_168.read(): lineBuffer_1_2_3_reg_409.read());
}

void cnn_pool_d4x4_p2x2::thread_newSel2_fu_586_p3() {
    newSel2_fu_586_p3 = (!sel_tmp_fu_549_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp_fu_549_p2.read()[0].to_bool())? inStream_V_data_V_0_data_out.read(): lineBuffer_1_2_reg_273.read());
}

void cnn_pool_d4x4_p2x2::thread_newSel4_fu_1088_p3() {
    newSel4_fu_1088_p3 = (!sel_tmp13_fu_1064_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp13_fu_1064_p2.read()[0].to_bool())? lineBuffer_0_3_3_reg_439.read(): lineBuffer_0_3_15_fu_1050_p6.read());
}

void cnn_pool_d4x4_p2x2::thread_newSel6_fu_1104_p3() {
    newSel6_fu_1104_p3 = (!sel_tmp13_fu_1064_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp13_fu_1064_p2.read()[0].to_bool())? lineBuffer_0_3_15_fu_1050_p6.read(): lineBuffer_0_2_s_reg_449.read());
}

void cnn_pool_d4x4_p2x2::thread_newSel8_fu_1162_p3() {
    newSel8_fu_1162_p3 = (!sel_tmp13_fu_1064_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp13_fu_1064_p2.read()[0].to_bool())? lineBuffer_1_3_3_reg_399.read(): window_2_2_2_fu_168.read());
}

void cnn_pool_d4x4_p2x2::thread_newSel_fu_570_p3() {
    newSel_fu_570_p3 = (!sel_tmp_fu_549_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp_fu_549_p2.read()[0].to_bool())? lineBuffer_1_3_reg_261.read(): inStream_V_data_V_0_data_out.read());
}

void cnn_pool_d4x4_p2x2::thread_or_cond2_fu_1082_p2() {
    or_cond2_fu_1082_p2 = (sel_tmp15_fu_1076_p2.read() | sel_tmp14_fu_1070_p2.read());
}

void cnn_pool_d4x4_p2x2::thread_or_cond_fu_564_p2() {
    or_cond_fu_564_p2 = (sel_tmp9_fu_559_p2.read() | sel_tmp7_fu_554_p2.read());
}

void cnn_pool_d4x4_p2x2::thread_outStream_TDATA() {
    outStream_TDATA = outStream_V_data_V_1_data_out.read();
}

void cnn_pool_d4x4_p2x2::thread_outStream_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read())))) {
        outStream_TDATA_blk_n =  (sc_logic) (outStream_V_data_V_1_state.read()[1]);
    } else {
        outStream_TDATA_blk_n = ap_const_logic_1;
    }
}

void cnn_pool_d4x4_p2x2::thread_outStream_TDEST() {
    outStream_TDEST = outStream_V_dest_V_1_data_out.read();
}

void cnn_pool_d4x4_p2x2::thread_outStream_TID() {
    outStream_TID = outStream_V_id_V_1_data_out.read();
}

void cnn_pool_d4x4_p2x2::thread_outStream_TKEEP() {
    outStream_TKEEP = outStream_V_keep_V_1_data_out.read();
}

void cnn_pool_d4x4_p2x2::thread_outStream_TLAST() {
    outStream_TLAST = outStream_V_last_V_1_data_out.read();
}

void cnn_pool_d4x4_p2x2::thread_outStream_TSTRB() {
    outStream_TSTRB = outStream_V_strb_V_1_data_out.read();
}

void cnn_pool_d4x4_p2x2::thread_outStream_TUSER() {
    outStream_TUSER = outStream_V_user_V_1_data_out.read();
}

void cnn_pool_d4x4_p2x2::thread_outStream_TVALID() {
    outStream_TVALID =  (sc_logic) (outStream_V_dest_V_1_state.read()[0]);
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_data_V_1_ack_in() {
    outStream_V_data_V_1_ack_in =  (sc_logic) (outStream_V_data_V_1_state.read()[1]);
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_data_V_1_ack_out() {
    outStream_V_data_V_1_ack_out = outStream_TREADY.read();
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_sel.read())) {
        outStream_V_data_V_1_data_out = outStream_V_data_V_1_payload_B.read();
    } else {
        outStream_V_data_V_1_data_out = outStream_V_data_V_1_payload_A.read();
    }
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_data_V_1_load_A() {
    outStream_V_data_V_1_load_A = (outStream_V_data_V_1_state_cmp_full.read() & ~outStream_V_data_V_1_sel_wr.read());
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_data_V_1_load_B() {
    outStream_V_data_V_1_load_B = (outStream_V_data_V_1_sel_wr.read() & outStream_V_data_V_1_state_cmp_full.read());
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_data_V_1_sel() {
    outStream_V_data_V_1_sel = outStream_V_data_V_1_sel_rd.read();
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_data_V_1_state_cmp_full() {
    outStream_V_data_V_1_state_cmp_full =  (sc_logic) ((!outStream_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(outStream_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_data_V_1_vld_out() {
    outStream_V_data_V_1_vld_out =  (sc_logic) (outStream_V_data_V_1_state.read()[0]);
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_dest_V_1_ack_in() {
    outStream_V_dest_V_1_ack_in =  (sc_logic) (outStream_V_dest_V_1_state.read()[1]);
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_dest_V_1_ack_out() {
    outStream_V_dest_V_1_ack_out = outStream_TREADY.read();
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_dest_V_1_data_out() {
    outStream_V_dest_V_1_data_out = ap_const_lv6_0;
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_dest_V_1_sel() {
    outStream_V_dest_V_1_sel = outStream_V_dest_V_1_sel_rd.read();
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_dest_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_dest_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_dest_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_dest_V_1_vld_out() {
    outStream_V_dest_V_1_vld_out =  (sc_logic) (outStream_V_dest_V_1_state.read()[0]);
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_id_V_1_ack_in() {
    outStream_V_id_V_1_ack_in =  (sc_logic) (outStream_V_id_V_1_state.read()[1]);
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_id_V_1_ack_out() {
    outStream_V_id_V_1_ack_out = outStream_TREADY.read();
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_id_V_1_data_out() {
    outStream_V_id_V_1_data_out = ap_const_lv5_0;
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_id_V_1_sel() {
    outStream_V_id_V_1_sel = outStream_V_id_V_1_sel_rd.read();
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_id_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_id_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_id_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_id_V_1_vld_out() {
    outStream_V_id_V_1_vld_out =  (sc_logic) (outStream_V_id_V_1_state.read()[0]);
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_keep_V_1_ack_in() {
    outStream_V_keep_V_1_ack_in =  (sc_logic) (outStream_V_keep_V_1_state.read()[1]);
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_keep_V_1_ack_out() {
    outStream_V_keep_V_1_ack_out = outStream_TREADY.read();
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_keep_V_1_data_out() {
    outStream_V_keep_V_1_data_out = ap_const_lv4_F;
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_keep_V_1_sel() {
    outStream_V_keep_V_1_sel = outStream_V_keep_V_1_sel_rd.read();
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_keep_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_keep_V_1_vld_out() {
    outStream_V_keep_V_1_vld_out =  (sc_logic) (outStream_V_keep_V_1_state.read()[0]);
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_last_V_1_ack_in() {
    outStream_V_last_V_1_ack_in =  (sc_logic) (outStream_V_last_V_1_state.read()[1]);
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_last_V_1_ack_out() {
    outStream_V_last_V_1_ack_out = outStream_TREADY.read();
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_sel.read())) {
        outStream_V_last_V_1_data_out = outStream_V_last_V_1_payload_B.read();
    } else {
        outStream_V_last_V_1_data_out = outStream_V_last_V_1_payload_A.read();
    }
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_last_V_1_load_A() {
    outStream_V_last_V_1_load_A = (outStream_V_last_V_1_state_cmp_full.read() & ~outStream_V_last_V_1_sel_wr.read());
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_last_V_1_load_B() {
    outStream_V_last_V_1_load_B = (outStream_V_last_V_1_sel_wr.read() & outStream_V_last_V_1_state_cmp_full.read());
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_last_V_1_sel() {
    outStream_V_last_V_1_sel = outStream_V_last_V_1_sel_rd.read();
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_last_V_1_state_cmp_full() {
    outStream_V_last_V_1_state_cmp_full =  (sc_logic) ((!outStream_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(outStream_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_last_V_1_vld_out() {
    outStream_V_last_V_1_vld_out =  (sc_logic) (outStream_V_last_V_1_state.read()[0]);
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_strb_V_1_ack_in() {
    outStream_V_strb_V_1_ack_in =  (sc_logic) (outStream_V_strb_V_1_state.read()[1]);
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_strb_V_1_ack_out() {
    outStream_V_strb_V_1_ack_out = outStream_TREADY.read();
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_strb_V_1_data_out() {
    outStream_V_strb_V_1_data_out = ap_const_lv4_0;
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_strb_V_1_sel() {
    outStream_V_strb_V_1_sel = outStream_V_strb_V_1_sel_rd.read();
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_strb_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_strb_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_strb_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_strb_V_1_vld_out() {
    outStream_V_strb_V_1_vld_out =  (sc_logic) (outStream_V_strb_V_1_state.read()[0]);
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_user_V_1_ack_in() {
    outStream_V_user_V_1_ack_in =  (sc_logic) (outStream_V_user_V_1_state.read()[1]);
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_user_V_1_ack_out() {
    outStream_V_user_V_1_ack_out = outStream_TREADY.read();
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_user_V_1_data_out() {
    outStream_V_user_V_1_data_out = ap_const_lv2_0;
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_user_V_1_sel() {
    outStream_V_user_V_1_sel = outStream_V_user_V_1_sel_rd.read();
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_pool_d4x4_p2x2::thread_outStream_V_user_V_1_vld_out() {
    outStream_V_user_V_1_vld_out =  (sc_logic) (outStream_V_user_V_1_state.read()[0]);
}

void cnn_pool_d4x4_p2x2::thread_readCount_fu_853_p2() {
    readCount_fu_853_p2 = (!readCount_1_fu_164.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(readCount_1_fu_164.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void cnn_pool_d4x4_p2x2::thread_result_1_cast_fu_1261_p1() {
    result_1_cast_fu_1261_p1 = esl_sext<32,21>(result_1_fu_1254_p3.read());
}

void cnn_pool_d4x4_p2x2::thread_result_1_fu_1254_p3() {
    result_1_fu_1254_p3 = (!tmp_14_reg_1490.read()[0].is_01())? sc_lv<21>(): ((tmp_14_reg_1490.read()[0].to_bool())? tmp_4_i_i_fu_1248_p2.read(): result_cast_fu_1245_p1.read());
}

void cnn_pool_d4x4_p2x2::thread_result_cast_fu_1245_p1() {
    result_cast_fu_1245_p1 = esl_zext<21,20>(result_reg_1495.read());
}

void cnn_pool_d4x4_p2x2::thread_result_fu_1018_p3() {
    result_fu_1018_p3 = (!tmp_14_fu_984_p3.read()[0].is_01())? sc_lv<20>(): ((tmp_14_fu_984_p3.read()[0].to_bool())? tmp_3_fu_998_p4.read(): tmp_6_fu_1008_p4.read());
}

void cnn_pool_d4x4_p2x2::thread_sel_SEBB_i_fu_1238_p3() {
    sel_SEBB_i_fu_1238_p3 = (!tmp_4_1_1_i_fu_1233_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_4_1_1_i_fu_1233_p2.read()[0].to_bool())? window_1_0_reg_470.read(): maxValue_17_0_maxVal_reg_1484.read());
}

void cnn_pool_d4x4_p2x2::thread_sel_tmp10_fu_752_p3() {
    sel_tmp10_fu_752_p3 = (!sel_tmp4_fu_746_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp4_fu_746_p2.read()[0].to_bool())? lineBuffer_1_3_5_reg_285.read(): sel_tmp2_fu_733_p3.read());
}

void cnn_pool_d4x4_p2x2::thread_sel_tmp11_fu_760_p2() {
    sel_tmp11_fu_760_p2 = (!x4_mid2_reg_1360.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(x4_mid2_reg_1360.read() == ap_const_lv2_1);
}

void cnn_pool_d4x4_p2x2::thread_sel_tmp12_fu_765_p2() {
    sel_tmp12_fu_765_p2 = (sel_tmp11_fu_760_p2.read() & sel_tmp13_mid2_fu_696_p2.read());
}

void cnn_pool_d4x4_p2x2::thread_sel_tmp13_fu_1064_p2() {
    sel_tmp13_fu_1064_p2 = (!tmp_15_fu_1032_p1.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(tmp_15_fu_1032_p1.read() == ap_const_lv2_2);
}

void cnn_pool_d4x4_p2x2::thread_sel_tmp13_mid2_fu_696_p2() {
    sel_tmp13_mid2_fu_696_p2 = (tmp_11_reg_1374.read() ^ ap_const_lv1_1);
}

void cnn_pool_d4x4_p2x2::thread_sel_tmp14_fu_1070_p2() {
    sel_tmp14_fu_1070_p2 = (!tmp_15_fu_1032_p1.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(tmp_15_fu_1032_p1.read() == ap_const_lv2_1);
}

void cnn_pool_d4x4_p2x2::thread_sel_tmp15_fu_1076_p2() {
    sel_tmp15_fu_1076_p2 = (!tmp_15_fu_1032_p1.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_15_fu_1032_p1.read() == ap_const_lv2_0);
}

void cnn_pool_d4x4_p2x2::thread_sel_tmp1_fu_727_p2() {
    sel_tmp1_fu_727_p2 = (tmp1_fu_721_p2.read() & tmp_fu_716_p2.read());
}

void cnn_pool_d4x4_p2x2::thread_sel_tmp2_fu_733_p3() {
    sel_tmp2_fu_733_p3 = (!sel_tmp1_fu_727_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp1_fu_727_p2.read()[0].to_bool())? lineBuffer_0_3_reg_226.read(): lineBuffer_1_3_reg_261.read());
}

void cnn_pool_d4x4_p2x2::thread_sel_tmp3_fu_741_p2() {
    sel_tmp3_fu_741_p2 = (!x4_mid2_reg_1360.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(x4_mid2_reg_1360.read() == ap_const_lv2_2);
}

void cnn_pool_d4x4_p2x2::thread_sel_tmp4_fu_746_p2() {
    sel_tmp4_fu_746_p2 = (sel_tmp3_fu_741_p2.read() & sel_tmp13_mid2_fu_696_p2.read());
}

void cnn_pool_d4x4_p2x2::thread_sel_tmp5_fu_701_p2() {
    sel_tmp5_fu_701_p2 = (!x4_mid2_reg_1360.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(x4_mid2_reg_1360.read() != ap_const_lv2_1);
}

void cnn_pool_d4x4_p2x2::thread_sel_tmp6_fu_706_p2() {
    sel_tmp6_fu_706_p2 = (!x4_mid2_reg_1360.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(x4_mid2_reg_1360.read() != ap_const_lv2_2);
}

void cnn_pool_d4x4_p2x2::thread_sel_tmp7_fu_554_p2() {
    sel_tmp7_fu_554_p2 = (!tmp_9_reg_1324.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(tmp_9_reg_1324.read() == ap_const_lv2_1);
}

void cnn_pool_d4x4_p2x2::thread_sel_tmp8_fu_711_p2() {
    sel_tmp8_fu_711_p2 = (!x4_mid2_reg_1360.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(x4_mid2_reg_1360.read() != ap_const_lv2_3);
}

void cnn_pool_d4x4_p2x2::thread_sel_tmp9_fu_559_p2() {
    sel_tmp9_fu_559_p2 = (!tmp_9_reg_1324.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_9_reg_1324.read() == ap_const_lv2_0);
}

void cnn_pool_d4x4_p2x2::thread_sel_tmp_fu_549_p2() {
    sel_tmp_fu_549_p2 = (!tmp_9_reg_1324.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(tmp_9_reg_1324.read() == ap_const_lv2_2);
}

void cnn_pool_d4x4_p2x2::thread_tmp1_fu_721_p2() {
    tmp1_fu_721_p2 = (sel_tmp6_fu_706_p2.read() & sel_tmp8_fu_711_p2.read());
}

void cnn_pool_d4x4_p2x2::thread_tmp6_fu_966_p2() {
    tmp6_fu_966_p2 = (!window_0_0_read_as_fu_136.read().is_01() || !window_1_0_read_as_fu_148.read().is_01())? sc_lv<32>(): (sc_biguint<32>(window_0_0_read_as_fu_136.read()) + sc_biguint<32>(window_1_0_read_as_fu_148.read()));
}

void cnn_pool_d4x4_p2x2::thread_tmp7_fu_972_p2() {
    tmp7_fu_972_p2 = (!window_0_0_fu_140.read().is_01() || !window_1_0_phi_fu_473_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(window_0_0_fu_140.read()) + sc_biguint<32>(window_1_0_phi_fu_473_p4.read()));
}

void cnn_pool_d4x4_p2x2::thread_tmp_10_fu_809_p1() {
    tmp_10_fu_809_p1 = ctrl_read_reg_1285.read().range(1-1, 0);
}

void cnn_pool_d4x4_p2x2::thread_tmp_11_fu_666_p1() {
    tmp_11_fu_666_p1 = tmp_3_mid2_v_fu_658_p3.read().range(1-1, 0);
}

void cnn_pool_d4x4_p2x2::thread_tmp_12_fu_924_p1() {
    tmp_12_fu_924_p1 = y_assign_cast_mid2_v_fu_916_p3.read().range(1-1, 0);
}

void cnn_pool_d4x4_p2x2::thread_tmp_13_fu_928_p1() {
    tmp_13_fu_928_p1 = x_assign_mid2_fu_902_p3.read().range(1-1, 0);
}

void cnn_pool_d4x4_p2x2::thread_tmp_14_fu_984_p3() {
    tmp_14_fu_984_p3 = a_assign_fu_978_p2.read().range(31, 31);
}

void cnn_pool_d4x4_p2x2::thread_tmp_15_fu_1032_p1() {
    tmp_15_fu_1032_p1 = x_assign_mid2_fu_902_p3.read().range(2-1, 0);
}

void cnn_pool_d4x4_p2x2::thread_tmp_16_fu_837_p4() {
    tmp_16_fu_837_p4 = readCount_1_fu_164.read().range(31, 4);
}

void cnn_pool_d4x4_p2x2::thread_tmp_1_i_i_fu_992_p2() {
    tmp_1_i_i_fu_992_p2 = (!ap_const_lv32_0.is_01() || !a_assign_fu_978_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(a_assign_fu_978_p2.read()));
}

void cnn_pool_d4x4_p2x2::thread_tmp_3_fu_998_p4() {
    tmp_3_fu_998_p4 = tmp_1_i_i_fu_992_p2.read().range(21, 2);
}

void cnn_pool_d4x4_p2x2::thread_tmp_3_mid2_v_fu_658_p3() {
    tmp_3_mid2_v_fu_658_p3 = (!exitcond_fu_638_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_fu_638_p2.read()[0].to_bool())? y9_fu_652_p2.read(): y3_phi_fu_335_p4.read());
}

void cnn_pool_d4x4_p2x2::thread_tmp_4_0_1_i_fu_938_p2() {
    tmp_4_0_1_i_fu_938_p2 = (!window_0_0_fu_140.read().is_01() || !window_0_0_read_as_fu_136.read().is_01())? sc_lv<1>(): (sc_biguint<32>(window_0_0_fu_140.read()) > sc_biguint<32>(window_0_0_read_as_fu_136.read()));
}

void cnn_pool_d4x4_p2x2::thread_tmp_4_1_1_i_fu_1233_p2() {
    tmp_4_1_1_i_fu_1233_p2 = (!maxValue_17_0_maxVal_reg_1484.read().is_01() || !window_1_0_reg_470.read().is_01())? sc_lv<1>(): (sc_biguint<32>(maxValue_17_0_maxVal_reg_1484.read()) < sc_biguint<32>(window_1_0_reg_470.read()));
}

void cnn_pool_d4x4_p2x2::thread_tmp_4_1_i_fu_952_p2() {
    tmp_4_1_i_fu_952_p2 = (!maxValue_0_1_maxVal_fu_944_p3.read().is_01() || !window_1_0_read_as_fu_148.read().is_01())? sc_lv<1>(): (sc_biguint<32>(maxValue_0_1_maxVal_fu_944_p3.read()) < sc_biguint<32>(window_1_0_read_as_fu_148.read()));
}

void cnn_pool_d4x4_p2x2::thread_tmp_4_i_i_fu_1248_p2() {
    tmp_4_i_i_fu_1248_p2 = (!ap_const_lv21_0.is_01() || !result_cast_fu_1245_p1.read().is_01())? sc_lv<21>(): (sc_biguint<21>(ap_const_lv21_0) - sc_biguint<21>(result_cast_fu_1245_p1.read()));
}

void cnn_pool_d4x4_p2x2::thread_tmp_5_fu_932_p2() {
    tmp_5_fu_932_p2 = (tmp_12_fu_924_p1.read() & tmp_13_fu_928_p1.read());
}

void cnn_pool_d4x4_p2x2::thread_tmp_6_fu_1008_p4() {
    tmp_6_fu_1008_p4 = a_assign_fu_978_p2.read().range(21, 2);
}

void cnn_pool_d4x4_p2x2::thread_tmp_7_fu_503_p1() {
    tmp_7_fu_503_p1 = x_reg_250.read().range(2-1, 0);
}

void cnn_pool_d4x4_p2x2::thread_tmp_9_fu_545_p1() {
    tmp_9_fu_545_p1 = x1_reg_309.read().range(2-1, 0);
}

void cnn_pool_d4x4_p2x2::thread_tmp_data_V_fu_1265_p3() {
    tmp_data_V_fu_1265_p3 = (!tmp_10_reg_1457.read()[0].is_01())? sc_lv<32>(): ((tmp_10_reg_1457.read()[0].to_bool())? result_1_cast_fu_1261_p1.read(): sel_SEBB_i_fu_1238_p3.read());
}

void cnn_pool_d4x4_p2x2::thread_tmp_fu_716_p2() {
    tmp_fu_716_p2 = (tmp_11_reg_1374.read() & sel_tmp5_fu_701_p2.read());
}

void cnn_pool_d4x4_p2x2::thread_tmp_last_V_fu_1273_p2() {
    tmp_last_V_fu_1273_p2 = (!writeCount_fu_1227_p2.read().is_01() || !ap_const_lv32_4.is_01())? sc_lv<1>(): sc_lv<1>(writeCount_fu_1227_p2.read() == ap_const_lv32_4);
}

void cnn_pool_d4x4_p2x2::thread_window_1_0_phi_fu_473_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462.read()))) {
        window_1_0_phi_fu_473_p4 = window_1_1_reg_459.read();
    } else {
        window_1_0_phi_fu_473_p4 = window_1_0_reg_470.read();
    }
}

void cnn_pool_d4x4_p2x2::thread_window_2_2_1_fu_787_p3() {
    window_2_2_1_fu_787_p3 = (!sel_tmp11_fu_760_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp11_fu_760_p2.read()[0].to_bool())? window_2_2_7_fu_771_p3.read(): window_1_1_1_reg_354.read());
}

void cnn_pool_d4x4_p2x2::thread_window_2_2_3_fu_795_p3() {
    window_2_2_3_fu_795_p3 = (!cond1_mid2_reg_1380.read()[0].is_01())? sc_lv<32>(): ((cond1_mid2_reg_1380.read()[0].to_bool())? window_2_2_fu_779_p3.read(): window_1_2_1_reg_342.read());
}

void cnn_pool_d4x4_p2x2::thread_window_2_2_4_fu_802_p3() {
    window_2_2_4_fu_802_p3 = (!cond1_mid2_reg_1380.read()[0].is_01())? sc_lv<32>(): ((cond1_mid2_reg_1380.read()[0].to_bool())? window_2_2_1_fu_787_p3.read(): window_1_1_1_reg_354.read());
}

void cnn_pool_d4x4_p2x2::thread_window_2_2_7_fu_771_p3() {
    window_2_2_7_fu_771_p3 = (!sel_tmp12_fu_765_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp12_fu_765_p2.read()[0].to_bool())? lineBuffer_1_3_8_reg_297.read(): sel_tmp10_fu_752_p3.read());
}

void cnn_pool_d4x4_p2x2::thread_window_2_2_fu_779_p3() {
    window_2_2_fu_779_p3 = (!sel_tmp11_fu_760_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp11_fu_760_p2.read()[0].to_bool())? window_1_2_1_reg_342.read(): sel_tmp10_fu_752_p3.read());
}

void cnn_pool_d4x4_p2x2::thread_writeCount_fu_1227_p2() {
    writeCount_fu_1227_p2 = (!writeCount_1_fu_160.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(writeCount_1_fu_160.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void cnn_pool_d4x4_p2x2::thread_x4_mid2_fu_644_p3() {
    x4_mid2_fu_644_p3 = (!exitcond_fu_638_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_fu_638_p2.read()[0].to_bool())? ap_const_lv2_1: x4_reg_366.read());
}

void cnn_pool_d4x4_p2x2::thread_x_1_fu_513_p2() {
    x_1_fu_513_p2 = (!ap_const_lv3_1.is_01() || !x_reg_250.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(x_reg_250.read()));
}

void cnn_pool_d4x4_p2x2::thread_x_2_fu_539_p2() {
    x_2_fu_539_p2 = (!x1_reg_309.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(x1_reg_309.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void cnn_pool_d4x4_p2x2::thread_x_3_fu_690_p2() {
    x_3_fu_690_p2 = (!ap_const_lv2_1.is_01() || !x4_mid2_fu_644_p3.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(x4_mid2_fu_644_p3.read()));
}

void cnn_pool_d4x4_p2x2::thread_x_4_fu_1218_p2() {
    x_4_fu_1218_p2 = (!x_assign_mid2_fu_902_p3.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(x_assign_mid2_fu_902_p3.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void cnn_pool_d4x4_p2x2::thread_x_assign_mid2_fu_902_p3() {
    x_assign_mid2_fu_902_p3 = (!exitcond2_fu_896_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond2_fu_896_p2.read()[0].to_bool())? ap_const_lv3_0: x_assign_reg_482.read());
}

void cnn_pool_d4x4_p2x2::thread_y3_phi_fu_335_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1351.read()))) {
        y3_phi_fu_335_p4 = tmp_3_mid2_v_reg_1369.read();
    } else {
        y3_phi_fu_335_p4 = y3_reg_331.read();
    }
}

void cnn_pool_d4x4_p2x2::thread_y9_fu_652_p2() {
    y9_fu_652_p2 = (!ap_const_lv2_1.is_01() || !y3_phi_fu_335_p4.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(y3_phi_fu_335_p4.read()));
}

void cnn_pool_d4x4_p2x2::thread_y_assign_cast_mid2_v_fu_916_p3() {
    y_assign_cast_mid2_v_fu_916_p3 = (!exitcond2_fu_896_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond2_fu_896_p2.read()[0].to_bool())? y_s_fu_910_p2.read(): y_assign_phi_fu_392_p4.read());
}

void cnn_pool_d4x4_p2x2::thread_y_assign_phi_fu_392_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1462.read()))) {
        y_assign_phi_fu_392_p4 = y_assign_cast_mid2_v_reg_1475.read();
    } else {
        y_assign_phi_fu_392_p4 = y_assign_reg_388.read();
    }
}

void cnn_pool_d4x4_p2x2::thread_y_s_fu_910_p2() {
    y_s_fu_910_p2 = (!ap_const_lv3_1.is_01() || !y_assign_phi_fu_392_p4.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(y_assign_phi_fu_392_p4.read()));
}

void cnn_pool_d4x4_p2x2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1290.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_497_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1290.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_497_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 8 : 
            if (!(!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1315.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_533_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1315.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_533_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            break;
        case 32 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_626_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            break;
        case 128 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read())) && !(!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read())) || (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_1080.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter4.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter3_tmp_5_reg_1480.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read())))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            }
            break;
        case 256 : 
            if (!esl_seteq<1,1,1>(ap_condition_1749.read(), ap_const_boolean_1)) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXX";
            break;
    }
}

void cnn_pool_d4x4_p2x2::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TDATA\" :  \"" << inStream_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TVALID\" :  \"" << inStream_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"inStream_TREADY\" :  \"" << inStream_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TKEEP\" :  \"" << inStream_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TSTRB\" :  \"" << inStream_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TUSER\" :  \"" << inStream_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TLAST\" :  \"" << inStream_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TID\" :  \"" << inStream_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TDEST\" :  \"" << inStream_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TDATA\" :  \"" << outStream_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TVALID\" :  \"" << outStream_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outStream_TREADY\" :  \"" << outStream_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TKEEP\" :  \"" << outStream_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TSTRB\" :  \"" << outStream_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TUSER\" :  \"" << outStream_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TLAST\" :  \"" << outStream_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TID\" :  \"" << outStream_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TDEST\" :  \"" << outStream_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_AWVALID\" :  \"" << s_axi_CTRL_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_AWREADY\" :  \"" << s_axi_CTRL_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_AWADDR\" :  \"" << s_axi_CTRL_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WVALID\" :  \"" << s_axi_CTRL_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_WREADY\" :  \"" << s_axi_CTRL_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WDATA\" :  \"" << s_axi_CTRL_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WSTRB\" :  \"" << s_axi_CTRL_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_ARVALID\" :  \"" << s_axi_CTRL_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_ARREADY\" :  \"" << s_axi_CTRL_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_ARADDR\" :  \"" << s_axi_CTRL_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RVALID\" :  \"" << s_axi_CTRL_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_RREADY\" :  \"" << s_axi_CTRL_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RDATA\" :  \"" << s_axi_CTRL_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RRESP\" :  \"" << s_axi_CTRL_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BVALID\" :  \"" << s_axi_CTRL_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BREADY\" :  \"" << s_axi_CTRL_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BRESP\" :  \"" << s_axi_CTRL_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

