// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "cnn_2d_conv_d4x4_k3x3.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic cnn_2d_conv_d4x4_k3x3::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic cnn_2d_conv_d4x4_k3x3::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> cnn_2d_conv_d4x4_k3x3::ap_ST_fsm_state1 = "1";
const sc_lv<9> cnn_2d_conv_d4x4_k3x3::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<9> cnn_2d_conv_d4x4_k3x3::ap_ST_fsm_state4 = "100";
const sc_lv<9> cnn_2d_conv_d4x4_k3x3::ap_ST_fsm_pp1_stage0 = "1000";
const sc_lv<9> cnn_2d_conv_d4x4_k3x3::ap_ST_fsm_state7 = "10000";
const sc_lv<9> cnn_2d_conv_d4x4_k3x3::ap_ST_fsm_state8 = "100000";
const sc_lv<9> cnn_2d_conv_d4x4_k3x3::ap_ST_fsm_state9 = "1000000";
const sc_lv<9> cnn_2d_conv_d4x4_k3x3::ap_ST_fsm_pp3_stage0 = "10000000";
const sc_lv<9> cnn_2d_conv_d4x4_k3x3::ap_ST_fsm_state20 = "100000000";
const sc_lv<32> cnn_2d_conv_d4x4_k3x3::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> cnn_2d_conv_d4x4_k3x3::ap_const_lv1_1 = "1";
const bool cnn_2d_conv_d4x4_k3x3::ap_const_boolean_1 = true;
const sc_lv<1> cnn_2d_conv_d4x4_k3x3::ap_const_lv1_0 = "0";
const sc_lv<2> cnn_2d_conv_d4x4_k3x3::ap_const_lv2_0 = "00";
const sc_lv<2> cnn_2d_conv_d4x4_k3x3::ap_const_lv2_2 = "10";
const sc_lv<2> cnn_2d_conv_d4x4_k3x3::ap_const_lv2_3 = "11";
const sc_lv<2> cnn_2d_conv_d4x4_k3x3::ap_const_lv2_1 = "1";
const sc_lv<32> cnn_2d_conv_d4x4_k3x3::ap_const_lv32_1 = "1";
const sc_lv<32> cnn_2d_conv_d4x4_k3x3::ap_const_lv32_3 = "11";
const sc_lv<32> cnn_2d_conv_d4x4_k3x3::ap_const_lv32_7 = "111";
const int cnn_2d_conv_d4x4_k3x3::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> cnn_2d_conv_d4x4_k3x3::ap_const_lv32_5 = "101";
const sc_lv<32> cnn_2d_conv_d4x4_k3x3::ap_const_lv32_2 = "10";
const sc_lv<32> cnn_2d_conv_d4x4_k3x3::ap_const_lv32_6 = "110";
const sc_lv<3> cnn_2d_conv_d4x4_k3x3::ap_const_lv3_2 = "10";
const sc_lv<3> cnn_2d_conv_d4x4_k3x3::ap_const_lv3_0 = "000";
const sc_lv<32> cnn_2d_conv_d4x4_k3x3::ap_const_lv32_4 = "100";
const sc_lv<5> cnn_2d_conv_d4x4_k3x3::ap_const_lv5_0 = "00000";
const sc_lv<4> cnn_2d_conv_d4x4_k3x3::ap_const_lv4_F = "1111";
const sc_lv<4> cnn_2d_conv_d4x4_k3x3::ap_const_lv4_0 = "0000";
const sc_lv<6> cnn_2d_conv_d4x4_k3x3::ap_const_lv6_0 = "000000";
const sc_lv<3> cnn_2d_conv_d4x4_k3x3::ap_const_lv3_4 = "100";
const sc_lv<3> cnn_2d_conv_d4x4_k3x3::ap_const_lv3_1 = "1";
const sc_lv<5> cnn_2d_conv_d4x4_k3x3::ap_const_lv5_10 = "10000";
const sc_lv<5> cnn_2d_conv_d4x4_k3x3::ap_const_lv5_1 = "1";
const sc_lv<32> cnn_2d_conv_d4x4_k3x3::ap_const_lv32_1F = "11111";
const sc_lv<28> cnn_2d_conv_d4x4_k3x3::ap_const_lv28_1 = "1";
const sc_lv<32> cnn_2d_conv_d4x4_k3x3::ap_const_lv32_8 = "1000";

cnn_2d_conv_d4x4_k3x3::cnn_2d_conv_d4x4_k3x3(sc_module_name name) : sc_module(name), mVcdFile(0) {
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U = new cnn_2d_conv_d4x4_k3x3_CTRL_s_axi<C_S_AXI_CTRL_ADDR_WIDTH,C_S_AXI_CTRL_DATA_WIDTH>("cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U");
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->AWVALID(s_axi_CTRL_AWVALID);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->AWREADY(s_axi_CTRL_AWREADY);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->AWADDR(s_axi_CTRL_AWADDR);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->WVALID(s_axi_CTRL_WVALID);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->WREADY(s_axi_CTRL_WREADY);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->WDATA(s_axi_CTRL_WDATA);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->WSTRB(s_axi_CTRL_WSTRB);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->ARVALID(s_axi_CTRL_ARVALID);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->ARREADY(s_axi_CTRL_ARREADY);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->ARADDR(s_axi_CTRL_ARADDR);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->RVALID(s_axi_CTRL_RVALID);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->RREADY(s_axi_CTRL_RREADY);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->RDATA(s_axi_CTRL_RDATA);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->RRESP(s_axi_CTRL_RRESP);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->BVALID(s_axi_CTRL_BVALID);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->BREADY(s_axi_CTRL_BREADY);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->BRESP(s_axi_CTRL_BRESP);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->ACLK(ap_clk);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->ARESET(ap_rst_n_inv);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->ACLK_EN(ap_var_for_const0);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->ap_start(ap_start);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->interrupt(interrupt);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->ap_ready(ap_ready);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->ap_done(ap_done);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->ap_idle(ap_idle);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->ctrl(ctrl);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->kernelData_0(kernelData_0);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->kernelData_1(kernelData_1);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->kernelData_2(kernelData_2);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->kernelData_3(kernelData_3);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->kernelData_4(kernelData_4);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->kernelData_5(kernelData_5);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->kernelData_6(kernelData_6);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->kernelData_7(kernelData_7);
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U->kernelData_8(kernelData_8);
    cnn_2d_conv_d4x4_bkb_U0 = new cnn_2d_conv_d4x4_bkb<1,6,32,32,32>("cnn_2d_conv_d4x4_bkb_U0");
    cnn_2d_conv_d4x4_bkb_U0->clk(ap_clk);
    cnn_2d_conv_d4x4_bkb_U0->reset(ap_rst_n_inv);
    cnn_2d_conv_d4x4_bkb_U0->din0(kernelData_0);
    cnn_2d_conv_d4x4_bkb_U0->din1(window_0_0_read_as_fu_146);
    cnn_2d_conv_d4x4_bkb_U0->ce(grp_fu_1090_ce);
    cnn_2d_conv_d4x4_bkb_U0->dout(grp_fu_1090_p2);
    cnn_2d_conv_d4x4_bkb_U1 = new cnn_2d_conv_d4x4_bkb<1,6,32,32,32>("cnn_2d_conv_d4x4_bkb_U1");
    cnn_2d_conv_d4x4_bkb_U1->clk(ap_clk);
    cnn_2d_conv_d4x4_bkb_U1->reset(ap_rst_n_inv);
    cnn_2d_conv_d4x4_bkb_U1->din0(kernelData_1);
    cnn_2d_conv_d4x4_bkb_U1->din1(window_0_0_fu_150);
    cnn_2d_conv_d4x4_bkb_U1->ce(grp_fu_1096_ce);
    cnn_2d_conv_d4x4_bkb_U1->dout(grp_fu_1096_p2);
    cnn_2d_conv_d4x4_bkb_U2 = new cnn_2d_conv_d4x4_bkb<1,6,32,32,32>("cnn_2d_conv_d4x4_bkb_U2");
    cnn_2d_conv_d4x4_bkb_U2->clk(ap_clk);
    cnn_2d_conv_d4x4_bkb_U2->reset(ap_rst_n_inv);
    cnn_2d_conv_d4x4_bkb_U2->din0(kernelData_2);
    cnn_2d_conv_d4x4_bkb_U2->din1(window_0_1_fu_154);
    cnn_2d_conv_d4x4_bkb_U2->ce(grp_fu_1102_ce);
    cnn_2d_conv_d4x4_bkb_U2->dout(grp_fu_1102_p2);
    cnn_2d_conv_d4x4_bkb_U3 = new cnn_2d_conv_d4x4_bkb<1,6,32,32,32>("cnn_2d_conv_d4x4_bkb_U3");
    cnn_2d_conv_d4x4_bkb_U3->clk(ap_clk);
    cnn_2d_conv_d4x4_bkb_U3->reset(ap_rst_n_inv);
    cnn_2d_conv_d4x4_bkb_U3->din0(kernelData_3);
    cnn_2d_conv_d4x4_bkb_U3->din1(window_1_0_read_as_fu_158);
    cnn_2d_conv_d4x4_bkb_U3->ce(grp_fu_1108_ce);
    cnn_2d_conv_d4x4_bkb_U3->dout(grp_fu_1108_p2);
    cnn_2d_conv_d4x4_bkb_U4 = new cnn_2d_conv_d4x4_bkb<1,6,32,32,32>("cnn_2d_conv_d4x4_bkb_U4");
    cnn_2d_conv_d4x4_bkb_U4->clk(ap_clk);
    cnn_2d_conv_d4x4_bkb_U4->reset(ap_rst_n_inv);
    cnn_2d_conv_d4x4_bkb_U4->din0(kernelData_4);
    cnn_2d_conv_d4x4_bkb_U4->din1(window_1_0_phi_fu_569_p4);
    cnn_2d_conv_d4x4_bkb_U4->ce(grp_fu_1114_ce);
    cnn_2d_conv_d4x4_bkb_U4->dout(grp_fu_1114_p2);
    cnn_2d_conv_d4x4_bkb_U5 = new cnn_2d_conv_d4x4_bkb<1,6,32,32,32>("cnn_2d_conv_d4x4_bkb_U5");
    cnn_2d_conv_d4x4_bkb_U5->clk(ap_clk);
    cnn_2d_conv_d4x4_bkb_U5->reset(ap_rst_n_inv);
    cnn_2d_conv_d4x4_bkb_U5->din0(kernelData_5);
    cnn_2d_conv_d4x4_bkb_U5->din1(window_1_1_phi_fu_558_p4);
    cnn_2d_conv_d4x4_bkb_U5->ce(grp_fu_1120_ce);
    cnn_2d_conv_d4x4_bkb_U5->dout(grp_fu_1120_p2);
    cnn_2d_conv_d4x4_bkb_U6 = new cnn_2d_conv_d4x4_bkb<1,6,32,32,32>("cnn_2d_conv_d4x4_bkb_U6");
    cnn_2d_conv_d4x4_bkb_U6->clk(ap_clk);
    cnn_2d_conv_d4x4_bkb_U6->reset(ap_rst_n_inv);
    cnn_2d_conv_d4x4_bkb_U6->din0(kernelData_6);
    cnn_2d_conv_d4x4_bkb_U6->din1(window_2_0_read_as_fu_162);
    cnn_2d_conv_d4x4_bkb_U6->ce(grp_fu_1126_ce);
    cnn_2d_conv_d4x4_bkb_U6->dout(grp_fu_1126_p2);
    cnn_2d_conv_d4x4_bkb_U7 = new cnn_2d_conv_d4x4_bkb<1,6,32,32,32>("cnn_2d_conv_d4x4_bkb_U7");
    cnn_2d_conv_d4x4_bkb_U7->clk(ap_clk);
    cnn_2d_conv_d4x4_bkb_U7->reset(ap_rst_n_inv);
    cnn_2d_conv_d4x4_bkb_U7->din0(kernelData_7);
    cnn_2d_conv_d4x4_bkb_U7->din1(window_2_0_phi_fu_547_p4);
    cnn_2d_conv_d4x4_bkb_U7->ce(grp_fu_1132_ce);
    cnn_2d_conv_d4x4_bkb_U7->dout(grp_fu_1132_p2);
    cnn_2d_conv_d4x4_bkb_U8 = new cnn_2d_conv_d4x4_bkb<1,6,32,32,32>("cnn_2d_conv_d4x4_bkb_U8");
    cnn_2d_conv_d4x4_bkb_U8->clk(ap_clk);
    cnn_2d_conv_d4x4_bkb_U8->reset(ap_rst_n_inv);
    cnn_2d_conv_d4x4_bkb_U8->din0(kernelData_8);
    cnn_2d_conv_d4x4_bkb_U8->din1(window_2_1_2_reg_1567);
    cnn_2d_conv_d4x4_bkb_U8->ce(grp_fu_1138_ce);
    cnn_2d_conv_d4x4_bkb_U8->dout(grp_fu_1138_p2);
    cnn_2d_conv_d4x4_cud_U9 = new cnn_2d_conv_d4x4_cud<1,1,32,32,32,32,2,32>("cnn_2d_conv_d4x4_cud_U9");
    cnn_2d_conv_d4x4_cud_U9->din1(lineBuffer_0_3_5_fu_166);
    cnn_2d_conv_d4x4_cud_U9->din2(lineBuffer_0_3_8_fu_170);
    cnn_2d_conv_d4x4_cud_U9->din3(lineBuffer_0_2_s_reg_534);
    cnn_2d_conv_d4x4_cud_U9->din4(lineBuffer_0_3_3_reg_524);
    cnn_2d_conv_d4x4_cud_U9->din5(tmp_6_reg_1582);
    cnn_2d_conv_d4x4_cud_U9->dout(windowRightCol_0_fu_1149_p6);
    cnn_2d_conv_d4x4_cud_U10 = new cnn_2d_conv_d4x4_cud<1,1,32,32,32,32,2,32>("cnn_2d_conv_d4x4_cud_U10");
    cnn_2d_conv_d4x4_cud_U10->din1(lineBuffer_1_3_1_reg_514);
    cnn_2d_conv_d4x4_cud_U10->din2(lineBuffer_1_3_17_reg_504);
    cnn_2d_conv_d4x4_cud_U10->din3(lineBuffer_1_2_3_reg_494);
    cnn_2d_conv_d4x4_cud_U10->din4(lineBuffer_1_3_3_reg_484);
    cnn_2d_conv_d4x4_cud_U10->din5(tmp_6_reg_1582);
    cnn_2d_conv_d4x4_cud_U10->dout(lineBuffer_0_3_15_fu_1162_p6);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp3_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_condition_1897);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( outStream_V_keep_V_1_ack_in );
    sensitive << ( outStream_V_strb_V_1_ack_in );
    sensitive << ( outStream_V_user_V_1_ack_in );
    sensitive << ( outStream_V_last_V_1_ack_in );
    sensitive << ( outStream_V_id_V_1_ack_in );
    sensitive << ( outStream_V_dest_V_1_ack_in );

    SC_METHOD(thread_ap_condition_977);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( exitcond_flatten8_reg_1554 );
    sensitive << ( icmp_reg_1563 );

    SC_METHOD(thread_ap_condition_988);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_condition_1897 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_condition_1897 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_cond1_fu_746_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond_flatten_fu_714_p2 );
    sensitive << ( y3_reg_393 );

    SC_METHOD(thread_cond1_mid1_fu_740_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond_flatten_fu_714_p2 );
    sensitive << ( y3_reg_393 );

    SC_METHOD(thread_cond1_mid2_fu_752_p3);
    sensitive << ( exitcond_fu_726_p2 );
    sensitive << ( cond1_mid1_fu_740_p2 );
    sensitive << ( cond1_fu_746_p2 );

    SC_METHOD(thread_cond2_fu_780_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond_flatten_fu_714_p2 );
    sensitive << ( x4_mid2_fu_732_p3 );

    SC_METHOD(thread_cond_fu_595_p2);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1389 );
    sensitive << ( exitcond1_fu_585_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_2_fu_591_p1 );

    SC_METHOD(thread_exitcond1_fu_585_p2);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1389 );
    sensitive << ( x_reg_312 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond2_fu_939_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1554 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( x_assign_reg_473 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_exitcond4_fu_621_p2);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1414 );
    sensitive << ( x1_reg_371 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_exitcond_flatten8_fu_894_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( indvar_flatten6_reg_451 );
    sensitive << ( ap_condition_977 );
    sensitive << ( ap_enable_reg_pp3_iter0 );

    SC_METHOD(thread_exitcond_flatten_fu_714_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( indvar_flatten_reg_382 );

    SC_METHOD(thread_exitcond_fu_726_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond_flatten_fu_714_p2 );
    sensitive << ( x4_reg_440 );

    SC_METHOD(thread_grp_fu_1090_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_grp_fu_1096_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_grp_fu_1102_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_grp_fu_1108_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_grp_fu_1114_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_grp_fu_1120_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_grp_fu_1126_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_grp_fu_1132_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_grp_fu_1138_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_icmp_fu_919_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );
    sensitive << ( exitcond_flatten8_fu_894_p2 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( tmp_7_fu_909_p4 );

    SC_METHOD(thread_inStream_TDATA_blk_n);
    sensitive << ( inStream_V_data_V_0_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1389 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1414 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1554 );
    sensitive << ( icmp_reg_1563 );

    SC_METHOD(thread_inStream_TREADY);
    sensitive << ( inStream_V_dest_V_0_state );

    SC_METHOD(thread_inStream_V_data_V_0_ack_in);
    sensitive << ( inStream_V_data_V_0_state );

    SC_METHOD(thread_inStream_V_data_V_0_ack_out);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1389 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1414 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1554 );
    sensitive << ( icmp_reg_1563 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_inStream_V_data_V_0_data_out);
    sensitive << ( inStream_V_data_V_0_payload_A );
    sensitive << ( inStream_V_data_V_0_payload_B );
    sensitive << ( inStream_V_data_V_0_sel );

    SC_METHOD(thread_inStream_V_data_V_0_load_A);
    sensitive << ( inStream_V_data_V_0_sel_wr );
    sensitive << ( inStream_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_inStream_V_data_V_0_load_B);
    sensitive << ( inStream_V_data_V_0_sel_wr );
    sensitive << ( inStream_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_inStream_V_data_V_0_sel);
    sensitive << ( inStream_V_data_V_0_sel_rd );

    SC_METHOD(thread_inStream_V_data_V_0_state_cmp_full);
    sensitive << ( inStream_V_data_V_0_state );

    SC_METHOD(thread_inStream_V_data_V_0_vld_in);
    sensitive << ( inStream_TVALID );

    SC_METHOD(thread_inStream_V_data_V_0_vld_out);
    sensitive << ( inStream_V_data_V_0_state );

    SC_METHOD(thread_inStream_V_dest_V_0_ack_out);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1389 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1414 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1554 );
    sensitive << ( icmp_reg_1563 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_inStream_V_dest_V_0_vld_in);
    sensitive << ( inStream_TVALID );

    SC_METHOD(thread_indvar_flatten_next7_fu_900_p2);
    sensitive << ( indvar_flatten6_reg_451 );

    SC_METHOD(thread_indvar_flatten_next_fu_720_p2);
    sensitive << ( indvar_flatten_reg_382 );

    SC_METHOD(thread_lineBuffer_0_3_13_fu_1236_p3);
    sensitive << ( lineBuffer_0_3_8_fu_170 );
    sensitive << ( sel_tmp4_fu_1185_p2 );
    sensitive << ( lineBuffer_0_3_9_fu_1228_p3 );

    SC_METHOD(thread_lineBuffer_0_3_14_fu_1244_p3);
    sensitive << ( lineBuffer_0_3_15_fu_1162_p6 );
    sensitive << ( lineBuffer_0_3_5_fu_166 );
    sensitive << ( sel_tmp4_fu_1185_p2 );

    SC_METHOD(thread_lineBuffer_0_3_1_fu_607_p3);
    sensitive << ( inStream_V_data_V_0_data_out );
    sensitive << ( lineBuffer_0_3_reg_288 );
    sensitive << ( cond_reg_1393 );

    SC_METHOD(thread_lineBuffer_0_3_4_fu_614_p3);
    sensitive << ( inStream_V_data_V_0_data_out );
    sensitive << ( lineBuffer_0_2_reg_300 );
    sensitive << ( cond_reg_1393 );

    SC_METHOD(thread_lineBuffer_0_3_6_fu_1204_p3);
    sensitive << ( lineBuffer_0_3_3_reg_524 );
    sensitive << ( or_cond2_fu_1190_p2 );
    sensitive << ( newSel4_fu_1196_p3 );

    SC_METHOD(thread_lineBuffer_0_3_7_fu_1220_p3);
    sensitive << ( lineBuffer_0_2_s_reg_534 );
    sensitive << ( or_cond2_fu_1190_p2 );
    sensitive << ( newSel6_fu_1212_p3 );

    SC_METHOD(thread_lineBuffer_0_3_9_fu_1228_p3);
    sensitive << ( lineBuffer_0_3_15_fu_1162_p6 );
    sensitive << ( lineBuffer_0_3_8_fu_170 );
    sensitive << ( sel_tmp3_fu_1180_p2 );

    SC_METHOD(thread_lineBuffer_1_3_10_fu_1278_p3);
    sensitive << ( lineBuffer_1_3_3_reg_484 );
    sensitive << ( or_cond2_fu_1190_p2 );
    sensitive << ( newSel8_fu_1270_p3 );

    SC_METHOD(thread_lineBuffer_1_3_11_fu_1294_p3);
    sensitive << ( lineBuffer_1_2_3_reg_494 );
    sensitive << ( or_cond2_fu_1190_p2 );
    sensitive << ( newSel1_fu_1286_p3 );

    SC_METHOD(thread_lineBuffer_1_3_18_fu_1302_p3);
    sensitive << ( lineBuffer_1_3_17_reg_504 );
    sensitive << ( window_2_1_fu_174 );
    sensitive << ( sel_tmp3_fu_1180_p2 );

    SC_METHOD(thread_lineBuffer_1_3_19_fu_1310_p3);
    sensitive << ( lineBuffer_1_3_17_reg_504 );
    sensitive << ( sel_tmp4_fu_1185_p2 );
    sensitive << ( lineBuffer_1_3_18_fu_1302_p3 );

    SC_METHOD(thread_lineBuffer_1_3_20_fu_1318_p3);
    sensitive << ( lineBuffer_1_3_1_reg_514 );
    sensitive << ( window_2_1_fu_174 );
    sensitive << ( sel_tmp4_fu_1185_p2 );

    SC_METHOD(thread_lineBuffer_1_3_2_fu_666_p3);
    sensitive << ( lineBuffer_1_3_reg_323 );
    sensitive << ( or_cond_fu_652_p2 );
    sensitive << ( newSel_fu_658_p3 );

    SC_METHOD(thread_lineBuffer_1_3_4_fu_682_p3);
    sensitive << ( lineBuffer_1_2_reg_335 );
    sensitive << ( or_cond_fu_652_p2 );
    sensitive << ( newSel2_fu_674_p3 );

    SC_METHOD(thread_lineBuffer_1_3_6_fu_690_p3);
    sensitive << ( inStream_V_data_V_0_data_out );
    sensitive << ( lineBuffer_1_3_5_reg_347 );
    sensitive << ( sel_tmp7_fu_642_p2 );

    SC_METHOD(thread_lineBuffer_1_3_7_fu_698_p3);
    sensitive << ( lineBuffer_1_3_5_reg_347 );
    sensitive << ( sel_tmp9_fu_647_p2 );
    sensitive << ( lineBuffer_1_3_6_fu_690_p3 );

    SC_METHOD(thread_lineBuffer_1_3_9_fu_706_p3);
    sensitive << ( inStream_V_data_V_0_data_out );
    sensitive << ( lineBuffer_1_3_8_reg_359 );
    sensitive << ( sel_tmp9_fu_647_p2 );

    SC_METHOD(thread_lineBuffer_load37_ph_fu_786_p3);
    sensitive << ( lineBuffer_0_3_reg_288 );
    sensitive << ( lineBuffer_0_2_reg_300 );
    sensitive << ( cond2_fu_780_p2 );

    SC_METHOD(thread_lineBuffer_load38_ph_fu_794_p3);
    sensitive << ( lineBuffer_1_3_reg_323 );
    sensitive << ( lineBuffer_1_2_reg_335 );
    sensitive << ( cond2_fu_780_p2 );

    SC_METHOD(thread_newSel1_fu_1286_p3);
    sensitive << ( lineBuffer_1_2_3_reg_494 );
    sensitive << ( window_2_1_fu_174 );
    sensitive << ( sel_tmp2_fu_1175_p2 );

    SC_METHOD(thread_newSel2_fu_674_p3);
    sensitive << ( inStream_V_data_V_0_data_out );
    sensitive << ( lineBuffer_1_2_reg_335 );
    sensitive << ( sel_tmp_fu_637_p2 );

    SC_METHOD(thread_newSel4_fu_1196_p3);
    sensitive << ( lineBuffer_0_3_3_reg_524 );
    sensitive << ( lineBuffer_0_3_15_fu_1162_p6 );
    sensitive << ( sel_tmp2_fu_1175_p2 );

    SC_METHOD(thread_newSel6_fu_1212_p3);
    sensitive << ( lineBuffer_0_2_s_reg_534 );
    sensitive << ( lineBuffer_0_3_15_fu_1162_p6 );
    sensitive << ( sel_tmp2_fu_1175_p2 );

    SC_METHOD(thread_newSel8_fu_1270_p3);
    sensitive << ( lineBuffer_1_3_3_reg_484 );
    sensitive << ( window_2_1_fu_174 );
    sensitive << ( sel_tmp2_fu_1175_p2 );

    SC_METHOD(thread_newSel_fu_658_p3);
    sensitive << ( inStream_V_data_V_0_data_out );
    sensitive << ( lineBuffer_1_3_reg_323 );
    sensitive << ( sel_tmp_fu_637_p2 );

    SC_METHOD(thread_or_cond2_fu_1190_p2);
    sensitive << ( sel_tmp4_fu_1185_p2 );
    sensitive << ( sel_tmp3_fu_1180_p2 );

    SC_METHOD(thread_or_cond_fu_652_p2);
    sensitive << ( sel_tmp9_fu_647_p2 );
    sensitive << ( sel_tmp7_fu_642_p2 );

    SC_METHOD(thread_outStream_TDATA);
    sensitive << ( outStream_V_data_V_1_data_out );

    SC_METHOD(thread_outStream_TDATA_blk_n);
    sensitive << ( outStream_V_data_V_1_state );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );

    SC_METHOD(thread_outStream_TDEST);
    sensitive << ( outStream_V_dest_V_1_data_out );

    SC_METHOD(thread_outStream_TID);
    sensitive << ( outStream_V_id_V_1_data_out );

    SC_METHOD(thread_outStream_TKEEP);
    sensitive << ( outStream_V_keep_V_1_data_out );

    SC_METHOD(thread_outStream_TLAST);
    sensitive << ( outStream_V_last_V_1_data_out );

    SC_METHOD(thread_outStream_TSTRB);
    sensitive << ( outStream_V_strb_V_1_data_out );

    SC_METHOD(thread_outStream_TUSER);
    sensitive << ( outStream_V_user_V_1_data_out );

    SC_METHOD(thread_outStream_TVALID);
    sensitive << ( outStream_V_dest_V_1_state );

    SC_METHOD(thread_outStream_V_data_V_1_ack_in);
    sensitive << ( outStream_V_data_V_1_state );

    SC_METHOD(thread_outStream_V_data_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_data_V_1_data_out);
    sensitive << ( outStream_V_data_V_1_payload_A );
    sensitive << ( outStream_V_data_V_1_payload_B );
    sensitive << ( outStream_V_data_V_1_sel );

    SC_METHOD(thread_outStream_V_data_V_1_load_A);
    sensitive << ( outStream_V_data_V_1_sel_wr );
    sensitive << ( outStream_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_data_V_1_load_B);
    sensitive << ( outStream_V_data_V_1_sel_wr );
    sensitive << ( outStream_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_data_V_1_sel);
    sensitive << ( outStream_V_data_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_data_V_1_state_cmp_full);
    sensitive << ( outStream_V_data_V_1_state );

    SC_METHOD(thread_outStream_V_data_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_outStream_V_data_V_1_vld_out);
    sensitive << ( outStream_V_data_V_1_state );

    SC_METHOD(thread_outStream_V_dest_V_1_ack_in);
    sensitive << ( outStream_V_dest_V_1_state );

    SC_METHOD(thread_outStream_V_dest_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_dest_V_1_data_out);
    sensitive << ( outStream_V_dest_V_1_sel );

    SC_METHOD(thread_outStream_V_dest_V_1_sel);
    sensitive << ( outStream_V_dest_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_dest_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_outStream_V_dest_V_1_vld_out);
    sensitive << ( outStream_V_dest_V_1_state );

    SC_METHOD(thread_outStream_V_id_V_1_ack_in);
    sensitive << ( outStream_V_id_V_1_state );

    SC_METHOD(thread_outStream_V_id_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_id_V_1_data_out);
    sensitive << ( outStream_V_id_V_1_sel );

    SC_METHOD(thread_outStream_V_id_V_1_sel);
    sensitive << ( outStream_V_id_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_id_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_outStream_V_id_V_1_vld_out);
    sensitive << ( outStream_V_id_V_1_state );

    SC_METHOD(thread_outStream_V_keep_V_1_ack_in);
    sensitive << ( outStream_V_keep_V_1_state );

    SC_METHOD(thread_outStream_V_keep_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_keep_V_1_data_out);
    sensitive << ( outStream_V_keep_V_1_sel );

    SC_METHOD(thread_outStream_V_keep_V_1_sel);
    sensitive << ( outStream_V_keep_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_keep_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_outStream_V_keep_V_1_vld_out);
    sensitive << ( outStream_V_keep_V_1_state );

    SC_METHOD(thread_outStream_V_last_V_1_ack_in);
    sensitive << ( outStream_V_last_V_1_state );

    SC_METHOD(thread_outStream_V_last_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_last_V_1_data_out);
    sensitive << ( outStream_V_last_V_1_payload_A );
    sensitive << ( outStream_V_last_V_1_payload_B );
    sensitive << ( outStream_V_last_V_1_sel );

    SC_METHOD(thread_outStream_V_last_V_1_load_A);
    sensitive << ( outStream_V_last_V_1_sel_wr );
    sensitive << ( outStream_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_last_V_1_load_B);
    sensitive << ( outStream_V_last_V_1_sel_wr );
    sensitive << ( outStream_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_last_V_1_sel);
    sensitive << ( outStream_V_last_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_last_V_1_state_cmp_full);
    sensitive << ( outStream_V_last_V_1_state );

    SC_METHOD(thread_outStream_V_last_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_outStream_V_last_V_1_vld_out);
    sensitive << ( outStream_V_last_V_1_state );

    SC_METHOD(thread_outStream_V_strb_V_1_ack_in);
    sensitive << ( outStream_V_strb_V_1_state );

    SC_METHOD(thread_outStream_V_strb_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_strb_V_1_data_out);
    sensitive << ( outStream_V_strb_V_1_sel );

    SC_METHOD(thread_outStream_V_strb_V_1_sel);
    sensitive << ( outStream_V_strb_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_strb_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_outStream_V_strb_V_1_vld_out);
    sensitive << ( outStream_V_strb_V_1_state );

    SC_METHOD(thread_outStream_V_user_V_1_ack_in);
    sensitive << ( outStream_V_user_V_1_state );

    SC_METHOD(thread_outStream_V_user_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_user_V_1_data_out);
    sensitive << ( outStream_V_user_V_1_sel );

    SC_METHOD(thread_outStream_V_user_V_1_sel);
    sensitive << ( outStream_V_user_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_user_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_outStream_V_user_V_1_vld_out);
    sensitive << ( outStream_V_user_V_1_state );

    SC_METHOD(thread_p_i_fu_1031_p2);
    sensitive << ( tmp2_fu_1025_p2 );
    sensitive << ( tmp1_fu_1019_p2 );

    SC_METHOD(thread_readCount_fu_925_p2);
    sensitive << ( readCount_1_fu_182 );

    SC_METHOD(thread_sel_tmp2_fu_1175_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );
    sensitive << ( ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1554 );
    sensitive << ( tmp_6_reg_1582 );
    sensitive << ( ap_enable_reg_pp3_iter2 );

    SC_METHOD(thread_sel_tmp3_fu_1180_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );
    sensitive << ( ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1554 );
    sensitive << ( tmp_6_reg_1582 );
    sensitive << ( ap_enable_reg_pp3_iter2 );

    SC_METHOD(thread_sel_tmp4_fu_1185_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );
    sensitive << ( ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1554 );
    sensitive << ( tmp_6_reg_1582 );
    sensitive << ( ap_enable_reg_pp3_iter2 );

    SC_METHOD(thread_sel_tmp7_fu_642_p2);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1414 );
    sensitive << ( tmp_3_reg_1423 );

    SC_METHOD(thread_sel_tmp9_fu_647_p2);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1414 );
    sensitive << ( tmp_3_reg_1423 );

    SC_METHOD(thread_sel_tmp_fu_637_p2);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1414 );
    sensitive << ( tmp_3_reg_1423 );

    SC_METHOD(thread_tmp1_fu_1019_p2);
    sensitive << ( tmp_i_15_fu_1007_p2 );
    sensitive << ( tmp_i_mid2_fu_971_p3 );

    SC_METHOD(thread_tmp2_fu_1025_p2);
    sensitive << ( tmp_1_i_fu_1013_p2 );
    sensitive << ( tmp_2_i_mid2_fu_991_p3 );

    SC_METHOD(thread_tmp3_fu_1326_p2);
    sensitive << ( grp_fu_1096_p2 );
    sensitive << ( grp_fu_1090_p2 );

    SC_METHOD(thread_tmp4_fu_1332_p2);
    sensitive << ( grp_fu_1102_p2 );
    sensitive << ( grp_fu_1108_p2 );

    SC_METHOD(thread_tmp5_fu_1347_p2);
    sensitive << ( tmp3_reg_1726 );
    sensitive << ( tmp4_reg_1731 );

    SC_METHOD(thread_tmp6_fu_1351_p2);
    sensitive << ( tmp_8_1_1_i_reg_1701 );
    sensitive << ( tmp_8_1_2_i_reg_1706 );

    SC_METHOD(thread_tmp7_fu_1355_p2);
    sensitive << ( tmp_8_2_1_i_reg_1716 );
    sensitive << ( tmp_8_2_2_i_reg_1721 );

    SC_METHOD(thread_tmp8_fu_1359_p2);
    sensitive << ( tmp_8_2_i_reg_1711 );
    sensitive << ( tmp7_fu_1355_p2 );

    SC_METHOD(thread_tmp9_fu_1364_p2);
    sensitive << ( tmp8_fu_1359_p2 );
    sensitive << ( tmp6_fu_1351_p2 );

    SC_METHOD(thread_tmp_1_i_fu_1013_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1554 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );
    sensitive << ( x_assign_mid2_fu_945_p3 );

    SC_METHOD(thread_tmp_2_fu_591_p1);
    sensitive << ( x_reg_312 );

    SC_METHOD(thread_tmp_2_i_fu_985_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1554 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( y_assign_reg_462 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_tmp_2_i_mid1_fu_979_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1554 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );
    sensitive << ( y_s_fu_953_p2 );

    SC_METHOD(thread_tmp_2_i_mid2_fu_991_p3);
    sensitive << ( exitcond2_fu_939_p2 );
    sensitive << ( tmp_2_i_mid1_fu_979_p2 );
    sensitive << ( tmp_2_i_fu_985_p2 );

    SC_METHOD(thread_tmp_3_fu_633_p1);
    sensitive << ( x1_reg_371 );

    SC_METHOD(thread_tmp_6_fu_1037_p1);
    sensitive << ( x_assign_mid2_fu_945_p3 );

    SC_METHOD(thread_tmp_7_fu_909_p4);
    sensitive << ( readCount_1_fu_182 );

    SC_METHOD(thread_tmp_data_V_fu_1370_p2);
    sensitive << ( tmp9_fu_1364_p2 );
    sensitive << ( tmp5_fu_1347_p2 );

    SC_METHOD(thread_tmp_i_15_fu_1007_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1554 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );
    sensitive << ( x_assign_mid2_fu_945_p3 );

    SC_METHOD(thread_tmp_i_fu_965_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1554 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( y_assign_reg_462 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_tmp_i_mid1_fu_959_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1554 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );
    sensitive << ( y_s_fu_953_p2 );

    SC_METHOD(thread_tmp_i_mid2_fu_971_p3);
    sensitive << ( exitcond2_fu_939_p2 );
    sensitive << ( tmp_i_mid1_fu_959_p2 );
    sensitive << ( tmp_i_fu_965_p2 );

    SC_METHOD(thread_tmp_last_V_fu_1377_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );
    sensitive << ( writeCount_fu_1341_p2 );

    SC_METHOD(thread_window_1_0_phi_fu_569_p4);
    sensitive << ( window_1_1_reg_555 );
    sensitive << ( window_1_0_reg_566 );
    sensitive << ( ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1554 );
    sensitive << ( ap_enable_reg_pp3_iter3 );

    SC_METHOD(thread_window_1_1_2_fu_802_p3);
    sensitive << ( cond1_mid2_fu_752_p3 );
    sensitive << ( lineBuffer_load37_ph_fu_786_p3 );
    sensitive << ( lineBuffer_load38_ph_fu_794_p3 );

    SC_METHOD(thread_window_1_1_phi_fu_558_p4);
    sensitive << ( window_1_1_reg_555 );
    sensitive << ( ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1554 );
    sensitive << ( lineBuffer_0_3_15_reg_1666 );
    sensitive << ( ap_enable_reg_pp3_iter3 );

    SC_METHOD(thread_window_2_0_phi_fu_547_p4);
    sensitive << ( window_2_0_reg_544 );
    sensitive << ( ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1554 );
    sensitive << ( ap_pipeline_reg_pp3_iter2_window_2_1_2_reg_1567 );
    sensitive << ( ap_enable_reg_pp3_iter3 );

    SC_METHOD(thread_window_2_2_1_fu_818_p3);
    sensitive << ( window_1_1_1_reg_428 );
    sensitive << ( cond2_fu_780_p2 );
    sensitive << ( window_1_1_2_fu_802_p3 );

    SC_METHOD(thread_window_2_2_3_fu_826_p3);
    sensitive << ( window_2_2_2_fu_142 );
    sensitive << ( cond2_fu_780_p2 );
    sensitive << ( window_1_1_2_fu_802_p3 );

    SC_METHOD(thread_window_2_2_4_fu_834_p3);
    sensitive << ( window_2_1_1_reg_404 );
    sensitive << ( cond2_fu_780_p2 );
    sensitive << ( window_1_1_2_fu_802_p3 );

    SC_METHOD(thread_window_2_2_5_fu_842_p3);
    sensitive << ( window_2_2_2_fu_142 );
    sensitive << ( cond1_mid2_fu_752_p3 );
    sensitive << ( window_2_2_3_fu_826_p3 );

    SC_METHOD(thread_window_2_2_6_fu_850_p3);
    sensitive << ( window_2_1_1_reg_404 );
    sensitive << ( cond1_mid2_fu_752_p3 );
    sensitive << ( window_2_2_4_fu_834_p3 );

    SC_METHOD(thread_window_2_2_7_fu_858_p3);
    sensitive << ( window_1_2_1_reg_416 );
    sensitive << ( cond1_mid2_fu_752_p3 );
    sensitive << ( window_2_2_fu_810_p3 );

    SC_METHOD(thread_window_2_2_8_fu_866_p3);
    sensitive << ( window_1_1_1_reg_428 );
    sensitive << ( cond1_mid2_fu_752_p3 );
    sensitive << ( window_2_2_1_fu_818_p3 );

    SC_METHOD(thread_window_2_2_fu_810_p3);
    sensitive << ( window_1_2_1_reg_416 );
    sensitive << ( cond2_fu_780_p2 );
    sensitive << ( window_1_1_2_fu_802_p3 );

    SC_METHOD(thread_writeCount_fu_1341_p2);
    sensitive << ( writeCount_1_fu_178 );

    SC_METHOD(thread_x4_mid2_fu_732_p3);
    sensitive << ( x4_reg_440 );
    sensitive << ( exitcond_fu_726_p2 );

    SC_METHOD(thread_x_1_fu_601_p2);
    sensitive << ( x_reg_312 );

    SC_METHOD(thread_x_2_fu_627_p2);
    sensitive << ( x1_reg_371 );

    SC_METHOD(thread_x_3_fu_774_p2);
    sensitive << ( x4_mid2_fu_732_p3 );

    SC_METHOD(thread_x_4_fu_1046_p2);
    sensitive << ( x_assign_mid2_fu_945_p3 );

    SC_METHOD(thread_x_assign_mid2_fu_945_p3);
    sensitive << ( x_assign_reg_473 );
    sensitive << ( exitcond2_fu_939_p2 );

    SC_METHOD(thread_y3_mid2_fu_766_p3);
    sensitive << ( y3_reg_393 );
    sensitive << ( exitcond_fu_726_p2 );
    sensitive << ( y9_fu_760_p2 );

    SC_METHOD(thread_y9_fu_760_p2);
    sensitive << ( y3_reg_393 );

    SC_METHOD(thread_y_assign_mid2_fu_999_p3);
    sensitive << ( y_assign_reg_462 );
    sensitive << ( exitcond2_fu_939_p2 );
    sensitive << ( y_s_fu_953_p2 );

    SC_METHOD(thread_y_s_fu_953_p2);
    sensitive << ( y_assign_reg_462 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1389 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1414 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter8 );
    sensitive << ( ap_pipeline_reg_pp3_iter7_p_i_reg_1578 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1578 );
    sensitive << ( ap_condition_977 );
    sensitive << ( exitcond1_fu_585_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond4_fu_621_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( exitcond_flatten_fu_714_p2 );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( ap_condition_1897 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000001";
    inStream_V_data_V_0_sel_rd = SC_LOGIC_0;
    inStream_V_data_V_0_sel_wr = SC_LOGIC_0;
    inStream_V_data_V_0_state = "00";
    inStream_V_dest_V_0_state = "00";
    outStream_V_data_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_data_V_1_sel_wr = SC_LOGIC_0;
    outStream_V_data_V_1_state = "00";
    outStream_V_keep_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_keep_V_1_state = "00";
    outStream_V_strb_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_strb_V_1_state = "00";
    outStream_V_user_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_user_V_1_state = "00";
    outStream_V_last_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_last_V_1_sel_wr = SC_LOGIC_0;
    outStream_V_last_V_1_state = "00";
    outStream_V_id_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_id_V_1_state = "00";
    outStream_V_dest_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_dest_V_1_state = "00";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter7 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "cnn_2d_conv_d4x4_k3x3_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, inStream_TDATA, "(port)inStream_TDATA");
    sc_trace(mVcdFile, inStream_TVALID, "(port)inStream_TVALID");
    sc_trace(mVcdFile, inStream_TREADY, "(port)inStream_TREADY");
    sc_trace(mVcdFile, inStream_TKEEP, "(port)inStream_TKEEP");
    sc_trace(mVcdFile, inStream_TSTRB, "(port)inStream_TSTRB");
    sc_trace(mVcdFile, inStream_TUSER, "(port)inStream_TUSER");
    sc_trace(mVcdFile, inStream_TLAST, "(port)inStream_TLAST");
    sc_trace(mVcdFile, inStream_TID, "(port)inStream_TID");
    sc_trace(mVcdFile, inStream_TDEST, "(port)inStream_TDEST");
    sc_trace(mVcdFile, outStream_TDATA, "(port)outStream_TDATA");
    sc_trace(mVcdFile, outStream_TVALID, "(port)outStream_TVALID");
    sc_trace(mVcdFile, outStream_TREADY, "(port)outStream_TREADY");
    sc_trace(mVcdFile, outStream_TKEEP, "(port)outStream_TKEEP");
    sc_trace(mVcdFile, outStream_TSTRB, "(port)outStream_TSTRB");
    sc_trace(mVcdFile, outStream_TUSER, "(port)outStream_TUSER");
    sc_trace(mVcdFile, outStream_TLAST, "(port)outStream_TLAST");
    sc_trace(mVcdFile, outStream_TID, "(port)outStream_TID");
    sc_trace(mVcdFile, outStream_TDEST, "(port)outStream_TDEST");
    sc_trace(mVcdFile, s_axi_CTRL_AWVALID, "(port)s_axi_CTRL_AWVALID");
    sc_trace(mVcdFile, s_axi_CTRL_AWREADY, "(port)s_axi_CTRL_AWREADY");
    sc_trace(mVcdFile, s_axi_CTRL_AWADDR, "(port)s_axi_CTRL_AWADDR");
    sc_trace(mVcdFile, s_axi_CTRL_WVALID, "(port)s_axi_CTRL_WVALID");
    sc_trace(mVcdFile, s_axi_CTRL_WREADY, "(port)s_axi_CTRL_WREADY");
    sc_trace(mVcdFile, s_axi_CTRL_WDATA, "(port)s_axi_CTRL_WDATA");
    sc_trace(mVcdFile, s_axi_CTRL_WSTRB, "(port)s_axi_CTRL_WSTRB");
    sc_trace(mVcdFile, s_axi_CTRL_ARVALID, "(port)s_axi_CTRL_ARVALID");
    sc_trace(mVcdFile, s_axi_CTRL_ARREADY, "(port)s_axi_CTRL_ARREADY");
    sc_trace(mVcdFile, s_axi_CTRL_ARADDR, "(port)s_axi_CTRL_ARADDR");
    sc_trace(mVcdFile, s_axi_CTRL_RVALID, "(port)s_axi_CTRL_RVALID");
    sc_trace(mVcdFile, s_axi_CTRL_RREADY, "(port)s_axi_CTRL_RREADY");
    sc_trace(mVcdFile, s_axi_CTRL_RDATA, "(port)s_axi_CTRL_RDATA");
    sc_trace(mVcdFile, s_axi_CTRL_RRESP, "(port)s_axi_CTRL_RRESP");
    sc_trace(mVcdFile, s_axi_CTRL_BVALID, "(port)s_axi_CTRL_BVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BREADY, "(port)s_axi_CTRL_BREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BRESP, "(port)s_axi_CTRL_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, inStream_V_data_V_0_data_out, "inStream_V_data_V_0_data_out");
    sc_trace(mVcdFile, inStream_V_data_V_0_vld_in, "inStream_V_data_V_0_vld_in");
    sc_trace(mVcdFile, inStream_V_data_V_0_vld_out, "inStream_V_data_V_0_vld_out");
    sc_trace(mVcdFile, inStream_V_data_V_0_ack_in, "inStream_V_data_V_0_ack_in");
    sc_trace(mVcdFile, inStream_V_data_V_0_ack_out, "inStream_V_data_V_0_ack_out");
    sc_trace(mVcdFile, inStream_V_data_V_0_payload_A, "inStream_V_data_V_0_payload_A");
    sc_trace(mVcdFile, inStream_V_data_V_0_payload_B, "inStream_V_data_V_0_payload_B");
    sc_trace(mVcdFile, inStream_V_data_V_0_sel_rd, "inStream_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, inStream_V_data_V_0_sel_wr, "inStream_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, inStream_V_data_V_0_sel, "inStream_V_data_V_0_sel");
    sc_trace(mVcdFile, inStream_V_data_V_0_load_A, "inStream_V_data_V_0_load_A");
    sc_trace(mVcdFile, inStream_V_data_V_0_load_B, "inStream_V_data_V_0_load_B");
    sc_trace(mVcdFile, inStream_V_data_V_0_state, "inStream_V_data_V_0_state");
    sc_trace(mVcdFile, inStream_V_data_V_0_state_cmp_full, "inStream_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, inStream_V_dest_V_0_vld_in, "inStream_V_dest_V_0_vld_in");
    sc_trace(mVcdFile, inStream_V_dest_V_0_ack_out, "inStream_V_dest_V_0_ack_out");
    sc_trace(mVcdFile, inStream_V_dest_V_0_state, "inStream_V_dest_V_0_state");
    sc_trace(mVcdFile, outStream_V_data_V_1_data_out, "outStream_V_data_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_data_V_1_vld_in, "outStream_V_data_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_data_V_1_vld_out, "outStream_V_data_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_data_V_1_ack_in, "outStream_V_data_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_data_V_1_ack_out, "outStream_V_data_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_data_V_1_payload_A, "outStream_V_data_V_1_payload_A");
    sc_trace(mVcdFile, outStream_V_data_V_1_payload_B, "outStream_V_data_V_1_payload_B");
    sc_trace(mVcdFile, outStream_V_data_V_1_sel_rd, "outStream_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_data_V_1_sel_wr, "outStream_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, outStream_V_data_V_1_sel, "outStream_V_data_V_1_sel");
    sc_trace(mVcdFile, outStream_V_data_V_1_load_A, "outStream_V_data_V_1_load_A");
    sc_trace(mVcdFile, outStream_V_data_V_1_load_B, "outStream_V_data_V_1_load_B");
    sc_trace(mVcdFile, outStream_V_data_V_1_state, "outStream_V_data_V_1_state");
    sc_trace(mVcdFile, outStream_V_data_V_1_state_cmp_full, "outStream_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, outStream_V_keep_V_1_data_out, "outStream_V_keep_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_keep_V_1_vld_in, "outStream_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_keep_V_1_vld_out, "outStream_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_keep_V_1_ack_in, "outStream_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_keep_V_1_ack_out, "outStream_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_keep_V_1_sel_rd, "outStream_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_keep_V_1_sel, "outStream_V_keep_V_1_sel");
    sc_trace(mVcdFile, outStream_V_keep_V_1_state, "outStream_V_keep_V_1_state");
    sc_trace(mVcdFile, outStream_V_strb_V_1_data_out, "outStream_V_strb_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_strb_V_1_vld_in, "outStream_V_strb_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_strb_V_1_vld_out, "outStream_V_strb_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_strb_V_1_ack_in, "outStream_V_strb_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_strb_V_1_ack_out, "outStream_V_strb_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_strb_V_1_sel_rd, "outStream_V_strb_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_strb_V_1_sel, "outStream_V_strb_V_1_sel");
    sc_trace(mVcdFile, outStream_V_strb_V_1_state, "outStream_V_strb_V_1_state");
    sc_trace(mVcdFile, outStream_V_user_V_1_data_out, "outStream_V_user_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_user_V_1_vld_in, "outStream_V_user_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_user_V_1_vld_out, "outStream_V_user_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_user_V_1_ack_in, "outStream_V_user_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_user_V_1_ack_out, "outStream_V_user_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_user_V_1_sel_rd, "outStream_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_user_V_1_sel, "outStream_V_user_V_1_sel");
    sc_trace(mVcdFile, outStream_V_user_V_1_state, "outStream_V_user_V_1_state");
    sc_trace(mVcdFile, outStream_V_last_V_1_data_out, "outStream_V_last_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_last_V_1_vld_in, "outStream_V_last_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_last_V_1_vld_out, "outStream_V_last_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_last_V_1_ack_in, "outStream_V_last_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_last_V_1_ack_out, "outStream_V_last_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_last_V_1_payload_A, "outStream_V_last_V_1_payload_A");
    sc_trace(mVcdFile, outStream_V_last_V_1_payload_B, "outStream_V_last_V_1_payload_B");
    sc_trace(mVcdFile, outStream_V_last_V_1_sel_rd, "outStream_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_last_V_1_sel_wr, "outStream_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, outStream_V_last_V_1_sel, "outStream_V_last_V_1_sel");
    sc_trace(mVcdFile, outStream_V_last_V_1_load_A, "outStream_V_last_V_1_load_A");
    sc_trace(mVcdFile, outStream_V_last_V_1_load_B, "outStream_V_last_V_1_load_B");
    sc_trace(mVcdFile, outStream_V_last_V_1_state, "outStream_V_last_V_1_state");
    sc_trace(mVcdFile, outStream_V_last_V_1_state_cmp_full, "outStream_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, outStream_V_id_V_1_data_out, "outStream_V_id_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_id_V_1_vld_in, "outStream_V_id_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_id_V_1_vld_out, "outStream_V_id_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_id_V_1_ack_in, "outStream_V_id_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_id_V_1_ack_out, "outStream_V_id_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_id_V_1_sel_rd, "outStream_V_id_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_id_V_1_sel, "outStream_V_id_V_1_sel");
    sc_trace(mVcdFile, outStream_V_id_V_1_state, "outStream_V_id_V_1_state");
    sc_trace(mVcdFile, outStream_V_dest_V_1_data_out, "outStream_V_dest_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_dest_V_1_vld_in, "outStream_V_dest_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_dest_V_1_vld_out, "outStream_V_dest_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_dest_V_1_ack_in, "outStream_V_dest_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_dest_V_1_ack_out, "outStream_V_dest_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_dest_V_1_sel_rd, "outStream_V_dest_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_dest_V_1_sel, "outStream_V_dest_V_1_sel");
    sc_trace(mVcdFile, outStream_V_dest_V_1_state, "outStream_V_dest_V_1_state");
    sc_trace(mVcdFile, ctrl, "ctrl");
    sc_trace(mVcdFile, kernelData_0, "kernelData_0");
    sc_trace(mVcdFile, kernelData_1, "kernelData_1");
    sc_trace(mVcdFile, kernelData_2, "kernelData_2");
    sc_trace(mVcdFile, kernelData_3, "kernelData_3");
    sc_trace(mVcdFile, kernelData_4, "kernelData_4");
    sc_trace(mVcdFile, kernelData_5, "kernelData_5");
    sc_trace(mVcdFile, kernelData_6, "kernelData_6");
    sc_trace(mVcdFile, kernelData_7, "kernelData_7");
    sc_trace(mVcdFile, kernelData_8, "kernelData_8");
    sc_trace(mVcdFile, inStream_TDATA_blk_n, "inStream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, exitcond1_reg_1389, "exitcond1_reg_1389");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, exitcond4_reg_1414, "exitcond4_reg_1414");
    sc_trace(mVcdFile, ap_CS_fsm_pp3_stage0, "ap_CS_fsm_pp3_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter1, "ap_enable_reg_pp3_iter1");
    sc_trace(mVcdFile, exitcond_flatten8_reg_1554, "exitcond_flatten8_reg_1554");
    sc_trace(mVcdFile, icmp_reg_1563, "icmp_reg_1563");
    sc_trace(mVcdFile, outStream_TDATA_blk_n, "outStream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter8, "ap_enable_reg_pp3_iter8");
    sc_trace(mVcdFile, p_i_reg_1578, "p_i_reg_1578");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter7_p_i_reg_1578, "ap_pipeline_reg_pp3_iter7_p_i_reg_1578");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter9, "ap_enable_reg_pp3_iter9");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter8_p_i_reg_1578, "ap_pipeline_reg_pp3_iter8_p_i_reg_1578");
    sc_trace(mVcdFile, lineBuffer_0_3_reg_288, "lineBuffer_0_3_reg_288");
    sc_trace(mVcdFile, lineBuffer_0_2_reg_300, "lineBuffer_0_2_reg_300");
    sc_trace(mVcdFile, x_reg_312, "x_reg_312");
    sc_trace(mVcdFile, lineBuffer_1_3_reg_323, "lineBuffer_1_3_reg_323");
    sc_trace(mVcdFile, lineBuffer_1_2_reg_335, "lineBuffer_1_2_reg_335");
    sc_trace(mVcdFile, lineBuffer_1_3_5_reg_347, "lineBuffer_1_3_5_reg_347");
    sc_trace(mVcdFile, lineBuffer_1_3_8_reg_359, "lineBuffer_1_3_8_reg_359");
    sc_trace(mVcdFile, x1_reg_371, "x1_reg_371");
    sc_trace(mVcdFile, indvar_flatten6_reg_451, "indvar_flatten6_reg_451");
    sc_trace(mVcdFile, y_assign_reg_462, "y_assign_reg_462");
    sc_trace(mVcdFile, x_assign_reg_473, "x_assign_reg_473");
    sc_trace(mVcdFile, lineBuffer_1_3_3_reg_484, "lineBuffer_1_3_3_reg_484");
    sc_trace(mVcdFile, lineBuffer_1_2_3_reg_494, "lineBuffer_1_2_3_reg_494");
    sc_trace(mVcdFile, lineBuffer_1_3_17_reg_504, "lineBuffer_1_3_17_reg_504");
    sc_trace(mVcdFile, lineBuffer_1_3_1_reg_514, "lineBuffer_1_3_1_reg_514");
    sc_trace(mVcdFile, lineBuffer_0_3_3_reg_524, "lineBuffer_0_3_3_reg_524");
    sc_trace(mVcdFile, lineBuffer_0_2_s_reg_534, "lineBuffer_0_2_s_reg_534");
    sc_trace(mVcdFile, window_2_0_reg_544, "window_2_0_reg_544");
    sc_trace(mVcdFile, ap_condition_977, "ap_condition_977");
    sc_trace(mVcdFile, window_1_1_reg_555, "window_1_1_reg_555");
    sc_trace(mVcdFile, window_1_0_reg_566, "window_1_0_reg_566");
    sc_trace(mVcdFile, exitcond1_fu_585_p2, "exitcond1_fu_585_p2");
    sc_trace(mVcdFile, cond_fu_595_p2, "cond_fu_595_p2");
    sc_trace(mVcdFile, cond_reg_1393, "cond_reg_1393");
    sc_trace(mVcdFile, x_1_fu_601_p2, "x_1_fu_601_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, lineBuffer_0_3_1_fu_607_p3, "lineBuffer_0_3_1_fu_607_p3");
    sc_trace(mVcdFile, lineBuffer_0_3_4_fu_614_p3, "lineBuffer_0_3_4_fu_614_p3");
    sc_trace(mVcdFile, exitcond4_fu_621_p2, "exitcond4_fu_621_p2");
    sc_trace(mVcdFile, x_2_fu_627_p2, "x_2_fu_627_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, tmp_3_fu_633_p1, "tmp_3_fu_633_p1");
    sc_trace(mVcdFile, tmp_3_reg_1423, "tmp_3_reg_1423");
    sc_trace(mVcdFile, lineBuffer_1_3_2_fu_666_p3, "lineBuffer_1_3_2_fu_666_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_4_fu_682_p3, "lineBuffer_1_3_4_fu_682_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_7_fu_698_p3, "lineBuffer_1_3_7_fu_698_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_9_fu_706_p3, "lineBuffer_1_3_9_fu_706_p3");
    sc_trace(mVcdFile, indvar_flatten_next_fu_720_p2, "indvar_flatten_next_fu_720_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, y3_mid2_fu_766_p3, "y3_mid2_fu_766_p3");
    sc_trace(mVcdFile, exitcond_flatten_fu_714_p2, "exitcond_flatten_fu_714_p2");
    sc_trace(mVcdFile, x_3_fu_774_p2, "x_3_fu_774_p2");
    sc_trace(mVcdFile, window_2_2_6_fu_850_p3, "window_2_2_6_fu_850_p3");
    sc_trace(mVcdFile, window_2_2_7_fu_858_p3, "window_2_2_7_fu_858_p3");
    sc_trace(mVcdFile, window_2_2_8_fu_866_p3, "window_2_2_8_fu_866_p3");
    sc_trace(mVcdFile, exitcond_flatten8_fu_894_p2, "exitcond_flatten8_fu_894_p2");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1554, "ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1554");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1554, "ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1554");
    sc_trace(mVcdFile, indvar_flatten_next7_fu_900_p2, "indvar_flatten_next7_fu_900_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter0, "ap_enable_reg_pp3_iter0");
    sc_trace(mVcdFile, icmp_fu_919_p2, "icmp_fu_919_p2");
    sc_trace(mVcdFile, window_2_1_2_reg_1567, "window_2_1_2_reg_1567");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter2_window_2_1_2_reg_1567, "ap_pipeline_reg_pp3_iter2_window_2_1_2_reg_1567");
    sc_trace(mVcdFile, y_assign_mid2_fu_999_p3, "y_assign_mid2_fu_999_p3");
    sc_trace(mVcdFile, p_i_fu_1031_p2, "p_i_fu_1031_p2");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter2_p_i_reg_1578, "ap_pipeline_reg_pp3_iter2_p_i_reg_1578");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter3_p_i_reg_1578, "ap_pipeline_reg_pp3_iter3_p_i_reg_1578");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter4_p_i_reg_1578, "ap_pipeline_reg_pp3_iter4_p_i_reg_1578");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter5_p_i_reg_1578, "ap_pipeline_reg_pp3_iter5_p_i_reg_1578");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter6_p_i_reg_1578, "ap_pipeline_reg_pp3_iter6_p_i_reg_1578");
    sc_trace(mVcdFile, tmp_6_fu_1037_p1, "tmp_6_fu_1037_p1");
    sc_trace(mVcdFile, tmp_6_reg_1582, "tmp_6_reg_1582");
    sc_trace(mVcdFile, x_4_fu_1046_p2, "x_4_fu_1046_p2");
    sc_trace(mVcdFile, lineBuffer_0_3_15_fu_1162_p6, "lineBuffer_0_3_15_fu_1162_p6");
    sc_trace(mVcdFile, lineBuffer_0_3_15_reg_1666, "lineBuffer_0_3_15_reg_1666");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter2, "ap_enable_reg_pp3_iter2");
    sc_trace(mVcdFile, lineBuffer_0_3_6_fu_1204_p3, "lineBuffer_0_3_6_fu_1204_p3");
    sc_trace(mVcdFile, lineBuffer_0_3_7_fu_1220_p3, "lineBuffer_0_3_7_fu_1220_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_10_fu_1278_p3, "lineBuffer_1_3_10_fu_1278_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_11_fu_1294_p3, "lineBuffer_1_3_11_fu_1294_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_19_fu_1310_p3, "lineBuffer_1_3_19_fu_1310_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_20_fu_1318_p3, "lineBuffer_1_3_20_fu_1318_p3");
    sc_trace(mVcdFile, grp_fu_1114_p2, "grp_fu_1114_p2");
    sc_trace(mVcdFile, tmp_8_1_1_i_reg_1701, "tmp_8_1_1_i_reg_1701");
    sc_trace(mVcdFile, grp_fu_1120_p2, "grp_fu_1120_p2");
    sc_trace(mVcdFile, tmp_8_1_2_i_reg_1706, "tmp_8_1_2_i_reg_1706");
    sc_trace(mVcdFile, grp_fu_1126_p2, "grp_fu_1126_p2");
    sc_trace(mVcdFile, tmp_8_2_i_reg_1711, "tmp_8_2_i_reg_1711");
    sc_trace(mVcdFile, grp_fu_1132_p2, "grp_fu_1132_p2");
    sc_trace(mVcdFile, tmp_8_2_1_i_reg_1716, "tmp_8_2_1_i_reg_1716");
    sc_trace(mVcdFile, grp_fu_1138_p2, "grp_fu_1138_p2");
    sc_trace(mVcdFile, tmp_8_2_2_i_reg_1721, "tmp_8_2_2_i_reg_1721");
    sc_trace(mVcdFile, tmp3_fu_1326_p2, "tmp3_fu_1326_p2");
    sc_trace(mVcdFile, tmp3_reg_1726, "tmp3_reg_1726");
    sc_trace(mVcdFile, tmp4_fu_1332_p2, "tmp4_fu_1332_p2");
    sc_trace(mVcdFile, tmp4_reg_1731, "tmp4_reg_1731");
    sc_trace(mVcdFile, tmp_data_V_fu_1370_p2, "tmp_data_V_fu_1370_p2");
    sc_trace(mVcdFile, tmp_last_V_fu_1377_p2, "tmp_last_V_fu_1377_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter3, "ap_enable_reg_pp3_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter4, "ap_enable_reg_pp3_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter5, "ap_enable_reg_pp3_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter6, "ap_enable_reg_pp3_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter7, "ap_enable_reg_pp3_iter7");
    sc_trace(mVcdFile, indvar_flatten_reg_382, "indvar_flatten_reg_382");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, y3_reg_393, "y3_reg_393");
    sc_trace(mVcdFile, window_2_1_1_reg_404, "window_2_1_1_reg_404");
    sc_trace(mVcdFile, window_1_2_1_reg_416, "window_1_2_1_reg_416");
    sc_trace(mVcdFile, window_1_1_1_reg_428, "window_1_1_1_reg_428");
    sc_trace(mVcdFile, x4_reg_440, "x4_reg_440");
    sc_trace(mVcdFile, window_2_0_phi_fu_547_p4, "window_2_0_phi_fu_547_p4");
    sc_trace(mVcdFile, window_1_1_phi_fu_558_p4, "window_1_1_phi_fu_558_p4");
    sc_trace(mVcdFile, window_1_0_phi_fu_569_p4, "window_1_0_phi_fu_569_p4");
    sc_trace(mVcdFile, window_2_2_2_fu_142, "window_2_2_2_fu_142");
    sc_trace(mVcdFile, window_2_2_5_fu_842_p3, "window_2_2_5_fu_842_p3");
    sc_trace(mVcdFile, window_0_0_read_as_fu_146, "window_0_0_read_as_fu_146");
    sc_trace(mVcdFile, window_0_0_fu_150, "window_0_0_fu_150");
    sc_trace(mVcdFile, window_0_1_fu_154, "window_0_1_fu_154");
    sc_trace(mVcdFile, windowRightCol_0_fu_1149_p6, "windowRightCol_0_fu_1149_p6");
    sc_trace(mVcdFile, window_1_0_read_as_fu_158, "window_1_0_read_as_fu_158");
    sc_trace(mVcdFile, window_2_0_read_as_fu_162, "window_2_0_read_as_fu_162");
    sc_trace(mVcdFile, lineBuffer_0_3_5_fu_166, "lineBuffer_0_3_5_fu_166");
    sc_trace(mVcdFile, lineBuffer_0_3_14_fu_1244_p3, "lineBuffer_0_3_14_fu_1244_p3");
    sc_trace(mVcdFile, lineBuffer_0_3_8_fu_170, "lineBuffer_0_3_8_fu_170");
    sc_trace(mVcdFile, lineBuffer_0_3_13_fu_1236_p3, "lineBuffer_0_3_13_fu_1236_p3");
    sc_trace(mVcdFile, window_2_1_fu_174, "window_2_1_fu_174");
    sc_trace(mVcdFile, writeCount_1_fu_178, "writeCount_1_fu_178");
    sc_trace(mVcdFile, writeCount_fu_1341_p2, "writeCount_fu_1341_p2");
    sc_trace(mVcdFile, readCount_1_fu_182, "readCount_1_fu_182");
    sc_trace(mVcdFile, readCount_fu_925_p2, "readCount_fu_925_p2");
    sc_trace(mVcdFile, tmp_2_fu_591_p1, "tmp_2_fu_591_p1");
    sc_trace(mVcdFile, sel_tmp9_fu_647_p2, "sel_tmp9_fu_647_p2");
    sc_trace(mVcdFile, sel_tmp7_fu_642_p2, "sel_tmp7_fu_642_p2");
    sc_trace(mVcdFile, sel_tmp_fu_637_p2, "sel_tmp_fu_637_p2");
    sc_trace(mVcdFile, or_cond_fu_652_p2, "or_cond_fu_652_p2");
    sc_trace(mVcdFile, newSel_fu_658_p3, "newSel_fu_658_p3");
    sc_trace(mVcdFile, newSel2_fu_674_p3, "newSel2_fu_674_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_6_fu_690_p3, "lineBuffer_1_3_6_fu_690_p3");
    sc_trace(mVcdFile, exitcond_fu_726_p2, "exitcond_fu_726_p2");
    sc_trace(mVcdFile, cond1_mid1_fu_740_p2, "cond1_mid1_fu_740_p2");
    sc_trace(mVcdFile, cond1_fu_746_p2, "cond1_fu_746_p2");
    sc_trace(mVcdFile, y9_fu_760_p2, "y9_fu_760_p2");
    sc_trace(mVcdFile, x4_mid2_fu_732_p3, "x4_mid2_fu_732_p3");
    sc_trace(mVcdFile, cond2_fu_780_p2, "cond2_fu_780_p2");
    sc_trace(mVcdFile, cond1_mid2_fu_752_p3, "cond1_mid2_fu_752_p3");
    sc_trace(mVcdFile, lineBuffer_load37_ph_fu_786_p3, "lineBuffer_load37_ph_fu_786_p3");
    sc_trace(mVcdFile, lineBuffer_load38_ph_fu_794_p3, "lineBuffer_load38_ph_fu_794_p3");
    sc_trace(mVcdFile, window_1_1_2_fu_802_p3, "window_1_1_2_fu_802_p3");
    sc_trace(mVcdFile, window_2_2_3_fu_826_p3, "window_2_2_3_fu_826_p3");
    sc_trace(mVcdFile, window_2_2_4_fu_834_p3, "window_2_2_4_fu_834_p3");
    sc_trace(mVcdFile, window_2_2_fu_810_p3, "window_2_2_fu_810_p3");
    sc_trace(mVcdFile, window_2_2_1_fu_818_p3, "window_2_2_1_fu_818_p3");
    sc_trace(mVcdFile, tmp_7_fu_909_p4, "tmp_7_fu_909_p4");
    sc_trace(mVcdFile, exitcond2_fu_939_p2, "exitcond2_fu_939_p2");
    sc_trace(mVcdFile, y_s_fu_953_p2, "y_s_fu_953_p2");
    sc_trace(mVcdFile, tmp_i_mid1_fu_959_p2, "tmp_i_mid1_fu_959_p2");
    sc_trace(mVcdFile, tmp_i_fu_965_p2, "tmp_i_fu_965_p2");
    sc_trace(mVcdFile, tmp_2_i_mid1_fu_979_p2, "tmp_2_i_mid1_fu_979_p2");
    sc_trace(mVcdFile, tmp_2_i_fu_985_p2, "tmp_2_i_fu_985_p2");
    sc_trace(mVcdFile, x_assign_mid2_fu_945_p3, "x_assign_mid2_fu_945_p3");
    sc_trace(mVcdFile, tmp_i_15_fu_1007_p2, "tmp_i_15_fu_1007_p2");
    sc_trace(mVcdFile, tmp_i_mid2_fu_971_p3, "tmp_i_mid2_fu_971_p3");
    sc_trace(mVcdFile, tmp_1_i_fu_1013_p2, "tmp_1_i_fu_1013_p2");
    sc_trace(mVcdFile, tmp_2_i_mid2_fu_991_p3, "tmp_2_i_mid2_fu_991_p3");
    sc_trace(mVcdFile, tmp2_fu_1025_p2, "tmp2_fu_1025_p2");
    sc_trace(mVcdFile, tmp1_fu_1019_p2, "tmp1_fu_1019_p2");
    sc_trace(mVcdFile, sel_tmp4_fu_1185_p2, "sel_tmp4_fu_1185_p2");
    sc_trace(mVcdFile, sel_tmp3_fu_1180_p2, "sel_tmp3_fu_1180_p2");
    sc_trace(mVcdFile, sel_tmp2_fu_1175_p2, "sel_tmp2_fu_1175_p2");
    sc_trace(mVcdFile, or_cond2_fu_1190_p2, "or_cond2_fu_1190_p2");
    sc_trace(mVcdFile, newSel4_fu_1196_p3, "newSel4_fu_1196_p3");
    sc_trace(mVcdFile, newSel6_fu_1212_p3, "newSel6_fu_1212_p3");
    sc_trace(mVcdFile, lineBuffer_0_3_9_fu_1228_p3, "lineBuffer_0_3_9_fu_1228_p3");
    sc_trace(mVcdFile, newSel8_fu_1270_p3, "newSel8_fu_1270_p3");
    sc_trace(mVcdFile, newSel1_fu_1286_p3, "newSel1_fu_1286_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_18_fu_1302_p3, "lineBuffer_1_3_18_fu_1302_p3");
    sc_trace(mVcdFile, grp_fu_1096_p2, "grp_fu_1096_p2");
    sc_trace(mVcdFile, grp_fu_1090_p2, "grp_fu_1090_p2");
    sc_trace(mVcdFile, grp_fu_1102_p2, "grp_fu_1102_p2");
    sc_trace(mVcdFile, grp_fu_1108_p2, "grp_fu_1108_p2");
    sc_trace(mVcdFile, tmp7_fu_1355_p2, "tmp7_fu_1355_p2");
    sc_trace(mVcdFile, tmp8_fu_1359_p2, "tmp8_fu_1359_p2");
    sc_trace(mVcdFile, tmp6_fu_1351_p2, "tmp6_fu_1351_p2");
    sc_trace(mVcdFile, tmp9_fu_1364_p2, "tmp9_fu_1364_p2");
    sc_trace(mVcdFile, tmp5_fu_1347_p2, "tmp5_fu_1347_p2");
    sc_trace(mVcdFile, grp_fu_1090_ce, "grp_fu_1090_ce");
    sc_trace(mVcdFile, grp_fu_1096_ce, "grp_fu_1096_ce");
    sc_trace(mVcdFile, grp_fu_1102_ce, "grp_fu_1102_ce");
    sc_trace(mVcdFile, grp_fu_1108_ce, "grp_fu_1108_ce");
    sc_trace(mVcdFile, grp_fu_1114_ce, "grp_fu_1114_ce");
    sc_trace(mVcdFile, grp_fu_1120_ce, "grp_fu_1120_ce");
    sc_trace(mVcdFile, grp_fu_1126_ce, "grp_fu_1126_ce");
    sc_trace(mVcdFile, grp_fu_1132_ce, "grp_fu_1132_ce");
    sc_trace(mVcdFile, grp_fu_1138_ce, "grp_fu_1138_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_condition_1897, "ap_condition_1897");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_condition_988, "ap_condition_988");
#endif

    }
    mHdltvinHandle.open("cnn_2d_conv_d4x4_k3x3.hdltvin.dat");
    mHdltvoutHandle.open("cnn_2d_conv_d4x4_k3x3.hdltvout.dat");
}

cnn_2d_conv_d4x4_k3x3::~cnn_2d_conv_d4x4_k3x3() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U;
    delete cnn_2d_conv_d4x4_bkb_U0;
    delete cnn_2d_conv_d4x4_bkb_U1;
    delete cnn_2d_conv_d4x4_bkb_U2;
    delete cnn_2d_conv_d4x4_bkb_U3;
    delete cnn_2d_conv_d4x4_bkb_U4;
    delete cnn_2d_conv_d4x4_bkb_U5;
    delete cnn_2d_conv_d4x4_bkb_U6;
    delete cnn_2d_conv_d4x4_bkb_U7;
    delete cnn_2d_conv_d4x4_bkb_U8;
    delete cnn_2d_conv_d4x4_cud_U9;
    delete cnn_2d_conv_d4x4_cud_U10;
}

void cnn_2d_conv_d4x4_k3x3::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void cnn_2d_conv_d4x4_k3x3::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1389.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_585_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1389.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_585_p2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1389.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_585_p2.read())))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1414.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_621_p2.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1414.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_621_p2.read()))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read())) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1414.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_621_p2.read())))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_894_p2.read()))) {
            ap_enable_reg_pp3_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
            ap_enable_reg_pp3_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
            ap_enable_reg_pp3_iter1 = ap_enable_reg_pp3_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
            ap_enable_reg_pp3_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter2 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter2 = ap_enable_reg_pp3_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_988.read(), ap_const_boolean_1)) {
            if (!esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read())) {
                ap_enable_reg_pp3_iter3 = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read())) {
                ap_enable_reg_pp3_iter3 = ap_enable_reg_pp3_iter2.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter4 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter4 = ap_enable_reg_pp3_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter5 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter5 = ap_enable_reg_pp3_iter4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter6 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter6 = ap_enable_reg_pp3_iter5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter7 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter7 = ap_enable_reg_pp3_iter6.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter8 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter8 = ap_enable_reg_pp3_iter7.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter9 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter9 = ap_enable_reg_pp3_iter8.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
            ap_enable_reg_pp3_iter9 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_out.read()))) {
            inStream_V_data_V_0_sel_rd =  (sc_logic) (~inStream_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_in.read()))) {
            inStream_V_data_V_0_sel_wr =  (sc_logic) (~inStream_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            inStream_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            inStream_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_out.read()))))) {
            inStream_V_data_V_0_state = ap_const_lv2_3;
        } else {
            inStream_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, inStream_V_dest_V_0_state.read())))) {
            inStream_V_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, inStream_V_dest_V_0_state.read())))) {
            inStream_V_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, inStream_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, inStream_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_ack_out.read()))))) {
            inStream_V_dest_V_0_state = ap_const_lv2_3;
        } else {
            inStream_V_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        indvar_flatten6_reg_451 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_894_p2.read()))) {
        indvar_flatten6_reg_451 = indvar_flatten_next7_fu_900_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        indvar_flatten_reg_382 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_714_p2.read()))) {
        indvar_flatten_reg_382 = indvar_flatten_next_fu_720_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        lineBuffer_0_2_s_reg_534 = lineBuffer_0_2_reg_300.read();
    } else if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1554.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()))) {
        lineBuffer_0_2_s_reg_534 = lineBuffer_0_3_7_fu_1220_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        lineBuffer_0_3_3_reg_524 = lineBuffer_0_3_reg_288.read();
    } else if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1554.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()))) {
        lineBuffer_0_3_3_reg_524 = lineBuffer_0_3_6_fu_1204_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        lineBuffer_1_2_3_reg_494 = lineBuffer_1_2_reg_335.read();
    } else if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1554.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()))) {
        lineBuffer_1_2_3_reg_494 = lineBuffer_1_3_11_fu_1294_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        lineBuffer_1_3_17_reg_504 = lineBuffer_1_3_5_reg_347.read();
    } else if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1554.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()))) {
        lineBuffer_1_3_17_reg_504 = lineBuffer_1_3_19_fu_1310_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        lineBuffer_1_3_1_reg_514 = lineBuffer_1_3_8_reg_359.read();
    } else if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1554.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()))) {
        lineBuffer_1_3_1_reg_514 = lineBuffer_1_3_20_fu_1318_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        lineBuffer_1_3_3_reg_484 = lineBuffer_1_3_reg_323.read();
    } else if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1554.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()))) {
        lineBuffer_1_3_3_reg_484 = lineBuffer_1_3_10_fu_1278_p3.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_out.read()))) {
            outStream_V_data_V_1_sel_rd =  (sc_logic) (~outStream_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_in.read()))) {
            outStream_V_data_V_1_sel_wr =  (sc_logic) (~outStream_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_data_V_1_state.read())))) {
            outStream_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_data_V_1_state.read())))) {
            outStream_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_out.read()))))) {
            outStream_V_data_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_dest_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_vld_out.read()))) {
            outStream_V_dest_V_1_sel_rd =  (sc_logic) (~outStream_V_dest_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_dest_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_dest_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_dest_V_1_state.read())))) {
            outStream_V_dest_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_dest_V_1_state.read())))) {
            outStream_V_dest_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_dest_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_ack_out.read()))))) {
            outStream_V_dest_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_dest_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_id_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_vld_out.read()))) {
            outStream_V_id_V_1_sel_rd =  (sc_logic) (~outStream_V_id_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_id_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_id_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_id_V_1_state.read())))) {
            outStream_V_id_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_id_V_1_state.read())))) {
            outStream_V_id_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_id_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_ack_out.read()))))) {
            outStream_V_id_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_id_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_vld_out.read()))) {
            outStream_V_keep_V_1_sel_rd =  (sc_logic) (~outStream_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_keep_V_1_state.read())))) {
            outStream_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_keep_V_1_state.read())))) {
            outStream_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_ack_out.read()))))) {
            outStream_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_out.read()))) {
            outStream_V_last_V_1_sel_rd =  (sc_logic) (~outStream_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_in.read()))) {
            outStream_V_last_V_1_sel_wr =  (sc_logic) (~outStream_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_last_V_1_state.read())))) {
            outStream_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_last_V_1_state.read())))) {
            outStream_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_out.read()))))) {
            outStream_V_last_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_strb_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_vld_out.read()))) {
            outStream_V_strb_V_1_sel_rd =  (sc_logic) (~outStream_V_strb_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_strb_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_strb_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_strb_V_1_state.read())))) {
            outStream_V_strb_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_strb_V_1_state.read())))) {
            outStream_V_strb_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_strb_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_ack_out.read()))))) {
            outStream_V_strb_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_strb_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_vld_out.read()))) {
            outStream_V_user_V_1_sel_rd =  (sc_logic) (~outStream_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_user_V_1_state.read())))) {
            outStream_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_user_V_1_state.read())))) {
            outStream_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_ack_out.read()))))) {
            outStream_V_user_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_894_p2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_919_p2.read()))) {
        readCount_1_fu_182 = readCount_fu_925_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        readCount_1_fu_182 = ap_const_lv32_6;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        window_1_0_reg_566 = window_1_1_1_reg_428.read();
    } else if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1554.read()))) {
        window_1_0_reg_566 = window_1_1_reg_555.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        window_1_1_reg_555 = window_1_2_1_reg_416.read();
    } else if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1554.read()))) {
        window_1_1_reg_555 = lineBuffer_0_3_15_reg_1666.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        window_2_0_reg_544 = window_2_1_1_reg_404.read();
    } else if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1554.read()))) {
        window_2_0_reg_544 = ap_pipeline_reg_pp3_iter2_window_2_1_2_reg_1567.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1554.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1563.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        window_2_1_fu_174 = inStream_V_data_V_0_data_out.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        window_2_1_fu_174 = window_2_2_2_fu_142.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        writeCount_1_fu_178 = writeCount_fu_1341_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        writeCount_1_fu_178 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        x1_reg_371 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1414.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_621_p2.read()))) {
        x1_reg_371 = x_2_fu_627_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        x4_reg_440 = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_714_p2.read()))) {
        x4_reg_440 = x_3_fu_774_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        x_assign_reg_473 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1554.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        x_assign_reg_473 = x_4_fu_1046_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1389.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_585_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        x_reg_312 = x_1_fu_601_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        x_reg_312 = ap_const_lv3_2;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        y3_reg_393 = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_714_p2.read()))) {
        y3_reg_393 = y3_mid2_fu_766_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        y_assign_reg_462 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1554.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        y_assign_reg_462 = y_assign_mid2_fu_999_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1554 = exitcond_flatten8_reg_1554.read();
        exitcond_flatten8_reg_1554 = exitcond_flatten8_fu_894_p2.read();
    }
    if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
        ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1554 = ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1554.read();
        ap_pipeline_reg_pp3_iter2_p_i_reg_1578 = p_i_reg_1578.read();
        ap_pipeline_reg_pp3_iter2_window_2_1_2_reg_1567 = window_2_1_2_reg_1567.read();
        ap_pipeline_reg_pp3_iter3_p_i_reg_1578 = ap_pipeline_reg_pp3_iter2_p_i_reg_1578.read();
        ap_pipeline_reg_pp3_iter4_p_i_reg_1578 = ap_pipeline_reg_pp3_iter3_p_i_reg_1578.read();
        ap_pipeline_reg_pp3_iter5_p_i_reg_1578 = ap_pipeline_reg_pp3_iter4_p_i_reg_1578.read();
        ap_pipeline_reg_pp3_iter6_p_i_reg_1578 = ap_pipeline_reg_pp3_iter5_p_i_reg_1578.read();
        ap_pipeline_reg_pp3_iter7_p_i_reg_1578 = ap_pipeline_reg_pp3_iter6_p_i_reg_1578.read();
        ap_pipeline_reg_pp3_iter8_p_i_reg_1578 = ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1389.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_585_p2.read()))) {
        cond_reg_1393 = cond_fu_595_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1389.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)))) {
        exitcond1_reg_1389 = exitcond1_fu_585_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1414.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)))) {
        exitcond4_reg_1414 = exitcond4_fu_621_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_894_p2.read()))) {
        icmp_reg_1563 = icmp_fu_919_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_load_A.read())) {
        inStream_V_data_V_0_payload_A = inStream_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_load_B.read())) {
        inStream_V_data_V_0_payload_B = inStream_TDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1389.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1389.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)))) {
        lineBuffer_0_2_reg_300 = lineBuffer_0_3_4_fu_614_p3.read();
        lineBuffer_0_3_reg_288 = lineBuffer_0_3_1_fu_607_p3.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1554.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()))) {
        lineBuffer_0_3_15_reg_1666 = lineBuffer_0_3_15_fu_1162_p6.read();
        lineBuffer_0_3_5_fu_166 = lineBuffer_0_3_14_fu_1244_p3.read();
        lineBuffer_0_3_8_fu_170 = lineBuffer_0_3_13_fu_1236_p3.read();
        window_0_1_fu_154 = windowRightCol_0_fu_1149_p6.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1414.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1414.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)))) {
        lineBuffer_1_2_reg_335 = lineBuffer_1_3_4_fu_682_p3.read();
        lineBuffer_1_3_5_reg_347 = lineBuffer_1_3_7_fu_698_p3.read();
        lineBuffer_1_3_8_reg_359 = lineBuffer_1_3_9_fu_706_p3.read();
        lineBuffer_1_3_reg_323 = lineBuffer_1_3_2_fu_666_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_load_A.read())) {
        outStream_V_data_V_1_payload_A = tmp_data_V_fu_1370_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_load_B.read())) {
        outStream_V_data_V_1_payload_B = tmp_data_V_fu_1370_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_load_A.read())) {
        outStream_V_last_V_1_payload_A = tmp_last_V_fu_1377_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_load_B.read())) {
        outStream_V_last_V_1_payload_B = tmp_last_V_fu_1377_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1554.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        p_i_reg_1578 = p_i_fu_1031_p2.read();
        tmp_6_reg_1582 = tmp_6_fu_1037_p1.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter6_p_i_reg_1578.read()))) {
        tmp3_reg_1726 = tmp3_fu_1326_p2.read();
        tmp4_reg_1731 = tmp4_fu_1332_p2.read();
        tmp_8_1_1_i_reg_1701 = grp_fu_1114_p2.read();
        tmp_8_1_2_i_reg_1706 = grp_fu_1120_p2.read();
        tmp_8_2_1_i_reg_1716 = grp_fu_1132_p2.read();
        tmp_8_2_2_i_reg_1721 = grp_fu_1138_p2.read();
        tmp_8_2_i_reg_1711 = grp_fu_1126_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1414.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_621_p2.read()))) {
        tmp_3_reg_1423 = tmp_3_fu_633_p1.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()))) {
        window_0_0_fu_150 = window_0_1_fu_154.read();
        window_0_0_read_as_fu_146 = window_0_0_fu_150.read();
        window_1_0_read_as_fu_158 = window_1_0_phi_fu_569_p4.read();
        window_2_0_read_as_fu_162 = window_2_0_phi_fu_547_p4.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_714_p2.read()))) {
        window_1_1_1_reg_428 = window_2_2_8_fu_866_p3.read();
        window_1_2_1_reg_416 = window_2_2_7_fu_858_p3.read();
        window_2_1_1_reg_404 = window_2_2_6_fu_850_p3.read();
        window_2_2_2_fu_142 = window_2_2_5_fu_842_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        window_2_1_2_reg_1567 = window_2_1_fu_174.read();
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(1, 1);
}

void cnn_2d_conv_d4x4_k3x3::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read().range(3, 3);
}

void cnn_2d_conv_d4x4_k3x3::thread_ap_CS_fsm_pp3_stage0() {
    ap_CS_fsm_pp3_stage0 = ap_CS_fsm.read().range(7, 7);
}

void cnn_2d_conv_d4x4_k3x3::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void cnn_2d_conv_d4x4_k3x3::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read().range(8, 8);
}

void cnn_2d_conv_d4x4_k3x3::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(2, 2);
}

void cnn_2d_conv_d4x4_k3x3::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read().range(4, 4);
}

void cnn_2d_conv_d4x4_k3x3::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read().range(5, 5);
}

void cnn_2d_conv_d4x4_k3x3::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read().range(6, 6);
}

void cnn_2d_conv_d4x4_k3x3::thread_ap_condition_1897() {
    ap_condition_1897 = (esl_seteq<1,1,1>(outStream_V_data_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_user_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_dest_V_1_ack_in.read(), ap_const_logic_0));
}

void cnn_2d_conv_d4x4_k3x3::thread_ap_condition_977() {
    ap_condition_977 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1554.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1563.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0));
}

void cnn_2d_conv_d4x4_k3x3::thread_ap_condition_988() {
    ap_condition_988 = !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())));
}

void cnn_2d_conv_d4x4_k3x3::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state20.read()) && 
         !esl_seteq<1,1,1>(ap_condition_1897.read(), ap_const_boolean_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state20.read()) && 
         !esl_seteq<1,1,1>(ap_condition_1897.read(), ap_const_boolean_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_cond1_fu_746_p2() {
    cond1_fu_746_p2 = (!y3_reg_393.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(y3_reg_393.read() == ap_const_lv2_1);
}

void cnn_2d_conv_d4x4_k3x3::thread_cond1_mid1_fu_740_p2() {
    cond1_mid1_fu_740_p2 = (!y3_reg_393.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(y3_reg_393.read() == ap_const_lv2_0);
}

void cnn_2d_conv_d4x4_k3x3::thread_cond1_mid2_fu_752_p3() {
    cond1_mid2_fu_752_p3 = (!exitcond_fu_726_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond_fu_726_p2.read()[0].to_bool())? cond1_mid1_fu_740_p2.read(): cond1_fu_746_p2.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_cond2_fu_780_p2() {
    cond2_fu_780_p2 = (!x4_mid2_fu_732_p3.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(x4_mid2_fu_732_p3.read() == ap_const_lv2_1);
}

void cnn_2d_conv_d4x4_k3x3::thread_cond_fu_595_p2() {
    cond_fu_595_p2 = (!tmp_2_fu_591_p1.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(tmp_2_fu_591_p1.read() == ap_const_lv2_2);
}

void cnn_2d_conv_d4x4_k3x3::thread_exitcond1_fu_585_p2() {
    exitcond1_fu_585_p2 = (!x_reg_312.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(x_reg_312.read() == ap_const_lv3_4);
}

void cnn_2d_conv_d4x4_k3x3::thread_exitcond2_fu_939_p2() {
    exitcond2_fu_939_p2 = (!x_assign_reg_473.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(x_assign_reg_473.read() == ap_const_lv3_4);
}

void cnn_2d_conv_d4x4_k3x3::thread_exitcond4_fu_621_p2() {
    exitcond4_fu_621_p2 = (!x1_reg_371.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(x1_reg_371.read() == ap_const_lv3_4);
}

void cnn_2d_conv_d4x4_k3x3::thread_exitcond_flatten8_fu_894_p2() {
    exitcond_flatten8_fu_894_p2 = (!indvar_flatten6_reg_451.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten6_reg_451.read() == ap_const_lv5_10);
}

void cnn_2d_conv_d4x4_k3x3::thread_exitcond_flatten_fu_714_p2() {
    exitcond_flatten_fu_714_p2 = (!indvar_flatten_reg_382.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_382.read() == ap_const_lv3_4);
}

void cnn_2d_conv_d4x4_k3x3::thread_exitcond_fu_726_p2() {
    exitcond_fu_726_p2 = (!x4_reg_440.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(x4_reg_440.read() == ap_const_lv2_3);
}

void cnn_2d_conv_d4x4_k3x3::thread_grp_fu_1090_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fu_1090_ce = ap_const_logic_1;
    } else {
        grp_fu_1090_ce = ap_const_logic_0;
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_grp_fu_1096_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fu_1096_ce = ap_const_logic_1;
    } else {
        grp_fu_1096_ce = ap_const_logic_0;
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_grp_fu_1102_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fu_1102_ce = ap_const_logic_1;
    } else {
        grp_fu_1102_ce = ap_const_logic_0;
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_grp_fu_1108_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fu_1108_ce = ap_const_logic_1;
    } else {
        grp_fu_1108_ce = ap_const_logic_0;
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_grp_fu_1114_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fu_1114_ce = ap_const_logic_1;
    } else {
        grp_fu_1114_ce = ap_const_logic_0;
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_grp_fu_1120_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fu_1120_ce = ap_const_logic_1;
    } else {
        grp_fu_1120_ce = ap_const_logic_0;
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_grp_fu_1126_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fu_1126_ce = ap_const_logic_1;
    } else {
        grp_fu_1126_ce = ap_const_logic_0;
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_grp_fu_1132_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fu_1132_ce = ap_const_logic_1;
    } else {
        grp_fu_1132_ce = ap_const_logic_0;
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_grp_fu_1138_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fu_1138_ce = ap_const_logic_1;
    } else {
        grp_fu_1138_ce = ap_const_logic_0;
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_icmp_fu_919_p2() {
    icmp_fu_919_p2 = (!tmp_7_fu_909_p4.read().is_01() || !ap_const_lv28_1.is_01())? sc_lv<1>(): (sc_bigint<28>(tmp_7_fu_909_p4.read()) < sc_bigint<28>(ap_const_lv28_1));
}

void cnn_2d_conv_d4x4_k3x3::thread_inStream_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1389.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1414.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1554.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1563.read())))) {
        inStream_TDATA_blk_n =  (sc_logic) (inStream_V_data_V_0_state.read()[0]);
    } else {
        inStream_TDATA_blk_n = ap_const_logic_1;
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_inStream_TREADY() {
    inStream_TREADY =  (sc_logic) (inStream_V_dest_V_0_state.read()[1]);
}

void cnn_2d_conv_d4x4_k3x3::thread_inStream_V_data_V_0_ack_in() {
    inStream_V_data_V_0_ack_in =  (sc_logic) (inStream_V_data_V_0_state.read()[1]);
}

void cnn_2d_conv_d4x4_k3x3::thread_inStream_V_data_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1389.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1389.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1414.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1414.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1554.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1563.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))))) {
        inStream_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        inStream_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_inStream_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_sel.read())) {
        inStream_V_data_V_0_data_out = inStream_V_data_V_0_payload_B.read();
    } else {
        inStream_V_data_V_0_data_out = inStream_V_data_V_0_payload_A.read();
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_inStream_V_data_V_0_load_A() {
    inStream_V_data_V_0_load_A = (inStream_V_data_V_0_state_cmp_full.read() & ~inStream_V_data_V_0_sel_wr.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_inStream_V_data_V_0_load_B() {
    inStream_V_data_V_0_load_B = (inStream_V_data_V_0_sel_wr.read() & inStream_V_data_V_0_state_cmp_full.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_inStream_V_data_V_0_sel() {
    inStream_V_data_V_0_sel = inStream_V_data_V_0_sel_rd.read();
}

void cnn_2d_conv_d4x4_k3x3::thread_inStream_V_data_V_0_state_cmp_full() {
    inStream_V_data_V_0_state_cmp_full =  (sc_logic) ((!inStream_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(inStream_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void cnn_2d_conv_d4x4_k3x3::thread_inStream_V_data_V_0_vld_in() {
    inStream_V_data_V_0_vld_in = inStream_TVALID.read();
}

void cnn_2d_conv_d4x4_k3x3::thread_inStream_V_data_V_0_vld_out() {
    inStream_V_data_V_0_vld_out =  (sc_logic) (inStream_V_data_V_0_state.read()[0]);
}

void cnn_2d_conv_d4x4_k3x3::thread_inStream_V_dest_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1389.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1389.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1414.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1414.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1554.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1563.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))))) {
        inStream_V_dest_V_0_ack_out = ap_const_logic_1;
    } else {
        inStream_V_dest_V_0_ack_out = ap_const_logic_0;
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_inStream_V_dest_V_0_vld_in() {
    inStream_V_dest_V_0_vld_in = inStream_TVALID.read();
}

void cnn_2d_conv_d4x4_k3x3::thread_indvar_flatten_next7_fu_900_p2() {
    indvar_flatten_next7_fu_900_p2 = (!indvar_flatten6_reg_451.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(indvar_flatten6_reg_451.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void cnn_2d_conv_d4x4_k3x3::thread_indvar_flatten_next_fu_720_p2() {
    indvar_flatten_next_fu_720_p2 = (!indvar_flatten_reg_382.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(indvar_flatten_reg_382.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void cnn_2d_conv_d4x4_k3x3::thread_lineBuffer_0_3_13_fu_1236_p3() {
    lineBuffer_0_3_13_fu_1236_p3 = (!sel_tmp4_fu_1185_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp4_fu_1185_p2.read()[0].to_bool())? lineBuffer_0_3_8_fu_170.read(): lineBuffer_0_3_9_fu_1228_p3.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_lineBuffer_0_3_14_fu_1244_p3() {
    lineBuffer_0_3_14_fu_1244_p3 = (!sel_tmp4_fu_1185_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp4_fu_1185_p2.read()[0].to_bool())? lineBuffer_0_3_15_fu_1162_p6.read(): lineBuffer_0_3_5_fu_166.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_lineBuffer_0_3_1_fu_607_p3() {
    lineBuffer_0_3_1_fu_607_p3 = (!cond_reg_1393.read()[0].is_01())? sc_lv<32>(): ((cond_reg_1393.read()[0].to_bool())? lineBuffer_0_3_reg_288.read(): inStream_V_data_V_0_data_out.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_lineBuffer_0_3_4_fu_614_p3() {
    lineBuffer_0_3_4_fu_614_p3 = (!cond_reg_1393.read()[0].is_01())? sc_lv<32>(): ((cond_reg_1393.read()[0].to_bool())? inStream_V_data_V_0_data_out.read(): lineBuffer_0_2_reg_300.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_lineBuffer_0_3_6_fu_1204_p3() {
    lineBuffer_0_3_6_fu_1204_p3 = (!or_cond2_fu_1190_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond2_fu_1190_p2.read()[0].to_bool())? lineBuffer_0_3_3_reg_524.read(): newSel4_fu_1196_p3.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_lineBuffer_0_3_7_fu_1220_p3() {
    lineBuffer_0_3_7_fu_1220_p3 = (!or_cond2_fu_1190_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond2_fu_1190_p2.read()[0].to_bool())? lineBuffer_0_2_s_reg_534.read(): newSel6_fu_1212_p3.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_lineBuffer_0_3_9_fu_1228_p3() {
    lineBuffer_0_3_9_fu_1228_p3 = (!sel_tmp3_fu_1180_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp3_fu_1180_p2.read()[0].to_bool())? lineBuffer_0_3_15_fu_1162_p6.read(): lineBuffer_0_3_8_fu_170.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_lineBuffer_1_3_10_fu_1278_p3() {
    lineBuffer_1_3_10_fu_1278_p3 = (!or_cond2_fu_1190_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond2_fu_1190_p2.read()[0].to_bool())? lineBuffer_1_3_3_reg_484.read(): newSel8_fu_1270_p3.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_lineBuffer_1_3_11_fu_1294_p3() {
    lineBuffer_1_3_11_fu_1294_p3 = (!or_cond2_fu_1190_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond2_fu_1190_p2.read()[0].to_bool())? lineBuffer_1_2_3_reg_494.read(): newSel1_fu_1286_p3.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_lineBuffer_1_3_18_fu_1302_p3() {
    lineBuffer_1_3_18_fu_1302_p3 = (!sel_tmp3_fu_1180_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp3_fu_1180_p2.read()[0].to_bool())? window_2_1_fu_174.read(): lineBuffer_1_3_17_reg_504.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_lineBuffer_1_3_19_fu_1310_p3() {
    lineBuffer_1_3_19_fu_1310_p3 = (!sel_tmp4_fu_1185_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp4_fu_1185_p2.read()[0].to_bool())? lineBuffer_1_3_17_reg_504.read(): lineBuffer_1_3_18_fu_1302_p3.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_lineBuffer_1_3_20_fu_1318_p3() {
    lineBuffer_1_3_20_fu_1318_p3 = (!sel_tmp4_fu_1185_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp4_fu_1185_p2.read()[0].to_bool())? window_2_1_fu_174.read(): lineBuffer_1_3_1_reg_514.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_lineBuffer_1_3_2_fu_666_p3() {
    lineBuffer_1_3_2_fu_666_p3 = (!or_cond_fu_652_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond_fu_652_p2.read()[0].to_bool())? lineBuffer_1_3_reg_323.read(): newSel_fu_658_p3.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_lineBuffer_1_3_4_fu_682_p3() {
    lineBuffer_1_3_4_fu_682_p3 = (!or_cond_fu_652_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond_fu_652_p2.read()[0].to_bool())? lineBuffer_1_2_reg_335.read(): newSel2_fu_674_p3.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_lineBuffer_1_3_6_fu_690_p3() {
    lineBuffer_1_3_6_fu_690_p3 = (!sel_tmp7_fu_642_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp7_fu_642_p2.read()[0].to_bool())? inStream_V_data_V_0_data_out.read(): lineBuffer_1_3_5_reg_347.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_lineBuffer_1_3_7_fu_698_p3() {
    lineBuffer_1_3_7_fu_698_p3 = (!sel_tmp9_fu_647_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp9_fu_647_p2.read()[0].to_bool())? lineBuffer_1_3_5_reg_347.read(): lineBuffer_1_3_6_fu_690_p3.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_lineBuffer_1_3_9_fu_706_p3() {
    lineBuffer_1_3_9_fu_706_p3 = (!sel_tmp9_fu_647_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp9_fu_647_p2.read()[0].to_bool())? inStream_V_data_V_0_data_out.read(): lineBuffer_1_3_8_reg_359.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_lineBuffer_load37_ph_fu_786_p3() {
    lineBuffer_load37_ph_fu_786_p3 = (!cond2_fu_780_p2.read()[0].is_01())? sc_lv<32>(): ((cond2_fu_780_p2.read()[0].to_bool())? lineBuffer_0_2_reg_300.read(): lineBuffer_0_3_reg_288.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_lineBuffer_load38_ph_fu_794_p3() {
    lineBuffer_load38_ph_fu_794_p3 = (!cond2_fu_780_p2.read()[0].is_01())? sc_lv<32>(): ((cond2_fu_780_p2.read()[0].to_bool())? lineBuffer_1_2_reg_335.read(): lineBuffer_1_3_reg_323.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_newSel1_fu_1286_p3() {
    newSel1_fu_1286_p3 = (!sel_tmp2_fu_1175_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp2_fu_1175_p2.read()[0].to_bool())? window_2_1_fu_174.read(): lineBuffer_1_2_3_reg_494.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_newSel2_fu_674_p3() {
    newSel2_fu_674_p3 = (!sel_tmp_fu_637_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp_fu_637_p2.read()[0].to_bool())? inStream_V_data_V_0_data_out.read(): lineBuffer_1_2_reg_335.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_newSel4_fu_1196_p3() {
    newSel4_fu_1196_p3 = (!sel_tmp2_fu_1175_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp2_fu_1175_p2.read()[0].to_bool())? lineBuffer_0_3_3_reg_524.read(): lineBuffer_0_3_15_fu_1162_p6.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_newSel6_fu_1212_p3() {
    newSel6_fu_1212_p3 = (!sel_tmp2_fu_1175_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp2_fu_1175_p2.read()[0].to_bool())? lineBuffer_0_3_15_fu_1162_p6.read(): lineBuffer_0_2_s_reg_534.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_newSel8_fu_1270_p3() {
    newSel8_fu_1270_p3 = (!sel_tmp2_fu_1175_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp2_fu_1175_p2.read()[0].to_bool())? lineBuffer_1_3_3_reg_484.read(): window_2_1_fu_174.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_newSel_fu_658_p3() {
    newSel_fu_658_p3 = (!sel_tmp_fu_637_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp_fu_637_p2.read()[0].to_bool())? lineBuffer_1_3_reg_323.read(): inStream_V_data_V_0_data_out.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_or_cond2_fu_1190_p2() {
    or_cond2_fu_1190_p2 = (sel_tmp4_fu_1185_p2.read() | sel_tmp3_fu_1180_p2.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_or_cond_fu_652_p2() {
    or_cond_fu_652_p2 = (sel_tmp9_fu_647_p2.read() | sel_tmp7_fu_642_p2.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_TDATA() {
    outStream_TDATA = outStream_V_data_V_1_data_out.read();
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read())))) {
        outStream_TDATA_blk_n =  (sc_logic) (outStream_V_data_V_1_state.read()[1]);
    } else {
        outStream_TDATA_blk_n = ap_const_logic_1;
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_TDEST() {
    outStream_TDEST = outStream_V_dest_V_1_data_out.read();
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_TID() {
    outStream_TID = outStream_V_id_V_1_data_out.read();
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_TKEEP() {
    outStream_TKEEP = outStream_V_keep_V_1_data_out.read();
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_TLAST() {
    outStream_TLAST = outStream_V_last_V_1_data_out.read();
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_TSTRB() {
    outStream_TSTRB = outStream_V_strb_V_1_data_out.read();
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_TUSER() {
    outStream_TUSER = outStream_V_user_V_1_data_out.read();
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_TVALID() {
    outStream_TVALID =  (sc_logic) (outStream_V_dest_V_1_state.read()[0]);
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_data_V_1_ack_in() {
    outStream_V_data_V_1_ack_in =  (sc_logic) (outStream_V_data_V_1_state.read()[1]);
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_data_V_1_ack_out() {
    outStream_V_data_V_1_ack_out = outStream_TREADY.read();
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_sel.read())) {
        outStream_V_data_V_1_data_out = outStream_V_data_V_1_payload_B.read();
    } else {
        outStream_V_data_V_1_data_out = outStream_V_data_V_1_payload_A.read();
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_data_V_1_load_A() {
    outStream_V_data_V_1_load_A = (outStream_V_data_V_1_state_cmp_full.read() & ~outStream_V_data_V_1_sel_wr.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_data_V_1_load_B() {
    outStream_V_data_V_1_load_B = (outStream_V_data_V_1_sel_wr.read() & outStream_V_data_V_1_state_cmp_full.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_data_V_1_sel() {
    outStream_V_data_V_1_sel = outStream_V_data_V_1_sel_rd.read();
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_data_V_1_state_cmp_full() {
    outStream_V_data_V_1_state_cmp_full =  (sc_logic) ((!outStream_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(outStream_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_data_V_1_vld_out() {
    outStream_V_data_V_1_vld_out =  (sc_logic) (outStream_V_data_V_1_state.read()[0]);
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_dest_V_1_ack_in() {
    outStream_V_dest_V_1_ack_in =  (sc_logic) (outStream_V_dest_V_1_state.read()[1]);
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_dest_V_1_ack_out() {
    outStream_V_dest_V_1_ack_out = outStream_TREADY.read();
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_dest_V_1_data_out() {
    outStream_V_dest_V_1_data_out = ap_const_lv6_0;
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_dest_V_1_sel() {
    outStream_V_dest_V_1_sel = outStream_V_dest_V_1_sel_rd.read();
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_dest_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_dest_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_dest_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_dest_V_1_vld_out() {
    outStream_V_dest_V_1_vld_out =  (sc_logic) (outStream_V_dest_V_1_state.read()[0]);
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_id_V_1_ack_in() {
    outStream_V_id_V_1_ack_in =  (sc_logic) (outStream_V_id_V_1_state.read()[1]);
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_id_V_1_ack_out() {
    outStream_V_id_V_1_ack_out = outStream_TREADY.read();
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_id_V_1_data_out() {
    outStream_V_id_V_1_data_out = ap_const_lv5_0;
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_id_V_1_sel() {
    outStream_V_id_V_1_sel = outStream_V_id_V_1_sel_rd.read();
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_id_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_id_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_id_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_id_V_1_vld_out() {
    outStream_V_id_V_1_vld_out =  (sc_logic) (outStream_V_id_V_1_state.read()[0]);
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_keep_V_1_ack_in() {
    outStream_V_keep_V_1_ack_in =  (sc_logic) (outStream_V_keep_V_1_state.read()[1]);
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_keep_V_1_ack_out() {
    outStream_V_keep_V_1_ack_out = outStream_TREADY.read();
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_keep_V_1_data_out() {
    outStream_V_keep_V_1_data_out = ap_const_lv4_F;
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_keep_V_1_sel() {
    outStream_V_keep_V_1_sel = outStream_V_keep_V_1_sel_rd.read();
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_keep_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_keep_V_1_vld_out() {
    outStream_V_keep_V_1_vld_out =  (sc_logic) (outStream_V_keep_V_1_state.read()[0]);
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_last_V_1_ack_in() {
    outStream_V_last_V_1_ack_in =  (sc_logic) (outStream_V_last_V_1_state.read()[1]);
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_last_V_1_ack_out() {
    outStream_V_last_V_1_ack_out = outStream_TREADY.read();
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_sel.read())) {
        outStream_V_last_V_1_data_out = outStream_V_last_V_1_payload_B.read();
    } else {
        outStream_V_last_V_1_data_out = outStream_V_last_V_1_payload_A.read();
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_last_V_1_load_A() {
    outStream_V_last_V_1_load_A = (outStream_V_last_V_1_state_cmp_full.read() & ~outStream_V_last_V_1_sel_wr.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_last_V_1_load_B() {
    outStream_V_last_V_1_load_B = (outStream_V_last_V_1_sel_wr.read() & outStream_V_last_V_1_state_cmp_full.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_last_V_1_sel() {
    outStream_V_last_V_1_sel = outStream_V_last_V_1_sel_rd.read();
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_last_V_1_state_cmp_full() {
    outStream_V_last_V_1_state_cmp_full =  (sc_logic) ((!outStream_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(outStream_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_last_V_1_vld_out() {
    outStream_V_last_V_1_vld_out =  (sc_logic) (outStream_V_last_V_1_state.read()[0]);
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_strb_V_1_ack_in() {
    outStream_V_strb_V_1_ack_in =  (sc_logic) (outStream_V_strb_V_1_state.read()[1]);
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_strb_V_1_ack_out() {
    outStream_V_strb_V_1_ack_out = outStream_TREADY.read();
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_strb_V_1_data_out() {
    outStream_V_strb_V_1_data_out = ap_const_lv4_0;
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_strb_V_1_sel() {
    outStream_V_strb_V_1_sel = outStream_V_strb_V_1_sel_rd.read();
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_strb_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_strb_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_strb_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_strb_V_1_vld_out() {
    outStream_V_strb_V_1_vld_out =  (sc_logic) (outStream_V_strb_V_1_state.read()[0]);
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_user_V_1_ack_in() {
    outStream_V_user_V_1_ack_in =  (sc_logic) (outStream_V_user_V_1_state.read()[1]);
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_user_V_1_ack_out() {
    outStream_V_user_V_1_ack_out = outStream_TREADY.read();
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_user_V_1_data_out() {
    outStream_V_user_V_1_data_out = ap_const_lv2_0;
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_user_V_1_sel() {
    outStream_V_user_V_1_sel = outStream_V_user_V_1_sel_rd.read();
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_outStream_V_user_V_1_vld_out() {
    outStream_V_user_V_1_vld_out =  (sc_logic) (outStream_V_user_V_1_state.read()[0]);
}

void cnn_2d_conv_d4x4_k3x3::thread_p_i_fu_1031_p2() {
    p_i_fu_1031_p2 = (tmp2_fu_1025_p2.read() | tmp1_fu_1019_p2.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_readCount_fu_925_p2() {
    readCount_fu_925_p2 = (!readCount_1_fu_182.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(readCount_1_fu_182.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void cnn_2d_conv_d4x4_k3x3::thread_sel_tmp2_fu_1175_p2() {
    sel_tmp2_fu_1175_p2 = (!tmp_6_reg_1582.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(tmp_6_reg_1582.read() == ap_const_lv2_2);
}

void cnn_2d_conv_d4x4_k3x3::thread_sel_tmp3_fu_1180_p2() {
    sel_tmp3_fu_1180_p2 = (!tmp_6_reg_1582.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(tmp_6_reg_1582.read() == ap_const_lv2_1);
}

void cnn_2d_conv_d4x4_k3x3::thread_sel_tmp4_fu_1185_p2() {
    sel_tmp4_fu_1185_p2 = (!tmp_6_reg_1582.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_6_reg_1582.read() == ap_const_lv2_0);
}

void cnn_2d_conv_d4x4_k3x3::thread_sel_tmp7_fu_642_p2() {
    sel_tmp7_fu_642_p2 = (!tmp_3_reg_1423.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(tmp_3_reg_1423.read() == ap_const_lv2_1);
}

void cnn_2d_conv_d4x4_k3x3::thread_sel_tmp9_fu_647_p2() {
    sel_tmp9_fu_647_p2 = (!tmp_3_reg_1423.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_3_reg_1423.read() == ap_const_lv2_0);
}

void cnn_2d_conv_d4x4_k3x3::thread_sel_tmp_fu_637_p2() {
    sel_tmp_fu_637_p2 = (!tmp_3_reg_1423.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(tmp_3_reg_1423.read() == ap_const_lv2_2);
}

void cnn_2d_conv_d4x4_k3x3::thread_tmp1_fu_1019_p2() {
    tmp1_fu_1019_p2 = (tmp_i_15_fu_1007_p2.read() | tmp_i_mid2_fu_971_p3.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_tmp2_fu_1025_p2() {
    tmp2_fu_1025_p2 = (tmp_1_i_fu_1013_p2.read() | tmp_2_i_mid2_fu_991_p3.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_tmp3_fu_1326_p2() {
    tmp3_fu_1326_p2 = (!grp_fu_1096_p2.read().is_01() || !grp_fu_1090_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(grp_fu_1096_p2.read()) + sc_biguint<32>(grp_fu_1090_p2.read()));
}

void cnn_2d_conv_d4x4_k3x3::thread_tmp4_fu_1332_p2() {
    tmp4_fu_1332_p2 = (!grp_fu_1102_p2.read().is_01() || !grp_fu_1108_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(grp_fu_1102_p2.read()) + sc_biguint<32>(grp_fu_1108_p2.read()));
}

void cnn_2d_conv_d4x4_k3x3::thread_tmp5_fu_1347_p2() {
    tmp5_fu_1347_p2 = (!tmp4_reg_1731.read().is_01() || !tmp3_reg_1726.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp4_reg_1731.read()) + sc_biguint<32>(tmp3_reg_1726.read()));
}

void cnn_2d_conv_d4x4_k3x3::thread_tmp6_fu_1351_p2() {
    tmp6_fu_1351_p2 = (!tmp_8_1_1_i_reg_1701.read().is_01() || !tmp_8_1_2_i_reg_1706.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_8_1_1_i_reg_1701.read()) + sc_biguint<32>(tmp_8_1_2_i_reg_1706.read()));
}

void cnn_2d_conv_d4x4_k3x3::thread_tmp7_fu_1355_p2() {
    tmp7_fu_1355_p2 = (!tmp_8_2_1_i_reg_1716.read().is_01() || !tmp_8_2_2_i_reg_1721.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_8_2_1_i_reg_1716.read()) + sc_biguint<32>(tmp_8_2_2_i_reg_1721.read()));
}

void cnn_2d_conv_d4x4_k3x3::thread_tmp8_fu_1359_p2() {
    tmp8_fu_1359_p2 = (!tmp7_fu_1355_p2.read().is_01() || !tmp_8_2_i_reg_1711.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp7_fu_1355_p2.read()) + sc_biguint<32>(tmp_8_2_i_reg_1711.read()));
}

void cnn_2d_conv_d4x4_k3x3::thread_tmp9_fu_1364_p2() {
    tmp9_fu_1364_p2 = (!tmp8_fu_1359_p2.read().is_01() || !tmp6_fu_1351_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp8_fu_1359_p2.read()) + sc_biguint<32>(tmp6_fu_1351_p2.read()));
}

void cnn_2d_conv_d4x4_k3x3::thread_tmp_1_i_fu_1013_p2() {
    tmp_1_i_fu_1013_p2 = (!x_assign_mid2_fu_945_p3.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<1>(): (sc_biguint<3>(x_assign_mid2_fu_945_p3.read()) > sc_biguint<3>(ap_const_lv3_2));
}

void cnn_2d_conv_d4x4_k3x3::thread_tmp_2_fu_591_p1() {
    tmp_2_fu_591_p1 = x_reg_312.read().range(2-1, 0);
}

void cnn_2d_conv_d4x4_k3x3::thread_tmp_2_i_fu_985_p2() {
    tmp_2_i_fu_985_p2 = (!y_assign_reg_462.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<1>(): (sc_biguint<3>(y_assign_reg_462.read()) > sc_biguint<3>(ap_const_lv3_2));
}

void cnn_2d_conv_d4x4_k3x3::thread_tmp_2_i_mid1_fu_979_p2() {
    tmp_2_i_mid1_fu_979_p2 = (!y_s_fu_953_p2.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<1>(): (sc_biguint<3>(y_s_fu_953_p2.read()) > sc_biguint<3>(ap_const_lv3_2));
}

void cnn_2d_conv_d4x4_k3x3::thread_tmp_2_i_mid2_fu_991_p3() {
    tmp_2_i_mid2_fu_991_p3 = (!exitcond2_fu_939_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond2_fu_939_p2.read()[0].to_bool())? tmp_2_i_mid1_fu_979_p2.read(): tmp_2_i_fu_985_p2.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_tmp_3_fu_633_p1() {
    tmp_3_fu_633_p1 = x1_reg_371.read().range(2-1, 0);
}

void cnn_2d_conv_d4x4_k3x3::thread_tmp_6_fu_1037_p1() {
    tmp_6_fu_1037_p1 = x_assign_mid2_fu_945_p3.read().range(2-1, 0);
}

void cnn_2d_conv_d4x4_k3x3::thread_tmp_7_fu_909_p4() {
    tmp_7_fu_909_p4 = readCount_1_fu_182.read().range(31, 4);
}

void cnn_2d_conv_d4x4_k3x3::thread_tmp_data_V_fu_1370_p2() {
    tmp_data_V_fu_1370_p2 = (!tmp9_fu_1364_p2.read().is_01() || !tmp5_fu_1347_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp9_fu_1364_p2.read()) + sc_biguint<32>(tmp5_fu_1347_p2.read()));
}

void cnn_2d_conv_d4x4_k3x3::thread_tmp_i_15_fu_1007_p2() {
    tmp_i_15_fu_1007_p2 = (!x_assign_mid2_fu_945_p3.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(x_assign_mid2_fu_945_p3.read() == ap_const_lv3_0);
}

void cnn_2d_conv_d4x4_k3x3::thread_tmp_i_fu_965_p2() {
    tmp_i_fu_965_p2 = (!y_assign_reg_462.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(y_assign_reg_462.read() == ap_const_lv3_0);
}

void cnn_2d_conv_d4x4_k3x3::thread_tmp_i_mid1_fu_959_p2() {
    tmp_i_mid1_fu_959_p2 = (!y_s_fu_953_p2.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(y_s_fu_953_p2.read() == ap_const_lv3_0);
}

void cnn_2d_conv_d4x4_k3x3::thread_tmp_i_mid2_fu_971_p3() {
    tmp_i_mid2_fu_971_p3 = (!exitcond2_fu_939_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond2_fu_939_p2.read()[0].to_bool())? tmp_i_mid1_fu_959_p2.read(): tmp_i_fu_965_p2.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_tmp_last_V_fu_1377_p2() {
    tmp_last_V_fu_1377_p2 = (!writeCount_fu_1341_p2.read().is_01() || !ap_const_lv32_4.is_01())? sc_lv<1>(): sc_lv<1>(writeCount_fu_1341_p2.read() == ap_const_lv32_4);
}

void cnn_2d_conv_d4x4_k3x3::thread_window_1_0_phi_fu_569_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1554.read()))) {
        window_1_0_phi_fu_569_p4 = window_1_1_reg_555.read();
    } else {
        window_1_0_phi_fu_569_p4 = window_1_0_reg_566.read();
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_window_1_1_2_fu_802_p3() {
    window_1_1_2_fu_802_p3 = (!cond1_mid2_fu_752_p3.read()[0].is_01())? sc_lv<32>(): ((cond1_mid2_fu_752_p3.read()[0].to_bool())? lineBuffer_load37_ph_fu_786_p3.read(): lineBuffer_load38_ph_fu_794_p3.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_window_1_1_phi_fu_558_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1554.read()))) {
        window_1_1_phi_fu_558_p4 = lineBuffer_0_3_15_reg_1666.read();
    } else {
        window_1_1_phi_fu_558_p4 = window_1_1_reg_555.read();
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_window_2_0_phi_fu_547_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1554.read()))) {
        window_2_0_phi_fu_547_p4 = ap_pipeline_reg_pp3_iter2_window_2_1_2_reg_1567.read();
    } else {
        window_2_0_phi_fu_547_p4 = window_2_0_reg_544.read();
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_window_2_2_1_fu_818_p3() {
    window_2_2_1_fu_818_p3 = (!cond2_fu_780_p2.read()[0].is_01())? sc_lv<32>(): ((cond2_fu_780_p2.read()[0].to_bool())? window_1_1_2_fu_802_p3.read(): window_1_1_1_reg_428.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_window_2_2_3_fu_826_p3() {
    window_2_2_3_fu_826_p3 = (!cond2_fu_780_p2.read()[0].is_01())? sc_lv<32>(): ((cond2_fu_780_p2.read()[0].to_bool())? window_2_2_2_fu_142.read(): window_1_1_2_fu_802_p3.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_window_2_2_4_fu_834_p3() {
    window_2_2_4_fu_834_p3 = (!cond2_fu_780_p2.read()[0].is_01())? sc_lv<32>(): ((cond2_fu_780_p2.read()[0].to_bool())? window_1_1_2_fu_802_p3.read(): window_2_1_1_reg_404.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_window_2_2_5_fu_842_p3() {
    window_2_2_5_fu_842_p3 = (!cond1_mid2_fu_752_p3.read()[0].is_01())? sc_lv<32>(): ((cond1_mid2_fu_752_p3.read()[0].to_bool())? window_2_2_2_fu_142.read(): window_2_2_3_fu_826_p3.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_window_2_2_6_fu_850_p3() {
    window_2_2_6_fu_850_p3 = (!cond1_mid2_fu_752_p3.read()[0].is_01())? sc_lv<32>(): ((cond1_mid2_fu_752_p3.read()[0].to_bool())? window_2_1_1_reg_404.read(): window_2_2_4_fu_834_p3.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_window_2_2_7_fu_858_p3() {
    window_2_2_7_fu_858_p3 = (!cond1_mid2_fu_752_p3.read()[0].is_01())? sc_lv<32>(): ((cond1_mid2_fu_752_p3.read()[0].to_bool())? window_2_2_fu_810_p3.read(): window_1_2_1_reg_416.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_window_2_2_8_fu_866_p3() {
    window_2_2_8_fu_866_p3 = (!cond1_mid2_fu_752_p3.read()[0].is_01())? sc_lv<32>(): ((cond1_mid2_fu_752_p3.read()[0].to_bool())? window_2_2_1_fu_818_p3.read(): window_1_1_1_reg_428.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_window_2_2_fu_810_p3() {
    window_2_2_fu_810_p3 = (!cond2_fu_780_p2.read()[0].is_01())? sc_lv<32>(): ((cond2_fu_780_p2.read()[0].to_bool())? window_1_2_1_reg_416.read(): window_1_1_2_fu_802_p3.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_writeCount_fu_1341_p2() {
    writeCount_fu_1341_p2 = (!writeCount_1_fu_178.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(writeCount_1_fu_178.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void cnn_2d_conv_d4x4_k3x3::thread_x4_mid2_fu_732_p3() {
    x4_mid2_fu_732_p3 = (!exitcond_fu_726_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_fu_726_p2.read()[0].to_bool())? ap_const_lv2_1: x4_reg_440.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_x_1_fu_601_p2() {
    x_1_fu_601_p2 = (!ap_const_lv3_1.is_01() || !x_reg_312.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(x_reg_312.read()));
}

void cnn_2d_conv_d4x4_k3x3::thread_x_2_fu_627_p2() {
    x_2_fu_627_p2 = (!x1_reg_371.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(x1_reg_371.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void cnn_2d_conv_d4x4_k3x3::thread_x_3_fu_774_p2() {
    x_3_fu_774_p2 = (!x4_mid2_fu_732_p3.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(x4_mid2_fu_732_p3.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void cnn_2d_conv_d4x4_k3x3::thread_x_4_fu_1046_p2() {
    x_4_fu_1046_p2 = (!x_assign_mid2_fu_945_p3.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(x_assign_mid2_fu_945_p3.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void cnn_2d_conv_d4x4_k3x3::thread_x_assign_mid2_fu_945_p3() {
    x_assign_mid2_fu_945_p3 = (!exitcond2_fu_939_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond2_fu_939_p2.read()[0].to_bool())? ap_const_lv3_0: x_assign_reg_473.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_y3_mid2_fu_766_p3() {
    y3_mid2_fu_766_p3 = (!exitcond_fu_726_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_fu_726_p2.read()[0].to_bool())? y9_fu_760_p2.read(): y3_reg_393.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_y9_fu_760_p2() {
    y9_fu_760_p2 = (!y3_reg_393.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(y3_reg_393.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void cnn_2d_conv_d4x4_k3x3::thread_y_assign_mid2_fu_999_p3() {
    y_assign_mid2_fu_999_p3 = (!exitcond2_fu_939_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond2_fu_939_p2.read()[0].to_bool())? y_s_fu_953_p2.read(): y_assign_reg_462.read());
}

void cnn_2d_conv_d4x4_k3x3::thread_y_s_fu_953_p2() {
    y_s_fu_953_p2 = (!y_assign_reg_462.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(y_assign_reg_462.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void cnn_2d_conv_d4x4_k3x3::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1389.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_585_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1389.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_585_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 8 : 
            if (!(!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1414.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_621_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1414.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_621_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_714_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            break;
        case 128 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read())) && !(!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read())) || (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1578.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read())))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            }
            break;
        case 256 : 
            if (!esl_seteq<1,1,1>(ap_condition_1897.read(), ap_const_boolean_1)) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state20;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXX";
            break;
    }
}

void cnn_2d_conv_d4x4_k3x3::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TDATA\" :  \"" << inStream_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TVALID\" :  \"" << inStream_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"inStream_TREADY\" :  \"" << inStream_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TKEEP\" :  \"" << inStream_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TSTRB\" :  \"" << inStream_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TUSER\" :  \"" << inStream_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TLAST\" :  \"" << inStream_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TID\" :  \"" << inStream_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TDEST\" :  \"" << inStream_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TDATA\" :  \"" << outStream_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TVALID\" :  \"" << outStream_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outStream_TREADY\" :  \"" << outStream_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TKEEP\" :  \"" << outStream_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TSTRB\" :  \"" << outStream_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TUSER\" :  \"" << outStream_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TLAST\" :  \"" << outStream_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TID\" :  \"" << outStream_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TDEST\" :  \"" << outStream_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_AWVALID\" :  \"" << s_axi_CTRL_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_AWREADY\" :  \"" << s_axi_CTRL_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_AWADDR\" :  \"" << s_axi_CTRL_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WVALID\" :  \"" << s_axi_CTRL_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_WREADY\" :  \"" << s_axi_CTRL_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WDATA\" :  \"" << s_axi_CTRL_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WSTRB\" :  \"" << s_axi_CTRL_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_ARVALID\" :  \"" << s_axi_CTRL_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_ARREADY\" :  \"" << s_axi_CTRL_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_ARADDR\" :  \"" << s_axi_CTRL_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RVALID\" :  \"" << s_axi_CTRL_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_RREADY\" :  \"" << s_axi_CTRL_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RDATA\" :  \"" << s_axi_CTRL_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RRESP\" :  \"" << s_axi_CTRL_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BVALID\" :  \"" << s_axi_CTRL_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BREADY\" :  \"" << s_axi_CTRL_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BRESP\" :  \"" << s_axi_CTRL_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

