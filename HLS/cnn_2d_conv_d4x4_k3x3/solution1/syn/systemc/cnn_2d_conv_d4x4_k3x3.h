// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _cnn_2d_conv_d4x4_k3x3_HH_
#define _cnn_2d_conv_d4x4_k3x3_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_2d_conv_d4x4_bkb.h"
#include "cnn_2d_conv_d4x4_cud.h"
#include "cnn_2d_conv_d4x4_k3x3_CTRL_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CTRL_ADDR_WIDTH = 7,
         unsigned int C_S_AXI_CTRL_DATA_WIDTH = 32>
struct cnn_2d_conv_d4x4_k3x3 : public sc_module {
    // Port declarations 38
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > inStream_TDATA;
    sc_in< sc_logic > inStream_TVALID;
    sc_out< sc_logic > inStream_TREADY;
    sc_in< sc_lv<4> > inStream_TKEEP;
    sc_in< sc_lv<4> > inStream_TSTRB;
    sc_in< sc_lv<2> > inStream_TUSER;
    sc_in< sc_lv<1> > inStream_TLAST;
    sc_in< sc_lv<5> > inStream_TID;
    sc_in< sc_lv<6> > inStream_TDEST;
    sc_out< sc_lv<32> > outStream_TDATA;
    sc_out< sc_logic > outStream_TVALID;
    sc_in< sc_logic > outStream_TREADY;
    sc_out< sc_lv<4> > outStream_TKEEP;
    sc_out< sc_lv<4> > outStream_TSTRB;
    sc_out< sc_lv<2> > outStream_TUSER;
    sc_out< sc_lv<1> > outStream_TLAST;
    sc_out< sc_lv<5> > outStream_TID;
    sc_out< sc_lv<6> > outStream_TDEST;
    sc_in< sc_logic > s_axi_CTRL_AWVALID;
    sc_out< sc_logic > s_axi_CTRL_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_ADDR_WIDTH> > s_axi_CTRL_AWADDR;
    sc_in< sc_logic > s_axi_CTRL_WVALID;
    sc_out< sc_logic > s_axi_CTRL_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_DATA_WIDTH> > s_axi_CTRL_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_DATA_WIDTH/8> > s_axi_CTRL_WSTRB;
    sc_in< sc_logic > s_axi_CTRL_ARVALID;
    sc_out< sc_logic > s_axi_CTRL_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_ADDR_WIDTH> > s_axi_CTRL_ARADDR;
    sc_out< sc_logic > s_axi_CTRL_RVALID;
    sc_in< sc_logic > s_axi_CTRL_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_DATA_WIDTH> > s_axi_CTRL_RDATA;
    sc_out< sc_lv<2> > s_axi_CTRL_RRESP;
    sc_out< sc_logic > s_axi_CTRL_BVALID;
    sc_in< sc_logic > s_axi_CTRL_BREADY;
    sc_out< sc_lv<2> > s_axi_CTRL_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    cnn_2d_conv_d4x4_k3x3(sc_module_name name);
    SC_HAS_PROCESS(cnn_2d_conv_d4x4_k3x3);

    ~cnn_2d_conv_d4x4_k3x3();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    cnn_2d_conv_d4x4_k3x3_CTRL_s_axi<C_S_AXI_CTRL_ADDR_WIDTH,C_S_AXI_CTRL_DATA_WIDTH>* cnn_2d_conv_d4x4_k3x3_CTRL_s_axi_U;
    cnn_2d_conv_d4x4_bkb<1,6,32,32,32>* cnn_2d_conv_d4x4_bkb_U0;
    cnn_2d_conv_d4x4_bkb<1,6,32,32,32>* cnn_2d_conv_d4x4_bkb_U1;
    cnn_2d_conv_d4x4_bkb<1,6,32,32,32>* cnn_2d_conv_d4x4_bkb_U2;
    cnn_2d_conv_d4x4_bkb<1,6,32,32,32>* cnn_2d_conv_d4x4_bkb_U3;
    cnn_2d_conv_d4x4_bkb<1,6,32,32,32>* cnn_2d_conv_d4x4_bkb_U4;
    cnn_2d_conv_d4x4_bkb<1,6,32,32,32>* cnn_2d_conv_d4x4_bkb_U5;
    cnn_2d_conv_d4x4_bkb<1,6,32,32,32>* cnn_2d_conv_d4x4_bkb_U6;
    cnn_2d_conv_d4x4_bkb<1,6,32,32,32>* cnn_2d_conv_d4x4_bkb_U7;
    cnn_2d_conv_d4x4_bkb<1,6,32,32,32>* cnn_2d_conv_d4x4_bkb_U8;
    cnn_2d_conv_d4x4_cud<1,1,32,32,32,32,2,32>* cnn_2d_conv_d4x4_cud_U9;
    cnn_2d_conv_d4x4_cud<1,1,32,32,32,32,2,32>* cnn_2d_conv_d4x4_cud_U10;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > inStream_V_data_V_0_data_out;
    sc_signal< sc_logic > inStream_V_data_V_0_vld_in;
    sc_signal< sc_logic > inStream_V_data_V_0_vld_out;
    sc_signal< sc_logic > inStream_V_data_V_0_ack_in;
    sc_signal< sc_logic > inStream_V_data_V_0_ack_out;
    sc_signal< sc_lv<32> > inStream_V_data_V_0_payload_A;
    sc_signal< sc_lv<32> > inStream_V_data_V_0_payload_B;
    sc_signal< sc_logic > inStream_V_data_V_0_sel_rd;
    sc_signal< sc_logic > inStream_V_data_V_0_sel_wr;
    sc_signal< sc_logic > inStream_V_data_V_0_sel;
    sc_signal< sc_logic > inStream_V_data_V_0_load_A;
    sc_signal< sc_logic > inStream_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_V_data_V_0_state;
    sc_signal< sc_logic > inStream_V_data_V_0_state_cmp_full;
    sc_signal< sc_logic > inStream_V_dest_V_0_vld_in;
    sc_signal< sc_logic > inStream_V_dest_V_0_ack_out;
    sc_signal< sc_lv<2> > inStream_V_dest_V_0_state;
    sc_signal< sc_lv<32> > outStream_V_data_V_1_data_out;
    sc_signal< sc_logic > outStream_V_data_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_data_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_data_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_data_V_1_ack_out;
    sc_signal< sc_lv<32> > outStream_V_data_V_1_payload_A;
    sc_signal< sc_lv<32> > outStream_V_data_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_data_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_data_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_data_V_1_sel;
    sc_signal< sc_logic > outStream_V_data_V_1_load_A;
    sc_signal< sc_logic > outStream_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_data_V_1_state;
    sc_signal< sc_logic > outStream_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > outStream_V_keep_V_1_data_out;
    sc_signal< sc_logic > outStream_V_keep_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_keep_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_keep_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_keep_V_1_ack_out;
    sc_signal< sc_logic > outStream_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_keep_V_1_sel;
    sc_signal< sc_lv<2> > outStream_V_keep_V_1_state;
    sc_signal< sc_lv<4> > outStream_V_strb_V_1_data_out;
    sc_signal< sc_logic > outStream_V_strb_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_strb_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_strb_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_strb_V_1_ack_out;
    sc_signal< sc_logic > outStream_V_strb_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_strb_V_1_sel;
    sc_signal< sc_lv<2> > outStream_V_strb_V_1_state;
    sc_signal< sc_lv<2> > outStream_V_user_V_1_data_out;
    sc_signal< sc_logic > outStream_V_user_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_user_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_user_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_user_V_1_ack_out;
    sc_signal< sc_logic > outStream_V_user_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_user_V_1_sel;
    sc_signal< sc_lv<2> > outStream_V_user_V_1_state;
    sc_signal< sc_lv<1> > outStream_V_last_V_1_data_out;
    sc_signal< sc_logic > outStream_V_last_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_last_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_last_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > outStream_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > outStream_V_last_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_last_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_last_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_last_V_1_sel;
    sc_signal< sc_logic > outStream_V_last_V_1_load_A;
    sc_signal< sc_logic > outStream_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_last_V_1_state;
    sc_signal< sc_logic > outStream_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<5> > outStream_V_id_V_1_data_out;
    sc_signal< sc_logic > outStream_V_id_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_id_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_id_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_id_V_1_ack_out;
    sc_signal< sc_logic > outStream_V_id_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_id_V_1_sel;
    sc_signal< sc_lv<2> > outStream_V_id_V_1_state;
    sc_signal< sc_lv<6> > outStream_V_dest_V_1_data_out;
    sc_signal< sc_logic > outStream_V_dest_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_dest_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_dest_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_dest_V_1_ack_out;
    sc_signal< sc_logic > outStream_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_dest_V_1_sel;
    sc_signal< sc_lv<2> > outStream_V_dest_V_1_state;
    sc_signal< sc_lv<32> > ctrl;
    sc_signal< sc_lv<32> > kernelData_0;
    sc_signal< sc_lv<32> > kernelData_1;
    sc_signal< sc_lv<32> > kernelData_2;
    sc_signal< sc_lv<32> > kernelData_3;
    sc_signal< sc_lv<32> > kernelData_4;
    sc_signal< sc_lv<32> > kernelData_5;
    sc_signal< sc_lv<32> > kernelData_6;
    sc_signal< sc_lv<32> > kernelData_7;
    sc_signal< sc_lv<32> > kernelData_8;
    sc_signal< sc_logic > inStream_TDATA_blk_n;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<1> > exitcond1_reg_1389;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_lv<1> > exitcond4_reg_1414;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp3_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter1;
    sc_signal< sc_lv<1> > exitcond_flatten8_reg_1554;
    sc_signal< sc_lv<1> > icmp_reg_1563;
    sc_signal< sc_logic > outStream_TDATA_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter8;
    sc_signal< sc_lv<1> > p_i_reg_1578;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp3_iter7_p_i_reg_1578;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter9;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp3_iter8_p_i_reg_1578;
    sc_signal< sc_lv<32> > lineBuffer_0_3_reg_288;
    sc_signal< sc_lv<32> > lineBuffer_0_2_reg_300;
    sc_signal< sc_lv<3> > x_reg_312;
    sc_signal< sc_lv<32> > lineBuffer_1_3_reg_323;
    sc_signal< sc_lv<32> > lineBuffer_1_2_reg_335;
    sc_signal< sc_lv<32> > lineBuffer_1_3_5_reg_347;
    sc_signal< sc_lv<32> > lineBuffer_1_3_8_reg_359;
    sc_signal< sc_lv<3> > x1_reg_371;
    sc_signal< sc_lv<5> > indvar_flatten6_reg_451;
    sc_signal< sc_lv<3> > y_assign_reg_462;
    sc_signal< sc_lv<3> > x_assign_reg_473;
    sc_signal< sc_lv<32> > lineBuffer_1_3_3_reg_484;
    sc_signal< sc_lv<32> > lineBuffer_1_2_3_reg_494;
    sc_signal< sc_lv<32> > lineBuffer_1_3_17_reg_504;
    sc_signal< sc_lv<32> > lineBuffer_1_3_1_reg_514;
    sc_signal< sc_lv<32> > lineBuffer_0_3_3_reg_524;
    sc_signal< sc_lv<32> > lineBuffer_0_2_s_reg_534;
    sc_signal< sc_lv<32> > window_2_0_reg_544;
    sc_signal< bool > ap_condition_977;
    sc_signal< sc_lv<32> > window_1_1_reg_555;
    sc_signal< sc_lv<32> > window_1_0_reg_566;
    sc_signal< sc_lv<1> > exitcond1_fu_585_p2;
    sc_signal< sc_lv<1> > cond_fu_595_p2;
    sc_signal< sc_lv<1> > cond_reg_1393;
    sc_signal< sc_lv<3> > x_1_fu_601_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<32> > lineBuffer_0_3_1_fu_607_p3;
    sc_signal< sc_lv<32> > lineBuffer_0_3_4_fu_614_p3;
    sc_signal< sc_lv<1> > exitcond4_fu_621_p2;
    sc_signal< sc_lv<3> > x_2_fu_627_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<2> > tmp_3_fu_633_p1;
    sc_signal< sc_lv<2> > tmp_3_reg_1423;
    sc_signal< sc_lv<32> > lineBuffer_1_3_2_fu_666_p3;
    sc_signal< sc_lv<32> > lineBuffer_1_3_4_fu_682_p3;
    sc_signal< sc_lv<32> > lineBuffer_1_3_7_fu_698_p3;
    sc_signal< sc_lv<32> > lineBuffer_1_3_9_fu_706_p3;
    sc_signal< sc_lv<3> > indvar_flatten_next_fu_720_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state8;
    sc_signal< sc_lv<2> > y3_mid2_fu_766_p3;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_714_p2;
    sc_signal< sc_lv<2> > x_3_fu_774_p2;
    sc_signal< sc_lv<32> > window_2_2_6_fu_850_p3;
    sc_signal< sc_lv<32> > window_2_2_7_fu_858_p3;
    sc_signal< sc_lv<32> > window_2_2_8_fu_866_p3;
    sc_signal< sc_lv<1> > exitcond_flatten8_fu_894_p2;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1554;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1554;
    sc_signal< sc_lv<5> > indvar_flatten_next7_fu_900_p2;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter0;
    sc_signal< sc_lv<1> > icmp_fu_919_p2;
    sc_signal< sc_lv<32> > window_2_1_2_reg_1567;
    sc_signal< sc_lv<32> > ap_pipeline_reg_pp3_iter2_window_2_1_2_reg_1567;
    sc_signal< sc_lv<3> > y_assign_mid2_fu_999_p3;
    sc_signal< sc_lv<1> > p_i_fu_1031_p2;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp3_iter2_p_i_reg_1578;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp3_iter3_p_i_reg_1578;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp3_iter4_p_i_reg_1578;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp3_iter5_p_i_reg_1578;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp3_iter6_p_i_reg_1578;
    sc_signal< sc_lv<2> > tmp_6_fu_1037_p1;
    sc_signal< sc_lv<2> > tmp_6_reg_1582;
    sc_signal< sc_lv<3> > x_4_fu_1046_p2;
    sc_signal< sc_lv<32> > lineBuffer_0_3_15_fu_1162_p6;
    sc_signal< sc_lv<32> > lineBuffer_0_3_15_reg_1666;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter2;
    sc_signal< sc_lv<32> > lineBuffer_0_3_6_fu_1204_p3;
    sc_signal< sc_lv<32> > lineBuffer_0_3_7_fu_1220_p3;
    sc_signal< sc_lv<32> > lineBuffer_1_3_10_fu_1278_p3;
    sc_signal< sc_lv<32> > lineBuffer_1_3_11_fu_1294_p3;
    sc_signal< sc_lv<32> > lineBuffer_1_3_19_fu_1310_p3;
    sc_signal< sc_lv<32> > lineBuffer_1_3_20_fu_1318_p3;
    sc_signal< sc_lv<32> > grp_fu_1114_p2;
    sc_signal< sc_lv<32> > tmp_8_1_1_i_reg_1701;
    sc_signal< sc_lv<32> > grp_fu_1120_p2;
    sc_signal< sc_lv<32> > tmp_8_1_2_i_reg_1706;
    sc_signal< sc_lv<32> > grp_fu_1126_p2;
    sc_signal< sc_lv<32> > tmp_8_2_i_reg_1711;
    sc_signal< sc_lv<32> > grp_fu_1132_p2;
    sc_signal< sc_lv<32> > tmp_8_2_1_i_reg_1716;
    sc_signal< sc_lv<32> > grp_fu_1138_p2;
    sc_signal< sc_lv<32> > tmp_8_2_2_i_reg_1721;
    sc_signal< sc_lv<32> > tmp3_fu_1326_p2;
    sc_signal< sc_lv<32> > tmp3_reg_1726;
    sc_signal< sc_lv<32> > tmp4_fu_1332_p2;
    sc_signal< sc_lv<32> > tmp4_reg_1731;
    sc_signal< sc_lv<32> > tmp_data_V_fu_1370_p2;
    sc_signal< sc_lv<1> > tmp_last_V_fu_1377_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter7;
    sc_signal< sc_lv<3> > indvar_flatten_reg_382;
    sc_signal< sc_lv<1> > ap_CS_fsm_state7;
    sc_signal< sc_lv<2> > y3_reg_393;
    sc_signal< sc_lv<32> > window_2_1_1_reg_404;
    sc_signal< sc_lv<32> > window_1_2_1_reg_416;
    sc_signal< sc_lv<32> > window_1_1_1_reg_428;
    sc_signal< sc_lv<2> > x4_reg_440;
    sc_signal< sc_lv<32> > window_2_0_phi_fu_547_p4;
    sc_signal< sc_lv<32> > window_1_1_phi_fu_558_p4;
    sc_signal< sc_lv<32> > window_1_0_phi_fu_569_p4;
    sc_signal< sc_lv<32> > window_2_2_2_fu_142;
    sc_signal< sc_lv<32> > window_2_2_5_fu_842_p3;
    sc_signal< sc_lv<32> > window_0_0_read_as_fu_146;
    sc_signal< sc_lv<32> > window_0_0_fu_150;
    sc_signal< sc_lv<32> > window_0_1_fu_154;
    sc_signal< sc_lv<32> > windowRightCol_0_fu_1149_p6;
    sc_signal< sc_lv<32> > window_1_0_read_as_fu_158;
    sc_signal< sc_lv<32> > window_2_0_read_as_fu_162;
    sc_signal< sc_lv<32> > lineBuffer_0_3_5_fu_166;
    sc_signal< sc_lv<32> > lineBuffer_0_3_14_fu_1244_p3;
    sc_signal< sc_lv<32> > lineBuffer_0_3_8_fu_170;
    sc_signal< sc_lv<32> > lineBuffer_0_3_13_fu_1236_p3;
    sc_signal< sc_lv<32> > window_2_1_fu_174;
    sc_signal< sc_lv<32> > writeCount_1_fu_178;
    sc_signal< sc_lv<32> > writeCount_fu_1341_p2;
    sc_signal< sc_lv<32> > readCount_1_fu_182;
    sc_signal< sc_lv<32> > readCount_fu_925_p2;
    sc_signal< sc_lv<2> > tmp_2_fu_591_p1;
    sc_signal< sc_lv<1> > sel_tmp9_fu_647_p2;
    sc_signal< sc_lv<1> > sel_tmp7_fu_642_p2;
    sc_signal< sc_lv<1> > sel_tmp_fu_637_p2;
    sc_signal< sc_lv<1> > or_cond_fu_652_p2;
    sc_signal< sc_lv<32> > newSel_fu_658_p3;
    sc_signal< sc_lv<32> > newSel2_fu_674_p3;
    sc_signal< sc_lv<32> > lineBuffer_1_3_6_fu_690_p3;
    sc_signal< sc_lv<1> > exitcond_fu_726_p2;
    sc_signal< sc_lv<1> > cond1_mid1_fu_740_p2;
    sc_signal< sc_lv<1> > cond1_fu_746_p2;
    sc_signal< sc_lv<2> > y9_fu_760_p2;
    sc_signal< sc_lv<2> > x4_mid2_fu_732_p3;
    sc_signal< sc_lv<1> > cond2_fu_780_p2;
    sc_signal< sc_lv<1> > cond1_mid2_fu_752_p3;
    sc_signal< sc_lv<32> > lineBuffer_load37_ph_fu_786_p3;
    sc_signal< sc_lv<32> > lineBuffer_load38_ph_fu_794_p3;
    sc_signal< sc_lv<32> > window_1_1_2_fu_802_p3;
    sc_signal< sc_lv<32> > window_2_2_3_fu_826_p3;
    sc_signal< sc_lv<32> > window_2_2_4_fu_834_p3;
    sc_signal< sc_lv<32> > window_2_2_fu_810_p3;
    sc_signal< sc_lv<32> > window_2_2_1_fu_818_p3;
    sc_signal< sc_lv<28> > tmp_7_fu_909_p4;
    sc_signal< sc_lv<1> > exitcond2_fu_939_p2;
    sc_signal< sc_lv<3> > y_s_fu_953_p2;
    sc_signal< sc_lv<1> > tmp_i_mid1_fu_959_p2;
    sc_signal< sc_lv<1> > tmp_i_fu_965_p2;
    sc_signal< sc_lv<1> > tmp_2_i_mid1_fu_979_p2;
    sc_signal< sc_lv<1> > tmp_2_i_fu_985_p2;
    sc_signal< sc_lv<3> > x_assign_mid2_fu_945_p3;
    sc_signal< sc_lv<1> > tmp_i_15_fu_1007_p2;
    sc_signal< sc_lv<1> > tmp_i_mid2_fu_971_p3;
    sc_signal< sc_lv<1> > tmp_1_i_fu_1013_p2;
    sc_signal< sc_lv<1> > tmp_2_i_mid2_fu_991_p3;
    sc_signal< sc_lv<1> > tmp2_fu_1025_p2;
    sc_signal< sc_lv<1> > tmp1_fu_1019_p2;
    sc_signal< sc_lv<1> > sel_tmp4_fu_1185_p2;
    sc_signal< sc_lv<1> > sel_tmp3_fu_1180_p2;
    sc_signal< sc_lv<1> > sel_tmp2_fu_1175_p2;
    sc_signal< sc_lv<1> > or_cond2_fu_1190_p2;
    sc_signal< sc_lv<32> > newSel4_fu_1196_p3;
    sc_signal< sc_lv<32> > newSel6_fu_1212_p3;
    sc_signal< sc_lv<32> > lineBuffer_0_3_9_fu_1228_p3;
    sc_signal< sc_lv<32> > newSel8_fu_1270_p3;
    sc_signal< sc_lv<32> > newSel1_fu_1286_p3;
    sc_signal< sc_lv<32> > lineBuffer_1_3_18_fu_1302_p3;
    sc_signal< sc_lv<32> > grp_fu_1096_p2;
    sc_signal< sc_lv<32> > grp_fu_1090_p2;
    sc_signal< sc_lv<32> > grp_fu_1102_p2;
    sc_signal< sc_lv<32> > grp_fu_1108_p2;
    sc_signal< sc_lv<32> > tmp7_fu_1355_p2;
    sc_signal< sc_lv<32> > tmp8_fu_1359_p2;
    sc_signal< sc_lv<32> > tmp6_fu_1351_p2;
    sc_signal< sc_lv<32> > tmp9_fu_1364_p2;
    sc_signal< sc_lv<32> > tmp5_fu_1347_p2;
    sc_signal< sc_logic > grp_fu_1090_ce;
    sc_signal< sc_logic > grp_fu_1096_ce;
    sc_signal< sc_logic > grp_fu_1102_ce;
    sc_signal< sc_logic > grp_fu_1108_ce;
    sc_signal< sc_logic > grp_fu_1114_ce;
    sc_signal< sc_logic > grp_fu_1120_ce;
    sc_signal< sc_logic > grp_fu_1126_ce;
    sc_signal< sc_logic > grp_fu_1132_ce;
    sc_signal< sc_logic > grp_fu_1138_ce;
    sc_signal< sc_lv<1> > ap_CS_fsm_state20;
    sc_signal< bool > ap_condition_1897;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    sc_signal< bool > ap_condition_988;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_pp0_stage0;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_pp1_stage0;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<9> ap_ST_fsm_pp3_stage0;
    static const sc_lv<9> ap_ST_fsm_state20;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_7;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<28> ap_const_lv28_1;
    static const sc_lv<32> ap_const_lv32_8;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp3_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_condition_1897();
    void thread_ap_condition_977();
    void thread_ap_condition_988();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_cond1_fu_746_p2();
    void thread_cond1_mid1_fu_740_p2();
    void thread_cond1_mid2_fu_752_p3();
    void thread_cond2_fu_780_p2();
    void thread_cond_fu_595_p2();
    void thread_exitcond1_fu_585_p2();
    void thread_exitcond2_fu_939_p2();
    void thread_exitcond4_fu_621_p2();
    void thread_exitcond_flatten8_fu_894_p2();
    void thread_exitcond_flatten_fu_714_p2();
    void thread_exitcond_fu_726_p2();
    void thread_grp_fu_1090_ce();
    void thread_grp_fu_1096_ce();
    void thread_grp_fu_1102_ce();
    void thread_grp_fu_1108_ce();
    void thread_grp_fu_1114_ce();
    void thread_grp_fu_1120_ce();
    void thread_grp_fu_1126_ce();
    void thread_grp_fu_1132_ce();
    void thread_grp_fu_1138_ce();
    void thread_icmp_fu_919_p2();
    void thread_inStream_TDATA_blk_n();
    void thread_inStream_TREADY();
    void thread_inStream_V_data_V_0_ack_in();
    void thread_inStream_V_data_V_0_ack_out();
    void thread_inStream_V_data_V_0_data_out();
    void thread_inStream_V_data_V_0_load_A();
    void thread_inStream_V_data_V_0_load_B();
    void thread_inStream_V_data_V_0_sel();
    void thread_inStream_V_data_V_0_state_cmp_full();
    void thread_inStream_V_data_V_0_vld_in();
    void thread_inStream_V_data_V_0_vld_out();
    void thread_inStream_V_dest_V_0_ack_out();
    void thread_inStream_V_dest_V_0_vld_in();
    void thread_indvar_flatten_next7_fu_900_p2();
    void thread_indvar_flatten_next_fu_720_p2();
    void thread_lineBuffer_0_3_13_fu_1236_p3();
    void thread_lineBuffer_0_3_14_fu_1244_p3();
    void thread_lineBuffer_0_3_1_fu_607_p3();
    void thread_lineBuffer_0_3_4_fu_614_p3();
    void thread_lineBuffer_0_3_6_fu_1204_p3();
    void thread_lineBuffer_0_3_7_fu_1220_p3();
    void thread_lineBuffer_0_3_9_fu_1228_p3();
    void thread_lineBuffer_1_3_10_fu_1278_p3();
    void thread_lineBuffer_1_3_11_fu_1294_p3();
    void thread_lineBuffer_1_3_18_fu_1302_p3();
    void thread_lineBuffer_1_3_19_fu_1310_p3();
    void thread_lineBuffer_1_3_20_fu_1318_p3();
    void thread_lineBuffer_1_3_2_fu_666_p3();
    void thread_lineBuffer_1_3_4_fu_682_p3();
    void thread_lineBuffer_1_3_6_fu_690_p3();
    void thread_lineBuffer_1_3_7_fu_698_p3();
    void thread_lineBuffer_1_3_9_fu_706_p3();
    void thread_lineBuffer_load37_ph_fu_786_p3();
    void thread_lineBuffer_load38_ph_fu_794_p3();
    void thread_newSel1_fu_1286_p3();
    void thread_newSel2_fu_674_p3();
    void thread_newSel4_fu_1196_p3();
    void thread_newSel6_fu_1212_p3();
    void thread_newSel8_fu_1270_p3();
    void thread_newSel_fu_658_p3();
    void thread_or_cond2_fu_1190_p2();
    void thread_or_cond_fu_652_p2();
    void thread_outStream_TDATA();
    void thread_outStream_TDATA_blk_n();
    void thread_outStream_TDEST();
    void thread_outStream_TID();
    void thread_outStream_TKEEP();
    void thread_outStream_TLAST();
    void thread_outStream_TSTRB();
    void thread_outStream_TUSER();
    void thread_outStream_TVALID();
    void thread_outStream_V_data_V_1_ack_in();
    void thread_outStream_V_data_V_1_ack_out();
    void thread_outStream_V_data_V_1_data_out();
    void thread_outStream_V_data_V_1_load_A();
    void thread_outStream_V_data_V_1_load_B();
    void thread_outStream_V_data_V_1_sel();
    void thread_outStream_V_data_V_1_state_cmp_full();
    void thread_outStream_V_data_V_1_vld_in();
    void thread_outStream_V_data_V_1_vld_out();
    void thread_outStream_V_dest_V_1_ack_in();
    void thread_outStream_V_dest_V_1_ack_out();
    void thread_outStream_V_dest_V_1_data_out();
    void thread_outStream_V_dest_V_1_sel();
    void thread_outStream_V_dest_V_1_vld_in();
    void thread_outStream_V_dest_V_1_vld_out();
    void thread_outStream_V_id_V_1_ack_in();
    void thread_outStream_V_id_V_1_ack_out();
    void thread_outStream_V_id_V_1_data_out();
    void thread_outStream_V_id_V_1_sel();
    void thread_outStream_V_id_V_1_vld_in();
    void thread_outStream_V_id_V_1_vld_out();
    void thread_outStream_V_keep_V_1_ack_in();
    void thread_outStream_V_keep_V_1_ack_out();
    void thread_outStream_V_keep_V_1_data_out();
    void thread_outStream_V_keep_V_1_sel();
    void thread_outStream_V_keep_V_1_vld_in();
    void thread_outStream_V_keep_V_1_vld_out();
    void thread_outStream_V_last_V_1_ack_in();
    void thread_outStream_V_last_V_1_ack_out();
    void thread_outStream_V_last_V_1_data_out();
    void thread_outStream_V_last_V_1_load_A();
    void thread_outStream_V_last_V_1_load_B();
    void thread_outStream_V_last_V_1_sel();
    void thread_outStream_V_last_V_1_state_cmp_full();
    void thread_outStream_V_last_V_1_vld_in();
    void thread_outStream_V_last_V_1_vld_out();
    void thread_outStream_V_strb_V_1_ack_in();
    void thread_outStream_V_strb_V_1_ack_out();
    void thread_outStream_V_strb_V_1_data_out();
    void thread_outStream_V_strb_V_1_sel();
    void thread_outStream_V_strb_V_1_vld_in();
    void thread_outStream_V_strb_V_1_vld_out();
    void thread_outStream_V_user_V_1_ack_in();
    void thread_outStream_V_user_V_1_ack_out();
    void thread_outStream_V_user_V_1_data_out();
    void thread_outStream_V_user_V_1_sel();
    void thread_outStream_V_user_V_1_vld_in();
    void thread_outStream_V_user_V_1_vld_out();
    void thread_p_i_fu_1031_p2();
    void thread_readCount_fu_925_p2();
    void thread_sel_tmp2_fu_1175_p2();
    void thread_sel_tmp3_fu_1180_p2();
    void thread_sel_tmp4_fu_1185_p2();
    void thread_sel_tmp7_fu_642_p2();
    void thread_sel_tmp9_fu_647_p2();
    void thread_sel_tmp_fu_637_p2();
    void thread_tmp1_fu_1019_p2();
    void thread_tmp2_fu_1025_p2();
    void thread_tmp3_fu_1326_p2();
    void thread_tmp4_fu_1332_p2();
    void thread_tmp5_fu_1347_p2();
    void thread_tmp6_fu_1351_p2();
    void thread_tmp7_fu_1355_p2();
    void thread_tmp8_fu_1359_p2();
    void thread_tmp9_fu_1364_p2();
    void thread_tmp_1_i_fu_1013_p2();
    void thread_tmp_2_fu_591_p1();
    void thread_tmp_2_i_fu_985_p2();
    void thread_tmp_2_i_mid1_fu_979_p2();
    void thread_tmp_2_i_mid2_fu_991_p3();
    void thread_tmp_3_fu_633_p1();
    void thread_tmp_6_fu_1037_p1();
    void thread_tmp_7_fu_909_p4();
    void thread_tmp_data_V_fu_1370_p2();
    void thread_tmp_i_15_fu_1007_p2();
    void thread_tmp_i_fu_965_p2();
    void thread_tmp_i_mid1_fu_959_p2();
    void thread_tmp_i_mid2_fu_971_p3();
    void thread_tmp_last_V_fu_1377_p2();
    void thread_window_1_0_phi_fu_569_p4();
    void thread_window_1_1_2_fu_802_p3();
    void thread_window_1_1_phi_fu_558_p4();
    void thread_window_2_0_phi_fu_547_p4();
    void thread_window_2_2_1_fu_818_p3();
    void thread_window_2_2_3_fu_826_p3();
    void thread_window_2_2_4_fu_834_p3();
    void thread_window_2_2_5_fu_842_p3();
    void thread_window_2_2_6_fu_850_p3();
    void thread_window_2_2_7_fu_858_p3();
    void thread_window_2_2_8_fu_866_p3();
    void thread_window_2_2_fu_810_p3();
    void thread_writeCount_fu_1341_p2();
    void thread_x4_mid2_fu_732_p3();
    void thread_x_1_fu_601_p2();
    void thread_x_2_fu_627_p2();
    void thread_x_3_fu_774_p2();
    void thread_x_4_fu_1046_p2();
    void thread_x_assign_mid2_fu_945_p3();
    void thread_y3_mid2_fu_766_p3();
    void thread_y9_fu_760_p2();
    void thread_y_assign_mid2_fu_999_p3();
    void thread_y_s_fu_953_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
