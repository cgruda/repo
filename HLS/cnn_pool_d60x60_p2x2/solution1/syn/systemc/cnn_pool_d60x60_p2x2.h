// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _cnn_pool_d60x60_p2x2_HH_
#define _cnn_pool_d60x60_p2x2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_pool_d60x60_pbkb.h"
#include "cnn_pool_d60x60_p2x2_CTRL_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CTRL_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_CTRL_DATA_WIDTH = 32>
struct cnn_pool_d60x60_p2x2 : public sc_module {
    // Port declarations 38
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > inStream_TDATA;
    sc_in< sc_logic > inStream_TVALID;
    sc_out< sc_logic > inStream_TREADY;
    sc_in< sc_lv<4> > inStream_TKEEP;
    sc_in< sc_lv<4> > inStream_TSTRB;
    sc_in< sc_lv<2> > inStream_TUSER;
    sc_in< sc_lv<1> > inStream_TLAST;
    sc_in< sc_lv<5> > inStream_TID;
    sc_in< sc_lv<6> > inStream_TDEST;
    sc_out< sc_lv<32> > outStream_TDATA;
    sc_out< sc_logic > outStream_TVALID;
    sc_in< sc_logic > outStream_TREADY;
    sc_out< sc_lv<4> > outStream_TKEEP;
    sc_out< sc_lv<4> > outStream_TSTRB;
    sc_out< sc_lv<2> > outStream_TUSER;
    sc_out< sc_lv<1> > outStream_TLAST;
    sc_out< sc_lv<5> > outStream_TID;
    sc_out< sc_lv<6> > outStream_TDEST;
    sc_in< sc_logic > s_axi_CTRL_AWVALID;
    sc_out< sc_logic > s_axi_CTRL_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_ADDR_WIDTH> > s_axi_CTRL_AWADDR;
    sc_in< sc_logic > s_axi_CTRL_WVALID;
    sc_out< sc_logic > s_axi_CTRL_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_DATA_WIDTH> > s_axi_CTRL_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_DATA_WIDTH/8> > s_axi_CTRL_WSTRB;
    sc_in< sc_logic > s_axi_CTRL_ARVALID;
    sc_out< sc_logic > s_axi_CTRL_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_ADDR_WIDTH> > s_axi_CTRL_ARADDR;
    sc_out< sc_logic > s_axi_CTRL_RVALID;
    sc_in< sc_logic > s_axi_CTRL_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_DATA_WIDTH> > s_axi_CTRL_RDATA;
    sc_out< sc_lv<2> > s_axi_CTRL_RRESP;
    sc_out< sc_logic > s_axi_CTRL_BVALID;
    sc_in< sc_logic > s_axi_CTRL_BREADY;
    sc_out< sc_lv<2> > s_axi_CTRL_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    cnn_pool_d60x60_p2x2(sc_module_name name);
    SC_HAS_PROCESS(cnn_pool_d60x60_p2x2);

    ~cnn_pool_d60x60_p2x2();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    cnn_pool_d60x60_p2x2_CTRL_s_axi<C_S_AXI_CTRL_ADDR_WIDTH,C_S_AXI_CTRL_DATA_WIDTH>* cnn_pool_d60x60_p2x2_CTRL_s_axi_U;
    cnn_pool_d60x60_pbkb* lineBuffer_0_U;
    cnn_pool_d60x60_pbkb* lineBuffer_1_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > inStream_V_data_V_0_data_out;
    sc_signal< sc_logic > inStream_V_data_V_0_vld_in;
    sc_signal< sc_logic > inStream_V_data_V_0_vld_out;
    sc_signal< sc_logic > inStream_V_data_V_0_ack_in;
    sc_signal< sc_logic > inStream_V_data_V_0_ack_out;
    sc_signal< sc_lv<32> > inStream_V_data_V_0_payload_A;
    sc_signal< sc_lv<32> > inStream_V_data_V_0_payload_B;
    sc_signal< sc_logic > inStream_V_data_V_0_sel_rd;
    sc_signal< sc_logic > inStream_V_data_V_0_sel_wr;
    sc_signal< sc_logic > inStream_V_data_V_0_sel;
    sc_signal< sc_logic > inStream_V_data_V_0_load_A;
    sc_signal< sc_logic > inStream_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_V_data_V_0_state;
    sc_signal< sc_logic > inStream_V_data_V_0_state_cmp_full;
    sc_signal< sc_logic > inStream_V_dest_V_0_vld_in;
    sc_signal< sc_logic > inStream_V_dest_V_0_ack_out;
    sc_signal< sc_lv<2> > inStream_V_dest_V_0_state;
    sc_signal< sc_lv<32> > outStream_V_data_V_1_data_out;
    sc_signal< sc_logic > outStream_V_data_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_data_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_data_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_data_V_1_ack_out;
    sc_signal< sc_lv<32> > outStream_V_data_V_1_payload_A;
    sc_signal< sc_lv<32> > outStream_V_data_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_data_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_data_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_data_V_1_sel;
    sc_signal< sc_logic > outStream_V_data_V_1_load_A;
    sc_signal< sc_logic > outStream_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_data_V_1_state;
    sc_signal< sc_logic > outStream_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > outStream_V_keep_V_1_data_out;
    sc_signal< sc_logic > outStream_V_keep_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_keep_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_keep_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_keep_V_1_ack_out;
    sc_signal< sc_logic > outStream_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_keep_V_1_sel;
    sc_signal< sc_lv<2> > outStream_V_keep_V_1_state;
    sc_signal< sc_lv<4> > outStream_V_strb_V_1_data_out;
    sc_signal< sc_logic > outStream_V_strb_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_strb_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_strb_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_strb_V_1_ack_out;
    sc_signal< sc_logic > outStream_V_strb_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_strb_V_1_sel;
    sc_signal< sc_lv<2> > outStream_V_strb_V_1_state;
    sc_signal< sc_lv<2> > outStream_V_user_V_1_data_out;
    sc_signal< sc_logic > outStream_V_user_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_user_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_user_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_user_V_1_ack_out;
    sc_signal< sc_logic > outStream_V_user_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_user_V_1_sel;
    sc_signal< sc_lv<2> > outStream_V_user_V_1_state;
    sc_signal< sc_lv<1> > outStream_V_last_V_1_data_out;
    sc_signal< sc_logic > outStream_V_last_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_last_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_last_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > outStream_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > outStream_V_last_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_last_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_last_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_last_V_1_sel;
    sc_signal< sc_logic > outStream_V_last_V_1_load_A;
    sc_signal< sc_logic > outStream_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_last_V_1_state;
    sc_signal< sc_logic > outStream_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<5> > outStream_V_id_V_1_data_out;
    sc_signal< sc_logic > outStream_V_id_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_id_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_id_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_id_V_1_ack_out;
    sc_signal< sc_logic > outStream_V_id_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_id_V_1_sel;
    sc_signal< sc_lv<2> > outStream_V_id_V_1_state;
    sc_signal< sc_lv<6> > outStream_V_dest_V_1_data_out;
    sc_signal< sc_logic > outStream_V_dest_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_dest_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_dest_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_dest_V_1_ack_out;
    sc_signal< sc_logic > outStream_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_dest_V_1_sel;
    sc_signal< sc_lv<2> > outStream_V_dest_V_1_state;
    sc_signal< sc_lv<32> > ctrl;
    sc_signal< sc_logic > inStream_TDATA_blk_n;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<1> > exitcond1_reg_895;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_lv<1> > exitcond4_reg_904;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp3_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter1;
    sc_signal< sc_lv<1> > exitcond_flatten8_reg_1018;
    sc_signal< sc_lv<1> > tmp_7_reg_1048;
    sc_signal< sc_logic > outStream_TDATA_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter2;
    sc_signal< sc_lv<1> > tmp_reg_1032;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp3_iter1_tmp_reg_1032;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter3;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp3_iter2_tmp_reg_1032;
    sc_signal< sc_lv<4> > x_reg_289;
    sc_signal< sc_lv<6> > x1_reg_301;
    sc_signal< sc_lv<3> > indvar_flatten_reg_313;
    sc_signal< sc_lv<2> > y3_reg_324;
    sc_signal< sc_lv<32> > window_1_2_1_reg_335;
    sc_signal< sc_lv<32> > window_1_1_1_reg_347;
    sc_signal< sc_lv<2> > x4_reg_359;
    sc_signal< sc_lv<12> > indvar_flatten6_reg_370;
    sc_signal< sc_lv<6> > y_assign_reg_381;
    sc_signal< sc_lv<6> > x_assign_reg_392;
    sc_signal< sc_lv<32> > window_1_1_reg_403;
    sc_signal< sc_lv<32> > window_1_0_reg_414;
    sc_signal< sc_lv<32> > ctrl_read_reg_890;
    sc_signal< sc_lv<1> > exitcond1_fu_432_p2;
    sc_signal< sc_lv<4> > x_1_fu_438_p2;
    sc_signal< sc_lv<4> > x_1_reg_899;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > exitcond4_fu_453_p2;
    sc_signal< sc_lv<6> > x_2_fu_459_p2;
    sc_signal< sc_lv<6> > x_2_reg_908;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_470_p2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_913;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp2_stage0;
    sc_signal< sc_lv<3> > indvar_flatten_next_fu_476_p2;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter0;
    sc_signal< sc_lv<2> > tmp_3_mid2_v_fu_502_p3;
    sc_signal< sc_lv<2> > tmp_3_mid2_v_reg_922;
    sc_signal< sc_lv<1> > tmp_10_fu_510_p1;
    sc_signal< sc_lv<1> > tmp_10_reg_927;
    sc_signal< sc_lv<1> > cond_mid2_fu_526_p3;
    sc_signal< sc_lv<1> > cond_mid2_reg_932;
    sc_signal< sc_lv<1> > cond1_fu_554_p2;
    sc_signal< sc_lv<1> > cond1_reg_948;
    sc_signal< sc_lv<2> > x_3_fu_560_p2;
    sc_signal< sc_lv<32> > window_2_2_4_fu_587_p3;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter1;
    sc_signal< sc_lv<32> > window_2_2_5_fu_594_p3;
    sc_signal< sc_lv<1> > tmp_9_fu_601_p1;
    sc_signal< sc_lv<1> > tmp_9_reg_1013;
    sc_signal< sc_lv<1> > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > exitcond_flatten8_fu_614_p2;
    sc_signal< bool > ap_condition_1038;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1018;
    sc_signal< sc_lv<12> > indvar_flatten_next7_fu_620_p2;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter0;
    sc_signal< sc_lv<6> > y_assign_cast7_mid2_s_fu_646_p3;
    sc_signal< sc_lv<6> > y_assign_cast7_mid2_s_reg_1027;
    sc_signal< sc_lv<1> > tmp_fu_668_p2;
    sc_signal< sc_lv<6> > lineBuffer_0_addr_2_reg_1036;
    sc_signal< sc_lv<6> > lineBuffer_1_addr_2_reg_1042;
    sc_signal< sc_lv<6> > ap_pipeline_reg_pp3_iter1_lineBuffer_1_addr_2_reg_1042;
    sc_signal< sc_lv<1> > tmp_7_fu_677_p2;
    sc_signal< sc_lv<6> > x_4_fu_694_p2;
    sc_signal< sc_lv<32> > maxValue_17_0_maxVal_fu_747_p3;
    sc_signal< sc_lv<32> > maxValue_17_0_maxVal_reg_1057;
    sc_signal< sc_lv<1> > tmp_13_fu_773_p3;
    sc_signal< sc_lv<1> > tmp_13_reg_1063;
    sc_signal< sc_lv<20> > result_fu_807_p3;
    sc_signal< sc_lv<20> > result_reg_1068;
    sc_signal< sc_lv<32> > lineBuffer_1_q0;
    sc_signal< sc_lv<32> > windowRightCol_1_reg_1073;
    sc_signal< sc_lv<32> > tmp_data_V_2_fu_866_p3;
    sc_signal< sc_lv<1> > tmp_last_V_fu_874_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > ap_CS_fsm_state7;
    sc_signal< sc_lv<6> > lineBuffer_0_address0;
    sc_signal< sc_logic > lineBuffer_0_ce0;
    sc_signal< sc_logic > lineBuffer_0_we0;
    sc_signal< sc_lv<32> > lineBuffer_0_q0;
    sc_signal< sc_logic > lineBuffer_0_ce1;
    sc_signal< sc_logic > lineBuffer_0_we1;
    sc_signal< sc_lv<6> > lineBuffer_1_address0;
    sc_signal< sc_logic > lineBuffer_1_ce0;
    sc_signal< sc_logic > lineBuffer_1_we0;
    sc_signal< sc_logic > lineBuffer_1_ce1;
    sc_signal< sc_logic > lineBuffer_1_we1;
    sc_signal< sc_lv<4> > x_phi_fu_293_p4;
    sc_signal< sc_lv<6> > x1_phi_fu_305_p4;
    sc_signal< sc_lv<2> > y3_phi_fu_328_p4;
    sc_signal< sc_lv<6> > y_assign_phi_fu_385_p4;
    sc_signal< sc_lv<32> > window_1_0_phi_fu_417_p4;
    sc_signal< sc_lv<32> > x_cast1_fu_448_p1;
    sc_signal< sc_lv<32> > x1_cast_fu_465_p1;
    sc_signal< sc_lv<32> > tmp_5_cast_fu_548_p1;
    sc_signal< sc_lv<32> > x_assign_cast5_fu_662_p1;
    sc_signal< sc_lv<32> > window_0_0_read_as_fu_150;
    sc_signal< sc_lv<32> > window_0_0_fu_154;
    sc_signal< sc_lv<32> > window_0_1_fu_158;
    sc_signal< sc_lv<32> > window_1_0_read_as_fu_162;
    sc_signal< sc_lv<32> > writeCount_1_fu_166;
    sc_signal< sc_lv<32> > writeCount_fu_828_p2;
    sc_signal< sc_lv<32> > readCount_1_fu_170;
    sc_signal< sc_lv<32> > readCount_fu_683_p2;
    sc_signal< sc_lv<32> > window_2_2_2_fu_174;
    sc_signal< sc_lv<6> > x_cast_fu_444_p1;
    sc_signal< sc_lv<1> > exitcond_fu_482_p2;
    sc_signal< sc_lv<2> > y9_fu_496_p2;
    sc_signal< sc_lv<1> > cond_mid1_fu_514_p2;
    sc_signal< sc_lv<1> > cond_fu_520_p2;
    sc_signal< sc_lv<2> > x4_mid2_fu_488_p3;
    sc_signal< sc_lv<4> > x4_cast9_cast_fu_534_p1;
    sc_signal< sc_lv<4> > tmp_5_fu_538_p2;
    sc_signal< sc_lv<6> > tmp_5_cast1_fu_544_p1;
    sc_signal< sc_lv<32> > window_2_2_7_fu_566_p3;
    sc_signal< sc_lv<32> > window_2_2_fu_573_p3;
    sc_signal< sc_lv<32> > window_2_2_1_fu_580_p3;
    sc_signal< sc_lv<1> > exitcond2_fu_626_p2;
    sc_signal< sc_lv<6> > y_s_fu_640_p2;
    sc_signal< sc_lv<6> > x_assign_mid2_fu_632_p3;
    sc_signal< sc_lv<1> > tmp_11_fu_654_p1;
    sc_signal< sc_lv<1> > tmp_12_fu_658_p1;
    sc_signal< sc_lv<1> > tmp_4_0_1_i_fu_727_p2;
    sc_signal< sc_lv<32> > maxValue_0_1_maxVal_fu_733_p3;
    sc_signal< sc_lv<1> > tmp_4_1_i_fu_741_p2;
    sc_signal< sc_lv<32> > tmp4_fu_761_p2;
    sc_signal< sc_lv<32> > tmp3_fu_755_p2;
    sc_signal< sc_lv<32> > a_assign_fu_767_p2;
    sc_signal< sc_lv<32> > tmp_1_i_i_fu_781_p2;
    sc_signal< sc_lv<20> > tmp_3_fu_787_p4;
    sc_signal< sc_lv<20> > tmp_6_fu_797_p4;
    sc_signal< sc_lv<1> > tmp_4_1_1_i_fu_834_p2;
    sc_signal< sc_lv<21> > result_cast_fu_846_p1;
    sc_signal< sc_lv<21> > tmp_4_i_i_fu_849_p2;
    sc_signal< sc_lv<21> > result_1_fu_855_p3;
    sc_signal< sc_lv<32> > result_1_cast_fu_862_p1;
    sc_signal< sc_lv<32> > sel_SEBB_i_fu_839_p3;
    sc_signal< sc_lv<1> > ap_CS_fsm_state15;
    sc_signal< bool > ap_condition_1535;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    sc_signal< bool > ap_condition_1049;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_pp0_stage0;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_pp1_stage0;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_pp2_stage0;
    static const sc_lv<9> ap_ST_fsm_state10;
    static const sc_lv<9> ap_ST_fsm_pp3_stage0;
    static const sc_lv<9> ap_ST_fsm_state15;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_7;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<6> ap_const_lv6_3C;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_lv<12> ap_const_lv12_E10;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<32> ap_const_lv32_E10;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<21> ap_const_lv21_0;
    static const sc_lv<32> ap_const_lv32_384;
    static const sc_lv<32> ap_const_lv32_8;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_a_assign_fu_767_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp2_stage0();
    void thread_ap_CS_fsm_pp3_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state7();
    void thread_ap_condition_1038();
    void thread_ap_condition_1049();
    void thread_ap_condition_1535();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_cond1_fu_554_p2();
    void thread_cond_fu_520_p2();
    void thread_cond_mid1_fu_514_p2();
    void thread_cond_mid2_fu_526_p3();
    void thread_exitcond1_fu_432_p2();
    void thread_exitcond2_fu_626_p2();
    void thread_exitcond4_fu_453_p2();
    void thread_exitcond_flatten8_fu_614_p2();
    void thread_exitcond_flatten_fu_470_p2();
    void thread_exitcond_fu_482_p2();
    void thread_inStream_TDATA_blk_n();
    void thread_inStream_TREADY();
    void thread_inStream_V_data_V_0_ack_in();
    void thread_inStream_V_data_V_0_ack_out();
    void thread_inStream_V_data_V_0_data_out();
    void thread_inStream_V_data_V_0_load_A();
    void thread_inStream_V_data_V_0_load_B();
    void thread_inStream_V_data_V_0_sel();
    void thread_inStream_V_data_V_0_state_cmp_full();
    void thread_inStream_V_data_V_0_vld_in();
    void thread_inStream_V_data_V_0_vld_out();
    void thread_inStream_V_dest_V_0_ack_out();
    void thread_inStream_V_dest_V_0_vld_in();
    void thread_indvar_flatten_next7_fu_620_p2();
    void thread_indvar_flatten_next_fu_476_p2();
    void thread_lineBuffer_0_address0();
    void thread_lineBuffer_0_ce0();
    void thread_lineBuffer_0_ce1();
    void thread_lineBuffer_0_we0();
    void thread_lineBuffer_0_we1();
    void thread_lineBuffer_1_address0();
    void thread_lineBuffer_1_ce0();
    void thread_lineBuffer_1_ce1();
    void thread_lineBuffer_1_we0();
    void thread_lineBuffer_1_we1();
    void thread_maxValue_0_1_maxVal_fu_733_p3();
    void thread_maxValue_17_0_maxVal_fu_747_p3();
    void thread_outStream_TDATA();
    void thread_outStream_TDATA_blk_n();
    void thread_outStream_TDEST();
    void thread_outStream_TID();
    void thread_outStream_TKEEP();
    void thread_outStream_TLAST();
    void thread_outStream_TSTRB();
    void thread_outStream_TUSER();
    void thread_outStream_TVALID();
    void thread_outStream_V_data_V_1_ack_in();
    void thread_outStream_V_data_V_1_ack_out();
    void thread_outStream_V_data_V_1_data_out();
    void thread_outStream_V_data_V_1_load_A();
    void thread_outStream_V_data_V_1_load_B();
    void thread_outStream_V_data_V_1_sel();
    void thread_outStream_V_data_V_1_state_cmp_full();
    void thread_outStream_V_data_V_1_vld_in();
    void thread_outStream_V_data_V_1_vld_out();
    void thread_outStream_V_dest_V_1_ack_in();
    void thread_outStream_V_dest_V_1_ack_out();
    void thread_outStream_V_dest_V_1_data_out();
    void thread_outStream_V_dest_V_1_sel();
    void thread_outStream_V_dest_V_1_vld_in();
    void thread_outStream_V_dest_V_1_vld_out();
    void thread_outStream_V_id_V_1_ack_in();
    void thread_outStream_V_id_V_1_ack_out();
    void thread_outStream_V_id_V_1_data_out();
    void thread_outStream_V_id_V_1_sel();
    void thread_outStream_V_id_V_1_vld_in();
    void thread_outStream_V_id_V_1_vld_out();
    void thread_outStream_V_keep_V_1_ack_in();
    void thread_outStream_V_keep_V_1_ack_out();
    void thread_outStream_V_keep_V_1_data_out();
    void thread_outStream_V_keep_V_1_sel();
    void thread_outStream_V_keep_V_1_vld_in();
    void thread_outStream_V_keep_V_1_vld_out();
    void thread_outStream_V_last_V_1_ack_in();
    void thread_outStream_V_last_V_1_ack_out();
    void thread_outStream_V_last_V_1_data_out();
    void thread_outStream_V_last_V_1_load_A();
    void thread_outStream_V_last_V_1_load_B();
    void thread_outStream_V_last_V_1_sel();
    void thread_outStream_V_last_V_1_state_cmp_full();
    void thread_outStream_V_last_V_1_vld_in();
    void thread_outStream_V_last_V_1_vld_out();
    void thread_outStream_V_strb_V_1_ack_in();
    void thread_outStream_V_strb_V_1_ack_out();
    void thread_outStream_V_strb_V_1_data_out();
    void thread_outStream_V_strb_V_1_sel();
    void thread_outStream_V_strb_V_1_vld_in();
    void thread_outStream_V_strb_V_1_vld_out();
    void thread_outStream_V_user_V_1_ack_in();
    void thread_outStream_V_user_V_1_ack_out();
    void thread_outStream_V_user_V_1_data_out();
    void thread_outStream_V_user_V_1_sel();
    void thread_outStream_V_user_V_1_vld_in();
    void thread_outStream_V_user_V_1_vld_out();
    void thread_readCount_fu_683_p2();
    void thread_result_1_cast_fu_862_p1();
    void thread_result_1_fu_855_p3();
    void thread_result_cast_fu_846_p1();
    void thread_result_fu_807_p3();
    void thread_sel_SEBB_i_fu_839_p3();
    void thread_tmp3_fu_755_p2();
    void thread_tmp4_fu_761_p2();
    void thread_tmp_10_fu_510_p1();
    void thread_tmp_11_fu_654_p1();
    void thread_tmp_12_fu_658_p1();
    void thread_tmp_13_fu_773_p3();
    void thread_tmp_1_i_i_fu_781_p2();
    void thread_tmp_3_fu_787_p4();
    void thread_tmp_3_mid2_v_fu_502_p3();
    void thread_tmp_4_0_1_i_fu_727_p2();
    void thread_tmp_4_1_1_i_fu_834_p2();
    void thread_tmp_4_1_i_fu_741_p2();
    void thread_tmp_4_i_i_fu_849_p2();
    void thread_tmp_5_cast1_fu_544_p1();
    void thread_tmp_5_cast_fu_548_p1();
    void thread_tmp_5_fu_538_p2();
    void thread_tmp_6_fu_797_p4();
    void thread_tmp_7_fu_677_p2();
    void thread_tmp_9_fu_601_p1();
    void thread_tmp_data_V_2_fu_866_p3();
    void thread_tmp_fu_668_p2();
    void thread_tmp_last_V_fu_874_p2();
    void thread_window_1_0_phi_fu_417_p4();
    void thread_window_2_2_1_fu_580_p3();
    void thread_window_2_2_4_fu_587_p3();
    void thread_window_2_2_5_fu_594_p3();
    void thread_window_2_2_7_fu_566_p3();
    void thread_window_2_2_fu_573_p3();
    void thread_writeCount_fu_828_p2();
    void thread_x1_cast_fu_465_p1();
    void thread_x1_phi_fu_305_p4();
    void thread_x4_cast9_cast_fu_534_p1();
    void thread_x4_mid2_fu_488_p3();
    void thread_x_1_fu_438_p2();
    void thread_x_2_fu_459_p2();
    void thread_x_3_fu_560_p2();
    void thread_x_4_fu_694_p2();
    void thread_x_assign_cast5_fu_662_p1();
    void thread_x_assign_mid2_fu_632_p3();
    void thread_x_cast1_fu_448_p1();
    void thread_x_cast_fu_444_p1();
    void thread_x_phi_fu_293_p4();
    void thread_y3_phi_fu_328_p4();
    void thread_y9_fu_496_p2();
    void thread_y_assign_cast7_mid2_s_fu_646_p3();
    void thread_y_assign_phi_fu_385_p4();
    void thread_y_s_fu_640_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
