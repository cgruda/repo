// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _cnn_conv_d14x14_k3x3_HH_
#define _cnn_conv_d14x14_k3x3_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "fixed_point_mul.h"
#include "cnn_conv_d14x14_kcud.h"
#include "cnn_conv_d14x14_k3x3_CTRL_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CTRL_ADDR_WIDTH = 7,
         unsigned int C_S_AXI_CTRL_DATA_WIDTH = 32>
struct cnn_conv_d14x14_k3x3 : public sc_module {
    // Port declarations 38
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > inStream_TDATA;
    sc_in< sc_logic > inStream_TVALID;
    sc_out< sc_logic > inStream_TREADY;
    sc_in< sc_lv<4> > inStream_TKEEP;
    sc_in< sc_lv<4> > inStream_TSTRB;
    sc_in< sc_lv<2> > inStream_TUSER;
    sc_in< sc_lv<1> > inStream_TLAST;
    sc_in< sc_lv<5> > inStream_TID;
    sc_in< sc_lv<6> > inStream_TDEST;
    sc_out< sc_lv<32> > outStream_TDATA;
    sc_out< sc_logic > outStream_TVALID;
    sc_in< sc_logic > outStream_TREADY;
    sc_out< sc_lv<4> > outStream_TKEEP;
    sc_out< sc_lv<4> > outStream_TSTRB;
    sc_out< sc_lv<2> > outStream_TUSER;
    sc_out< sc_lv<1> > outStream_TLAST;
    sc_out< sc_lv<5> > outStream_TID;
    sc_out< sc_lv<6> > outStream_TDEST;
    sc_in< sc_logic > s_axi_CTRL_AWVALID;
    sc_out< sc_logic > s_axi_CTRL_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_ADDR_WIDTH> > s_axi_CTRL_AWADDR;
    sc_in< sc_logic > s_axi_CTRL_WVALID;
    sc_out< sc_logic > s_axi_CTRL_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_DATA_WIDTH> > s_axi_CTRL_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_DATA_WIDTH/8> > s_axi_CTRL_WSTRB;
    sc_in< sc_logic > s_axi_CTRL_ARVALID;
    sc_out< sc_logic > s_axi_CTRL_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_ADDR_WIDTH> > s_axi_CTRL_ARADDR;
    sc_out< sc_logic > s_axi_CTRL_RVALID;
    sc_in< sc_logic > s_axi_CTRL_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_DATA_WIDTH> > s_axi_CTRL_RDATA;
    sc_out< sc_lv<2> > s_axi_CTRL_RRESP;
    sc_out< sc_logic > s_axi_CTRL_BVALID;
    sc_in< sc_logic > s_axi_CTRL_BREADY;
    sc_out< sc_lv<2> > s_axi_CTRL_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    cnn_conv_d14x14_k3x3(sc_module_name name);
    SC_HAS_PROCESS(cnn_conv_d14x14_k3x3);

    ~cnn_conv_d14x14_k3x3();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    cnn_conv_d14x14_k3x3_CTRL_s_axi<C_S_AXI_CTRL_ADDR_WIDTH,C_S_AXI_CTRL_DATA_WIDTH>* cnn_conv_d14x14_k3x3_CTRL_s_axi_U;
    cnn_conv_d14x14_kcud* lineBuffer_0_U;
    cnn_conv_d14x14_kcud* lineBuffer_1_U;
    fixed_point_mul* grp_fixed_point_mul_fu_525;
    fixed_point_mul* grp_fixed_point_mul_fu_532;
    fixed_point_mul* grp_fixed_point_mul_fu_539;
    fixed_point_mul* grp_fixed_point_mul_fu_546;
    fixed_point_mul* grp_fixed_point_mul_fu_553;
    fixed_point_mul* grp_fixed_point_mul_fu_561;
    fixed_point_mul* grp_fixed_point_mul_fu_569;
    fixed_point_mul* grp_fixed_point_mul_fu_576;
    fixed_point_mul* grp_fixed_point_mul_fu_584;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > inStream_V_data_V_0_data_out;
    sc_signal< sc_logic > inStream_V_data_V_0_vld_in;
    sc_signal< sc_logic > inStream_V_data_V_0_vld_out;
    sc_signal< sc_logic > inStream_V_data_V_0_ack_in;
    sc_signal< sc_logic > inStream_V_data_V_0_ack_out;
    sc_signal< sc_lv<32> > inStream_V_data_V_0_payload_A;
    sc_signal< sc_lv<32> > inStream_V_data_V_0_payload_B;
    sc_signal< sc_logic > inStream_V_data_V_0_sel_rd;
    sc_signal< sc_logic > inStream_V_data_V_0_sel_wr;
    sc_signal< sc_logic > inStream_V_data_V_0_sel;
    sc_signal< sc_logic > inStream_V_data_V_0_load_A;
    sc_signal< sc_logic > inStream_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_V_data_V_0_state;
    sc_signal< sc_logic > inStream_V_data_V_0_state_cmp_full;
    sc_signal< sc_logic > inStream_V_dest_V_0_vld_in;
    sc_signal< sc_logic > inStream_V_dest_V_0_ack_out;
    sc_signal< sc_lv<2> > inStream_V_dest_V_0_state;
    sc_signal< sc_lv<32> > outStream_V_data_V_1_data_out;
    sc_signal< sc_logic > outStream_V_data_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_data_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_data_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_data_V_1_ack_out;
    sc_signal< sc_lv<32> > outStream_V_data_V_1_payload_A;
    sc_signal< sc_lv<32> > outStream_V_data_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_data_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_data_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_data_V_1_sel;
    sc_signal< sc_logic > outStream_V_data_V_1_load_A;
    sc_signal< sc_logic > outStream_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_data_V_1_state;
    sc_signal< sc_logic > outStream_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > outStream_V_keep_V_1_data_out;
    sc_signal< sc_logic > outStream_V_keep_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_keep_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_keep_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_keep_V_1_ack_out;
    sc_signal< sc_logic > outStream_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_keep_V_1_sel;
    sc_signal< sc_lv<2> > outStream_V_keep_V_1_state;
    sc_signal< sc_lv<4> > outStream_V_strb_V_1_data_out;
    sc_signal< sc_logic > outStream_V_strb_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_strb_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_strb_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_strb_V_1_ack_out;
    sc_signal< sc_logic > outStream_V_strb_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_strb_V_1_sel;
    sc_signal< sc_lv<2> > outStream_V_strb_V_1_state;
    sc_signal< sc_lv<2> > outStream_V_user_V_1_data_out;
    sc_signal< sc_logic > outStream_V_user_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_user_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_user_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_user_V_1_ack_out;
    sc_signal< sc_logic > outStream_V_user_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_user_V_1_sel;
    sc_signal< sc_lv<2> > outStream_V_user_V_1_state;
    sc_signal< sc_lv<1> > outStream_V_last_V_1_data_out;
    sc_signal< sc_logic > outStream_V_last_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_last_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_last_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > outStream_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > outStream_V_last_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_last_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_last_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_last_V_1_sel;
    sc_signal< sc_logic > outStream_V_last_V_1_load_A;
    sc_signal< sc_logic > outStream_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_last_V_1_state;
    sc_signal< sc_logic > outStream_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<5> > outStream_V_id_V_1_data_out;
    sc_signal< sc_logic > outStream_V_id_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_id_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_id_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_id_V_1_ack_out;
    sc_signal< sc_logic > outStream_V_id_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_id_V_1_sel;
    sc_signal< sc_lv<2> > outStream_V_id_V_1_state;
    sc_signal< sc_lv<6> > outStream_V_dest_V_1_data_out;
    sc_signal< sc_logic > outStream_V_dest_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_dest_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_dest_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_dest_V_1_ack_out;
    sc_signal< sc_logic > outStream_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_dest_V_1_sel;
    sc_signal< sc_lv<2> > outStream_V_dest_V_1_state;
    sc_signal< sc_lv<32> > ctrl;
    sc_signal< sc_lv<32> > kernel_0;
    sc_signal< sc_lv<32> > kernel_1;
    sc_signal< sc_lv<32> > kernel_2;
    sc_signal< sc_lv<32> > kernel_3;
    sc_signal< sc_lv<32> > kernel_4;
    sc_signal< sc_lv<32> > kernel_5;
    sc_signal< sc_lv<32> > kernel_6;
    sc_signal< sc_lv<32> > kernel_7;
    sc_signal< sc_lv<32> > kernel_8;
    sc_signal< sc_logic > inStream_TDATA_blk_n;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<1> > exitcond1_reg_1190;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_lv<1> > exitcond4_reg_1199;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp3_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter1;
    sc_signal< sc_lv<1> > exitcond_flatten8_reg_1337;
    sc_signal< sc_lv<1> > tmp_5_reg_1367;
    sc_signal< sc_logic > outStream_TDATA_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter9;
    sc_signal< sc_lv<1> > p_i_reg_1351;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp3_iter8_p_i_reg_1351;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter10;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp3_iter9_p_i_reg_1351;
    sc_signal< sc_lv<3> > x_reg_365;
    sc_signal< sc_lv<4> > x1_reg_377;
    sc_signal< sc_lv<3> > indvar_flatten_reg_389;
    sc_signal< sc_lv<2> > y3_reg_400;
    sc_signal< sc_lv<32> > window_2_1_1_reg_411;
    sc_signal< sc_lv<32> > window_1_2_1_reg_423;
    sc_signal< sc_lv<32> > window_1_1_1_reg_435;
    sc_signal< sc_lv<2> > x4_reg_447;
    sc_signal< sc_lv<8> > indvar_flatten6_reg_458;
    sc_signal< sc_lv<4> > y_assign_reg_469;
    sc_signal< sc_lv<4> > x_assign_reg_480;
    sc_signal< sc_lv<32> > window_2_0_reg_491;
    sc_signal< bool > ap_condition_965;
    sc_signal< sc_lv<32> > window_1_1_reg_502;
    sc_signal< sc_lv<32> > window_1_0_reg_513;
    sc_signal< sc_lv<32> > ctrl_read_reg_1185;
    sc_signal< sc_lv<1> > exitcond1_fu_600_p2;
    sc_signal< sc_lv<3> > x_1_fu_606_p2;
    sc_signal< sc_lv<3> > x_1_reg_1194;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > exitcond4_fu_621_p2;
    sc_signal< sc_lv<4> > x_2_fu_627_p2;
    sc_signal< sc_lv<4> > x_2_reg_1203;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_638_p2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_1214;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp2_stage0;
    sc_signal< sc_lv<3> > indvar_flatten_next_fu_644_p2;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter0;
    sc_signal< sc_lv<2> > tmp_2_mid2_v_fu_670_p3;
    sc_signal< sc_lv<2> > tmp_2_mid2_v_reg_1223;
    sc_signal< sc_lv<1> > tmp_9_fu_678_p1;
    sc_signal< sc_lv<1> > tmp_9_reg_1228;
    sc_signal< sc_lv<1> > cond_mid2_fu_694_p3;
    sc_signal< sc_lv<1> > cond_mid2_reg_1233;
    sc_signal< sc_lv<1> > cond1_fu_718_p2;
    sc_signal< sc_lv<1> > cond1_reg_1251;
    sc_signal< sc_lv<2> > x_3_fu_724_p2;
    sc_signal< sc_lv<32> > window_2_2_7_fu_772_p3;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter1;
    sc_signal< sc_lv<32> > window_2_2_8_fu_779_p3;
    sc_signal< sc_lv<32> > window_2_2_9_fu_786_p3;
    sc_signal< sc_lv<1> > tmp_8_fu_798_p1;
    sc_signal< sc_lv<1> > tmp_8_reg_1332;
    sc_signal< sc_lv<1> > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > exitcond_flatten8_fu_816_p2;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1337;
    sc_signal< sc_lv<8> > indvar_flatten_next7_fu_822_p2;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter0;
    sc_signal< sc_lv<4> > y_assign_mid2_fu_888_p3;
    sc_signal< sc_lv<1> > p_i_fu_926_p2;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp3_iter1_p_i_reg_1351;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp3_iter2_p_i_reg_1351;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp3_iter3_p_i_reg_1351;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp3_iter4_p_i_reg_1351;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp3_iter5_p_i_reg_1351;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp3_iter6_p_i_reg_1351;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp3_iter7_p_i_reg_1351;
    sc_signal< sc_lv<4> > lineBuffer_0_addr_2_reg_1355;
    sc_signal< sc_lv<4> > lineBuffer_1_addr_2_reg_1361;
    sc_signal< sc_lv<4> > ap_pipeline_reg_pp3_iter1_lineBuffer_1_addr_2_reg_1361;
    sc_signal< sc_lv<1> > tmp_5_fu_935_p2;
    sc_signal< sc_lv<4> > x_4_fu_952_p2;
    sc_signal< sc_lv<32> > window_2_1_2_reg_1376;
    sc_signal< sc_lv<32> > lineBuffer_1_q0;
    sc_signal< sc_lv<32> > windowRightCol_1_reg_1382;
    sc_signal< sc_lv<25> > tmp5_fu_1055_p2;
    sc_signal< sc_lv<25> > tmp5_reg_1387;
    sc_signal< sc_lv<24> > tmp6_fu_1069_p2;
    sc_signal< sc_lv<24> > tmp6_reg_1392;
    sc_signal< sc_lv<25> > tmp8_fu_1097_p2;
    sc_signal< sc_lv<25> > tmp8_reg_1397;
    sc_signal< sc_lv<32> > tmp_data_V_2_fu_1165_p3;
    sc_signal< sc_lv<1> > tmp_last_V_fu_1173_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter8;
    sc_signal< sc_lv<4> > lineBuffer_0_address0;
    sc_signal< sc_logic > lineBuffer_0_ce0;
    sc_signal< sc_logic > lineBuffer_0_we0;
    sc_signal< sc_lv<32> > lineBuffer_0_q0;
    sc_signal< sc_logic > lineBuffer_0_ce1;
    sc_signal< sc_logic > lineBuffer_0_we1;
    sc_signal< sc_lv<4> > lineBuffer_1_address0;
    sc_signal< sc_logic > lineBuffer_1_ce0;
    sc_signal< sc_logic > lineBuffer_1_we0;
    sc_signal< sc_logic > lineBuffer_1_ce1;
    sc_signal< sc_logic > lineBuffer_1_we1;
    sc_signal< sc_lv<23> > grp_fixed_point_mul_fu_525_ap_return;
    sc_signal< sc_logic > grp_fixed_point_mul_fu_525_ap_ce;
    sc_signal< sc_lv<23> > grp_fixed_point_mul_fu_532_ap_return;
    sc_signal< sc_logic > grp_fixed_point_mul_fu_532_ap_ce;
    sc_signal< sc_lv<23> > grp_fixed_point_mul_fu_539_ap_return;
    sc_signal< sc_logic > grp_fixed_point_mul_fu_539_ap_ce;
    sc_signal< sc_lv<23> > grp_fixed_point_mul_fu_546_ap_return;
    sc_signal< sc_logic > grp_fixed_point_mul_fu_546_ap_ce;
    sc_signal< sc_lv<23> > grp_fixed_point_mul_fu_553_ap_return;
    sc_signal< sc_logic > grp_fixed_point_mul_fu_553_ap_ce;
    sc_signal< sc_lv<23> > grp_fixed_point_mul_fu_561_ap_return;
    sc_signal< sc_logic > grp_fixed_point_mul_fu_561_ap_ce;
    sc_signal< sc_lv<23> > grp_fixed_point_mul_fu_569_ap_return;
    sc_signal< sc_logic > grp_fixed_point_mul_fu_569_ap_ce;
    sc_signal< sc_lv<23> > grp_fixed_point_mul_fu_576_ap_return;
    sc_signal< sc_logic > grp_fixed_point_mul_fu_576_ap_ce;
    sc_signal< sc_lv<23> > grp_fixed_point_mul_fu_584_ap_return;
    sc_signal< sc_logic > grp_fixed_point_mul_fu_584_ap_ce;
    sc_signal< sc_lv<3> > x_phi_fu_369_p4;
    sc_signal< sc_lv<4> > x1_phi_fu_381_p4;
    sc_signal< sc_lv<2> > y3_phi_fu_404_p4;
    sc_signal< sc_lv<32> > window_2_0_phi_fu_494_p4;
    sc_signal< sc_lv<32> > window_1_1_phi_fu_505_p4;
    sc_signal< sc_lv<32> > window_1_0_phi_fu_516_p4;
    sc_signal< sc_lv<32> > x_cast1_fu_616_p1;
    sc_signal< sc_lv<32> > x1_cast_fu_633_p1;
    sc_signal< sc_lv<32> > tmp_cast_fu_712_p1;
    sc_signal< sc_lv<32> > x_assign_cast_fu_896_p1;
    sc_signal< sc_lv<32> > window_2_2_fu_164;
    sc_signal< sc_lv<32> > window_2_2_6_fu_765_p3;
    sc_signal< sc_lv<32> > window_0_0_read_as_fu_168;
    sc_signal< sc_lv<32> > window_0_0_fu_172;
    sc_signal< sc_lv<32> > window_0_1_fu_176;
    sc_signal< sc_lv<32> > window_1_0_read_as_fu_180;
    sc_signal< sc_lv<32> > window_2_0_read_as_fu_184;
    sc_signal< sc_lv<32> > window_2_1_fu_188;
    sc_signal< sc_lv<32> > writeCount_1_fu_192;
    sc_signal< sc_lv<32> > writeCount_fu_1106_p2;
    sc_signal< sc_lv<32> > readCount_1_fu_196;
    sc_signal< sc_lv<32> > readCount_fu_941_p2;
    sc_signal< sc_lv<4> > x_cast_fu_612_p1;
    sc_signal< sc_lv<1> > exitcond_fu_650_p2;
    sc_signal< sc_lv<2> > y9_fu_664_p2;
    sc_signal< sc_lv<1> > cond_mid1_fu_682_p2;
    sc_signal< sc_lv<1> > cond_fu_688_p2;
    sc_signal< sc_lv<2> > x4_mid2_fu_656_p3;
    sc_signal< sc_lv<4> > x4_cast_fu_702_p1;
    sc_signal< sc_lv<4> > tmp_s_fu_706_p2;
    sc_signal< sc_lv<32> > window_1_1_2_fu_730_p3;
    sc_signal< sc_lv<32> > window_2_2_4_fu_751_p3;
    sc_signal< sc_lv<32> > window_2_2_5_fu_758_p3;
    sc_signal< sc_lv<32> > window_2_2_1_fu_737_p3;
    sc_signal< sc_lv<32> > window_2_2_2_fu_744_p3;
    sc_signal< sc_lv<1> > exitcond2_fu_828_p2;
    sc_signal< sc_lv<4> > y_s_fu_842_p2;
    sc_signal< sc_lv<1> > tmp_i_mid1_fu_848_p2;
    sc_signal< sc_lv<1> > tmp_i_fu_854_p2;
    sc_signal< sc_lv<1> > tmp_2_i_mid1_fu_868_p2;
    sc_signal< sc_lv<1> > tmp_2_i_fu_874_p2;
    sc_signal< sc_lv<4> > x_assign_mid2_fu_834_p3;
    sc_signal< sc_lv<1> > tmp_i_15_fu_902_p2;
    sc_signal< sc_lv<1> > tmp_i_mid2_fu_860_p3;
    sc_signal< sc_lv<1> > tmp_1_i_fu_908_p2;
    sc_signal< sc_lv<1> > tmp_2_i_mid2_fu_880_p3;
    sc_signal< sc_lv<1> > tmp3_fu_920_p2;
    sc_signal< sc_lv<1> > tmp2_fu_914_p2;
    sc_signal< sc_lv<24> > tmp11_trunc25_ext_ca_fu_1023_p1;
    sc_signal< sc_lv<24> > tmp11_trunc_ext_cast_fu_1019_p1;
    sc_signal< sc_lv<24> > tmp1_fu_1027_p2;
    sc_signal< sc_lv<24> > tmp12_trunc_ext_cast_fu_1037_p1;
    sc_signal< sc_lv<24> > tmp12_trunc24_ext_ca_fu_1041_p1;
    sc_signal< sc_lv<24> > tmp4_fu_1045_p2;
    sc_signal< sc_lv<25> > tmp11_cast_fu_1033_p1;
    sc_signal< sc_lv<25> > tmp12_cast_fu_1051_p1;
    sc_signal< sc_lv<24> > tmp14_trunc23_ext_ca_fu_1065_p1;
    sc_signal< sc_lv<24> > tmp14_trunc_ext_cast_fu_1061_p1;
    sc_signal< sc_lv<24> > tmp16_trunc26_ext_ca_fu_1079_p1;
    sc_signal< sc_lv<24> > tmp16_trunc_ext_cast_fu_1075_p1;
    sc_signal< sc_lv<24> > tmp7_fu_1083_p2;
    sc_signal< sc_lv<25> > tmp15_trunc_ext_cast_fu_1093_p1;
    sc_signal< sc_lv<25> > tmp16_cast_fu_1089_p1;
    sc_signal< sc_lv<26> > tmp14_cast_fu_1115_p1;
    sc_signal< sc_lv<26> > tmp15_cast_fu_1118_p1;
    sc_signal< sc_lv<26> > tmp9_fu_1121_p2;
    sc_signal< sc_lv<27> > tmp10_cast_fu_1112_p1;
    sc_signal< sc_lv<27> > tmp13_cast_fu_1127_p1;
    sc_signal< sc_lv<27> > result_4_2_2_i_fu_1131_p2;
    sc_signal< sc_lv<1> > tmp_10_fu_1141_p3;
    sc_signal< sc_lv<27> > result_fu_1149_p3;
    sc_signal< sc_lv<31> > result_cast1_fu_1157_p1;
    sc_signal< sc_lv<32> > result_cast_fu_1161_p1;
    sc_signal< sc_lv<32> > result_4_2_2_i_cast1_fu_1137_p1;
    sc_signal< sc_lv<1> > ap_CS_fsm_state22;
    sc_signal< bool > ap_condition_1739;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    sc_signal< bool > ap_condition_976;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_pp0_stage0;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_pp1_stage0;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_pp2_stage0;
    static const sc_lv<9> ap_ST_fsm_state10;
    static const sc_lv<9> ap_ST_fsm_pp3_stage0;
    static const sc_lv<9> ap_ST_fsm_state22;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_7;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_lv<8> ap_const_lv8_C4;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<32> ap_const_lv32_C4;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<27> ap_const_lv27_0;
    static const sc_lv<32> ap_const_lv32_90;
    static const sc_lv<32> ap_const_lv32_8;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp2_stage0();
    void thread_ap_CS_fsm_pp3_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state7();
    void thread_ap_condition_1739();
    void thread_ap_condition_965();
    void thread_ap_condition_976();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_cond1_fu_718_p2();
    void thread_cond_fu_688_p2();
    void thread_cond_mid1_fu_682_p2();
    void thread_cond_mid2_fu_694_p3();
    void thread_exitcond1_fu_600_p2();
    void thread_exitcond2_fu_828_p2();
    void thread_exitcond4_fu_621_p2();
    void thread_exitcond_flatten8_fu_816_p2();
    void thread_exitcond_flatten_fu_638_p2();
    void thread_exitcond_fu_650_p2();
    void thread_grp_fixed_point_mul_fu_525_ap_ce();
    void thread_grp_fixed_point_mul_fu_532_ap_ce();
    void thread_grp_fixed_point_mul_fu_539_ap_ce();
    void thread_grp_fixed_point_mul_fu_546_ap_ce();
    void thread_grp_fixed_point_mul_fu_553_ap_ce();
    void thread_grp_fixed_point_mul_fu_561_ap_ce();
    void thread_grp_fixed_point_mul_fu_569_ap_ce();
    void thread_grp_fixed_point_mul_fu_576_ap_ce();
    void thread_grp_fixed_point_mul_fu_584_ap_ce();
    void thread_inStream_TDATA_blk_n();
    void thread_inStream_TREADY();
    void thread_inStream_V_data_V_0_ack_in();
    void thread_inStream_V_data_V_0_ack_out();
    void thread_inStream_V_data_V_0_data_out();
    void thread_inStream_V_data_V_0_load_A();
    void thread_inStream_V_data_V_0_load_B();
    void thread_inStream_V_data_V_0_sel();
    void thread_inStream_V_data_V_0_state_cmp_full();
    void thread_inStream_V_data_V_0_vld_in();
    void thread_inStream_V_data_V_0_vld_out();
    void thread_inStream_V_dest_V_0_ack_out();
    void thread_inStream_V_dest_V_0_vld_in();
    void thread_indvar_flatten_next7_fu_822_p2();
    void thread_indvar_flatten_next_fu_644_p2();
    void thread_lineBuffer_0_address0();
    void thread_lineBuffer_0_ce0();
    void thread_lineBuffer_0_ce1();
    void thread_lineBuffer_0_we0();
    void thread_lineBuffer_0_we1();
    void thread_lineBuffer_1_address0();
    void thread_lineBuffer_1_ce0();
    void thread_lineBuffer_1_ce1();
    void thread_lineBuffer_1_we0();
    void thread_lineBuffer_1_we1();
    void thread_outStream_TDATA();
    void thread_outStream_TDATA_blk_n();
    void thread_outStream_TDEST();
    void thread_outStream_TID();
    void thread_outStream_TKEEP();
    void thread_outStream_TLAST();
    void thread_outStream_TSTRB();
    void thread_outStream_TUSER();
    void thread_outStream_TVALID();
    void thread_outStream_V_data_V_1_ack_in();
    void thread_outStream_V_data_V_1_ack_out();
    void thread_outStream_V_data_V_1_data_out();
    void thread_outStream_V_data_V_1_load_A();
    void thread_outStream_V_data_V_1_load_B();
    void thread_outStream_V_data_V_1_sel();
    void thread_outStream_V_data_V_1_state_cmp_full();
    void thread_outStream_V_data_V_1_vld_in();
    void thread_outStream_V_data_V_1_vld_out();
    void thread_outStream_V_dest_V_1_ack_in();
    void thread_outStream_V_dest_V_1_ack_out();
    void thread_outStream_V_dest_V_1_data_out();
    void thread_outStream_V_dest_V_1_sel();
    void thread_outStream_V_dest_V_1_vld_in();
    void thread_outStream_V_dest_V_1_vld_out();
    void thread_outStream_V_id_V_1_ack_in();
    void thread_outStream_V_id_V_1_ack_out();
    void thread_outStream_V_id_V_1_data_out();
    void thread_outStream_V_id_V_1_sel();
    void thread_outStream_V_id_V_1_vld_in();
    void thread_outStream_V_id_V_1_vld_out();
    void thread_outStream_V_keep_V_1_ack_in();
    void thread_outStream_V_keep_V_1_ack_out();
    void thread_outStream_V_keep_V_1_data_out();
    void thread_outStream_V_keep_V_1_sel();
    void thread_outStream_V_keep_V_1_vld_in();
    void thread_outStream_V_keep_V_1_vld_out();
    void thread_outStream_V_last_V_1_ack_in();
    void thread_outStream_V_last_V_1_ack_out();
    void thread_outStream_V_last_V_1_data_out();
    void thread_outStream_V_last_V_1_load_A();
    void thread_outStream_V_last_V_1_load_B();
    void thread_outStream_V_last_V_1_sel();
    void thread_outStream_V_last_V_1_state_cmp_full();
    void thread_outStream_V_last_V_1_vld_in();
    void thread_outStream_V_last_V_1_vld_out();
    void thread_outStream_V_strb_V_1_ack_in();
    void thread_outStream_V_strb_V_1_ack_out();
    void thread_outStream_V_strb_V_1_data_out();
    void thread_outStream_V_strb_V_1_sel();
    void thread_outStream_V_strb_V_1_vld_in();
    void thread_outStream_V_strb_V_1_vld_out();
    void thread_outStream_V_user_V_1_ack_in();
    void thread_outStream_V_user_V_1_ack_out();
    void thread_outStream_V_user_V_1_data_out();
    void thread_outStream_V_user_V_1_sel();
    void thread_outStream_V_user_V_1_vld_in();
    void thread_outStream_V_user_V_1_vld_out();
    void thread_p_i_fu_926_p2();
    void thread_readCount_fu_941_p2();
    void thread_result_4_2_2_i_cast1_fu_1137_p1();
    void thread_result_4_2_2_i_fu_1131_p2();
    void thread_result_cast1_fu_1157_p1();
    void thread_result_cast_fu_1161_p1();
    void thread_result_fu_1149_p3();
    void thread_tmp10_cast_fu_1112_p1();
    void thread_tmp11_cast_fu_1033_p1();
    void thread_tmp11_trunc25_ext_ca_fu_1023_p1();
    void thread_tmp11_trunc_ext_cast_fu_1019_p1();
    void thread_tmp12_cast_fu_1051_p1();
    void thread_tmp12_trunc24_ext_ca_fu_1041_p1();
    void thread_tmp12_trunc_ext_cast_fu_1037_p1();
    void thread_tmp13_cast_fu_1127_p1();
    void thread_tmp14_cast_fu_1115_p1();
    void thread_tmp14_trunc23_ext_ca_fu_1065_p1();
    void thread_tmp14_trunc_ext_cast_fu_1061_p1();
    void thread_tmp15_cast_fu_1118_p1();
    void thread_tmp15_trunc_ext_cast_fu_1093_p1();
    void thread_tmp16_cast_fu_1089_p1();
    void thread_tmp16_trunc26_ext_ca_fu_1079_p1();
    void thread_tmp16_trunc_ext_cast_fu_1075_p1();
    void thread_tmp1_fu_1027_p2();
    void thread_tmp2_fu_914_p2();
    void thread_tmp3_fu_920_p2();
    void thread_tmp4_fu_1045_p2();
    void thread_tmp5_fu_1055_p2();
    void thread_tmp6_fu_1069_p2();
    void thread_tmp7_fu_1083_p2();
    void thread_tmp8_fu_1097_p2();
    void thread_tmp9_fu_1121_p2();
    void thread_tmp_10_fu_1141_p3();
    void thread_tmp_1_i_fu_908_p2();
    void thread_tmp_2_i_fu_874_p2();
    void thread_tmp_2_i_mid1_fu_868_p2();
    void thread_tmp_2_i_mid2_fu_880_p3();
    void thread_tmp_2_mid2_v_fu_670_p3();
    void thread_tmp_5_fu_935_p2();
    void thread_tmp_8_fu_798_p1();
    void thread_tmp_9_fu_678_p1();
    void thread_tmp_cast_fu_712_p1();
    void thread_tmp_data_V_2_fu_1165_p3();
    void thread_tmp_i_15_fu_902_p2();
    void thread_tmp_i_fu_854_p2();
    void thread_tmp_i_mid1_fu_848_p2();
    void thread_tmp_i_mid2_fu_860_p3();
    void thread_tmp_last_V_fu_1173_p2();
    void thread_tmp_s_fu_706_p2();
    void thread_window_1_0_phi_fu_516_p4();
    void thread_window_1_1_2_fu_730_p3();
    void thread_window_1_1_phi_fu_505_p4();
    void thread_window_2_0_phi_fu_494_p4();
    void thread_window_2_2_1_fu_737_p3();
    void thread_window_2_2_2_fu_744_p3();
    void thread_window_2_2_4_fu_751_p3();
    void thread_window_2_2_5_fu_758_p3();
    void thread_window_2_2_6_fu_765_p3();
    void thread_window_2_2_7_fu_772_p3();
    void thread_window_2_2_8_fu_779_p3();
    void thread_window_2_2_9_fu_786_p3();
    void thread_writeCount_fu_1106_p2();
    void thread_x1_cast_fu_633_p1();
    void thread_x1_phi_fu_381_p4();
    void thread_x4_cast_fu_702_p1();
    void thread_x4_mid2_fu_656_p3();
    void thread_x_1_fu_606_p2();
    void thread_x_2_fu_627_p2();
    void thread_x_3_fu_724_p2();
    void thread_x_4_fu_952_p2();
    void thread_x_assign_cast_fu_896_p1();
    void thread_x_assign_mid2_fu_834_p3();
    void thread_x_cast1_fu_616_p1();
    void thread_x_cast_fu_612_p1();
    void thread_x_phi_fu_369_p4();
    void thread_y3_phi_fu_404_p4();
    void thread_y9_fu_664_p2();
    void thread_y_assign_mid2_fu_888_p3();
    void thread_y_s_fu_842_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
