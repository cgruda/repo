// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "cnn_conv_d6x6_k3x3.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic cnn_conv_d6x6_k3x3::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic cnn_conv_d6x6_k3x3::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> cnn_conv_d6x6_k3x3::ap_ST_fsm_state1 = "1";
const sc_lv<9> cnn_conv_d6x6_k3x3::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<9> cnn_conv_d6x6_k3x3::ap_ST_fsm_state4 = "100";
const sc_lv<9> cnn_conv_d6x6_k3x3::ap_ST_fsm_pp1_stage0 = "1000";
const sc_lv<9> cnn_conv_d6x6_k3x3::ap_ST_fsm_state7 = "10000";
const sc_lv<9> cnn_conv_d6x6_k3x3::ap_ST_fsm_pp2_stage0 = "100000";
const sc_lv<9> cnn_conv_d6x6_k3x3::ap_ST_fsm_state10 = "1000000";
const sc_lv<9> cnn_conv_d6x6_k3x3::ap_ST_fsm_pp3_stage0 = "10000000";
const sc_lv<9> cnn_conv_d6x6_k3x3::ap_ST_fsm_state22 = "100000000";
const sc_lv<32> cnn_conv_d6x6_k3x3::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> cnn_conv_d6x6_k3x3::ap_const_lv1_1 = "1";
const bool cnn_conv_d6x6_k3x3::ap_const_boolean_1 = true;
const sc_lv<1> cnn_conv_d6x6_k3x3::ap_const_lv1_0 = "0";
const sc_lv<2> cnn_conv_d6x6_k3x3::ap_const_lv2_0 = "00";
const sc_lv<2> cnn_conv_d6x6_k3x3::ap_const_lv2_2 = "10";
const sc_lv<2> cnn_conv_d6x6_k3x3::ap_const_lv2_3 = "11";
const sc_lv<2> cnn_conv_d6x6_k3x3::ap_const_lv2_1 = "1";
const sc_lv<32> cnn_conv_d6x6_k3x3::ap_const_lv32_1 = "1";
const sc_lv<32> cnn_conv_d6x6_k3x3::ap_const_lv32_3 = "11";
const sc_lv<32> cnn_conv_d6x6_k3x3::ap_const_lv32_7 = "111";
const int cnn_conv_d6x6_k3x3::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> cnn_conv_d6x6_k3x3::ap_const_lv32_5 = "101";
const sc_lv<32> cnn_conv_d6x6_k3x3::ap_const_lv32_6 = "110";
const sc_lv<32> cnn_conv_d6x6_k3x3::ap_const_lv32_2 = "10";
const sc_lv<32> cnn_conv_d6x6_k3x3::ap_const_lv32_4 = "100";
const sc_lv<3> cnn_conv_d6x6_k3x3::ap_const_lv3_4 = "100";
const sc_lv<3> cnn_conv_d6x6_k3x3::ap_const_lv3_0 = "000";
const sc_lv<6> cnn_conv_d6x6_k3x3::ap_const_lv6_0 = "000000";
const sc_lv<32> cnn_conv_d6x6_k3x3::ap_const_lv32_8 = "1000";
const sc_lv<4> cnn_conv_d6x6_k3x3::ap_const_lv4_F = "1111";
const sc_lv<4> cnn_conv_d6x6_k3x3::ap_const_lv4_0 = "0000";
const sc_lv<5> cnn_conv_d6x6_k3x3::ap_const_lv5_0 = "00000";
const sc_lv<3> cnn_conv_d6x6_k3x3::ap_const_lv3_6 = "110";
const sc_lv<3> cnn_conv_d6x6_k3x3::ap_const_lv3_1 = "1";
const sc_lv<3> cnn_conv_d6x6_k3x3::ap_const_lv3_3 = "11";
const sc_lv<6> cnn_conv_d6x6_k3x3::ap_const_lv6_24 = "100100";
const sc_lv<6> cnn_conv_d6x6_k3x3::ap_const_lv6_1 = "1";
const sc_lv<32> cnn_conv_d6x6_k3x3::ap_const_lv32_24 = "100100";
const sc_lv<32> cnn_conv_d6x6_k3x3::ap_const_lv32_1A = "11010";
const sc_lv<27> cnn_conv_d6x6_k3x3::ap_const_lv27_0 = "000000000000000000000000000";
const sc_lv<32> cnn_conv_d6x6_k3x3::ap_const_lv32_10 = "10000";

cnn_conv_d6x6_k3x3::cnn_conv_d6x6_k3x3(sc_module_name name) : sc_module(name), mVcdFile(0) {
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U = new cnn_conv_d6x6_k3x3_CTRL_s_axi<C_S_AXI_CTRL_ADDR_WIDTH,C_S_AXI_CTRL_DATA_WIDTH>("cnn_conv_d6x6_k3x3_CTRL_s_axi_U");
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->AWVALID(s_axi_CTRL_AWVALID);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->AWREADY(s_axi_CTRL_AWREADY);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->AWADDR(s_axi_CTRL_AWADDR);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->WVALID(s_axi_CTRL_WVALID);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->WREADY(s_axi_CTRL_WREADY);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->WDATA(s_axi_CTRL_WDATA);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->WSTRB(s_axi_CTRL_WSTRB);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->ARVALID(s_axi_CTRL_ARVALID);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->ARREADY(s_axi_CTRL_ARREADY);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->ARADDR(s_axi_CTRL_ARADDR);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->RVALID(s_axi_CTRL_RVALID);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->RREADY(s_axi_CTRL_RREADY);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->RDATA(s_axi_CTRL_RDATA);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->RRESP(s_axi_CTRL_RRESP);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->BVALID(s_axi_CTRL_BVALID);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->BREADY(s_axi_CTRL_BREADY);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->BRESP(s_axi_CTRL_BRESP);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->ACLK(ap_clk);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->ARESET(ap_rst_n_inv);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->ACLK_EN(ap_var_for_const0);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->ap_start(ap_start);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->interrupt(interrupt);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->ap_ready(ap_ready);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->ap_done(ap_done);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->ap_idle(ap_idle);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->ctrl(ctrl);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->kernel_0(kernel_0);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->kernel_1(kernel_1);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->kernel_2(kernel_2);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->kernel_3(kernel_3);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->kernel_4(kernel_4);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->kernel_5(kernel_5);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->kernel_6(kernel_6);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->kernel_7(kernel_7);
    cnn_conv_d6x6_k3x3_CTRL_s_axi_U->kernel_8(kernel_8);
    lineBuffer_0_U = new cnn_conv_d6x6_k3xcud("lineBuffer_0_U");
    lineBuffer_0_U->clk(ap_clk);
    lineBuffer_0_U->reset(ap_rst_n_inv);
    lineBuffer_0_U->address0(lineBuffer_0_address0);
    lineBuffer_0_U->ce0(lineBuffer_0_ce0);
    lineBuffer_0_U->we0(lineBuffer_0_we0);
    lineBuffer_0_U->d0(inStream_V_data_V_0_data_out);
    lineBuffer_0_U->q0(lineBuffer_0_q0);
    lineBuffer_0_U->address1(lineBuffer_0_addr_2_reg_1343);
    lineBuffer_0_U->ce1(lineBuffer_0_ce1);
    lineBuffer_0_U->we1(lineBuffer_0_we1);
    lineBuffer_0_U->d1(lineBuffer_1_q0);
    lineBuffer_1_U = new cnn_conv_d6x6_k3xcud("lineBuffer_1_U");
    lineBuffer_1_U->clk(ap_clk);
    lineBuffer_1_U->reset(ap_rst_n_inv);
    lineBuffer_1_U->address0(lineBuffer_1_address0);
    lineBuffer_1_U->ce0(lineBuffer_1_ce0);
    lineBuffer_1_U->we0(lineBuffer_1_we0);
    lineBuffer_1_U->d0(inStream_V_data_V_0_data_out);
    lineBuffer_1_U->q0(lineBuffer_1_q0);
    lineBuffer_1_U->address1(ap_pipeline_reg_pp3_iter1_lineBuffer_1_addr_2_reg_1349);
    lineBuffer_1_U->ce1(lineBuffer_1_ce1);
    lineBuffer_1_U->we1(lineBuffer_1_we1);
    lineBuffer_1_U->d1(window_2_1_fu_180);
    grp_fixed_point_mul_fu_517 = new fixed_point_mul("grp_fixed_point_mul_fu_517");
    grp_fixed_point_mul_fu_517->ap_clk(ap_clk);
    grp_fixed_point_mul_fu_517->ap_rst(ap_rst_n_inv);
    grp_fixed_point_mul_fu_517->a(window_0_0_read_as_fu_160);
    grp_fixed_point_mul_fu_517->b(kernel_0);
    grp_fixed_point_mul_fu_517->ap_return(grp_fixed_point_mul_fu_517_ap_return);
    grp_fixed_point_mul_fu_517->ap_ce(grp_fixed_point_mul_fu_517_ap_ce);
    grp_fixed_point_mul_fu_524 = new fixed_point_mul("grp_fixed_point_mul_fu_524");
    grp_fixed_point_mul_fu_524->ap_clk(ap_clk);
    grp_fixed_point_mul_fu_524->ap_rst(ap_rst_n_inv);
    grp_fixed_point_mul_fu_524->a(window_0_0_fu_164);
    grp_fixed_point_mul_fu_524->b(kernel_1);
    grp_fixed_point_mul_fu_524->ap_return(grp_fixed_point_mul_fu_524_ap_return);
    grp_fixed_point_mul_fu_524->ap_ce(grp_fixed_point_mul_fu_524_ap_ce);
    grp_fixed_point_mul_fu_531 = new fixed_point_mul("grp_fixed_point_mul_fu_531");
    grp_fixed_point_mul_fu_531->ap_clk(ap_clk);
    grp_fixed_point_mul_fu_531->ap_rst(ap_rst_n_inv);
    grp_fixed_point_mul_fu_531->a(window_0_1_fu_168);
    grp_fixed_point_mul_fu_531->b(kernel_2);
    grp_fixed_point_mul_fu_531->ap_return(grp_fixed_point_mul_fu_531_ap_return);
    grp_fixed_point_mul_fu_531->ap_ce(grp_fixed_point_mul_fu_531_ap_ce);
    grp_fixed_point_mul_fu_538 = new fixed_point_mul("grp_fixed_point_mul_fu_538");
    grp_fixed_point_mul_fu_538->ap_clk(ap_clk);
    grp_fixed_point_mul_fu_538->ap_rst(ap_rst_n_inv);
    grp_fixed_point_mul_fu_538->a(window_1_0_read_as_fu_172);
    grp_fixed_point_mul_fu_538->b(kernel_3);
    grp_fixed_point_mul_fu_538->ap_return(grp_fixed_point_mul_fu_538_ap_return);
    grp_fixed_point_mul_fu_538->ap_ce(grp_fixed_point_mul_fu_538_ap_ce);
    grp_fixed_point_mul_fu_545 = new fixed_point_mul("grp_fixed_point_mul_fu_545");
    grp_fixed_point_mul_fu_545->ap_clk(ap_clk);
    grp_fixed_point_mul_fu_545->ap_rst(ap_rst_n_inv);
    grp_fixed_point_mul_fu_545->a(window_1_0_phi_fu_508_p4);
    grp_fixed_point_mul_fu_545->b(kernel_4);
    grp_fixed_point_mul_fu_545->ap_return(grp_fixed_point_mul_fu_545_ap_return);
    grp_fixed_point_mul_fu_545->ap_ce(grp_fixed_point_mul_fu_545_ap_ce);
    grp_fixed_point_mul_fu_553 = new fixed_point_mul("grp_fixed_point_mul_fu_553");
    grp_fixed_point_mul_fu_553->ap_clk(ap_clk);
    grp_fixed_point_mul_fu_553->ap_rst(ap_rst_n_inv);
    grp_fixed_point_mul_fu_553->a(window_1_1_phi_fu_497_p4);
    grp_fixed_point_mul_fu_553->b(kernel_5);
    grp_fixed_point_mul_fu_553->ap_return(grp_fixed_point_mul_fu_553_ap_return);
    grp_fixed_point_mul_fu_553->ap_ce(grp_fixed_point_mul_fu_553_ap_ce);
    grp_fixed_point_mul_fu_561 = new fixed_point_mul("grp_fixed_point_mul_fu_561");
    grp_fixed_point_mul_fu_561->ap_clk(ap_clk);
    grp_fixed_point_mul_fu_561->ap_rst(ap_rst_n_inv);
    grp_fixed_point_mul_fu_561->a(window_2_0_read_as_fu_176);
    grp_fixed_point_mul_fu_561->b(kernel_6);
    grp_fixed_point_mul_fu_561->ap_return(grp_fixed_point_mul_fu_561_ap_return);
    grp_fixed_point_mul_fu_561->ap_ce(grp_fixed_point_mul_fu_561_ap_ce);
    grp_fixed_point_mul_fu_568 = new fixed_point_mul("grp_fixed_point_mul_fu_568");
    grp_fixed_point_mul_fu_568->ap_clk(ap_clk);
    grp_fixed_point_mul_fu_568->ap_rst(ap_rst_n_inv);
    grp_fixed_point_mul_fu_568->a(window_2_0_phi_fu_486_p4);
    grp_fixed_point_mul_fu_568->b(kernel_7);
    grp_fixed_point_mul_fu_568->ap_return(grp_fixed_point_mul_fu_568_ap_return);
    grp_fixed_point_mul_fu_568->ap_ce(grp_fixed_point_mul_fu_568_ap_ce);
    grp_fixed_point_mul_fu_576 = new fixed_point_mul("grp_fixed_point_mul_fu_576");
    grp_fixed_point_mul_fu_576->ap_clk(ap_clk);
    grp_fixed_point_mul_fu_576->ap_rst(ap_rst_n_inv);
    grp_fixed_point_mul_fu_576->a(window_2_1_fu_180);
    grp_fixed_point_mul_fu_576->b(kernel_8);
    grp_fixed_point_mul_fu_576->ap_return(grp_fixed_point_mul_fu_576_ap_return);
    grp_fixed_point_mul_fu_576->ap_ce(grp_fixed_point_mul_fu_576_ap_ce);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp2_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp3_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_condition_1731);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( outStream_V_keep_V_1_ack_in );
    sensitive << ( outStream_V_strb_V_1_ack_in );
    sensitive << ( outStream_V_user_V_1_ack_in );
    sensitive << ( outStream_V_last_V_1_ack_in );
    sensitive << ( outStream_V_id_V_1_ack_in );
    sensitive << ( outStream_V_dest_V_1_ack_in );

    SC_METHOD(thread_ap_condition_965);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( exitcond_flatten8_reg_1325 );
    sensitive << ( tmp_5_reg_1355 );

    SC_METHOD(thread_ap_condition_976);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_condition_1731 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_condition_1731 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_cond1_fu_706_p2);
    sensitive << ( exitcond_flatten_fu_626_p2 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( x4_mid2_fu_644_p3 );

    SC_METHOD(thread_cond_fu_676_p2);
    sensitive << ( exitcond_flatten_fu_626_p2 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( y3_phi_fu_396_p4 );

    SC_METHOD(thread_cond_mid1_fu_670_p2);
    sensitive << ( exitcond_flatten_fu_626_p2 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( y3_phi_fu_396_p4 );

    SC_METHOD(thread_cond_mid2_fu_682_p3);
    sensitive << ( exitcond_fu_638_p2 );
    sensitive << ( cond_mid1_fu_670_p2 );
    sensitive << ( cond_fu_676_p2 );

    SC_METHOD(thread_exitcond1_fu_592_p2);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1178 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( x_phi_fu_361_p4 );

    SC_METHOD(thread_exitcond2_fu_816_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( x_assign_reg_472 );
    sensitive << ( ap_condition_965 );
    sensitive << ( exitcond_flatten8_fu_804_p2 );
    sensitive << ( ap_enable_reg_pp3_iter0 );

    SC_METHOD(thread_exitcond4_fu_609_p2);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1187 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( x1_phi_fu_373_p4 );

    SC_METHOD(thread_exitcond_flatten8_fu_804_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( indvar_flatten6_reg_450 );
    sensitive << ( ap_condition_965 );
    sensitive << ( ap_enable_reg_pp3_iter0 );

    SC_METHOD(thread_exitcond_flatten_fu_626_p2);
    sensitive << ( indvar_flatten_reg_381 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_exitcond_fu_638_p2);
    sensitive << ( x4_reg_439 );
    sensitive << ( exitcond_flatten_fu_626_p2 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_grp_fixed_point_mul_fu_517_ap_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );

    SC_METHOD(thread_grp_fixed_point_mul_fu_524_ap_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );

    SC_METHOD(thread_grp_fixed_point_mul_fu_531_ap_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );

    SC_METHOD(thread_grp_fixed_point_mul_fu_538_ap_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );

    SC_METHOD(thread_grp_fixed_point_mul_fu_545_ap_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );

    SC_METHOD(thread_grp_fixed_point_mul_fu_553_ap_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );

    SC_METHOD(thread_grp_fixed_point_mul_fu_561_ap_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );

    SC_METHOD(thread_grp_fixed_point_mul_fu_568_ap_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );

    SC_METHOD(thread_grp_fixed_point_mul_fu_576_ap_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );

    SC_METHOD(thread_inStream_TDATA_blk_n);
    sensitive << ( inStream_V_data_V_0_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1178 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1187 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1325 );
    sensitive << ( tmp_5_reg_1355 );

    SC_METHOD(thread_inStream_TREADY);
    sensitive << ( inStream_V_dest_V_0_state );

    SC_METHOD(thread_inStream_V_data_V_0_ack_in);
    sensitive << ( inStream_V_data_V_0_state );

    SC_METHOD(thread_inStream_V_data_V_0_ack_out);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1178 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1187 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1325 );
    sensitive << ( tmp_5_reg_1355 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );

    SC_METHOD(thread_inStream_V_data_V_0_data_out);
    sensitive << ( inStream_V_data_V_0_payload_A );
    sensitive << ( inStream_V_data_V_0_payload_B );
    sensitive << ( inStream_V_data_V_0_sel );

    SC_METHOD(thread_inStream_V_data_V_0_load_A);
    sensitive << ( inStream_V_data_V_0_sel_wr );
    sensitive << ( inStream_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_inStream_V_data_V_0_load_B);
    sensitive << ( inStream_V_data_V_0_sel_wr );
    sensitive << ( inStream_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_inStream_V_data_V_0_sel);
    sensitive << ( inStream_V_data_V_0_sel_rd );

    SC_METHOD(thread_inStream_V_data_V_0_state_cmp_full);
    sensitive << ( inStream_V_data_V_0_state );

    SC_METHOD(thread_inStream_V_data_V_0_vld_in);
    sensitive << ( inStream_TVALID );

    SC_METHOD(thread_inStream_V_data_V_0_vld_out);
    sensitive << ( inStream_V_data_V_0_state );

    SC_METHOD(thread_inStream_V_dest_V_0_ack_out);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1178 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1187 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1325 );
    sensitive << ( tmp_5_reg_1355 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );

    SC_METHOD(thread_inStream_V_dest_V_0_vld_in);
    sensitive << ( inStream_TVALID );

    SC_METHOD(thread_indvar_flatten_next7_fu_810_p2);
    sensitive << ( indvar_flatten6_reg_450 );

    SC_METHOD(thread_indvar_flatten_next_fu_632_p2);
    sensitive << ( indvar_flatten_reg_381 );

    SC_METHOD(thread_lineBuffer_0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( x_cast_fu_604_p1 );
    sensitive << ( tmp_cast_fu_700_p1 );
    sensitive << ( x_assign_cast_fu_884_p1 );

    SC_METHOD(thread_lineBuffer_0_ce0);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1178 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp3_iter0 );

    SC_METHOD(thread_lineBuffer_0_ce1);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );

    SC_METHOD(thread_lineBuffer_0_we0);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1178 );

    SC_METHOD(thread_lineBuffer_0_we1);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1325 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );

    SC_METHOD(thread_lineBuffer_1_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( x1_cast_fu_621_p1 );
    sensitive << ( tmp_cast_fu_700_p1 );
    sensitive << ( x_assign_cast_fu_884_p1 );

    SC_METHOD(thread_lineBuffer_1_ce0);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1187 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp3_iter0 );

    SC_METHOD(thread_lineBuffer_1_ce1);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );
    sensitive << ( ap_enable_reg_pp3_iter2 );

    SC_METHOD(thread_lineBuffer_1_we0);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1187 );

    SC_METHOD(thread_lineBuffer_1_we1);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );
    sensitive << ( ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1325 );
    sensitive << ( ap_enable_reg_pp3_iter2 );

    SC_METHOD(thread_outStream_TDATA);
    sensitive << ( outStream_V_data_V_1_data_out );

    SC_METHOD(thread_outStream_TDATA_blk_n);
    sensitive << ( outStream_V_data_V_1_state );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );

    SC_METHOD(thread_outStream_TDEST);
    sensitive << ( outStream_V_dest_V_1_data_out );

    SC_METHOD(thread_outStream_TID);
    sensitive << ( outStream_V_id_V_1_data_out );

    SC_METHOD(thread_outStream_TKEEP);
    sensitive << ( outStream_V_keep_V_1_data_out );

    SC_METHOD(thread_outStream_TLAST);
    sensitive << ( outStream_V_last_V_1_data_out );

    SC_METHOD(thread_outStream_TSTRB);
    sensitive << ( outStream_V_strb_V_1_data_out );

    SC_METHOD(thread_outStream_TUSER);
    sensitive << ( outStream_V_user_V_1_data_out );

    SC_METHOD(thread_outStream_TVALID);
    sensitive << ( outStream_V_dest_V_1_state );

    SC_METHOD(thread_outStream_V_data_V_1_ack_in);
    sensitive << ( outStream_V_data_V_1_state );

    SC_METHOD(thread_outStream_V_data_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_data_V_1_data_out);
    sensitive << ( outStream_V_data_V_1_payload_A );
    sensitive << ( outStream_V_data_V_1_payload_B );
    sensitive << ( outStream_V_data_V_1_sel );

    SC_METHOD(thread_outStream_V_data_V_1_load_A);
    sensitive << ( outStream_V_data_V_1_sel_wr );
    sensitive << ( outStream_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_data_V_1_load_B);
    sensitive << ( outStream_V_data_V_1_sel_wr );
    sensitive << ( outStream_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_data_V_1_sel);
    sensitive << ( outStream_V_data_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_data_V_1_state_cmp_full);
    sensitive << ( outStream_V_data_V_1_state );

    SC_METHOD(thread_outStream_V_data_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );

    SC_METHOD(thread_outStream_V_data_V_1_vld_out);
    sensitive << ( outStream_V_data_V_1_state );

    SC_METHOD(thread_outStream_V_dest_V_1_ack_in);
    sensitive << ( outStream_V_dest_V_1_state );

    SC_METHOD(thread_outStream_V_dest_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_dest_V_1_data_out);
    sensitive << ( outStream_V_dest_V_1_sel );

    SC_METHOD(thread_outStream_V_dest_V_1_sel);
    sensitive << ( outStream_V_dest_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_dest_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );

    SC_METHOD(thread_outStream_V_dest_V_1_vld_out);
    sensitive << ( outStream_V_dest_V_1_state );

    SC_METHOD(thread_outStream_V_id_V_1_ack_in);
    sensitive << ( outStream_V_id_V_1_state );

    SC_METHOD(thread_outStream_V_id_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_id_V_1_data_out);
    sensitive << ( outStream_V_id_V_1_sel );

    SC_METHOD(thread_outStream_V_id_V_1_sel);
    sensitive << ( outStream_V_id_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_id_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );

    SC_METHOD(thread_outStream_V_id_V_1_vld_out);
    sensitive << ( outStream_V_id_V_1_state );

    SC_METHOD(thread_outStream_V_keep_V_1_ack_in);
    sensitive << ( outStream_V_keep_V_1_state );

    SC_METHOD(thread_outStream_V_keep_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_keep_V_1_data_out);
    sensitive << ( outStream_V_keep_V_1_sel );

    SC_METHOD(thread_outStream_V_keep_V_1_sel);
    sensitive << ( outStream_V_keep_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_keep_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );

    SC_METHOD(thread_outStream_V_keep_V_1_vld_out);
    sensitive << ( outStream_V_keep_V_1_state );

    SC_METHOD(thread_outStream_V_last_V_1_ack_in);
    sensitive << ( outStream_V_last_V_1_state );

    SC_METHOD(thread_outStream_V_last_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_last_V_1_data_out);
    sensitive << ( outStream_V_last_V_1_payload_A );
    sensitive << ( outStream_V_last_V_1_payload_B );
    sensitive << ( outStream_V_last_V_1_sel );

    SC_METHOD(thread_outStream_V_last_V_1_load_A);
    sensitive << ( outStream_V_last_V_1_sel_wr );
    sensitive << ( outStream_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_last_V_1_load_B);
    sensitive << ( outStream_V_last_V_1_sel_wr );
    sensitive << ( outStream_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_last_V_1_sel);
    sensitive << ( outStream_V_last_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_last_V_1_state_cmp_full);
    sensitive << ( outStream_V_last_V_1_state );

    SC_METHOD(thread_outStream_V_last_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );

    SC_METHOD(thread_outStream_V_last_V_1_vld_out);
    sensitive << ( outStream_V_last_V_1_state );

    SC_METHOD(thread_outStream_V_strb_V_1_ack_in);
    sensitive << ( outStream_V_strb_V_1_state );

    SC_METHOD(thread_outStream_V_strb_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_strb_V_1_data_out);
    sensitive << ( outStream_V_strb_V_1_sel );

    SC_METHOD(thread_outStream_V_strb_V_1_sel);
    sensitive << ( outStream_V_strb_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_strb_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );

    SC_METHOD(thread_outStream_V_strb_V_1_vld_out);
    sensitive << ( outStream_V_strb_V_1_state );

    SC_METHOD(thread_outStream_V_user_V_1_ack_in);
    sensitive << ( outStream_V_user_V_1_state );

    SC_METHOD(thread_outStream_V_user_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_user_V_1_data_out);
    sensitive << ( outStream_V_user_V_1_sel );

    SC_METHOD(thread_outStream_V_user_V_1_sel);
    sensitive << ( outStream_V_user_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_user_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );

    SC_METHOD(thread_outStream_V_user_V_1_vld_out);
    sensitive << ( outStream_V_user_V_1_state );

    SC_METHOD(thread_p_i_fu_914_p2);
    sensitive << ( tmp3_fu_908_p2 );
    sensitive << ( tmp2_fu_902_p2 );

    SC_METHOD(thread_readCount_fu_929_p2);
    sensitive << ( readCount_1_fu_188 );

    SC_METHOD(thread_result_4_2_2_i_cast1_fu_1125_p1);
    sensitive << ( result_4_2_2_i_fu_1119_p2 );

    SC_METHOD(thread_result_4_2_2_i_fu_1119_p2);
    sensitive << ( tmp10_cast_fu_1100_p1 );
    sensitive << ( tmp13_cast_fu_1115_p1 );

    SC_METHOD(thread_result_cast1_fu_1145_p1);
    sensitive << ( result_fu_1137_p3 );

    SC_METHOD(thread_result_cast_fu_1149_p1);
    sensitive << ( result_cast1_fu_1145_p1 );

    SC_METHOD(thread_result_fu_1137_p3);
    sensitive << ( result_4_2_2_i_fu_1119_p2 );
    sensitive << ( tmp_10_fu_1129_p3 );

    SC_METHOD(thread_tmp10_cast_fu_1100_p1);
    sensitive << ( tmp5_reg_1375 );

    SC_METHOD(thread_tmp11_cast_fu_1021_p1);
    sensitive << ( tmp1_fu_1015_p2 );

    SC_METHOD(thread_tmp11_trunc24_ext_ca_fu_1011_p1);
    sensitive << ( grp_fixed_point_mul_fu_568_ap_return );

    SC_METHOD(thread_tmp11_trunc_ext_cast_fu_1007_p1);
    sensitive << ( grp_fixed_point_mul_fu_561_ap_return );

    SC_METHOD(thread_tmp12_cast_fu_1039_p1);
    sensitive << ( tmp4_fu_1033_p2 );

    SC_METHOD(thread_tmp12_trunc23_ext_ca_fu_1029_p1);
    sensitive << ( grp_fixed_point_mul_fu_553_ap_return );

    SC_METHOD(thread_tmp12_trunc_ext_cast_fu_1025_p1);
    sensitive << ( grp_fixed_point_mul_fu_545_ap_return );

    SC_METHOD(thread_tmp13_cast_fu_1115_p1);
    sensitive << ( tmp9_fu_1109_p2 );

    SC_METHOD(thread_tmp14_cast_fu_1103_p1);
    sensitive << ( tmp6_reg_1380 );

    SC_METHOD(thread_tmp14_trunc22_ext_ca_fu_1053_p1);
    sensitive << ( grp_fixed_point_mul_fu_524_ap_return );

    SC_METHOD(thread_tmp14_trunc_ext_cast_fu_1049_p1);
    sensitive << ( grp_fixed_point_mul_fu_517_ap_return );

    SC_METHOD(thread_tmp15_cast_fu_1106_p1);
    sensitive << ( tmp8_reg_1385 );

    SC_METHOD(thread_tmp15_trunc_ext_cast_fu_1081_p1);
    sensitive << ( grp_fixed_point_mul_fu_538_ap_return );

    SC_METHOD(thread_tmp16_cast_fu_1077_p1);
    sensitive << ( tmp7_fu_1071_p2 );

    SC_METHOD(thread_tmp16_trunc25_ext_ca_fu_1067_p1);
    sensitive << ( grp_fixed_point_mul_fu_576_ap_return );

    SC_METHOD(thread_tmp16_trunc_ext_cast_fu_1063_p1);
    sensitive << ( grp_fixed_point_mul_fu_531_ap_return );

    SC_METHOD(thread_tmp1_fu_1015_p2);
    sensitive << ( tmp11_trunc24_ext_ca_fu_1011_p1 );
    sensitive << ( tmp11_trunc_ext_cast_fu_1007_p1 );

    SC_METHOD(thread_tmp2_fu_902_p2);
    sensitive << ( tmp_i_15_fu_890_p2 );
    sensitive << ( tmp_i_mid2_fu_848_p3 );

    SC_METHOD(thread_tmp3_fu_908_p2);
    sensitive << ( tmp_1_i_fu_896_p2 );
    sensitive << ( tmp_2_i_mid2_fu_868_p3 );

    SC_METHOD(thread_tmp4_fu_1033_p2);
    sensitive << ( tmp12_trunc_ext_cast_fu_1025_p1 );
    sensitive << ( tmp12_trunc23_ext_ca_fu_1029_p1 );

    SC_METHOD(thread_tmp5_fu_1043_p2);
    sensitive << ( tmp11_cast_fu_1021_p1 );
    sensitive << ( tmp12_cast_fu_1039_p1 );

    SC_METHOD(thread_tmp6_fu_1057_p2);
    sensitive << ( tmp14_trunc22_ext_ca_fu_1053_p1 );
    sensitive << ( tmp14_trunc_ext_cast_fu_1049_p1 );

    SC_METHOD(thread_tmp7_fu_1071_p2);
    sensitive << ( tmp16_trunc25_ext_ca_fu_1067_p1 );
    sensitive << ( tmp16_trunc_ext_cast_fu_1063_p1 );

    SC_METHOD(thread_tmp8_fu_1085_p2);
    sensitive << ( tmp15_trunc_ext_cast_fu_1081_p1 );
    sensitive << ( tmp16_cast_fu_1077_p1 );

    SC_METHOD(thread_tmp9_fu_1109_p2);
    sensitive << ( tmp14_cast_fu_1103_p1 );
    sensitive << ( tmp15_cast_fu_1106_p1 );

    SC_METHOD(thread_tmp_10_fu_1129_p3);
    sensitive << ( result_4_2_2_i_fu_1119_p2 );

    SC_METHOD(thread_tmp_1_i_fu_896_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );
    sensitive << ( exitcond_flatten8_fu_804_p2 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( x_assign_mid2_fu_822_p3 );

    SC_METHOD(thread_tmp_2_i_fu_862_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( y_assign_reg_461 );
    sensitive << ( ap_condition_965 );
    sensitive << ( exitcond_flatten8_fu_804_p2 );
    sensitive << ( ap_enable_reg_pp3_iter0 );

    SC_METHOD(thread_tmp_2_i_mid1_fu_856_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );
    sensitive << ( exitcond_flatten8_fu_804_p2 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( y_s_fu_830_p2 );

    SC_METHOD(thread_tmp_2_i_mid2_fu_868_p3);
    sensitive << ( exitcond2_fu_816_p2 );
    sensitive << ( tmp_2_i_mid1_fu_856_p2 );
    sensitive << ( tmp_2_i_fu_862_p2 );

    SC_METHOD(thread_tmp_2_mid2_v_fu_658_p3);
    sensitive << ( y3_phi_fu_396_p4 );
    sensitive << ( exitcond_fu_638_p2 );
    sensitive << ( y9_fu_652_p2 );

    SC_METHOD(thread_tmp_5_fu_923_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );
    sensitive << ( exitcond_flatten8_fu_804_p2 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( readCount_1_fu_188 );

    SC_METHOD(thread_tmp_8_fu_786_p1);
    sensitive << ( ctrl_read_reg_1173 );

    SC_METHOD(thread_tmp_9_fu_666_p1);
    sensitive << ( tmp_2_mid2_v_fu_658_p3 );

    SC_METHOD(thread_tmp_cast_fu_700_p1);
    sensitive << ( tmp_s_fu_694_p2 );

    SC_METHOD(thread_tmp_data_V_2_fu_1153_p3);
    sensitive << ( tmp_8_reg_1320 );
    sensitive << ( result_cast_fu_1149_p1 );
    sensitive << ( result_4_2_2_i_cast1_fu_1125_p1 );

    SC_METHOD(thread_tmp_i_15_fu_890_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );
    sensitive << ( exitcond_flatten8_fu_804_p2 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( x_assign_mid2_fu_822_p3 );

    SC_METHOD(thread_tmp_i_fu_842_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( y_assign_reg_461 );
    sensitive << ( ap_condition_965 );
    sensitive << ( exitcond_flatten8_fu_804_p2 );
    sensitive << ( ap_enable_reg_pp3_iter0 );

    SC_METHOD(thread_tmp_i_mid1_fu_836_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );
    sensitive << ( exitcond_flatten8_fu_804_p2 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( y_s_fu_830_p2 );

    SC_METHOD(thread_tmp_i_mid2_fu_848_p3);
    sensitive << ( exitcond2_fu_816_p2 );
    sensitive << ( tmp_i_mid1_fu_836_p2 );
    sensitive << ( tmp_i_fu_842_p2 );

    SC_METHOD(thread_tmp_last_V_fu_1161_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );
    sensitive << ( writeCount_fu_1094_p2 );

    SC_METHOD(thread_tmp_s_fu_694_p2);
    sensitive << ( x4_cast_fu_690_p1 );

    SC_METHOD(thread_window_1_0_phi_fu_508_p4);
    sensitive << ( window_1_1_reg_494 );
    sensitive << ( window_1_0_reg_505 );
    sensitive << ( ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1325 );
    sensitive << ( ap_enable_reg_pp3_iter2 );

    SC_METHOD(thread_window_1_1_2_fu_718_p3);
    sensitive << ( tmp_9_reg_1216 );
    sensitive << ( lineBuffer_1_q0 );
    sensitive << ( lineBuffer_0_q0 );

    SC_METHOD(thread_window_1_1_phi_fu_497_p4);
    sensitive << ( window_1_1_reg_494 );
    sensitive << ( ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1325 );
    sensitive << ( windowRightCol_1_reg_1370 );
    sensitive << ( ap_enable_reg_pp3_iter2 );

    SC_METHOD(thread_window_2_0_phi_fu_486_p4);
    sensitive << ( window_2_0_reg_483 );
    sensitive << ( ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1325 );
    sensitive << ( window_2_1_2_reg_1364 );
    sensitive << ( ap_enable_reg_pp3_iter2 );

    SC_METHOD(thread_window_2_2_1_fu_725_p3);
    sensitive << ( window_1_2_1_reg_415 );
    sensitive << ( cond1_reg_1239 );
    sensitive << ( window_1_1_2_fu_718_p3 );

    SC_METHOD(thread_window_2_2_2_fu_732_p3);
    sensitive << ( window_1_1_1_reg_427 );
    sensitive << ( cond1_reg_1239 );
    sensitive << ( window_1_1_2_fu_718_p3 );

    SC_METHOD(thread_window_2_2_4_fu_739_p3);
    sensitive << ( cond1_reg_1239 );
    sensitive << ( window_2_2_fu_156 );
    sensitive << ( window_1_1_2_fu_718_p3 );

    SC_METHOD(thread_window_2_2_5_fu_746_p3);
    sensitive << ( window_2_1_1_reg_403 );
    sensitive << ( cond1_reg_1239 );
    sensitive << ( window_1_1_2_fu_718_p3 );

    SC_METHOD(thread_window_2_2_6_fu_753_p3);
    sensitive << ( cond_mid2_reg_1221 );
    sensitive << ( window_2_2_fu_156 );
    sensitive << ( window_2_2_4_fu_739_p3 );

    SC_METHOD(thread_window_2_2_7_fu_760_p3);
    sensitive << ( window_2_1_1_reg_403 );
    sensitive << ( cond_mid2_reg_1221 );
    sensitive << ( window_2_2_5_fu_746_p3 );

    SC_METHOD(thread_window_2_2_8_fu_767_p3);
    sensitive << ( window_1_2_1_reg_415 );
    sensitive << ( cond_mid2_reg_1221 );
    sensitive << ( window_2_2_1_fu_725_p3 );

    SC_METHOD(thread_window_2_2_9_fu_774_p3);
    sensitive << ( window_1_1_1_reg_427 );
    sensitive << ( cond_mid2_reg_1221 );
    sensitive << ( window_2_2_2_fu_732_p3 );

    SC_METHOD(thread_writeCount_fu_1094_p2);
    sensitive << ( writeCount_1_fu_184 );

    SC_METHOD(thread_x1_cast_fu_621_p1);
    sensitive << ( x1_reg_369 );

    SC_METHOD(thread_x1_phi_fu_373_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1187 );
    sensitive << ( x1_reg_369 );
    sensitive << ( x_2_reg_1191 );

    SC_METHOD(thread_x4_cast_fu_690_p1);
    sensitive << ( x4_mid2_fu_644_p3 );

    SC_METHOD(thread_x4_mid2_fu_644_p3);
    sensitive << ( x4_reg_439 );
    sensitive << ( exitcond_fu_638_p2 );

    SC_METHOD(thread_x_1_fu_598_p2);
    sensitive << ( x_phi_fu_361_p4 );

    SC_METHOD(thread_x_2_fu_615_p2);
    sensitive << ( x1_phi_fu_373_p4 );

    SC_METHOD(thread_x_3_fu_712_p2);
    sensitive << ( x4_mid2_fu_644_p3 );

    SC_METHOD(thread_x_4_fu_940_p2);
    sensitive << ( x_assign_mid2_fu_822_p3 );

    SC_METHOD(thread_x_assign_cast_fu_884_p1);
    sensitive << ( x_assign_mid2_fu_822_p3 );

    SC_METHOD(thread_x_assign_mid2_fu_822_p3);
    sensitive << ( x_assign_reg_472 );
    sensitive << ( exitcond2_fu_816_p2 );

    SC_METHOD(thread_x_cast_fu_604_p1);
    sensitive << ( x_reg_357 );

    SC_METHOD(thread_x_phi_fu_361_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1178 );
    sensitive << ( x_reg_357 );
    sensitive << ( x_1_reg_1182 );

    SC_METHOD(thread_y3_phi_fu_396_p4);
    sensitive << ( y3_reg_392 );
    sensitive << ( exitcond_flatten_reg_1202 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( tmp_2_mid2_v_reg_1211 );
    sensitive << ( ap_enable_reg_pp2_iter1 );

    SC_METHOD(thread_y9_fu_652_p2);
    sensitive << ( y3_phi_fu_396_p4 );

    SC_METHOD(thread_y_assign_mid2_fu_876_p3);
    sensitive << ( y_assign_reg_461 );
    sensitive << ( exitcond2_fu_816_p2 );
    sensitive << ( y_s_fu_830_p2 );

    SC_METHOD(thread_y_s_fu_830_p2);
    sensitive << ( y_assign_reg_461 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1178 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1187 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter9 );
    sensitive << ( ap_pipeline_reg_pp3_iter8_p_i_reg_1339 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1339 );
    sensitive << ( ap_condition_965 );
    sensitive << ( exitcond1_fu_592_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond4_fu_609_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( exitcond_flatten_fu_626_p2 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( ap_condition_1731 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000001";
    inStream_V_data_V_0_sel_rd = SC_LOGIC_0;
    inStream_V_data_V_0_sel_wr = SC_LOGIC_0;
    inStream_V_data_V_0_state = "00";
    inStream_V_dest_V_0_state = "00";
    outStream_V_data_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_data_V_1_sel_wr = SC_LOGIC_0;
    outStream_V_data_V_1_state = "00";
    outStream_V_keep_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_keep_V_1_state = "00";
    outStream_V_strb_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_strb_V_1_state = "00";
    outStream_V_user_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_user_V_1_state = "00";
    outStream_V_last_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_last_V_1_sel_wr = SC_LOGIC_0;
    outStream_V_last_V_1_state = "00";
    outStream_V_id_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_id_V_1_state = "00";
    outStream_V_dest_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_dest_V_1_state = "00";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter8 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "cnn_conv_d6x6_k3x3_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, inStream_TDATA, "(port)inStream_TDATA");
    sc_trace(mVcdFile, inStream_TVALID, "(port)inStream_TVALID");
    sc_trace(mVcdFile, inStream_TREADY, "(port)inStream_TREADY");
    sc_trace(mVcdFile, inStream_TKEEP, "(port)inStream_TKEEP");
    sc_trace(mVcdFile, inStream_TSTRB, "(port)inStream_TSTRB");
    sc_trace(mVcdFile, inStream_TUSER, "(port)inStream_TUSER");
    sc_trace(mVcdFile, inStream_TLAST, "(port)inStream_TLAST");
    sc_trace(mVcdFile, inStream_TID, "(port)inStream_TID");
    sc_trace(mVcdFile, inStream_TDEST, "(port)inStream_TDEST");
    sc_trace(mVcdFile, outStream_TDATA, "(port)outStream_TDATA");
    sc_trace(mVcdFile, outStream_TVALID, "(port)outStream_TVALID");
    sc_trace(mVcdFile, outStream_TREADY, "(port)outStream_TREADY");
    sc_trace(mVcdFile, outStream_TKEEP, "(port)outStream_TKEEP");
    sc_trace(mVcdFile, outStream_TSTRB, "(port)outStream_TSTRB");
    sc_trace(mVcdFile, outStream_TUSER, "(port)outStream_TUSER");
    sc_trace(mVcdFile, outStream_TLAST, "(port)outStream_TLAST");
    sc_trace(mVcdFile, outStream_TID, "(port)outStream_TID");
    sc_trace(mVcdFile, outStream_TDEST, "(port)outStream_TDEST");
    sc_trace(mVcdFile, s_axi_CTRL_AWVALID, "(port)s_axi_CTRL_AWVALID");
    sc_trace(mVcdFile, s_axi_CTRL_AWREADY, "(port)s_axi_CTRL_AWREADY");
    sc_trace(mVcdFile, s_axi_CTRL_AWADDR, "(port)s_axi_CTRL_AWADDR");
    sc_trace(mVcdFile, s_axi_CTRL_WVALID, "(port)s_axi_CTRL_WVALID");
    sc_trace(mVcdFile, s_axi_CTRL_WREADY, "(port)s_axi_CTRL_WREADY");
    sc_trace(mVcdFile, s_axi_CTRL_WDATA, "(port)s_axi_CTRL_WDATA");
    sc_trace(mVcdFile, s_axi_CTRL_WSTRB, "(port)s_axi_CTRL_WSTRB");
    sc_trace(mVcdFile, s_axi_CTRL_ARVALID, "(port)s_axi_CTRL_ARVALID");
    sc_trace(mVcdFile, s_axi_CTRL_ARREADY, "(port)s_axi_CTRL_ARREADY");
    sc_trace(mVcdFile, s_axi_CTRL_ARADDR, "(port)s_axi_CTRL_ARADDR");
    sc_trace(mVcdFile, s_axi_CTRL_RVALID, "(port)s_axi_CTRL_RVALID");
    sc_trace(mVcdFile, s_axi_CTRL_RREADY, "(port)s_axi_CTRL_RREADY");
    sc_trace(mVcdFile, s_axi_CTRL_RDATA, "(port)s_axi_CTRL_RDATA");
    sc_trace(mVcdFile, s_axi_CTRL_RRESP, "(port)s_axi_CTRL_RRESP");
    sc_trace(mVcdFile, s_axi_CTRL_BVALID, "(port)s_axi_CTRL_BVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BREADY, "(port)s_axi_CTRL_BREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BRESP, "(port)s_axi_CTRL_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, inStream_V_data_V_0_data_out, "inStream_V_data_V_0_data_out");
    sc_trace(mVcdFile, inStream_V_data_V_0_vld_in, "inStream_V_data_V_0_vld_in");
    sc_trace(mVcdFile, inStream_V_data_V_0_vld_out, "inStream_V_data_V_0_vld_out");
    sc_trace(mVcdFile, inStream_V_data_V_0_ack_in, "inStream_V_data_V_0_ack_in");
    sc_trace(mVcdFile, inStream_V_data_V_0_ack_out, "inStream_V_data_V_0_ack_out");
    sc_trace(mVcdFile, inStream_V_data_V_0_payload_A, "inStream_V_data_V_0_payload_A");
    sc_trace(mVcdFile, inStream_V_data_V_0_payload_B, "inStream_V_data_V_0_payload_B");
    sc_trace(mVcdFile, inStream_V_data_V_0_sel_rd, "inStream_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, inStream_V_data_V_0_sel_wr, "inStream_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, inStream_V_data_V_0_sel, "inStream_V_data_V_0_sel");
    sc_trace(mVcdFile, inStream_V_data_V_0_load_A, "inStream_V_data_V_0_load_A");
    sc_trace(mVcdFile, inStream_V_data_V_0_load_B, "inStream_V_data_V_0_load_B");
    sc_trace(mVcdFile, inStream_V_data_V_0_state, "inStream_V_data_V_0_state");
    sc_trace(mVcdFile, inStream_V_data_V_0_state_cmp_full, "inStream_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, inStream_V_dest_V_0_vld_in, "inStream_V_dest_V_0_vld_in");
    sc_trace(mVcdFile, inStream_V_dest_V_0_ack_out, "inStream_V_dest_V_0_ack_out");
    sc_trace(mVcdFile, inStream_V_dest_V_0_state, "inStream_V_dest_V_0_state");
    sc_trace(mVcdFile, outStream_V_data_V_1_data_out, "outStream_V_data_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_data_V_1_vld_in, "outStream_V_data_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_data_V_1_vld_out, "outStream_V_data_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_data_V_1_ack_in, "outStream_V_data_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_data_V_1_ack_out, "outStream_V_data_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_data_V_1_payload_A, "outStream_V_data_V_1_payload_A");
    sc_trace(mVcdFile, outStream_V_data_V_1_payload_B, "outStream_V_data_V_1_payload_B");
    sc_trace(mVcdFile, outStream_V_data_V_1_sel_rd, "outStream_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_data_V_1_sel_wr, "outStream_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, outStream_V_data_V_1_sel, "outStream_V_data_V_1_sel");
    sc_trace(mVcdFile, outStream_V_data_V_1_load_A, "outStream_V_data_V_1_load_A");
    sc_trace(mVcdFile, outStream_V_data_V_1_load_B, "outStream_V_data_V_1_load_B");
    sc_trace(mVcdFile, outStream_V_data_V_1_state, "outStream_V_data_V_1_state");
    sc_trace(mVcdFile, outStream_V_data_V_1_state_cmp_full, "outStream_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, outStream_V_keep_V_1_data_out, "outStream_V_keep_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_keep_V_1_vld_in, "outStream_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_keep_V_1_vld_out, "outStream_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_keep_V_1_ack_in, "outStream_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_keep_V_1_ack_out, "outStream_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_keep_V_1_sel_rd, "outStream_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_keep_V_1_sel, "outStream_V_keep_V_1_sel");
    sc_trace(mVcdFile, outStream_V_keep_V_1_state, "outStream_V_keep_V_1_state");
    sc_trace(mVcdFile, outStream_V_strb_V_1_data_out, "outStream_V_strb_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_strb_V_1_vld_in, "outStream_V_strb_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_strb_V_1_vld_out, "outStream_V_strb_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_strb_V_1_ack_in, "outStream_V_strb_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_strb_V_1_ack_out, "outStream_V_strb_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_strb_V_1_sel_rd, "outStream_V_strb_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_strb_V_1_sel, "outStream_V_strb_V_1_sel");
    sc_trace(mVcdFile, outStream_V_strb_V_1_state, "outStream_V_strb_V_1_state");
    sc_trace(mVcdFile, outStream_V_user_V_1_data_out, "outStream_V_user_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_user_V_1_vld_in, "outStream_V_user_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_user_V_1_vld_out, "outStream_V_user_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_user_V_1_ack_in, "outStream_V_user_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_user_V_1_ack_out, "outStream_V_user_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_user_V_1_sel_rd, "outStream_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_user_V_1_sel, "outStream_V_user_V_1_sel");
    sc_trace(mVcdFile, outStream_V_user_V_1_state, "outStream_V_user_V_1_state");
    sc_trace(mVcdFile, outStream_V_last_V_1_data_out, "outStream_V_last_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_last_V_1_vld_in, "outStream_V_last_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_last_V_1_vld_out, "outStream_V_last_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_last_V_1_ack_in, "outStream_V_last_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_last_V_1_ack_out, "outStream_V_last_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_last_V_1_payload_A, "outStream_V_last_V_1_payload_A");
    sc_trace(mVcdFile, outStream_V_last_V_1_payload_B, "outStream_V_last_V_1_payload_B");
    sc_trace(mVcdFile, outStream_V_last_V_1_sel_rd, "outStream_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_last_V_1_sel_wr, "outStream_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, outStream_V_last_V_1_sel, "outStream_V_last_V_1_sel");
    sc_trace(mVcdFile, outStream_V_last_V_1_load_A, "outStream_V_last_V_1_load_A");
    sc_trace(mVcdFile, outStream_V_last_V_1_load_B, "outStream_V_last_V_1_load_B");
    sc_trace(mVcdFile, outStream_V_last_V_1_state, "outStream_V_last_V_1_state");
    sc_trace(mVcdFile, outStream_V_last_V_1_state_cmp_full, "outStream_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, outStream_V_id_V_1_data_out, "outStream_V_id_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_id_V_1_vld_in, "outStream_V_id_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_id_V_1_vld_out, "outStream_V_id_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_id_V_1_ack_in, "outStream_V_id_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_id_V_1_ack_out, "outStream_V_id_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_id_V_1_sel_rd, "outStream_V_id_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_id_V_1_sel, "outStream_V_id_V_1_sel");
    sc_trace(mVcdFile, outStream_V_id_V_1_state, "outStream_V_id_V_1_state");
    sc_trace(mVcdFile, outStream_V_dest_V_1_data_out, "outStream_V_dest_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_dest_V_1_vld_in, "outStream_V_dest_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_dest_V_1_vld_out, "outStream_V_dest_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_dest_V_1_ack_in, "outStream_V_dest_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_dest_V_1_ack_out, "outStream_V_dest_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_dest_V_1_sel_rd, "outStream_V_dest_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_dest_V_1_sel, "outStream_V_dest_V_1_sel");
    sc_trace(mVcdFile, outStream_V_dest_V_1_state, "outStream_V_dest_V_1_state");
    sc_trace(mVcdFile, ctrl, "ctrl");
    sc_trace(mVcdFile, kernel_0, "kernel_0");
    sc_trace(mVcdFile, kernel_1, "kernel_1");
    sc_trace(mVcdFile, kernel_2, "kernel_2");
    sc_trace(mVcdFile, kernel_3, "kernel_3");
    sc_trace(mVcdFile, kernel_4, "kernel_4");
    sc_trace(mVcdFile, kernel_5, "kernel_5");
    sc_trace(mVcdFile, kernel_6, "kernel_6");
    sc_trace(mVcdFile, kernel_7, "kernel_7");
    sc_trace(mVcdFile, kernel_8, "kernel_8");
    sc_trace(mVcdFile, inStream_TDATA_blk_n, "inStream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, exitcond1_reg_1178, "exitcond1_reg_1178");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, exitcond4_reg_1187, "exitcond4_reg_1187");
    sc_trace(mVcdFile, ap_CS_fsm_pp3_stage0, "ap_CS_fsm_pp3_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter1, "ap_enable_reg_pp3_iter1");
    sc_trace(mVcdFile, exitcond_flatten8_reg_1325, "exitcond_flatten8_reg_1325");
    sc_trace(mVcdFile, tmp_5_reg_1355, "tmp_5_reg_1355");
    sc_trace(mVcdFile, outStream_TDATA_blk_n, "outStream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter9, "ap_enable_reg_pp3_iter9");
    sc_trace(mVcdFile, p_i_reg_1339, "p_i_reg_1339");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter8_p_i_reg_1339, "ap_pipeline_reg_pp3_iter8_p_i_reg_1339");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter10, "ap_enable_reg_pp3_iter10");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter9_p_i_reg_1339, "ap_pipeline_reg_pp3_iter9_p_i_reg_1339");
    sc_trace(mVcdFile, x_reg_357, "x_reg_357");
    sc_trace(mVcdFile, x1_reg_369, "x1_reg_369");
    sc_trace(mVcdFile, indvar_flatten_reg_381, "indvar_flatten_reg_381");
    sc_trace(mVcdFile, y3_reg_392, "y3_reg_392");
    sc_trace(mVcdFile, window_2_1_1_reg_403, "window_2_1_1_reg_403");
    sc_trace(mVcdFile, window_1_2_1_reg_415, "window_1_2_1_reg_415");
    sc_trace(mVcdFile, window_1_1_1_reg_427, "window_1_1_1_reg_427");
    sc_trace(mVcdFile, x4_reg_439, "x4_reg_439");
    sc_trace(mVcdFile, indvar_flatten6_reg_450, "indvar_flatten6_reg_450");
    sc_trace(mVcdFile, y_assign_reg_461, "y_assign_reg_461");
    sc_trace(mVcdFile, x_assign_reg_472, "x_assign_reg_472");
    sc_trace(mVcdFile, window_2_0_reg_483, "window_2_0_reg_483");
    sc_trace(mVcdFile, ap_condition_965, "ap_condition_965");
    sc_trace(mVcdFile, window_1_1_reg_494, "window_1_1_reg_494");
    sc_trace(mVcdFile, window_1_0_reg_505, "window_1_0_reg_505");
    sc_trace(mVcdFile, ctrl_read_reg_1173, "ctrl_read_reg_1173");
    sc_trace(mVcdFile, exitcond1_fu_592_p2, "exitcond1_fu_592_p2");
    sc_trace(mVcdFile, x_1_fu_598_p2, "x_1_fu_598_p2");
    sc_trace(mVcdFile, x_1_reg_1182, "x_1_reg_1182");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, exitcond4_fu_609_p2, "exitcond4_fu_609_p2");
    sc_trace(mVcdFile, x_2_fu_615_p2, "x_2_fu_615_p2");
    sc_trace(mVcdFile, x_2_reg_1191, "x_2_reg_1191");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, exitcond_flatten_fu_626_p2, "exitcond_flatten_fu_626_p2");
    sc_trace(mVcdFile, exitcond_flatten_reg_1202, "exitcond_flatten_reg_1202");
    sc_trace(mVcdFile, ap_CS_fsm_pp2_stage0, "ap_CS_fsm_pp2_stage0");
    sc_trace(mVcdFile, indvar_flatten_next_fu_632_p2, "indvar_flatten_next_fu_632_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter0, "ap_enable_reg_pp2_iter0");
    sc_trace(mVcdFile, tmp_2_mid2_v_fu_658_p3, "tmp_2_mid2_v_fu_658_p3");
    sc_trace(mVcdFile, tmp_2_mid2_v_reg_1211, "tmp_2_mid2_v_reg_1211");
    sc_trace(mVcdFile, tmp_9_fu_666_p1, "tmp_9_fu_666_p1");
    sc_trace(mVcdFile, tmp_9_reg_1216, "tmp_9_reg_1216");
    sc_trace(mVcdFile, cond_mid2_fu_682_p3, "cond_mid2_fu_682_p3");
    sc_trace(mVcdFile, cond_mid2_reg_1221, "cond_mid2_reg_1221");
    sc_trace(mVcdFile, cond1_fu_706_p2, "cond1_fu_706_p2");
    sc_trace(mVcdFile, cond1_reg_1239, "cond1_reg_1239");
    sc_trace(mVcdFile, x_3_fu_712_p2, "x_3_fu_712_p2");
    sc_trace(mVcdFile, window_2_2_7_fu_760_p3, "window_2_2_7_fu_760_p3");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter1, "ap_enable_reg_pp2_iter1");
    sc_trace(mVcdFile, window_2_2_8_fu_767_p3, "window_2_2_8_fu_767_p3");
    sc_trace(mVcdFile, window_2_2_9_fu_774_p3, "window_2_2_9_fu_774_p3");
    sc_trace(mVcdFile, tmp_8_fu_786_p1, "tmp_8_fu_786_p1");
    sc_trace(mVcdFile, tmp_8_reg_1320, "tmp_8_reg_1320");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, exitcond_flatten8_fu_804_p2, "exitcond_flatten8_fu_804_p2");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1325, "ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1325");
    sc_trace(mVcdFile, indvar_flatten_next7_fu_810_p2, "indvar_flatten_next7_fu_810_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter0, "ap_enable_reg_pp3_iter0");
    sc_trace(mVcdFile, y_assign_mid2_fu_876_p3, "y_assign_mid2_fu_876_p3");
    sc_trace(mVcdFile, p_i_fu_914_p2, "p_i_fu_914_p2");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter1_p_i_reg_1339, "ap_pipeline_reg_pp3_iter1_p_i_reg_1339");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter2_p_i_reg_1339, "ap_pipeline_reg_pp3_iter2_p_i_reg_1339");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter3_p_i_reg_1339, "ap_pipeline_reg_pp3_iter3_p_i_reg_1339");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter4_p_i_reg_1339, "ap_pipeline_reg_pp3_iter4_p_i_reg_1339");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter5_p_i_reg_1339, "ap_pipeline_reg_pp3_iter5_p_i_reg_1339");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter6_p_i_reg_1339, "ap_pipeline_reg_pp3_iter6_p_i_reg_1339");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter7_p_i_reg_1339, "ap_pipeline_reg_pp3_iter7_p_i_reg_1339");
    sc_trace(mVcdFile, lineBuffer_0_addr_2_reg_1343, "lineBuffer_0_addr_2_reg_1343");
    sc_trace(mVcdFile, lineBuffer_1_addr_2_reg_1349, "lineBuffer_1_addr_2_reg_1349");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter1_lineBuffer_1_addr_2_reg_1349, "ap_pipeline_reg_pp3_iter1_lineBuffer_1_addr_2_reg_1349");
    sc_trace(mVcdFile, tmp_5_fu_923_p2, "tmp_5_fu_923_p2");
    sc_trace(mVcdFile, x_4_fu_940_p2, "x_4_fu_940_p2");
    sc_trace(mVcdFile, window_2_1_2_reg_1364, "window_2_1_2_reg_1364");
    sc_trace(mVcdFile, lineBuffer_1_q0, "lineBuffer_1_q0");
    sc_trace(mVcdFile, windowRightCol_1_reg_1370, "windowRightCol_1_reg_1370");
    sc_trace(mVcdFile, tmp5_fu_1043_p2, "tmp5_fu_1043_p2");
    sc_trace(mVcdFile, tmp5_reg_1375, "tmp5_reg_1375");
    sc_trace(mVcdFile, tmp6_fu_1057_p2, "tmp6_fu_1057_p2");
    sc_trace(mVcdFile, tmp6_reg_1380, "tmp6_reg_1380");
    sc_trace(mVcdFile, tmp8_fu_1085_p2, "tmp8_fu_1085_p2");
    sc_trace(mVcdFile, tmp8_reg_1385, "tmp8_reg_1385");
    sc_trace(mVcdFile, tmp_data_V_2_fu_1153_p3, "tmp_data_V_2_fu_1153_p3");
    sc_trace(mVcdFile, tmp_last_V_fu_1161_p2, "tmp_last_V_fu_1161_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter2, "ap_enable_reg_pp3_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter3, "ap_enable_reg_pp3_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter4, "ap_enable_reg_pp3_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter5, "ap_enable_reg_pp3_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter6, "ap_enable_reg_pp3_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter7, "ap_enable_reg_pp3_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter8, "ap_enable_reg_pp3_iter8");
    sc_trace(mVcdFile, lineBuffer_0_address0, "lineBuffer_0_address0");
    sc_trace(mVcdFile, lineBuffer_0_ce0, "lineBuffer_0_ce0");
    sc_trace(mVcdFile, lineBuffer_0_we0, "lineBuffer_0_we0");
    sc_trace(mVcdFile, lineBuffer_0_q0, "lineBuffer_0_q0");
    sc_trace(mVcdFile, lineBuffer_0_ce1, "lineBuffer_0_ce1");
    sc_trace(mVcdFile, lineBuffer_0_we1, "lineBuffer_0_we1");
    sc_trace(mVcdFile, lineBuffer_1_address0, "lineBuffer_1_address0");
    sc_trace(mVcdFile, lineBuffer_1_ce0, "lineBuffer_1_ce0");
    sc_trace(mVcdFile, lineBuffer_1_we0, "lineBuffer_1_we0");
    sc_trace(mVcdFile, lineBuffer_1_ce1, "lineBuffer_1_ce1");
    sc_trace(mVcdFile, lineBuffer_1_we1, "lineBuffer_1_we1");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_517_ap_return, "grp_fixed_point_mul_fu_517_ap_return");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_517_ap_ce, "grp_fixed_point_mul_fu_517_ap_ce");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_524_ap_return, "grp_fixed_point_mul_fu_524_ap_return");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_524_ap_ce, "grp_fixed_point_mul_fu_524_ap_ce");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_531_ap_return, "grp_fixed_point_mul_fu_531_ap_return");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_531_ap_ce, "grp_fixed_point_mul_fu_531_ap_ce");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_538_ap_return, "grp_fixed_point_mul_fu_538_ap_return");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_538_ap_ce, "grp_fixed_point_mul_fu_538_ap_ce");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_545_ap_return, "grp_fixed_point_mul_fu_545_ap_return");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_545_ap_ce, "grp_fixed_point_mul_fu_545_ap_ce");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_553_ap_return, "grp_fixed_point_mul_fu_553_ap_return");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_553_ap_ce, "grp_fixed_point_mul_fu_553_ap_ce");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_561_ap_return, "grp_fixed_point_mul_fu_561_ap_return");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_561_ap_ce, "grp_fixed_point_mul_fu_561_ap_ce");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_568_ap_return, "grp_fixed_point_mul_fu_568_ap_return");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_568_ap_ce, "grp_fixed_point_mul_fu_568_ap_ce");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_576_ap_return, "grp_fixed_point_mul_fu_576_ap_return");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_576_ap_ce, "grp_fixed_point_mul_fu_576_ap_ce");
    sc_trace(mVcdFile, x_phi_fu_361_p4, "x_phi_fu_361_p4");
    sc_trace(mVcdFile, x1_phi_fu_373_p4, "x1_phi_fu_373_p4");
    sc_trace(mVcdFile, y3_phi_fu_396_p4, "y3_phi_fu_396_p4");
    sc_trace(mVcdFile, window_2_0_phi_fu_486_p4, "window_2_0_phi_fu_486_p4");
    sc_trace(mVcdFile, window_1_1_phi_fu_497_p4, "window_1_1_phi_fu_497_p4");
    sc_trace(mVcdFile, window_1_0_phi_fu_508_p4, "window_1_0_phi_fu_508_p4");
    sc_trace(mVcdFile, x_cast_fu_604_p1, "x_cast_fu_604_p1");
    sc_trace(mVcdFile, x1_cast_fu_621_p1, "x1_cast_fu_621_p1");
    sc_trace(mVcdFile, tmp_cast_fu_700_p1, "tmp_cast_fu_700_p1");
    sc_trace(mVcdFile, x_assign_cast_fu_884_p1, "x_assign_cast_fu_884_p1");
    sc_trace(mVcdFile, window_2_2_fu_156, "window_2_2_fu_156");
    sc_trace(mVcdFile, window_2_2_6_fu_753_p3, "window_2_2_6_fu_753_p3");
    sc_trace(mVcdFile, window_0_0_read_as_fu_160, "window_0_0_read_as_fu_160");
    sc_trace(mVcdFile, window_0_0_fu_164, "window_0_0_fu_164");
    sc_trace(mVcdFile, window_0_1_fu_168, "window_0_1_fu_168");
    sc_trace(mVcdFile, window_1_0_read_as_fu_172, "window_1_0_read_as_fu_172");
    sc_trace(mVcdFile, window_2_0_read_as_fu_176, "window_2_0_read_as_fu_176");
    sc_trace(mVcdFile, window_2_1_fu_180, "window_2_1_fu_180");
    sc_trace(mVcdFile, writeCount_1_fu_184, "writeCount_1_fu_184");
    sc_trace(mVcdFile, writeCount_fu_1094_p2, "writeCount_fu_1094_p2");
    sc_trace(mVcdFile, readCount_1_fu_188, "readCount_1_fu_188");
    sc_trace(mVcdFile, readCount_fu_929_p2, "readCount_fu_929_p2");
    sc_trace(mVcdFile, exitcond_fu_638_p2, "exitcond_fu_638_p2");
    sc_trace(mVcdFile, y9_fu_652_p2, "y9_fu_652_p2");
    sc_trace(mVcdFile, cond_mid1_fu_670_p2, "cond_mid1_fu_670_p2");
    sc_trace(mVcdFile, cond_fu_676_p2, "cond_fu_676_p2");
    sc_trace(mVcdFile, x4_mid2_fu_644_p3, "x4_mid2_fu_644_p3");
    sc_trace(mVcdFile, x4_cast_fu_690_p1, "x4_cast_fu_690_p1");
    sc_trace(mVcdFile, tmp_s_fu_694_p2, "tmp_s_fu_694_p2");
    sc_trace(mVcdFile, window_1_1_2_fu_718_p3, "window_1_1_2_fu_718_p3");
    sc_trace(mVcdFile, window_2_2_4_fu_739_p3, "window_2_2_4_fu_739_p3");
    sc_trace(mVcdFile, window_2_2_5_fu_746_p3, "window_2_2_5_fu_746_p3");
    sc_trace(mVcdFile, window_2_2_1_fu_725_p3, "window_2_2_1_fu_725_p3");
    sc_trace(mVcdFile, window_2_2_2_fu_732_p3, "window_2_2_2_fu_732_p3");
    sc_trace(mVcdFile, exitcond2_fu_816_p2, "exitcond2_fu_816_p2");
    sc_trace(mVcdFile, y_s_fu_830_p2, "y_s_fu_830_p2");
    sc_trace(mVcdFile, tmp_i_mid1_fu_836_p2, "tmp_i_mid1_fu_836_p2");
    sc_trace(mVcdFile, tmp_i_fu_842_p2, "tmp_i_fu_842_p2");
    sc_trace(mVcdFile, tmp_2_i_mid1_fu_856_p2, "tmp_2_i_mid1_fu_856_p2");
    sc_trace(mVcdFile, tmp_2_i_fu_862_p2, "tmp_2_i_fu_862_p2");
    sc_trace(mVcdFile, x_assign_mid2_fu_822_p3, "x_assign_mid2_fu_822_p3");
    sc_trace(mVcdFile, tmp_i_15_fu_890_p2, "tmp_i_15_fu_890_p2");
    sc_trace(mVcdFile, tmp_i_mid2_fu_848_p3, "tmp_i_mid2_fu_848_p3");
    sc_trace(mVcdFile, tmp_1_i_fu_896_p2, "tmp_1_i_fu_896_p2");
    sc_trace(mVcdFile, tmp_2_i_mid2_fu_868_p3, "tmp_2_i_mid2_fu_868_p3");
    sc_trace(mVcdFile, tmp3_fu_908_p2, "tmp3_fu_908_p2");
    sc_trace(mVcdFile, tmp2_fu_902_p2, "tmp2_fu_902_p2");
    sc_trace(mVcdFile, tmp11_trunc24_ext_ca_fu_1011_p1, "tmp11_trunc24_ext_ca_fu_1011_p1");
    sc_trace(mVcdFile, tmp11_trunc_ext_cast_fu_1007_p1, "tmp11_trunc_ext_cast_fu_1007_p1");
    sc_trace(mVcdFile, tmp1_fu_1015_p2, "tmp1_fu_1015_p2");
    sc_trace(mVcdFile, tmp12_trunc_ext_cast_fu_1025_p1, "tmp12_trunc_ext_cast_fu_1025_p1");
    sc_trace(mVcdFile, tmp12_trunc23_ext_ca_fu_1029_p1, "tmp12_trunc23_ext_ca_fu_1029_p1");
    sc_trace(mVcdFile, tmp4_fu_1033_p2, "tmp4_fu_1033_p2");
    sc_trace(mVcdFile, tmp11_cast_fu_1021_p1, "tmp11_cast_fu_1021_p1");
    sc_trace(mVcdFile, tmp12_cast_fu_1039_p1, "tmp12_cast_fu_1039_p1");
    sc_trace(mVcdFile, tmp14_trunc22_ext_ca_fu_1053_p1, "tmp14_trunc22_ext_ca_fu_1053_p1");
    sc_trace(mVcdFile, tmp14_trunc_ext_cast_fu_1049_p1, "tmp14_trunc_ext_cast_fu_1049_p1");
    sc_trace(mVcdFile, tmp16_trunc25_ext_ca_fu_1067_p1, "tmp16_trunc25_ext_ca_fu_1067_p1");
    sc_trace(mVcdFile, tmp16_trunc_ext_cast_fu_1063_p1, "tmp16_trunc_ext_cast_fu_1063_p1");
    sc_trace(mVcdFile, tmp7_fu_1071_p2, "tmp7_fu_1071_p2");
    sc_trace(mVcdFile, tmp15_trunc_ext_cast_fu_1081_p1, "tmp15_trunc_ext_cast_fu_1081_p1");
    sc_trace(mVcdFile, tmp16_cast_fu_1077_p1, "tmp16_cast_fu_1077_p1");
    sc_trace(mVcdFile, tmp14_cast_fu_1103_p1, "tmp14_cast_fu_1103_p1");
    sc_trace(mVcdFile, tmp15_cast_fu_1106_p1, "tmp15_cast_fu_1106_p1");
    sc_trace(mVcdFile, tmp9_fu_1109_p2, "tmp9_fu_1109_p2");
    sc_trace(mVcdFile, tmp10_cast_fu_1100_p1, "tmp10_cast_fu_1100_p1");
    sc_trace(mVcdFile, tmp13_cast_fu_1115_p1, "tmp13_cast_fu_1115_p1");
    sc_trace(mVcdFile, result_4_2_2_i_fu_1119_p2, "result_4_2_2_i_fu_1119_p2");
    sc_trace(mVcdFile, tmp_10_fu_1129_p3, "tmp_10_fu_1129_p3");
    sc_trace(mVcdFile, result_fu_1137_p3, "result_fu_1137_p3");
    sc_trace(mVcdFile, result_cast1_fu_1145_p1, "result_cast1_fu_1145_p1");
    sc_trace(mVcdFile, result_cast_fu_1149_p1, "result_cast_fu_1149_p1");
    sc_trace(mVcdFile, result_4_2_2_i_cast1_fu_1125_p1, "result_4_2_2_i_cast1_fu_1125_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_condition_1731, "ap_condition_1731");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_condition_976, "ap_condition_976");
#endif

    }
    mHdltvinHandle.open("cnn_conv_d6x6_k3x3.hdltvin.dat");
    mHdltvoutHandle.open("cnn_conv_d6x6_k3x3.hdltvout.dat");
}

cnn_conv_d6x6_k3x3::~cnn_conv_d6x6_k3x3() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete cnn_conv_d6x6_k3x3_CTRL_s_axi_U;
    delete lineBuffer_0_U;
    delete lineBuffer_1_U;
    delete grp_fixed_point_mul_fu_517;
    delete grp_fixed_point_mul_fu_524;
    delete grp_fixed_point_mul_fu_531;
    delete grp_fixed_point_mul_fu_538;
    delete grp_fixed_point_mul_fu_545;
    delete grp_fixed_point_mul_fu_553;
    delete grp_fixed_point_mul_fu_561;
    delete grp_fixed_point_mul_fu_568;
    delete grp_fixed_point_mul_fu_576;
}

void cnn_conv_d6x6_k3x3::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void cnn_conv_d6x6_k3x3::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_592_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_592_p2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_592_p2.read())))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_609_p2.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_609_p2.read()))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read())) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_609_p2.read())))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_626_p2.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_626_p2.read()))) {
            ap_enable_reg_pp2_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read())) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_626_p2.read())))) {
            ap_enable_reg_pp2_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_804_p2.read()))) {
            ap_enable_reg_pp3_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
            ap_enable_reg_pp3_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
            ap_enable_reg_pp3_iter1 = ap_enable_reg_pp3_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
            ap_enable_reg_pp3_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter10 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter10 = ap_enable_reg_pp3_iter9.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
            ap_enable_reg_pp3_iter10 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_976.read(), ap_const_boolean_1)) {
            if (!esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read())) {
                ap_enable_reg_pp3_iter2 = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read())) {
                ap_enable_reg_pp3_iter2 = ap_enable_reg_pp3_iter1.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter3 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter3 = ap_enable_reg_pp3_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter4 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter4 = ap_enable_reg_pp3_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter5 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter5 = ap_enable_reg_pp3_iter4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter6 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter6 = ap_enable_reg_pp3_iter5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter7 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter7 = ap_enable_reg_pp3_iter6.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter8 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter8 = ap_enable_reg_pp3_iter7.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter9 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter9 = ap_enable_reg_pp3_iter8.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_out.read()))) {
            inStream_V_data_V_0_sel_rd =  (sc_logic) (~inStream_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_in.read()))) {
            inStream_V_data_V_0_sel_wr =  (sc_logic) (~inStream_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            inStream_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            inStream_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_out.read()))))) {
            inStream_V_data_V_0_state = ap_const_lv2_3;
        } else {
            inStream_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, inStream_V_dest_V_0_state.read())))) {
            inStream_V_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, inStream_V_dest_V_0_state.read())))) {
            inStream_V_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, inStream_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, inStream_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_ack_out.read()))))) {
            inStream_V_dest_V_0_state = ap_const_lv2_3;
        } else {
            inStream_V_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_804_p2.read()))) {
        indvar_flatten6_reg_450 = indvar_flatten_next7_fu_810_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        indvar_flatten6_reg_450 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        indvar_flatten_reg_381 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_626_p2.read()))) {
        indvar_flatten_reg_381 = indvar_flatten_next_fu_632_p2.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_out.read()))) {
            outStream_V_data_V_1_sel_rd =  (sc_logic) (~outStream_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_in.read()))) {
            outStream_V_data_V_1_sel_wr =  (sc_logic) (~outStream_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_data_V_1_state.read())))) {
            outStream_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_data_V_1_state.read())))) {
            outStream_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_out.read()))))) {
            outStream_V_data_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_dest_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_vld_out.read()))) {
            outStream_V_dest_V_1_sel_rd =  (sc_logic) (~outStream_V_dest_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_dest_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_dest_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_dest_V_1_state.read())))) {
            outStream_V_dest_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_dest_V_1_state.read())))) {
            outStream_V_dest_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_dest_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_ack_out.read()))))) {
            outStream_V_dest_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_dest_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_id_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_vld_out.read()))) {
            outStream_V_id_V_1_sel_rd =  (sc_logic) (~outStream_V_id_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_id_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_id_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_id_V_1_state.read())))) {
            outStream_V_id_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_id_V_1_state.read())))) {
            outStream_V_id_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_id_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_ack_out.read()))))) {
            outStream_V_id_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_id_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_vld_out.read()))) {
            outStream_V_keep_V_1_sel_rd =  (sc_logic) (~outStream_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_keep_V_1_state.read())))) {
            outStream_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_keep_V_1_state.read())))) {
            outStream_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_ack_out.read()))))) {
            outStream_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_out.read()))) {
            outStream_V_last_V_1_sel_rd =  (sc_logic) (~outStream_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_in.read()))) {
            outStream_V_last_V_1_sel_wr =  (sc_logic) (~outStream_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_last_V_1_state.read())))) {
            outStream_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_last_V_1_state.read())))) {
            outStream_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_out.read()))))) {
            outStream_V_last_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_strb_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_vld_out.read()))) {
            outStream_V_strb_V_1_sel_rd =  (sc_logic) (~outStream_V_strb_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_strb_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_strb_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_strb_V_1_state.read())))) {
            outStream_V_strb_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_strb_V_1_state.read())))) {
            outStream_V_strb_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_strb_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_ack_out.read()))))) {
            outStream_V_strb_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_strb_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_vld_out.read()))) {
            outStream_V_user_V_1_sel_rd =  (sc_logic) (~outStream_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_user_V_1_state.read())))) {
            outStream_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_user_V_1_state.read())))) {
            outStream_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_ack_out.read()))))) {
            outStream_V_user_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_804_p2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_923_p2.read()))) {
        readCount_1_fu_188 = readCount_fu_929_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        readCount_1_fu_188 = ap_const_lv32_8;
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1325.read()))) {
        window_1_0_reg_505 = window_1_1_reg_494.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        window_1_0_reg_505 = window_1_1_1_reg_427.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1325.read()))) {
        window_1_1_reg_494 = windowRightCol_1_reg_1370.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        window_1_1_reg_494 = window_1_2_1_reg_415.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1325.read()))) {
        window_2_0_reg_483 = window_2_1_2_reg_1364.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        window_2_0_reg_483 = window_2_1_1_reg_403.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1325.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1355.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        window_2_1_fu_180 = inStream_V_data_V_0_data_out.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        window_2_1_fu_180 = window_2_2_fu_156.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        writeCount_1_fu_184 = writeCount_fu_1094_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        writeCount_1_fu_184 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        x1_reg_369 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)))) {
        x1_reg_369 = x_2_reg_1191.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        x4_reg_439 = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_626_p2.read()))) {
        x4_reg_439 = x_3_fu_712_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_804_p2.read()))) {
        x_assign_reg_472 = x_4_fu_940_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        x_assign_reg_472 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)))) {
        x_reg_357 = x_1_reg_1182.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        x_reg_357 = ap_const_lv3_4;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        y3_reg_392 = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1202.read()))) {
        y3_reg_392 = tmp_2_mid2_v_reg_1211.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_804_p2.read()))) {
        y_assign_reg_461 = y_assign_mid2_fu_876_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        y_assign_reg_461 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1325 = exitcond_flatten8_reg_1325.read();
        ap_pipeline_reg_pp3_iter1_lineBuffer_1_addr_2_reg_1349 = lineBuffer_1_addr_2_reg_1349.read();
        ap_pipeline_reg_pp3_iter1_p_i_reg_1339 = p_i_reg_1339.read();
        exitcond_flatten8_reg_1325 = exitcond_flatten8_fu_804_p2.read();
    }
    if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
        ap_pipeline_reg_pp3_iter2_p_i_reg_1339 = ap_pipeline_reg_pp3_iter1_p_i_reg_1339.read();
        ap_pipeline_reg_pp3_iter3_p_i_reg_1339 = ap_pipeline_reg_pp3_iter2_p_i_reg_1339.read();
        ap_pipeline_reg_pp3_iter4_p_i_reg_1339 = ap_pipeline_reg_pp3_iter3_p_i_reg_1339.read();
        ap_pipeline_reg_pp3_iter5_p_i_reg_1339 = ap_pipeline_reg_pp3_iter4_p_i_reg_1339.read();
        ap_pipeline_reg_pp3_iter6_p_i_reg_1339 = ap_pipeline_reg_pp3_iter5_p_i_reg_1339.read();
        ap_pipeline_reg_pp3_iter7_p_i_reg_1339 = ap_pipeline_reg_pp3_iter6_p_i_reg_1339.read();
        ap_pipeline_reg_pp3_iter8_p_i_reg_1339 = ap_pipeline_reg_pp3_iter7_p_i_reg_1339.read();
        ap_pipeline_reg_pp3_iter9_p_i_reg_1339 = ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_626_p2.read()))) {
        cond1_reg_1239 = cond1_fu_706_p2.read();
        cond_mid2_reg_1221 = cond_mid2_fu_682_p3.read();
        tmp_9_reg_1216 = tmp_9_fu_666_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        ctrl_read_reg_1173 = ctrl.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)))) {
        exitcond1_reg_1178 = exitcond1_fu_592_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)))) {
        exitcond4_reg_1187 = exitcond4_fu_609_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()))) {
        exitcond_flatten_reg_1202 = exitcond_flatten_fu_626_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_load_A.read())) {
        inStream_V_data_V_0_payload_A = inStream_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_load_B.read())) {
        inStream_V_data_V_0_payload_B = inStream_TDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_804_p2.read()))) {
        lineBuffer_0_addr_2_reg_1343 =  (sc_lv<3>) (x_assign_cast_fu_884_p1.read());
        lineBuffer_1_addr_2_reg_1349 =  (sc_lv<3>) (x_assign_cast_fu_884_p1.read());
        p_i_reg_1339 = p_i_fu_914_p2.read();
        tmp_5_reg_1355 = tmp_5_fu_923_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_load_A.read())) {
        outStream_V_data_V_1_payload_A = tmp_data_V_2_fu_1153_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_load_B.read())) {
        outStream_V_data_V_1_payload_B = tmp_data_V_2_fu_1153_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_load_A.read())) {
        outStream_V_last_V_1_payload_A = tmp_last_V_fu_1161_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_load_B.read())) {
        outStream_V_last_V_1_payload_B = tmp_last_V_fu_1161_p2.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter7_p_i_reg_1339.read()))) {
        tmp5_reg_1375 = tmp5_fu_1043_p2.read();
        tmp6_reg_1380 = tmp6_fu_1057_p2.read();
        tmp8_reg_1385 = tmp8_fu_1085_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_626_p2.read()))) {
        tmp_2_mid2_v_reg_1211 = tmp_2_mid2_v_fu_658_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        tmp_8_reg_1320 = tmp_8_fu_786_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1325.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        windowRightCol_1_reg_1370 = lineBuffer_1_q0.read();
        window_0_1_fu_168 = lineBuffer_0_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        window_0_0_fu_164 = window_0_1_fu_168.read();
        window_0_0_read_as_fu_160 = window_0_0_fu_164.read();
        window_1_0_read_as_fu_172 = window_1_0_phi_fu_508_p4.read();
        window_2_0_read_as_fu_176 = window_2_0_phi_fu_486_p4.read();
        window_2_1_2_reg_1364 = window_2_1_fu_180.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1202.read()))) {
        window_1_1_1_reg_427 = window_2_2_9_fu_774_p3.read();
        window_1_2_1_reg_415 = window_2_2_8_fu_767_p3.read();
        window_2_1_1_reg_403 = window_2_2_7_fu_760_p3.read();
        window_2_2_fu_156 = window_2_2_6_fu_753_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_592_p2.read()))) {
        x_1_reg_1182 = x_1_fu_598_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        x_2_reg_1191 = x_2_fu_615_p2.read();
    }
}

void cnn_conv_d6x6_k3x3::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(1, 1);
}

void cnn_conv_d6x6_k3x3::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read().range(3, 3);
}

void cnn_conv_d6x6_k3x3::thread_ap_CS_fsm_pp2_stage0() {
    ap_CS_fsm_pp2_stage0 = ap_CS_fsm.read().range(5, 5);
}

void cnn_conv_d6x6_k3x3::thread_ap_CS_fsm_pp3_stage0() {
    ap_CS_fsm_pp3_stage0 = ap_CS_fsm.read().range(7, 7);
}

void cnn_conv_d6x6_k3x3::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void cnn_conv_d6x6_k3x3::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read().range(6, 6);
}

void cnn_conv_d6x6_k3x3::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read().range(8, 8);
}

void cnn_conv_d6x6_k3x3::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(2, 2);
}

void cnn_conv_d6x6_k3x3::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read().range(4, 4);
}

void cnn_conv_d6x6_k3x3::thread_ap_condition_1731() {
    ap_condition_1731 = (esl_seteq<1,1,1>(outStream_V_data_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_user_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_dest_V_1_ack_in.read(), ap_const_logic_0));
}

void cnn_conv_d6x6_k3x3::thread_ap_condition_965() {
    ap_condition_965 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1325.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1355.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0));
}

void cnn_conv_d6x6_k3x3::thread_ap_condition_976() {
    ap_condition_976 = !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())));
}

void cnn_conv_d6x6_k3x3::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state22.read()) && 
         !esl_seteq<1,1,1>(ap_condition_1731.read(), ap_const_boolean_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state22.read()) && 
         !esl_seteq<1,1,1>(ap_condition_1731.read(), ap_const_boolean_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void cnn_conv_d6x6_k3x3::thread_cond1_fu_706_p2() {
    cond1_fu_706_p2 = (!x4_mid2_fu_644_p3.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(x4_mid2_fu_644_p3.read() == ap_const_lv2_1);
}

void cnn_conv_d6x6_k3x3::thread_cond_fu_676_p2() {
    cond_fu_676_p2 = (!y3_phi_fu_396_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(y3_phi_fu_396_p4.read() == ap_const_lv2_1);
}

void cnn_conv_d6x6_k3x3::thread_cond_mid1_fu_670_p2() {
    cond_mid1_fu_670_p2 = (!y3_phi_fu_396_p4.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(y3_phi_fu_396_p4.read() == ap_const_lv2_0);
}

void cnn_conv_d6x6_k3x3::thread_cond_mid2_fu_682_p3() {
    cond_mid2_fu_682_p3 = (!exitcond_fu_638_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond_fu_638_p2.read()[0].to_bool())? cond_mid1_fu_670_p2.read(): cond_fu_676_p2.read());
}

void cnn_conv_d6x6_k3x3::thread_exitcond1_fu_592_p2() {
    exitcond1_fu_592_p2 = (!x_phi_fu_361_p4.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(x_phi_fu_361_p4.read() == ap_const_lv3_6);
}

void cnn_conv_d6x6_k3x3::thread_exitcond2_fu_816_p2() {
    exitcond2_fu_816_p2 = (!x_assign_reg_472.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(x_assign_reg_472.read() == ap_const_lv3_6);
}

void cnn_conv_d6x6_k3x3::thread_exitcond4_fu_609_p2() {
    exitcond4_fu_609_p2 = (!x1_phi_fu_373_p4.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(x1_phi_fu_373_p4.read() == ap_const_lv3_6);
}

void cnn_conv_d6x6_k3x3::thread_exitcond_flatten8_fu_804_p2() {
    exitcond_flatten8_fu_804_p2 = (!indvar_flatten6_reg_450.read().is_01() || !ap_const_lv6_24.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten6_reg_450.read() == ap_const_lv6_24);
}

void cnn_conv_d6x6_k3x3::thread_exitcond_flatten_fu_626_p2() {
    exitcond_flatten_fu_626_p2 = (!indvar_flatten_reg_381.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_381.read() == ap_const_lv3_4);
}

void cnn_conv_d6x6_k3x3::thread_exitcond_fu_638_p2() {
    exitcond_fu_638_p2 = (!x4_reg_439.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(x4_reg_439.read() == ap_const_lv2_3);
}

void cnn_conv_d6x6_k3x3::thread_grp_fixed_point_mul_fu_517_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fixed_point_mul_fu_517_ap_ce = ap_const_logic_1;
    } else {
        grp_fixed_point_mul_fu_517_ap_ce = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_grp_fixed_point_mul_fu_524_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fixed_point_mul_fu_524_ap_ce = ap_const_logic_1;
    } else {
        grp_fixed_point_mul_fu_524_ap_ce = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_grp_fixed_point_mul_fu_531_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fixed_point_mul_fu_531_ap_ce = ap_const_logic_1;
    } else {
        grp_fixed_point_mul_fu_531_ap_ce = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_grp_fixed_point_mul_fu_538_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fixed_point_mul_fu_538_ap_ce = ap_const_logic_1;
    } else {
        grp_fixed_point_mul_fu_538_ap_ce = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_grp_fixed_point_mul_fu_545_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fixed_point_mul_fu_545_ap_ce = ap_const_logic_1;
    } else {
        grp_fixed_point_mul_fu_545_ap_ce = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_grp_fixed_point_mul_fu_553_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fixed_point_mul_fu_553_ap_ce = ap_const_logic_1;
    } else {
        grp_fixed_point_mul_fu_553_ap_ce = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_grp_fixed_point_mul_fu_561_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fixed_point_mul_fu_561_ap_ce = ap_const_logic_1;
    } else {
        grp_fixed_point_mul_fu_561_ap_ce = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_grp_fixed_point_mul_fu_568_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fixed_point_mul_fu_568_ap_ce = ap_const_logic_1;
    } else {
        grp_fixed_point_mul_fu_568_ap_ce = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_grp_fixed_point_mul_fu_576_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fixed_point_mul_fu_576_ap_ce = ap_const_logic_1;
    } else {
        grp_fixed_point_mul_fu_576_ap_ce = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_inStream_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1325.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1355.read())))) {
        inStream_TDATA_blk_n =  (sc_logic) (inStream_V_data_V_0_state.read()[0]);
    } else {
        inStream_TDATA_blk_n = ap_const_logic_1;
    }
}

void cnn_conv_d6x6_k3x3::thread_inStream_TREADY() {
    inStream_TREADY =  (sc_logic) (inStream_V_dest_V_0_state.read()[1]);
}

void cnn_conv_d6x6_k3x3::thread_inStream_V_data_V_0_ack_in() {
    inStream_V_data_V_0_ack_in =  (sc_logic) (inStream_V_data_V_0_state.read()[1]);
}

void cnn_conv_d6x6_k3x3::thread_inStream_V_data_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1325.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1355.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))))) {
        inStream_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        inStream_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_inStream_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_sel.read())) {
        inStream_V_data_V_0_data_out = inStream_V_data_V_0_payload_B.read();
    } else {
        inStream_V_data_V_0_data_out = inStream_V_data_V_0_payload_A.read();
    }
}

void cnn_conv_d6x6_k3x3::thread_inStream_V_data_V_0_load_A() {
    inStream_V_data_V_0_load_A = (inStream_V_data_V_0_state_cmp_full.read() & ~inStream_V_data_V_0_sel_wr.read());
}

void cnn_conv_d6x6_k3x3::thread_inStream_V_data_V_0_load_B() {
    inStream_V_data_V_0_load_B = (inStream_V_data_V_0_sel_wr.read() & inStream_V_data_V_0_state_cmp_full.read());
}

void cnn_conv_d6x6_k3x3::thread_inStream_V_data_V_0_sel() {
    inStream_V_data_V_0_sel = inStream_V_data_V_0_sel_rd.read();
}

void cnn_conv_d6x6_k3x3::thread_inStream_V_data_V_0_state_cmp_full() {
    inStream_V_data_V_0_state_cmp_full =  (sc_logic) ((!inStream_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(inStream_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void cnn_conv_d6x6_k3x3::thread_inStream_V_data_V_0_vld_in() {
    inStream_V_data_V_0_vld_in = inStream_TVALID.read();
}

void cnn_conv_d6x6_k3x3::thread_inStream_V_data_V_0_vld_out() {
    inStream_V_data_V_0_vld_out =  (sc_logic) (inStream_V_data_V_0_state.read()[0]);
}

void cnn_conv_d6x6_k3x3::thread_inStream_V_dest_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1325.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_1355.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))))) {
        inStream_V_dest_V_0_ack_out = ap_const_logic_1;
    } else {
        inStream_V_dest_V_0_ack_out = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_inStream_V_dest_V_0_vld_in() {
    inStream_V_dest_V_0_vld_in = inStream_TVALID.read();
}

void cnn_conv_d6x6_k3x3::thread_indvar_flatten_next7_fu_810_p2() {
    indvar_flatten_next7_fu_810_p2 = (!indvar_flatten6_reg_450.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(indvar_flatten6_reg_450.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void cnn_conv_d6x6_k3x3::thread_indvar_flatten_next_fu_632_p2() {
    indvar_flatten_next_fu_632_p2 = (!indvar_flatten_reg_381.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(indvar_flatten_reg_381.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void cnn_conv_d6x6_k3x3::thread_lineBuffer_0_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()))) {
        lineBuffer_0_address0 =  (sc_lv<3>) (x_assign_cast_fu_884_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()))) {
        lineBuffer_0_address0 =  (sc_lv<3>) (tmp_cast_fu_700_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        lineBuffer_0_address0 =  (sc_lv<3>) (x_cast_fu_604_p1.read());
    } else {
        lineBuffer_0_address0 = "XXX";
    }
}

void cnn_conv_d6x6_k3x3::thread_lineBuffer_0_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0))))) {
        lineBuffer_0_ce0 = ap_const_logic_1;
    } else {
        lineBuffer_0_ce0 = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_lineBuffer_0_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        lineBuffer_0_ce1 = ap_const_logic_1;
    } else {
        lineBuffer_0_ce1 = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_lineBuffer_0_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0))))) {
        lineBuffer_0_we0 = ap_const_logic_1;
    } else {
        lineBuffer_0_we0 = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_lineBuffer_0_we1() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1325.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))))) {
        lineBuffer_0_we1 = ap_const_logic_1;
    } else {
        lineBuffer_0_we1 = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_lineBuffer_1_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()))) {
        lineBuffer_1_address0 =  (sc_lv<3>) (x_assign_cast_fu_884_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()))) {
        lineBuffer_1_address0 =  (sc_lv<3>) (tmp_cast_fu_700_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        lineBuffer_1_address0 =  (sc_lv<3>) (x1_cast_fu_621_p1.read());
    } else {
        lineBuffer_1_address0 = "XXX";
    }
}

void cnn_conv_d6x6_k3x3::thread_lineBuffer_1_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0))))) {
        lineBuffer_1_ce0 = ap_const_logic_1;
    } else {
        lineBuffer_1_ce0 = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_lineBuffer_1_ce1() {
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()))) {
        lineBuffer_1_ce1 = ap_const_logic_1;
    } else {
        lineBuffer_1_ce1 = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_lineBuffer_1_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0))))) {
        lineBuffer_1_we0 = ap_const_logic_1;
    } else {
        lineBuffer_1_we0 = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_lineBuffer_1_we1() {
    if (((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1325.read())))) {
        lineBuffer_1_we1 = ap_const_logic_1;
    } else {
        lineBuffer_1_we1 = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_outStream_TDATA() {
    outStream_TDATA = outStream_V_data_V_1_data_out.read();
}

void cnn_conv_d6x6_k3x3::thread_outStream_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read())))) {
        outStream_TDATA_blk_n =  (sc_logic) (outStream_V_data_V_1_state.read()[1]);
    } else {
        outStream_TDATA_blk_n = ap_const_logic_1;
    }
}

void cnn_conv_d6x6_k3x3::thread_outStream_TDEST() {
    outStream_TDEST = outStream_V_dest_V_1_data_out.read();
}

void cnn_conv_d6x6_k3x3::thread_outStream_TID() {
    outStream_TID = outStream_V_id_V_1_data_out.read();
}

void cnn_conv_d6x6_k3x3::thread_outStream_TKEEP() {
    outStream_TKEEP = outStream_V_keep_V_1_data_out.read();
}

void cnn_conv_d6x6_k3x3::thread_outStream_TLAST() {
    outStream_TLAST = outStream_V_last_V_1_data_out.read();
}

void cnn_conv_d6x6_k3x3::thread_outStream_TSTRB() {
    outStream_TSTRB = outStream_V_strb_V_1_data_out.read();
}

void cnn_conv_d6x6_k3x3::thread_outStream_TUSER() {
    outStream_TUSER = outStream_V_user_V_1_data_out.read();
}

void cnn_conv_d6x6_k3x3::thread_outStream_TVALID() {
    outStream_TVALID =  (sc_logic) (outStream_V_dest_V_1_state.read()[0]);
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_data_V_1_ack_in() {
    outStream_V_data_V_1_ack_in =  (sc_logic) (outStream_V_data_V_1_state.read()[1]);
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_data_V_1_ack_out() {
    outStream_V_data_V_1_ack_out = outStream_TREADY.read();
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_sel.read())) {
        outStream_V_data_V_1_data_out = outStream_V_data_V_1_payload_B.read();
    } else {
        outStream_V_data_V_1_data_out = outStream_V_data_V_1_payload_A.read();
    }
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_data_V_1_load_A() {
    outStream_V_data_V_1_load_A = (outStream_V_data_V_1_state_cmp_full.read() & ~outStream_V_data_V_1_sel_wr.read());
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_data_V_1_load_B() {
    outStream_V_data_V_1_load_B = (outStream_V_data_V_1_sel_wr.read() & outStream_V_data_V_1_state_cmp_full.read());
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_data_V_1_sel() {
    outStream_V_data_V_1_sel = outStream_V_data_V_1_sel_rd.read();
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_data_V_1_state_cmp_full() {
    outStream_V_data_V_1_state_cmp_full =  (sc_logic) ((!outStream_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(outStream_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_data_V_1_vld_out() {
    outStream_V_data_V_1_vld_out =  (sc_logic) (outStream_V_data_V_1_state.read()[0]);
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_dest_V_1_ack_in() {
    outStream_V_dest_V_1_ack_in =  (sc_logic) (outStream_V_dest_V_1_state.read()[1]);
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_dest_V_1_ack_out() {
    outStream_V_dest_V_1_ack_out = outStream_TREADY.read();
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_dest_V_1_data_out() {
    outStream_V_dest_V_1_data_out = ap_const_lv6_0;
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_dest_V_1_sel() {
    outStream_V_dest_V_1_sel = outStream_V_dest_V_1_sel_rd.read();
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_dest_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_dest_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_dest_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_dest_V_1_vld_out() {
    outStream_V_dest_V_1_vld_out =  (sc_logic) (outStream_V_dest_V_1_state.read()[0]);
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_id_V_1_ack_in() {
    outStream_V_id_V_1_ack_in =  (sc_logic) (outStream_V_id_V_1_state.read()[1]);
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_id_V_1_ack_out() {
    outStream_V_id_V_1_ack_out = outStream_TREADY.read();
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_id_V_1_data_out() {
    outStream_V_id_V_1_data_out = ap_const_lv5_0;
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_id_V_1_sel() {
    outStream_V_id_V_1_sel = outStream_V_id_V_1_sel_rd.read();
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_id_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_id_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_id_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_id_V_1_vld_out() {
    outStream_V_id_V_1_vld_out =  (sc_logic) (outStream_V_id_V_1_state.read()[0]);
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_keep_V_1_ack_in() {
    outStream_V_keep_V_1_ack_in =  (sc_logic) (outStream_V_keep_V_1_state.read()[1]);
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_keep_V_1_ack_out() {
    outStream_V_keep_V_1_ack_out = outStream_TREADY.read();
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_keep_V_1_data_out() {
    outStream_V_keep_V_1_data_out = ap_const_lv4_F;
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_keep_V_1_sel() {
    outStream_V_keep_V_1_sel = outStream_V_keep_V_1_sel_rd.read();
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_keep_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_keep_V_1_vld_out() {
    outStream_V_keep_V_1_vld_out =  (sc_logic) (outStream_V_keep_V_1_state.read()[0]);
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_last_V_1_ack_in() {
    outStream_V_last_V_1_ack_in =  (sc_logic) (outStream_V_last_V_1_state.read()[1]);
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_last_V_1_ack_out() {
    outStream_V_last_V_1_ack_out = outStream_TREADY.read();
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_sel.read())) {
        outStream_V_last_V_1_data_out = outStream_V_last_V_1_payload_B.read();
    } else {
        outStream_V_last_V_1_data_out = outStream_V_last_V_1_payload_A.read();
    }
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_last_V_1_load_A() {
    outStream_V_last_V_1_load_A = (outStream_V_last_V_1_state_cmp_full.read() & ~outStream_V_last_V_1_sel_wr.read());
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_last_V_1_load_B() {
    outStream_V_last_V_1_load_B = (outStream_V_last_V_1_sel_wr.read() & outStream_V_last_V_1_state_cmp_full.read());
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_last_V_1_sel() {
    outStream_V_last_V_1_sel = outStream_V_last_V_1_sel_rd.read();
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_last_V_1_state_cmp_full() {
    outStream_V_last_V_1_state_cmp_full =  (sc_logic) ((!outStream_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(outStream_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_last_V_1_vld_out() {
    outStream_V_last_V_1_vld_out =  (sc_logic) (outStream_V_last_V_1_state.read()[0]);
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_strb_V_1_ack_in() {
    outStream_V_strb_V_1_ack_in =  (sc_logic) (outStream_V_strb_V_1_state.read()[1]);
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_strb_V_1_ack_out() {
    outStream_V_strb_V_1_ack_out = outStream_TREADY.read();
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_strb_V_1_data_out() {
    outStream_V_strb_V_1_data_out = ap_const_lv4_0;
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_strb_V_1_sel() {
    outStream_V_strb_V_1_sel = outStream_V_strb_V_1_sel_rd.read();
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_strb_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_strb_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_strb_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_strb_V_1_vld_out() {
    outStream_V_strb_V_1_vld_out =  (sc_logic) (outStream_V_strb_V_1_state.read()[0]);
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_user_V_1_ack_in() {
    outStream_V_user_V_1_ack_in =  (sc_logic) (outStream_V_user_V_1_state.read()[1]);
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_user_V_1_ack_out() {
    outStream_V_user_V_1_ack_out = outStream_TREADY.read();
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_user_V_1_data_out() {
    outStream_V_user_V_1_data_out = ap_const_lv2_0;
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_user_V_1_sel() {
    outStream_V_user_V_1_sel = outStream_V_user_V_1_sel_rd.read();
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_conv_d6x6_k3x3::thread_outStream_V_user_V_1_vld_out() {
    outStream_V_user_V_1_vld_out =  (sc_logic) (outStream_V_user_V_1_state.read()[0]);
}

void cnn_conv_d6x6_k3x3::thread_p_i_fu_914_p2() {
    p_i_fu_914_p2 = (tmp3_fu_908_p2.read() | tmp2_fu_902_p2.read());
}

void cnn_conv_d6x6_k3x3::thread_readCount_fu_929_p2() {
    readCount_fu_929_p2 = (!readCount_1_fu_188.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(readCount_1_fu_188.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void cnn_conv_d6x6_k3x3::thread_result_4_2_2_i_cast1_fu_1125_p1() {
    result_4_2_2_i_cast1_fu_1125_p1 = esl_sext<32,27>(result_4_2_2_i_fu_1119_p2.read());
}

void cnn_conv_d6x6_k3x3::thread_result_4_2_2_i_fu_1119_p2() {
    result_4_2_2_i_fu_1119_p2 = (!tmp10_cast_fu_1100_p1.read().is_01() || !tmp13_cast_fu_1115_p1.read().is_01())? sc_lv<27>(): (sc_bigint<27>(tmp10_cast_fu_1100_p1.read()) + sc_bigint<27>(tmp13_cast_fu_1115_p1.read()));
}

void cnn_conv_d6x6_k3x3::thread_result_cast1_fu_1145_p1() {
    result_cast1_fu_1145_p1 = esl_sext<31,27>(result_fu_1137_p3.read());
}

void cnn_conv_d6x6_k3x3::thread_result_cast_fu_1149_p1() {
    result_cast_fu_1149_p1 = esl_zext<32,31>(result_cast1_fu_1145_p1.read());
}

void cnn_conv_d6x6_k3x3::thread_result_fu_1137_p3() {
    result_fu_1137_p3 = (!tmp_10_fu_1129_p3.read()[0].is_01())? sc_lv<27>(): ((tmp_10_fu_1129_p3.read()[0].to_bool())? ap_const_lv27_0: result_4_2_2_i_fu_1119_p2.read());
}

void cnn_conv_d6x6_k3x3::thread_tmp10_cast_fu_1100_p1() {
    tmp10_cast_fu_1100_p1 = esl_sext<27,25>(tmp5_reg_1375.read());
}

void cnn_conv_d6x6_k3x3::thread_tmp11_cast_fu_1021_p1() {
    tmp11_cast_fu_1021_p1 = esl_sext<25,24>(tmp1_fu_1015_p2.read());
}

void cnn_conv_d6x6_k3x3::thread_tmp11_trunc24_ext_ca_fu_1011_p1() {
    tmp11_trunc24_ext_ca_fu_1011_p1 = esl_sext<24,23>(grp_fixed_point_mul_fu_568_ap_return.read());
}

void cnn_conv_d6x6_k3x3::thread_tmp11_trunc_ext_cast_fu_1007_p1() {
    tmp11_trunc_ext_cast_fu_1007_p1 = esl_sext<24,23>(grp_fixed_point_mul_fu_561_ap_return.read());
}

void cnn_conv_d6x6_k3x3::thread_tmp12_cast_fu_1039_p1() {
    tmp12_cast_fu_1039_p1 = esl_sext<25,24>(tmp4_fu_1033_p2.read());
}

void cnn_conv_d6x6_k3x3::thread_tmp12_trunc23_ext_ca_fu_1029_p1() {
    tmp12_trunc23_ext_ca_fu_1029_p1 = esl_sext<24,23>(grp_fixed_point_mul_fu_553_ap_return.read());
}

void cnn_conv_d6x6_k3x3::thread_tmp12_trunc_ext_cast_fu_1025_p1() {
    tmp12_trunc_ext_cast_fu_1025_p1 = esl_sext<24,23>(grp_fixed_point_mul_fu_545_ap_return.read());
}

void cnn_conv_d6x6_k3x3::thread_tmp13_cast_fu_1115_p1() {
    tmp13_cast_fu_1115_p1 = esl_sext<27,26>(tmp9_fu_1109_p2.read());
}

void cnn_conv_d6x6_k3x3::thread_tmp14_cast_fu_1103_p1() {
    tmp14_cast_fu_1103_p1 = esl_sext<26,24>(tmp6_reg_1380.read());
}

void cnn_conv_d6x6_k3x3::thread_tmp14_trunc22_ext_ca_fu_1053_p1() {
    tmp14_trunc22_ext_ca_fu_1053_p1 = esl_sext<24,23>(grp_fixed_point_mul_fu_524_ap_return.read());
}

void cnn_conv_d6x6_k3x3::thread_tmp14_trunc_ext_cast_fu_1049_p1() {
    tmp14_trunc_ext_cast_fu_1049_p1 = esl_sext<24,23>(grp_fixed_point_mul_fu_517_ap_return.read());
}

void cnn_conv_d6x6_k3x3::thread_tmp15_cast_fu_1106_p1() {
    tmp15_cast_fu_1106_p1 = esl_sext<26,25>(tmp8_reg_1385.read());
}

void cnn_conv_d6x6_k3x3::thread_tmp15_trunc_ext_cast_fu_1081_p1() {
    tmp15_trunc_ext_cast_fu_1081_p1 = esl_sext<25,23>(grp_fixed_point_mul_fu_538_ap_return.read());
}

void cnn_conv_d6x6_k3x3::thread_tmp16_cast_fu_1077_p1() {
    tmp16_cast_fu_1077_p1 = esl_sext<25,24>(tmp7_fu_1071_p2.read());
}

void cnn_conv_d6x6_k3x3::thread_tmp16_trunc25_ext_ca_fu_1067_p1() {
    tmp16_trunc25_ext_ca_fu_1067_p1 = esl_sext<24,23>(grp_fixed_point_mul_fu_576_ap_return.read());
}

void cnn_conv_d6x6_k3x3::thread_tmp16_trunc_ext_cast_fu_1063_p1() {
    tmp16_trunc_ext_cast_fu_1063_p1 = esl_sext<24,23>(grp_fixed_point_mul_fu_531_ap_return.read());
}

void cnn_conv_d6x6_k3x3::thread_tmp1_fu_1015_p2() {
    tmp1_fu_1015_p2 = (!tmp11_trunc24_ext_ca_fu_1011_p1.read().is_01() || !tmp11_trunc_ext_cast_fu_1007_p1.read().is_01())? sc_lv<24>(): (sc_bigint<24>(tmp11_trunc24_ext_ca_fu_1011_p1.read()) + sc_bigint<24>(tmp11_trunc_ext_cast_fu_1007_p1.read()));
}

void cnn_conv_d6x6_k3x3::thread_tmp2_fu_902_p2() {
    tmp2_fu_902_p2 = (tmp_i_15_fu_890_p2.read() | tmp_i_mid2_fu_848_p3.read());
}

void cnn_conv_d6x6_k3x3::thread_tmp3_fu_908_p2() {
    tmp3_fu_908_p2 = (tmp_1_i_fu_896_p2.read() | tmp_2_i_mid2_fu_868_p3.read());
}

void cnn_conv_d6x6_k3x3::thread_tmp4_fu_1033_p2() {
    tmp4_fu_1033_p2 = (!tmp12_trunc_ext_cast_fu_1025_p1.read().is_01() || !tmp12_trunc23_ext_ca_fu_1029_p1.read().is_01())? sc_lv<24>(): (sc_bigint<24>(tmp12_trunc_ext_cast_fu_1025_p1.read()) + sc_bigint<24>(tmp12_trunc23_ext_ca_fu_1029_p1.read()));
}

void cnn_conv_d6x6_k3x3::thread_tmp5_fu_1043_p2() {
    tmp5_fu_1043_p2 = (!tmp11_cast_fu_1021_p1.read().is_01() || !tmp12_cast_fu_1039_p1.read().is_01())? sc_lv<25>(): (sc_bigint<25>(tmp11_cast_fu_1021_p1.read()) + sc_bigint<25>(tmp12_cast_fu_1039_p1.read()));
}

void cnn_conv_d6x6_k3x3::thread_tmp6_fu_1057_p2() {
    tmp6_fu_1057_p2 = (!tmp14_trunc22_ext_ca_fu_1053_p1.read().is_01() || !tmp14_trunc_ext_cast_fu_1049_p1.read().is_01())? sc_lv<24>(): (sc_bigint<24>(tmp14_trunc22_ext_ca_fu_1053_p1.read()) + sc_bigint<24>(tmp14_trunc_ext_cast_fu_1049_p1.read()));
}

void cnn_conv_d6x6_k3x3::thread_tmp7_fu_1071_p2() {
    tmp7_fu_1071_p2 = (!tmp16_trunc25_ext_ca_fu_1067_p1.read().is_01() || !tmp16_trunc_ext_cast_fu_1063_p1.read().is_01())? sc_lv<24>(): (sc_bigint<24>(tmp16_trunc25_ext_ca_fu_1067_p1.read()) + sc_bigint<24>(tmp16_trunc_ext_cast_fu_1063_p1.read()));
}

void cnn_conv_d6x6_k3x3::thread_tmp8_fu_1085_p2() {
    tmp8_fu_1085_p2 = (!tmp15_trunc_ext_cast_fu_1081_p1.read().is_01() || !tmp16_cast_fu_1077_p1.read().is_01())? sc_lv<25>(): (sc_bigint<25>(tmp15_trunc_ext_cast_fu_1081_p1.read()) + sc_bigint<25>(tmp16_cast_fu_1077_p1.read()));
}

void cnn_conv_d6x6_k3x3::thread_tmp9_fu_1109_p2() {
    tmp9_fu_1109_p2 = (!tmp14_cast_fu_1103_p1.read().is_01() || !tmp15_cast_fu_1106_p1.read().is_01())? sc_lv<26>(): (sc_bigint<26>(tmp14_cast_fu_1103_p1.read()) + sc_bigint<26>(tmp15_cast_fu_1106_p1.read()));
}

void cnn_conv_d6x6_k3x3::thread_tmp_10_fu_1129_p3() {
    tmp_10_fu_1129_p3 = result_4_2_2_i_fu_1119_p2.read().range(26, 26);
}

void cnn_conv_d6x6_k3x3::thread_tmp_1_i_fu_896_p2() {
    tmp_1_i_fu_896_p2 = (!x_assign_mid2_fu_822_p3.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): (sc_biguint<3>(x_assign_mid2_fu_822_p3.read()) > sc_biguint<3>(ap_const_lv3_4));
}

void cnn_conv_d6x6_k3x3::thread_tmp_2_i_fu_862_p2() {
    tmp_2_i_fu_862_p2 = (!y_assign_reg_461.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): (sc_biguint<3>(y_assign_reg_461.read()) > sc_biguint<3>(ap_const_lv3_4));
}

void cnn_conv_d6x6_k3x3::thread_tmp_2_i_mid1_fu_856_p2() {
    tmp_2_i_mid1_fu_856_p2 = (!y_s_fu_830_p2.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): (sc_biguint<3>(y_s_fu_830_p2.read()) > sc_biguint<3>(ap_const_lv3_4));
}

void cnn_conv_d6x6_k3x3::thread_tmp_2_i_mid2_fu_868_p3() {
    tmp_2_i_mid2_fu_868_p3 = (!exitcond2_fu_816_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond2_fu_816_p2.read()[0].to_bool())? tmp_2_i_mid1_fu_856_p2.read(): tmp_2_i_fu_862_p2.read());
}

void cnn_conv_d6x6_k3x3::thread_tmp_2_mid2_v_fu_658_p3() {
    tmp_2_mid2_v_fu_658_p3 = (!exitcond_fu_638_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_fu_638_p2.read()[0].to_bool())? y9_fu_652_p2.read(): y3_phi_fu_396_p4.read());
}

void cnn_conv_d6x6_k3x3::thread_tmp_5_fu_923_p2() {
    tmp_5_fu_923_p2 = (!readCount_1_fu_188.read().is_01() || !ap_const_lv32_24.is_01())? sc_lv<1>(): (sc_bigint<32>(readCount_1_fu_188.read()) < sc_bigint<32>(ap_const_lv32_24));
}

void cnn_conv_d6x6_k3x3::thread_tmp_8_fu_786_p1() {
    tmp_8_fu_786_p1 = ctrl_read_reg_1173.read().range(1-1, 0);
}

void cnn_conv_d6x6_k3x3::thread_tmp_9_fu_666_p1() {
    tmp_9_fu_666_p1 = tmp_2_mid2_v_fu_658_p3.read().range(1-1, 0);
}

void cnn_conv_d6x6_k3x3::thread_tmp_cast_fu_700_p1() {
    tmp_cast_fu_700_p1 = esl_zext<32,3>(tmp_s_fu_694_p2.read());
}

void cnn_conv_d6x6_k3x3::thread_tmp_data_V_2_fu_1153_p3() {
    tmp_data_V_2_fu_1153_p3 = (!tmp_8_reg_1320.read()[0].is_01())? sc_lv<32>(): ((tmp_8_reg_1320.read()[0].to_bool())? result_cast_fu_1149_p1.read(): result_4_2_2_i_cast1_fu_1125_p1.read());
}

void cnn_conv_d6x6_k3x3::thread_tmp_i_15_fu_890_p2() {
    tmp_i_15_fu_890_p2 = (!x_assign_mid2_fu_822_p3.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(x_assign_mid2_fu_822_p3.read() == ap_const_lv3_0);
}

void cnn_conv_d6x6_k3x3::thread_tmp_i_fu_842_p2() {
    tmp_i_fu_842_p2 = (!y_assign_reg_461.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(y_assign_reg_461.read() == ap_const_lv3_0);
}

void cnn_conv_d6x6_k3x3::thread_tmp_i_mid1_fu_836_p2() {
    tmp_i_mid1_fu_836_p2 = (!y_s_fu_830_p2.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(y_s_fu_830_p2.read() == ap_const_lv3_0);
}

void cnn_conv_d6x6_k3x3::thread_tmp_i_mid2_fu_848_p3() {
    tmp_i_mid2_fu_848_p3 = (!exitcond2_fu_816_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond2_fu_816_p2.read()[0].to_bool())? tmp_i_mid1_fu_836_p2.read(): tmp_i_fu_842_p2.read());
}

void cnn_conv_d6x6_k3x3::thread_tmp_last_V_fu_1161_p2() {
    tmp_last_V_fu_1161_p2 = (!writeCount_fu_1094_p2.read().is_01() || !ap_const_lv32_10.is_01())? sc_lv<1>(): sc_lv<1>(writeCount_fu_1094_p2.read() == ap_const_lv32_10);
}

void cnn_conv_d6x6_k3x3::thread_tmp_s_fu_694_p2() {
    tmp_s_fu_694_p2 = (!ap_const_lv3_3.is_01() || !x4_cast_fu_690_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_3) + sc_biguint<3>(x4_cast_fu_690_p1.read()));
}

void cnn_conv_d6x6_k3x3::thread_window_1_0_phi_fu_508_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1325.read()))) {
        window_1_0_phi_fu_508_p4 = window_1_1_reg_494.read();
    } else {
        window_1_0_phi_fu_508_p4 = window_1_0_reg_505.read();
    }
}

void cnn_conv_d6x6_k3x3::thread_window_1_1_2_fu_718_p3() {
    window_1_1_2_fu_718_p3 = (!tmp_9_reg_1216.read()[0].is_01())? sc_lv<32>(): ((tmp_9_reg_1216.read()[0].to_bool())? lineBuffer_0_q0.read(): lineBuffer_1_q0.read());
}

void cnn_conv_d6x6_k3x3::thread_window_1_1_phi_fu_497_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1325.read()))) {
        window_1_1_phi_fu_497_p4 = windowRightCol_1_reg_1370.read();
    } else {
        window_1_1_phi_fu_497_p4 = window_1_1_reg_494.read();
    }
}

void cnn_conv_d6x6_k3x3::thread_window_2_0_phi_fu_486_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1325.read()))) {
        window_2_0_phi_fu_486_p4 = window_2_1_2_reg_1364.read();
    } else {
        window_2_0_phi_fu_486_p4 = window_2_0_reg_483.read();
    }
}

void cnn_conv_d6x6_k3x3::thread_window_2_2_1_fu_725_p3() {
    window_2_2_1_fu_725_p3 = (!cond1_reg_1239.read()[0].is_01())? sc_lv<32>(): ((cond1_reg_1239.read()[0].to_bool())? window_1_2_1_reg_415.read(): window_1_1_2_fu_718_p3.read());
}

void cnn_conv_d6x6_k3x3::thread_window_2_2_2_fu_732_p3() {
    window_2_2_2_fu_732_p3 = (!cond1_reg_1239.read()[0].is_01())? sc_lv<32>(): ((cond1_reg_1239.read()[0].to_bool())? window_1_1_2_fu_718_p3.read(): window_1_1_1_reg_427.read());
}

void cnn_conv_d6x6_k3x3::thread_window_2_2_4_fu_739_p3() {
    window_2_2_4_fu_739_p3 = (!cond1_reg_1239.read()[0].is_01())? sc_lv<32>(): ((cond1_reg_1239.read()[0].to_bool())? window_2_2_fu_156.read(): window_1_1_2_fu_718_p3.read());
}

void cnn_conv_d6x6_k3x3::thread_window_2_2_5_fu_746_p3() {
    window_2_2_5_fu_746_p3 = (!cond1_reg_1239.read()[0].is_01())? sc_lv<32>(): ((cond1_reg_1239.read()[0].to_bool())? window_1_1_2_fu_718_p3.read(): window_2_1_1_reg_403.read());
}

void cnn_conv_d6x6_k3x3::thread_window_2_2_6_fu_753_p3() {
    window_2_2_6_fu_753_p3 = (!cond_mid2_reg_1221.read()[0].is_01())? sc_lv<32>(): ((cond_mid2_reg_1221.read()[0].to_bool())? window_2_2_fu_156.read(): window_2_2_4_fu_739_p3.read());
}

void cnn_conv_d6x6_k3x3::thread_window_2_2_7_fu_760_p3() {
    window_2_2_7_fu_760_p3 = (!cond_mid2_reg_1221.read()[0].is_01())? sc_lv<32>(): ((cond_mid2_reg_1221.read()[0].to_bool())? window_2_1_1_reg_403.read(): window_2_2_5_fu_746_p3.read());
}

void cnn_conv_d6x6_k3x3::thread_window_2_2_8_fu_767_p3() {
    window_2_2_8_fu_767_p3 = (!cond_mid2_reg_1221.read()[0].is_01())? sc_lv<32>(): ((cond_mid2_reg_1221.read()[0].to_bool())? window_2_2_1_fu_725_p3.read(): window_1_2_1_reg_415.read());
}

void cnn_conv_d6x6_k3x3::thread_window_2_2_9_fu_774_p3() {
    window_2_2_9_fu_774_p3 = (!cond_mid2_reg_1221.read()[0].is_01())? sc_lv<32>(): ((cond_mid2_reg_1221.read()[0].to_bool())? window_2_2_2_fu_732_p3.read(): window_1_1_1_reg_427.read());
}

void cnn_conv_d6x6_k3x3::thread_writeCount_fu_1094_p2() {
    writeCount_fu_1094_p2 = (!writeCount_1_fu_184.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(writeCount_1_fu_184.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void cnn_conv_d6x6_k3x3::thread_x1_cast_fu_621_p1() {
    x1_cast_fu_621_p1 = esl_zext<32,3>(x1_reg_369.read());
}

void cnn_conv_d6x6_k3x3::thread_x1_phi_fu_373_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()))) {
        x1_phi_fu_373_p4 = x_2_reg_1191.read();
    } else {
        x1_phi_fu_373_p4 = x1_reg_369.read();
    }
}

void cnn_conv_d6x6_k3x3::thread_x4_cast_fu_690_p1() {
    x4_cast_fu_690_p1 = esl_zext<3,2>(x4_mid2_fu_644_p3.read());
}

void cnn_conv_d6x6_k3x3::thread_x4_mid2_fu_644_p3() {
    x4_mid2_fu_644_p3 = (!exitcond_fu_638_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_fu_638_p2.read()[0].to_bool())? ap_const_lv2_1: x4_reg_439.read());
}

void cnn_conv_d6x6_k3x3::thread_x_1_fu_598_p2() {
    x_1_fu_598_p2 = (!x_phi_fu_361_p4.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(x_phi_fu_361_p4.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void cnn_conv_d6x6_k3x3::thread_x_2_fu_615_p2() {
    x_2_fu_615_p2 = (!x1_phi_fu_373_p4.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(x1_phi_fu_373_p4.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void cnn_conv_d6x6_k3x3::thread_x_3_fu_712_p2() {
    x_3_fu_712_p2 = (!ap_const_lv2_1.is_01() || !x4_mid2_fu_644_p3.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(x4_mid2_fu_644_p3.read()));
}

void cnn_conv_d6x6_k3x3::thread_x_4_fu_940_p2() {
    x_4_fu_940_p2 = (!x_assign_mid2_fu_822_p3.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(x_assign_mid2_fu_822_p3.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void cnn_conv_d6x6_k3x3::thread_x_assign_cast_fu_884_p1() {
    x_assign_cast_fu_884_p1 = esl_zext<32,3>(x_assign_mid2_fu_822_p3.read());
}

void cnn_conv_d6x6_k3x3::thread_x_assign_mid2_fu_822_p3() {
    x_assign_mid2_fu_822_p3 = (!exitcond2_fu_816_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond2_fu_816_p2.read()[0].to_bool())? ap_const_lv3_0: x_assign_reg_472.read());
}

void cnn_conv_d6x6_k3x3::thread_x_cast_fu_604_p1() {
    x_cast_fu_604_p1 = esl_zext<32,3>(x_reg_357.read());
}

void cnn_conv_d6x6_k3x3::thread_x_phi_fu_361_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()))) {
        x_phi_fu_361_p4 = x_1_reg_1182.read();
    } else {
        x_phi_fu_361_p4 = x_reg_357.read();
    }
}

void cnn_conv_d6x6_k3x3::thread_y3_phi_fu_396_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1202.read()))) {
        y3_phi_fu_396_p4 = tmp_2_mid2_v_reg_1211.read();
    } else {
        y3_phi_fu_396_p4 = y3_reg_392.read();
    }
}

void cnn_conv_d6x6_k3x3::thread_y9_fu_652_p2() {
    y9_fu_652_p2 = (!ap_const_lv2_1.is_01() || !y3_phi_fu_396_p4.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(y3_phi_fu_396_p4.read()));
}

void cnn_conv_d6x6_k3x3::thread_y_assign_mid2_fu_876_p3() {
    y_assign_mid2_fu_876_p3 = (!exitcond2_fu_816_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond2_fu_816_p2.read()[0].to_bool())? y_s_fu_830_p2.read(): y_assign_reg_461.read());
}

void cnn_conv_d6x6_k3x3::thread_y_s_fu_830_p2() {
    y_s_fu_830_p2 = (!y_assign_reg_461.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(y_assign_reg_461.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void cnn_conv_d6x6_k3x3::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_592_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1178.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_592_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 8 : 
            if (!(!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_609_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1187.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_609_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            break;
        case 32 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_626_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            break;
        case 128 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read())) && !(esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_965.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1339.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read())))) {
                ap_NS_fsm = ap_ST_fsm_state22;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            }
            break;
        case 256 : 
            if (!esl_seteq<1,1,1>(ap_condition_1731.read(), ap_const_boolean_1)) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<9>) ("XXXXXXXXX");
            break;
    }
}

void cnn_conv_d6x6_k3x3::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TDATA\" :  \"" << inStream_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TVALID\" :  \"" << inStream_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"inStream_TREADY\" :  \"" << inStream_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TKEEP\" :  \"" << inStream_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TSTRB\" :  \"" << inStream_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TUSER\" :  \"" << inStream_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TLAST\" :  \"" << inStream_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TID\" :  \"" << inStream_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TDEST\" :  \"" << inStream_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TDATA\" :  \"" << outStream_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TVALID\" :  \"" << outStream_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outStream_TREADY\" :  \"" << outStream_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TKEEP\" :  \"" << outStream_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TSTRB\" :  \"" << outStream_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TUSER\" :  \"" << outStream_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TLAST\" :  \"" << outStream_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TID\" :  \"" << outStream_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TDEST\" :  \"" << outStream_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_AWVALID\" :  \"" << s_axi_CTRL_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_AWREADY\" :  \"" << s_axi_CTRL_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_AWADDR\" :  \"" << s_axi_CTRL_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WVALID\" :  \"" << s_axi_CTRL_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_WREADY\" :  \"" << s_axi_CTRL_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WDATA\" :  \"" << s_axi_CTRL_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WSTRB\" :  \"" << s_axi_CTRL_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_ARVALID\" :  \"" << s_axi_CTRL_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_ARREADY\" :  \"" << s_axi_CTRL_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_ARADDR\" :  \"" << s_axi_CTRL_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RVALID\" :  \"" << s_axi_CTRL_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_RREADY\" :  \"" << s_axi_CTRL_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RDATA\" :  \"" << s_axi_CTRL_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RRESP\" :  \"" << s_axi_CTRL_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BVALID\" :  \"" << s_axi_CTRL_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BREADY\" :  \"" << s_axi_CTRL_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BRESP\" :  \"" << s_axi_CTRL_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

