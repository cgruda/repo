// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "cnn_conv_d4x4_k3x3.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic cnn_conv_d4x4_k3x3::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic cnn_conv_d4x4_k3x3::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> cnn_conv_d4x4_k3x3::ap_ST_fsm_state1 = "1";
const sc_lv<9> cnn_conv_d4x4_k3x3::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<9> cnn_conv_d4x4_k3x3::ap_ST_fsm_state4 = "100";
const sc_lv<9> cnn_conv_d4x4_k3x3::ap_ST_fsm_pp1_stage0 = "1000";
const sc_lv<9> cnn_conv_d4x4_k3x3::ap_ST_fsm_state7 = "10000";
const sc_lv<9> cnn_conv_d4x4_k3x3::ap_ST_fsm_state8 = "100000";
const sc_lv<9> cnn_conv_d4x4_k3x3::ap_ST_fsm_state9 = "1000000";
const sc_lv<9> cnn_conv_d4x4_k3x3::ap_ST_fsm_pp3_stage0 = "10000000";
const sc_lv<9> cnn_conv_d4x4_k3x3::ap_ST_fsm_state22 = "100000000";
const sc_lv<32> cnn_conv_d4x4_k3x3::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> cnn_conv_d4x4_k3x3::ap_const_lv1_1 = "1";
const bool cnn_conv_d4x4_k3x3::ap_const_boolean_1 = true;
const sc_lv<1> cnn_conv_d4x4_k3x3::ap_const_lv1_0 = "0";
const sc_lv<2> cnn_conv_d4x4_k3x3::ap_const_lv2_0 = "00";
const sc_lv<2> cnn_conv_d4x4_k3x3::ap_const_lv2_2 = "10";
const sc_lv<2> cnn_conv_d4x4_k3x3::ap_const_lv2_3 = "11";
const sc_lv<2> cnn_conv_d4x4_k3x3::ap_const_lv2_1 = "1";
const sc_lv<32> cnn_conv_d4x4_k3x3::ap_const_lv32_1 = "1";
const sc_lv<32> cnn_conv_d4x4_k3x3::ap_const_lv32_3 = "11";
const sc_lv<32> cnn_conv_d4x4_k3x3::ap_const_lv32_7 = "111";
const int cnn_conv_d4x4_k3x3::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> cnn_conv_d4x4_k3x3::ap_const_lv32_5 = "101";
const sc_lv<32> cnn_conv_d4x4_k3x3::ap_const_lv32_6 = "110";
const sc_lv<32> cnn_conv_d4x4_k3x3::ap_const_lv32_2 = "10";
const sc_lv<3> cnn_conv_d4x4_k3x3::ap_const_lv3_2 = "10";
const sc_lv<3> cnn_conv_d4x4_k3x3::ap_const_lv3_0 = "000";
const sc_lv<32> cnn_conv_d4x4_k3x3::ap_const_lv32_4 = "100";
const sc_lv<5> cnn_conv_d4x4_k3x3::ap_const_lv5_0 = "00000";
const sc_lv<4> cnn_conv_d4x4_k3x3::ap_const_lv4_F = "1111";
const sc_lv<4> cnn_conv_d4x4_k3x3::ap_const_lv4_0 = "0000";
const sc_lv<6> cnn_conv_d4x4_k3x3::ap_const_lv6_0 = "000000";
const sc_lv<3> cnn_conv_d4x4_k3x3::ap_const_lv3_4 = "100";
const sc_lv<3> cnn_conv_d4x4_k3x3::ap_const_lv3_1 = "1";
const sc_lv<5> cnn_conv_d4x4_k3x3::ap_const_lv5_10 = "10000";
const sc_lv<5> cnn_conv_d4x4_k3x3::ap_const_lv5_1 = "1";
const sc_lv<32> cnn_conv_d4x4_k3x3::ap_const_lv32_1F = "11111";
const sc_lv<28> cnn_conv_d4x4_k3x3::ap_const_lv28_1 = "1";
const sc_lv<32> cnn_conv_d4x4_k3x3::ap_const_lv32_1A = "11010";
const sc_lv<27> cnn_conv_d4x4_k3x3::ap_const_lv27_0 = "000000000000000000000000000";
const sc_lv<32> cnn_conv_d4x4_k3x3::ap_const_lv32_8 = "1000";

cnn_conv_d4x4_k3x3::cnn_conv_d4x4_k3x3(sc_module_name name) : sc_module(name), mVcdFile(0) {
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U = new cnn_conv_d4x4_k3x3_CTRL_s_axi<C_S_AXI_CTRL_ADDR_WIDTH,C_S_AXI_CTRL_DATA_WIDTH>("cnn_conv_d4x4_k3x3_CTRL_s_axi_U");
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->AWVALID(s_axi_CTRL_AWVALID);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->AWREADY(s_axi_CTRL_AWREADY);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->AWADDR(s_axi_CTRL_AWADDR);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->WVALID(s_axi_CTRL_WVALID);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->WREADY(s_axi_CTRL_WREADY);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->WDATA(s_axi_CTRL_WDATA);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->WSTRB(s_axi_CTRL_WSTRB);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->ARVALID(s_axi_CTRL_ARVALID);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->ARREADY(s_axi_CTRL_ARREADY);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->ARADDR(s_axi_CTRL_ARADDR);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->RVALID(s_axi_CTRL_RVALID);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->RREADY(s_axi_CTRL_RREADY);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->RDATA(s_axi_CTRL_RDATA);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->RRESP(s_axi_CTRL_RRESP);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->BVALID(s_axi_CTRL_BVALID);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->BREADY(s_axi_CTRL_BREADY);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->BRESP(s_axi_CTRL_BRESP);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->ACLK(ap_clk);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->ARESET(ap_rst_n_inv);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->ACLK_EN(ap_var_for_const0);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->ap_start(ap_start);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->interrupt(interrupt);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->ap_ready(ap_ready);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->ap_done(ap_done);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->ap_idle(ap_idle);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->ctrl(ctrl);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->kernel_0(kernel_0);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->kernel_1(kernel_1);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->kernel_2(kernel_2);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->kernel_3(kernel_3);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->kernel_4(kernel_4);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->kernel_5(kernel_5);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->kernel_6(kernel_6);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->kernel_7(kernel_7);
    cnn_conv_d4x4_k3x3_CTRL_s_axi_U->kernel_8(kernel_8);
    grp_fixed_point_mul_fu_594 = new fixed_point_mul("grp_fixed_point_mul_fu_594");
    grp_fixed_point_mul_fu_594->ap_clk(ap_clk);
    grp_fixed_point_mul_fu_594->ap_rst(ap_rst_n_inv);
    grp_fixed_point_mul_fu_594->a(window_0_0_read_as_fu_156);
    grp_fixed_point_mul_fu_594->b(kernel_0);
    grp_fixed_point_mul_fu_594->ap_return(grp_fixed_point_mul_fu_594_ap_return);
    grp_fixed_point_mul_fu_594->ap_ce(grp_fixed_point_mul_fu_594_ap_ce);
    grp_fixed_point_mul_fu_601 = new fixed_point_mul("grp_fixed_point_mul_fu_601");
    grp_fixed_point_mul_fu_601->ap_clk(ap_clk);
    grp_fixed_point_mul_fu_601->ap_rst(ap_rst_n_inv);
    grp_fixed_point_mul_fu_601->a(window_0_0_fu_160);
    grp_fixed_point_mul_fu_601->b(kernel_1);
    grp_fixed_point_mul_fu_601->ap_return(grp_fixed_point_mul_fu_601_ap_return);
    grp_fixed_point_mul_fu_601->ap_ce(grp_fixed_point_mul_fu_601_ap_ce);
    grp_fixed_point_mul_fu_608 = new fixed_point_mul("grp_fixed_point_mul_fu_608");
    grp_fixed_point_mul_fu_608->ap_clk(ap_clk);
    grp_fixed_point_mul_fu_608->ap_rst(ap_rst_n_inv);
    grp_fixed_point_mul_fu_608->a(window_0_1_fu_164);
    grp_fixed_point_mul_fu_608->b(kernel_2);
    grp_fixed_point_mul_fu_608->ap_return(grp_fixed_point_mul_fu_608_ap_return);
    grp_fixed_point_mul_fu_608->ap_ce(grp_fixed_point_mul_fu_608_ap_ce);
    grp_fixed_point_mul_fu_615 = new fixed_point_mul("grp_fixed_point_mul_fu_615");
    grp_fixed_point_mul_fu_615->ap_clk(ap_clk);
    grp_fixed_point_mul_fu_615->ap_rst(ap_rst_n_inv);
    grp_fixed_point_mul_fu_615->a(window_1_0_read_as_fu_168);
    grp_fixed_point_mul_fu_615->b(kernel_3);
    grp_fixed_point_mul_fu_615->ap_return(grp_fixed_point_mul_fu_615_ap_return);
    grp_fixed_point_mul_fu_615->ap_ce(grp_fixed_point_mul_fu_615_ap_ce);
    grp_fixed_point_mul_fu_622 = new fixed_point_mul("grp_fixed_point_mul_fu_622");
    grp_fixed_point_mul_fu_622->ap_clk(ap_clk);
    grp_fixed_point_mul_fu_622->ap_rst(ap_rst_n_inv);
    grp_fixed_point_mul_fu_622->a(window_1_0_phi_fu_585_p4);
    grp_fixed_point_mul_fu_622->b(kernel_4);
    grp_fixed_point_mul_fu_622->ap_return(grp_fixed_point_mul_fu_622_ap_return);
    grp_fixed_point_mul_fu_622->ap_ce(grp_fixed_point_mul_fu_622_ap_ce);
    grp_fixed_point_mul_fu_630 = new fixed_point_mul("grp_fixed_point_mul_fu_630");
    grp_fixed_point_mul_fu_630->ap_clk(ap_clk);
    grp_fixed_point_mul_fu_630->ap_rst(ap_rst_n_inv);
    grp_fixed_point_mul_fu_630->a(window_1_1_phi_fu_574_p4);
    grp_fixed_point_mul_fu_630->b(kernel_5);
    grp_fixed_point_mul_fu_630->ap_return(grp_fixed_point_mul_fu_630_ap_return);
    grp_fixed_point_mul_fu_630->ap_ce(grp_fixed_point_mul_fu_630_ap_ce);
    grp_fixed_point_mul_fu_638 = new fixed_point_mul("grp_fixed_point_mul_fu_638");
    grp_fixed_point_mul_fu_638->ap_clk(ap_clk);
    grp_fixed_point_mul_fu_638->ap_rst(ap_rst_n_inv);
    grp_fixed_point_mul_fu_638->a(window_2_0_read_as_fu_172);
    grp_fixed_point_mul_fu_638->b(kernel_6);
    grp_fixed_point_mul_fu_638->ap_return(grp_fixed_point_mul_fu_638_ap_return);
    grp_fixed_point_mul_fu_638->ap_ce(grp_fixed_point_mul_fu_638_ap_ce);
    grp_fixed_point_mul_fu_645 = new fixed_point_mul("grp_fixed_point_mul_fu_645");
    grp_fixed_point_mul_fu_645->ap_clk(ap_clk);
    grp_fixed_point_mul_fu_645->ap_rst(ap_rst_n_inv);
    grp_fixed_point_mul_fu_645->a(window_2_0_phi_fu_563_p4);
    grp_fixed_point_mul_fu_645->b(kernel_7);
    grp_fixed_point_mul_fu_645->ap_return(grp_fixed_point_mul_fu_645_ap_return);
    grp_fixed_point_mul_fu_645->ap_ce(grp_fixed_point_mul_fu_645_ap_ce);
    grp_fixed_point_mul_fu_653 = new fixed_point_mul("grp_fixed_point_mul_fu_653");
    grp_fixed_point_mul_fu_653->ap_clk(ap_clk);
    grp_fixed_point_mul_fu_653->ap_rst(ap_rst_n_inv);
    grp_fixed_point_mul_fu_653->a(window_2_1_2_reg_1721);
    grp_fixed_point_mul_fu_653->b(kernel_8);
    grp_fixed_point_mul_fu_653->ap_return(grp_fixed_point_mul_fu_653_ap_return);
    grp_fixed_point_mul_fu_653->ap_ce(grp_fixed_point_mul_fu_653_ap_ce);
    cnn_conv_d4x4_k3xcud_U3 = new cnn_conv_d4x4_k3xcud<1,1,32,32,32,32,2,32>("cnn_conv_d4x4_k3xcud_U3");
    cnn_conv_d4x4_k3xcud_U3->din1(lineBuffer_0_3_5_fu_176);
    cnn_conv_d4x4_k3xcud_U3->din2(lineBuffer_0_3_8_fu_180);
    cnn_conv_d4x4_k3xcud_U3->din3(lineBuffer_0_2_s_reg_550);
    cnn_conv_d4x4_k3xcud_U3->din4(lineBuffer_0_3_3_reg_540);
    cnn_conv_d4x4_k3xcud_U3->din5(tmp_13_reg_1736);
    cnn_conv_d4x4_k3xcud_U3->dout(windowRightCol_0_fu_1190_p6);
    cnn_conv_d4x4_k3xcud_U4 = new cnn_conv_d4x4_k3xcud<1,1,32,32,32,32,2,32>("cnn_conv_d4x4_k3xcud_U4");
    cnn_conv_d4x4_k3xcud_U4->din1(lineBuffer_1_3_1_reg_530);
    cnn_conv_d4x4_k3xcud_U4->din2(lineBuffer_1_3_17_reg_520);
    cnn_conv_d4x4_k3xcud_U4->din3(lineBuffer_1_2_3_reg_510);
    cnn_conv_d4x4_k3xcud_U4->din4(lineBuffer_1_3_3_reg_500);
    cnn_conv_d4x4_k3xcud_U4->din5(tmp_13_reg_1736);
    cnn_conv_d4x4_k3xcud_U4->dout(lineBuffer_0_3_15_fu_1203_p6);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp3_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_condition_1902);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( outStream_V_keep_V_1_ack_in );
    sensitive << ( outStream_V_strb_V_1_ack_in );
    sensitive << ( outStream_V_user_V_1_ack_in );
    sensitive << ( outStream_V_last_V_1_ack_in );
    sensitive << ( outStream_V_id_V_1_ack_in );
    sensitive << ( outStream_V_dest_V_1_ack_in );

    SC_METHOD(thread_ap_condition_977);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( exitcond_flatten8_reg_1708 );
    sensitive << ( icmp_reg_1717 );

    SC_METHOD(thread_ap_condition_988);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_condition_1902 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_condition_1902 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_cond1_fu_866_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond_flatten_fu_796_p2 );
    sensitive << ( x4_mid2_fu_814_p3 );

    SC_METHOD(thread_cond2_fu_846_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond_flatten_fu_796_p2 );
    sensitive << ( y3_reg_409 );

    SC_METHOD(thread_cond3_mid1_fu_840_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond_flatten_fu_796_p2 );
    sensitive << ( y3_reg_409 );

    SC_METHOD(thread_cond3_mid2_fu_852_p3);
    sensitive << ( exitcond_fu_808_p2 );
    sensitive << ( cond3_mid1_fu_840_p2 );
    sensitive << ( cond2_fu_846_p2 );

    SC_METHOD(thread_cond_fu_677_p2);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1538 );
    sensitive << ( exitcond1_fu_667_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_8_fu_673_p1 );

    SC_METHOD(thread_exitcond1_fu_667_p2);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1538 );
    sensitive << ( x_reg_328 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond2_fu_1028_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1708 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( x_assign_reg_489 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_exitcond4_fu_703_p2);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1563 );
    sensitive << ( x1_reg_387 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_exitcond_flatten8_fu_983_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( indvar_flatten6_reg_467 );
    sensitive << ( ap_condition_977 );
    sensitive << ( ap_enable_reg_pp3_iter0 );

    SC_METHOD(thread_exitcond_flatten_fu_796_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( indvar_flatten_reg_398 );

    SC_METHOD(thread_exitcond_fu_808_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond_flatten_fu_796_p2 );
    sensitive << ( x4_reg_456 );

    SC_METHOD(thread_grp_fixed_point_mul_fu_594_ap_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_grp_fixed_point_mul_fu_601_ap_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_grp_fixed_point_mul_fu_608_ap_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_grp_fixed_point_mul_fu_615_ap_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_grp_fixed_point_mul_fu_622_ap_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_grp_fixed_point_mul_fu_630_ap_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_grp_fixed_point_mul_fu_638_ap_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_grp_fixed_point_mul_fu_645_ap_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_grp_fixed_point_mul_fu_653_ap_ce);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_icmp_fu_1008_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );
    sensitive << ( exitcond_flatten8_fu_983_p2 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( tmp_14_fu_998_p4 );

    SC_METHOD(thread_inStream_TDATA_blk_n);
    sensitive << ( inStream_V_data_V_0_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1538 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1563 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1708 );
    sensitive << ( icmp_reg_1717 );

    SC_METHOD(thread_inStream_TREADY);
    sensitive << ( inStream_V_dest_V_0_state );

    SC_METHOD(thread_inStream_V_data_V_0_ack_in);
    sensitive << ( inStream_V_data_V_0_state );

    SC_METHOD(thread_inStream_V_data_V_0_ack_out);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1538 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1563 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1708 );
    sensitive << ( icmp_reg_1717 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_inStream_V_data_V_0_data_out);
    sensitive << ( inStream_V_data_V_0_payload_A );
    sensitive << ( inStream_V_data_V_0_payload_B );
    sensitive << ( inStream_V_data_V_0_sel );

    SC_METHOD(thread_inStream_V_data_V_0_load_A);
    sensitive << ( inStream_V_data_V_0_sel_wr );
    sensitive << ( inStream_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_inStream_V_data_V_0_load_B);
    sensitive << ( inStream_V_data_V_0_sel_wr );
    sensitive << ( inStream_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_inStream_V_data_V_0_sel);
    sensitive << ( inStream_V_data_V_0_sel_rd );

    SC_METHOD(thread_inStream_V_data_V_0_state_cmp_full);
    sensitive << ( inStream_V_data_V_0_state );

    SC_METHOD(thread_inStream_V_data_V_0_vld_in);
    sensitive << ( inStream_TVALID );

    SC_METHOD(thread_inStream_V_data_V_0_vld_out);
    sensitive << ( inStream_V_data_V_0_state );

    SC_METHOD(thread_inStream_V_dest_V_0_ack_out);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1538 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1563 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1708 );
    sensitive << ( icmp_reg_1717 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_inStream_V_dest_V_0_vld_in);
    sensitive << ( inStream_TVALID );

    SC_METHOD(thread_indvar_flatten_next7_fu_989_p2);
    sensitive << ( indvar_flatten6_reg_467 );

    SC_METHOD(thread_indvar_flatten_next_fu_802_p2);
    sensitive << ( indvar_flatten_reg_398 );

    SC_METHOD(thread_lineBuffer_0_3_13_fu_1277_p3);
    sensitive << ( lineBuffer_0_3_8_fu_180 );
    sensitive << ( sel_tmp4_fu_1226_p2 );
    sensitive << ( lineBuffer_0_3_9_fu_1269_p3 );

    SC_METHOD(thread_lineBuffer_0_3_14_fu_1285_p3);
    sensitive << ( lineBuffer_0_3_15_fu_1203_p6 );
    sensitive << ( lineBuffer_0_3_5_fu_176 );
    sensitive << ( sel_tmp4_fu_1226_p2 );

    SC_METHOD(thread_lineBuffer_0_3_1_fu_689_p3);
    sensitive << ( inStream_V_data_V_0_data_out );
    sensitive << ( lineBuffer_0_3_reg_304 );
    sensitive << ( cond_reg_1542 );

    SC_METHOD(thread_lineBuffer_0_3_4_fu_696_p3);
    sensitive << ( inStream_V_data_V_0_data_out );
    sensitive << ( lineBuffer_0_2_reg_316 );
    sensitive << ( cond_reg_1542 );

    SC_METHOD(thread_lineBuffer_0_3_6_fu_1245_p3);
    sensitive << ( lineBuffer_0_3_3_reg_540 );
    sensitive << ( or_cond2_fu_1231_p2 );
    sensitive << ( newSel4_fu_1237_p3 );

    SC_METHOD(thread_lineBuffer_0_3_7_fu_1261_p3);
    sensitive << ( lineBuffer_0_2_s_reg_550 );
    sensitive << ( or_cond2_fu_1231_p2 );
    sensitive << ( newSel6_fu_1253_p3 );

    SC_METHOD(thread_lineBuffer_0_3_9_fu_1269_p3);
    sensitive << ( lineBuffer_0_3_15_fu_1203_p6 );
    sensitive << ( lineBuffer_0_3_8_fu_180 );
    sensitive << ( sel_tmp3_fu_1221_p2 );

    SC_METHOD(thread_lineBuffer_1_3_10_fu_1319_p3);
    sensitive << ( lineBuffer_1_3_3_reg_500 );
    sensitive << ( or_cond2_fu_1231_p2 );
    sensitive << ( newSel8_fu_1311_p3 );

    SC_METHOD(thread_lineBuffer_1_3_11_fu_1335_p3);
    sensitive << ( lineBuffer_1_2_3_reg_510 );
    sensitive << ( or_cond2_fu_1231_p2 );
    sensitive << ( newSel1_fu_1327_p3 );

    SC_METHOD(thread_lineBuffer_1_3_18_fu_1343_p3);
    sensitive << ( lineBuffer_1_3_17_reg_520 );
    sensitive << ( window_2_1_fu_184 );
    sensitive << ( sel_tmp3_fu_1221_p2 );

    SC_METHOD(thread_lineBuffer_1_3_19_fu_1351_p3);
    sensitive << ( lineBuffer_1_3_17_reg_520 );
    sensitive << ( sel_tmp4_fu_1226_p2 );
    sensitive << ( lineBuffer_1_3_18_fu_1343_p3 );

    SC_METHOD(thread_lineBuffer_1_3_20_fu_1359_p3);
    sensitive << ( lineBuffer_1_3_1_reg_530 );
    sensitive << ( window_2_1_fu_184 );
    sensitive << ( sel_tmp4_fu_1226_p2 );

    SC_METHOD(thread_lineBuffer_1_3_2_fu_748_p3);
    sensitive << ( lineBuffer_1_3_reg_339 );
    sensitive << ( or_cond_fu_734_p2 );
    sensitive << ( newSel_fu_740_p3 );

    SC_METHOD(thread_lineBuffer_1_3_4_fu_764_p3);
    sensitive << ( lineBuffer_1_2_reg_351 );
    sensitive << ( or_cond_fu_734_p2 );
    sensitive << ( newSel2_fu_756_p3 );

    SC_METHOD(thread_lineBuffer_1_3_6_fu_772_p3);
    sensitive << ( inStream_V_data_V_0_data_out );
    sensitive << ( lineBuffer_1_3_5_reg_363 );
    sensitive << ( sel_tmp7_fu_724_p2 );

    SC_METHOD(thread_lineBuffer_1_3_7_fu_780_p3);
    sensitive << ( lineBuffer_1_3_5_reg_363 );
    sensitive << ( sel_tmp9_fu_729_p2 );
    sensitive << ( lineBuffer_1_3_6_fu_772_p3 );

    SC_METHOD(thread_lineBuffer_1_3_9_fu_788_p3);
    sensitive << ( inStream_V_data_V_0_data_out );
    sensitive << ( lineBuffer_1_3_8_reg_375 );
    sensitive << ( sel_tmp9_fu_729_p2 );

    SC_METHOD(thread_lineBuffer_load13_ph_fu_872_p3);
    sensitive << ( lineBuffer_0_3_reg_304 );
    sensitive << ( lineBuffer_0_2_reg_316 );
    sensitive << ( cond1_fu_866_p2 );

    SC_METHOD(thread_lineBuffer_load14_ph_fu_880_p3);
    sensitive << ( lineBuffer_1_3_reg_339 );
    sensitive << ( lineBuffer_1_2_reg_351 );
    sensitive << ( cond1_fu_866_p2 );

    SC_METHOD(thread_newSel1_fu_1327_p3);
    sensitive << ( lineBuffer_1_2_3_reg_510 );
    sensitive << ( window_2_1_fu_184 );
    sensitive << ( sel_tmp2_fu_1216_p2 );

    SC_METHOD(thread_newSel2_fu_756_p3);
    sensitive << ( inStream_V_data_V_0_data_out );
    sensitive << ( lineBuffer_1_2_reg_351 );
    sensitive << ( sel_tmp_fu_719_p2 );

    SC_METHOD(thread_newSel4_fu_1237_p3);
    sensitive << ( lineBuffer_0_3_3_reg_540 );
    sensitive << ( lineBuffer_0_3_15_fu_1203_p6 );
    sensitive << ( sel_tmp2_fu_1216_p2 );

    SC_METHOD(thread_newSel6_fu_1253_p3);
    sensitive << ( lineBuffer_0_2_s_reg_550 );
    sensitive << ( lineBuffer_0_3_15_fu_1203_p6 );
    sensitive << ( sel_tmp2_fu_1216_p2 );

    SC_METHOD(thread_newSel8_fu_1311_p3);
    sensitive << ( lineBuffer_1_3_3_reg_500 );
    sensitive << ( window_2_1_fu_184 );
    sensitive << ( sel_tmp2_fu_1216_p2 );

    SC_METHOD(thread_newSel_fu_740_p3);
    sensitive << ( inStream_V_data_V_0_data_out );
    sensitive << ( lineBuffer_1_3_reg_339 );
    sensitive << ( sel_tmp_fu_719_p2 );

    SC_METHOD(thread_or_cond2_fu_1231_p2);
    sensitive << ( sel_tmp4_fu_1226_p2 );
    sensitive << ( sel_tmp3_fu_1221_p2 );

    SC_METHOD(thread_or_cond_fu_734_p2);
    sensitive << ( sel_tmp9_fu_729_p2 );
    sensitive << ( sel_tmp7_fu_724_p2 );

    SC_METHOD(thread_outStream_TDATA);
    sensitive << ( outStream_V_data_V_1_data_out );

    SC_METHOD(thread_outStream_TDATA_blk_n);
    sensitive << ( outStream_V_data_V_1_state );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );

    SC_METHOD(thread_outStream_TDEST);
    sensitive << ( outStream_V_dest_V_1_data_out );

    SC_METHOD(thread_outStream_TID);
    sensitive << ( outStream_V_id_V_1_data_out );

    SC_METHOD(thread_outStream_TKEEP);
    sensitive << ( outStream_V_keep_V_1_data_out );

    SC_METHOD(thread_outStream_TLAST);
    sensitive << ( outStream_V_last_V_1_data_out );

    SC_METHOD(thread_outStream_TSTRB);
    sensitive << ( outStream_V_strb_V_1_data_out );

    SC_METHOD(thread_outStream_TUSER);
    sensitive << ( outStream_V_user_V_1_data_out );

    SC_METHOD(thread_outStream_TVALID);
    sensitive << ( outStream_V_dest_V_1_state );

    SC_METHOD(thread_outStream_V_data_V_1_ack_in);
    sensitive << ( outStream_V_data_V_1_state );

    SC_METHOD(thread_outStream_V_data_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_data_V_1_data_out);
    sensitive << ( outStream_V_data_V_1_payload_A );
    sensitive << ( outStream_V_data_V_1_payload_B );
    sensitive << ( outStream_V_data_V_1_sel );

    SC_METHOD(thread_outStream_V_data_V_1_load_A);
    sensitive << ( outStream_V_data_V_1_sel_wr );
    sensitive << ( outStream_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_data_V_1_load_B);
    sensitive << ( outStream_V_data_V_1_sel_wr );
    sensitive << ( outStream_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_data_V_1_sel);
    sensitive << ( outStream_V_data_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_data_V_1_state_cmp_full);
    sensitive << ( outStream_V_data_V_1_state );

    SC_METHOD(thread_outStream_V_data_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_outStream_V_data_V_1_vld_out);
    sensitive << ( outStream_V_data_V_1_state );

    SC_METHOD(thread_outStream_V_dest_V_1_ack_in);
    sensitive << ( outStream_V_dest_V_1_state );

    SC_METHOD(thread_outStream_V_dest_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_dest_V_1_data_out);
    sensitive << ( outStream_V_dest_V_1_sel );

    SC_METHOD(thread_outStream_V_dest_V_1_sel);
    sensitive << ( outStream_V_dest_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_dest_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_outStream_V_dest_V_1_vld_out);
    sensitive << ( outStream_V_dest_V_1_state );

    SC_METHOD(thread_outStream_V_id_V_1_ack_in);
    sensitive << ( outStream_V_id_V_1_state );

    SC_METHOD(thread_outStream_V_id_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_id_V_1_data_out);
    sensitive << ( outStream_V_id_V_1_sel );

    SC_METHOD(thread_outStream_V_id_V_1_sel);
    sensitive << ( outStream_V_id_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_id_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_outStream_V_id_V_1_vld_out);
    sensitive << ( outStream_V_id_V_1_state );

    SC_METHOD(thread_outStream_V_keep_V_1_ack_in);
    sensitive << ( outStream_V_keep_V_1_state );

    SC_METHOD(thread_outStream_V_keep_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_keep_V_1_data_out);
    sensitive << ( outStream_V_keep_V_1_sel );

    SC_METHOD(thread_outStream_V_keep_V_1_sel);
    sensitive << ( outStream_V_keep_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_keep_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_outStream_V_keep_V_1_vld_out);
    sensitive << ( outStream_V_keep_V_1_state );

    SC_METHOD(thread_outStream_V_last_V_1_ack_in);
    sensitive << ( outStream_V_last_V_1_state );

    SC_METHOD(thread_outStream_V_last_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_last_V_1_data_out);
    sensitive << ( outStream_V_last_V_1_payload_A );
    sensitive << ( outStream_V_last_V_1_payload_B );
    sensitive << ( outStream_V_last_V_1_sel );

    SC_METHOD(thread_outStream_V_last_V_1_load_A);
    sensitive << ( outStream_V_last_V_1_sel_wr );
    sensitive << ( outStream_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_last_V_1_load_B);
    sensitive << ( outStream_V_last_V_1_sel_wr );
    sensitive << ( outStream_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_V_last_V_1_sel);
    sensitive << ( outStream_V_last_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_last_V_1_state_cmp_full);
    sensitive << ( outStream_V_last_V_1_state );

    SC_METHOD(thread_outStream_V_last_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_outStream_V_last_V_1_vld_out);
    sensitive << ( outStream_V_last_V_1_state );

    SC_METHOD(thread_outStream_V_strb_V_1_ack_in);
    sensitive << ( outStream_V_strb_V_1_state );

    SC_METHOD(thread_outStream_V_strb_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_strb_V_1_data_out);
    sensitive << ( outStream_V_strb_V_1_sel );

    SC_METHOD(thread_outStream_V_strb_V_1_sel);
    sensitive << ( outStream_V_strb_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_strb_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_outStream_V_strb_V_1_vld_out);
    sensitive << ( outStream_V_strb_V_1_state );

    SC_METHOD(thread_outStream_V_user_V_1_ack_in);
    sensitive << ( outStream_V_user_V_1_state );

    SC_METHOD(thread_outStream_V_user_V_1_ack_out);
    sensitive << ( outStream_TREADY );

    SC_METHOD(thread_outStream_V_user_V_1_data_out);
    sensitive << ( outStream_V_user_V_1_sel );

    SC_METHOD(thread_outStream_V_user_V_1_sel);
    sensitive << ( outStream_V_user_V_1_sel_rd );

    SC_METHOD(thread_outStream_V_user_V_1_vld_in);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_outStream_V_user_V_1_vld_out);
    sensitive << ( outStream_V_user_V_1_state );

    SC_METHOD(thread_p_i_fu_1120_p2);
    sensitive << ( tmp2_fu_1114_p2 );
    sensitive << ( tmp1_fu_1108_p2 );

    SC_METHOD(thread_readCount_fu_1014_p2);
    sensitive << ( readCount_1_fu_192 );

    SC_METHOD(thread_result_4_2_2_i_cast1_fu_1485_p1);
    sensitive << ( result_4_2_2_i_fu_1479_p2 );

    SC_METHOD(thread_result_4_2_2_i_fu_1479_p2);
    sensitive << ( tmp93_cast_fu_1460_p1 );
    sensitive << ( tmp96_cast_fu_1475_p1 );

    SC_METHOD(thread_result_cast1_fu_1505_p1);
    sensitive << ( result_fu_1497_p3 );

    SC_METHOD(thread_result_cast_fu_1509_p1);
    sensitive << ( result_cast1_fu_1505_p1 );

    SC_METHOD(thread_result_fu_1497_p3);
    sensitive << ( result_4_2_2_i_fu_1479_p2 );
    sensitive << ( tmp_12_fu_1489_p3 );

    SC_METHOD(thread_sel_tmp2_fu_1216_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );
    sensitive << ( ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1708 );
    sensitive << ( tmp_13_reg_1736 );
    sensitive << ( ap_enable_reg_pp3_iter2 );

    SC_METHOD(thread_sel_tmp3_fu_1221_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );
    sensitive << ( ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1708 );
    sensitive << ( tmp_13_reg_1736 );
    sensitive << ( ap_enable_reg_pp3_iter2 );

    SC_METHOD(thread_sel_tmp4_fu_1226_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );
    sensitive << ( ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1708 );
    sensitive << ( tmp_13_reg_1736 );
    sensitive << ( ap_enable_reg_pp3_iter2 );

    SC_METHOD(thread_sel_tmp7_fu_724_p2);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1563 );
    sensitive << ( tmp_9_reg_1572 );

    SC_METHOD(thread_sel_tmp9_fu_729_p2);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1563 );
    sensitive << ( tmp_9_reg_1572 );

    SC_METHOD(thread_sel_tmp_fu_719_p2);
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1563 );
    sensitive << ( tmp_9_reg_1572 );

    SC_METHOD(thread_tmp1_fu_1108_p2);
    sensitive << ( tmp_i_15_fu_1096_p2 );
    sensitive << ( tmp_i_mid2_fu_1060_p3 );

    SC_METHOD(thread_tmp2_fu_1114_p2);
    sensitive << ( tmp_1_i_fu_1102_p2 );
    sensitive << ( tmp_2_i_mid2_fu_1080_p3 );

    SC_METHOD(thread_tmp3_fu_1375_p2);
    sensitive << ( tmp94_trunc141_ext_c_fu_1371_p1 );
    sensitive << ( tmp94_trunc_ext_cast_fu_1367_p1 );

    SC_METHOD(thread_tmp4_fu_1393_p2);
    sensitive << ( tmp95_trunc_ext_cast_fu_1385_p1 );
    sensitive << ( tmp95_trunc140_ext_c_fu_1389_p1 );

    SC_METHOD(thread_tmp5_fu_1403_p2);
    sensitive << ( tmp94_cast_fu_1381_p1 );
    sensitive << ( tmp95_cast_fu_1399_p1 );

    SC_METHOD(thread_tmp6_fu_1417_p2);
    sensitive << ( tmp97_trunc139_ext_c_fu_1413_p1 );
    sensitive << ( tmp97_trunc_ext_cast_fu_1409_p1 );

    SC_METHOD(thread_tmp7_fu_1431_p2);
    sensitive << ( tmp99_trunc142_ext_c_fu_1427_p1 );
    sensitive << ( tmp99_trunc_ext_cast_fu_1423_p1 );

    SC_METHOD(thread_tmp8_fu_1445_p2);
    sensitive << ( tmp98_trunc_ext_cast_fu_1441_p1 );
    sensitive << ( tmp99_cast_fu_1437_p1 );

    SC_METHOD(thread_tmp93_cast_fu_1460_p1);
    sensitive << ( tmp5_reg_1785 );

    SC_METHOD(thread_tmp94_cast_fu_1381_p1);
    sensitive << ( tmp3_fu_1375_p2 );

    SC_METHOD(thread_tmp94_trunc141_ext_c_fu_1371_p1);
    sensitive << ( grp_fixed_point_mul_fu_645_ap_return );

    SC_METHOD(thread_tmp94_trunc_ext_cast_fu_1367_p1);
    sensitive << ( grp_fixed_point_mul_fu_638_ap_return );

    SC_METHOD(thread_tmp95_cast_fu_1399_p1);
    sensitive << ( tmp4_fu_1393_p2 );

    SC_METHOD(thread_tmp95_trunc140_ext_c_fu_1389_p1);
    sensitive << ( grp_fixed_point_mul_fu_630_ap_return );

    SC_METHOD(thread_tmp95_trunc_ext_cast_fu_1385_p1);
    sensitive << ( grp_fixed_point_mul_fu_622_ap_return );

    SC_METHOD(thread_tmp96_cast_fu_1475_p1);
    sensitive << ( tmp9_fu_1469_p2 );

    SC_METHOD(thread_tmp97_cast_fu_1463_p1);
    sensitive << ( tmp6_reg_1790 );

    SC_METHOD(thread_tmp97_trunc139_ext_c_fu_1413_p1);
    sensitive << ( grp_fixed_point_mul_fu_601_ap_return );

    SC_METHOD(thread_tmp97_trunc_ext_cast_fu_1409_p1);
    sensitive << ( grp_fixed_point_mul_fu_594_ap_return );

    SC_METHOD(thread_tmp98_cast_fu_1466_p1);
    sensitive << ( tmp8_reg_1795 );

    SC_METHOD(thread_tmp98_trunc_ext_cast_fu_1441_p1);
    sensitive << ( grp_fixed_point_mul_fu_615_ap_return );

    SC_METHOD(thread_tmp99_cast_fu_1437_p1);
    sensitive << ( tmp7_fu_1431_p2 );

    SC_METHOD(thread_tmp99_trunc142_ext_c_fu_1427_p1);
    sensitive << ( grp_fixed_point_mul_fu_653_ap_return );

    SC_METHOD(thread_tmp99_trunc_ext_cast_fu_1423_p1);
    sensitive << ( grp_fixed_point_mul_fu_608_ap_return );

    SC_METHOD(thread_tmp9_fu_1469_p2);
    sensitive << ( tmp97_cast_fu_1463_p1 );
    sensitive << ( tmp98_cast_fu_1466_p1 );

    SC_METHOD(thread_tmp_10_fu_965_p1);
    sensitive << ( ctrl_read_reg_1533 );

    SC_METHOD(thread_tmp_11_fu_836_p1);
    sensitive << ( tmp_2_mid2_v_fu_828_p3 );

    SC_METHOD(thread_tmp_12_fu_1489_p3);
    sensitive << ( result_4_2_2_i_fu_1479_p2 );

    SC_METHOD(thread_tmp_13_fu_1126_p1);
    sensitive << ( x_assign_mid2_fu_1034_p3 );

    SC_METHOD(thread_tmp_14_fu_998_p4);
    sensitive << ( readCount_1_fu_192 );

    SC_METHOD(thread_tmp_1_i_fu_1102_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1708 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );
    sensitive << ( x_assign_mid2_fu_1034_p3 );

    SC_METHOD(thread_tmp_2_i_fu_1074_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1708 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( y_assign_reg_478 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_tmp_2_i_mid1_fu_1068_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1708 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );
    sensitive << ( y_s_fu_1042_p2 );

    SC_METHOD(thread_tmp_2_i_mid2_fu_1080_p3);
    sensitive << ( exitcond2_fu_1028_p2 );
    sensitive << ( tmp_2_i_mid1_fu_1068_p2 );
    sensitive << ( tmp_2_i_fu_1074_p2 );

    SC_METHOD(thread_tmp_2_mid2_v_fu_828_p3);
    sensitive << ( y3_reg_409 );
    sensitive << ( exitcond_fu_808_p2 );
    sensitive << ( y9_fu_822_p2 );

    SC_METHOD(thread_tmp_8_fu_673_p1);
    sensitive << ( x_reg_328 );

    SC_METHOD(thread_tmp_9_fu_715_p1);
    sensitive << ( x1_reg_387 );

    SC_METHOD(thread_tmp_data_V_fu_1513_p3);
    sensitive << ( tmp_10_reg_1703 );
    sensitive << ( result_cast_fu_1509_p1 );
    sensitive << ( result_4_2_2_i_cast1_fu_1485_p1 );

    SC_METHOD(thread_tmp_i_15_fu_1096_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1708 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );
    sensitive << ( x_assign_mid2_fu_1034_p3 );

    SC_METHOD(thread_tmp_i_fu_1054_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1708 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( y_assign_reg_478 );
    sensitive << ( ap_condition_977 );

    SC_METHOD(thread_tmp_i_mid1_fu_1048_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond_flatten8_reg_1708 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );
    sensitive << ( y_s_fu_1042_p2 );

    SC_METHOD(thread_tmp_i_mid2_fu_1060_p3);
    sensitive << ( exitcond2_fu_1028_p2 );
    sensitive << ( tmp_i_mid1_fu_1048_p2 );
    sensitive << ( tmp_i_fu_1054_p2 );

    SC_METHOD(thread_tmp_last_V_fu_1521_p2);
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );
    sensitive << ( writeCount_fu_1454_p2 );

    SC_METHOD(thread_window_1_0_phi_fu_585_p4);
    sensitive << ( window_1_1_reg_571 );
    sensitive << ( window_1_0_reg_582 );
    sensitive << ( ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1708 );
    sensitive << ( ap_enable_reg_pp3_iter3 );

    SC_METHOD(thread_window_1_1_2_fu_888_p3);
    sensitive << ( tmp_11_fu_836_p1 );
    sensitive << ( lineBuffer_load13_ph_fu_872_p3 );
    sensitive << ( lineBuffer_load14_ph_fu_880_p3 );

    SC_METHOD(thread_window_1_1_phi_fu_574_p4);
    sensitive << ( window_1_1_reg_571 );
    sensitive << ( ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1708 );
    sensitive << ( lineBuffer_0_3_15_reg_1750 );
    sensitive << ( ap_enable_reg_pp3_iter3 );

    SC_METHOD(thread_window_2_0_phi_fu_563_p4);
    sensitive << ( window_2_0_reg_560 );
    sensitive << ( ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1708 );
    sensitive << ( ap_pipeline_reg_pp3_iter2_window_2_1_2_reg_1721 );
    sensitive << ( ap_enable_reg_pp3_iter3 );

    SC_METHOD(thread_window_2_2_1_fu_904_p3);
    sensitive << ( window_1_1_1_reg_444 );
    sensitive << ( cond1_fu_866_p2 );
    sensitive << ( window_1_1_2_fu_888_p3 );

    SC_METHOD(thread_window_2_2_3_fu_912_p3);
    sensitive << ( window_2_2_2_fu_152 );
    sensitive << ( cond1_fu_866_p2 );
    sensitive << ( window_1_1_2_fu_888_p3 );

    SC_METHOD(thread_window_2_2_4_fu_920_p3);
    sensitive << ( window_2_1_1_reg_420 );
    sensitive << ( cond1_fu_866_p2 );
    sensitive << ( window_1_1_2_fu_888_p3 );

    SC_METHOD(thread_window_2_2_5_fu_928_p3);
    sensitive << ( window_2_2_2_fu_152 );
    sensitive << ( cond3_mid2_fu_852_p3 );
    sensitive << ( window_2_2_3_fu_912_p3 );

    SC_METHOD(thread_window_2_2_6_fu_936_p3);
    sensitive << ( window_2_1_1_reg_420 );
    sensitive << ( cond3_mid2_fu_852_p3 );
    sensitive << ( window_2_2_4_fu_920_p3 );

    SC_METHOD(thread_window_2_2_7_fu_944_p3);
    sensitive << ( window_1_2_1_reg_432 );
    sensitive << ( cond3_mid2_fu_852_p3 );
    sensitive << ( window_2_2_fu_896_p3 );

    SC_METHOD(thread_window_2_2_8_fu_952_p3);
    sensitive << ( window_1_1_1_reg_444 );
    sensitive << ( cond3_mid2_fu_852_p3 );
    sensitive << ( window_2_2_1_fu_904_p3 );

    SC_METHOD(thread_window_2_2_fu_896_p3);
    sensitive << ( window_1_2_1_reg_432 );
    sensitive << ( cond1_fu_866_p2 );
    sensitive << ( window_1_1_2_fu_888_p3 );

    SC_METHOD(thread_writeCount_fu_1454_p2);
    sensitive << ( writeCount_1_fu_188 );

    SC_METHOD(thread_x4_mid2_fu_814_p3);
    sensitive << ( x4_reg_456 );
    sensitive << ( exitcond_fu_808_p2 );

    SC_METHOD(thread_x_1_fu_683_p2);
    sensitive << ( x_reg_328 );

    SC_METHOD(thread_x_2_fu_709_p2);
    sensitive << ( x1_reg_387 );

    SC_METHOD(thread_x_3_fu_860_p2);
    sensitive << ( x4_mid2_fu_814_p3 );

    SC_METHOD(thread_x_4_fu_1135_p2);
    sensitive << ( x_assign_mid2_fu_1034_p3 );

    SC_METHOD(thread_x_assign_mid2_fu_1034_p3);
    sensitive << ( x_assign_reg_489 );
    sensitive << ( exitcond2_fu_1028_p2 );

    SC_METHOD(thread_y9_fu_822_p2);
    sensitive << ( y3_reg_409 );

    SC_METHOD(thread_y_assign_mid2_fu_1088_p3);
    sensitive << ( y_assign_reg_478 );
    sensitive << ( exitcond2_fu_1028_p2 );
    sensitive << ( y_s_fu_1042_p2 );

    SC_METHOD(thread_y_s_fu_1042_p2);
    sensitive << ( y_assign_reg_478 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( inStream_V_data_V_0_vld_out );
    sensitive << ( outStream_V_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_1538 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_1563 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter10 );
    sensitive << ( ap_pipeline_reg_pp3_iter9_p_i_reg_1732 );
    sensitive << ( ap_enable_reg_pp3_iter11 );
    sensitive << ( ap_pipeline_reg_pp3_iter10_p_i_reg_1732 );
    sensitive << ( ap_condition_977 );
    sensitive << ( exitcond1_fu_667_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond4_fu_703_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( exitcond_flatten_fu_796_p2 );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( ap_condition_1902 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000001";
    inStream_V_data_V_0_sel_rd = SC_LOGIC_0;
    inStream_V_data_V_0_sel_wr = SC_LOGIC_0;
    inStream_V_data_V_0_state = "00";
    inStream_V_dest_V_0_state = "00";
    outStream_V_data_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_data_V_1_sel_wr = SC_LOGIC_0;
    outStream_V_data_V_1_state = "00";
    outStream_V_keep_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_keep_V_1_state = "00";
    outStream_V_strb_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_strb_V_1_state = "00";
    outStream_V_user_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_user_V_1_state = "00";
    outStream_V_last_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_last_V_1_sel_wr = SC_LOGIC_0;
    outStream_V_last_V_1_state = "00";
    outStream_V_id_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_id_V_1_state = "00";
    outStream_V_dest_V_1_sel_rd = SC_LOGIC_0;
    outStream_V_dest_V_1_state = "00";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter9 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "cnn_conv_d4x4_k3x3_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, inStream_TDATA, "(port)inStream_TDATA");
    sc_trace(mVcdFile, inStream_TVALID, "(port)inStream_TVALID");
    sc_trace(mVcdFile, inStream_TREADY, "(port)inStream_TREADY");
    sc_trace(mVcdFile, inStream_TKEEP, "(port)inStream_TKEEP");
    sc_trace(mVcdFile, inStream_TSTRB, "(port)inStream_TSTRB");
    sc_trace(mVcdFile, inStream_TUSER, "(port)inStream_TUSER");
    sc_trace(mVcdFile, inStream_TLAST, "(port)inStream_TLAST");
    sc_trace(mVcdFile, inStream_TID, "(port)inStream_TID");
    sc_trace(mVcdFile, inStream_TDEST, "(port)inStream_TDEST");
    sc_trace(mVcdFile, outStream_TDATA, "(port)outStream_TDATA");
    sc_trace(mVcdFile, outStream_TVALID, "(port)outStream_TVALID");
    sc_trace(mVcdFile, outStream_TREADY, "(port)outStream_TREADY");
    sc_trace(mVcdFile, outStream_TKEEP, "(port)outStream_TKEEP");
    sc_trace(mVcdFile, outStream_TSTRB, "(port)outStream_TSTRB");
    sc_trace(mVcdFile, outStream_TUSER, "(port)outStream_TUSER");
    sc_trace(mVcdFile, outStream_TLAST, "(port)outStream_TLAST");
    sc_trace(mVcdFile, outStream_TID, "(port)outStream_TID");
    sc_trace(mVcdFile, outStream_TDEST, "(port)outStream_TDEST");
    sc_trace(mVcdFile, s_axi_CTRL_AWVALID, "(port)s_axi_CTRL_AWVALID");
    sc_trace(mVcdFile, s_axi_CTRL_AWREADY, "(port)s_axi_CTRL_AWREADY");
    sc_trace(mVcdFile, s_axi_CTRL_AWADDR, "(port)s_axi_CTRL_AWADDR");
    sc_trace(mVcdFile, s_axi_CTRL_WVALID, "(port)s_axi_CTRL_WVALID");
    sc_trace(mVcdFile, s_axi_CTRL_WREADY, "(port)s_axi_CTRL_WREADY");
    sc_trace(mVcdFile, s_axi_CTRL_WDATA, "(port)s_axi_CTRL_WDATA");
    sc_trace(mVcdFile, s_axi_CTRL_WSTRB, "(port)s_axi_CTRL_WSTRB");
    sc_trace(mVcdFile, s_axi_CTRL_ARVALID, "(port)s_axi_CTRL_ARVALID");
    sc_trace(mVcdFile, s_axi_CTRL_ARREADY, "(port)s_axi_CTRL_ARREADY");
    sc_trace(mVcdFile, s_axi_CTRL_ARADDR, "(port)s_axi_CTRL_ARADDR");
    sc_trace(mVcdFile, s_axi_CTRL_RVALID, "(port)s_axi_CTRL_RVALID");
    sc_trace(mVcdFile, s_axi_CTRL_RREADY, "(port)s_axi_CTRL_RREADY");
    sc_trace(mVcdFile, s_axi_CTRL_RDATA, "(port)s_axi_CTRL_RDATA");
    sc_trace(mVcdFile, s_axi_CTRL_RRESP, "(port)s_axi_CTRL_RRESP");
    sc_trace(mVcdFile, s_axi_CTRL_BVALID, "(port)s_axi_CTRL_BVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BREADY, "(port)s_axi_CTRL_BREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BRESP, "(port)s_axi_CTRL_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, inStream_V_data_V_0_data_out, "inStream_V_data_V_0_data_out");
    sc_trace(mVcdFile, inStream_V_data_V_0_vld_in, "inStream_V_data_V_0_vld_in");
    sc_trace(mVcdFile, inStream_V_data_V_0_vld_out, "inStream_V_data_V_0_vld_out");
    sc_trace(mVcdFile, inStream_V_data_V_0_ack_in, "inStream_V_data_V_0_ack_in");
    sc_trace(mVcdFile, inStream_V_data_V_0_ack_out, "inStream_V_data_V_0_ack_out");
    sc_trace(mVcdFile, inStream_V_data_V_0_payload_A, "inStream_V_data_V_0_payload_A");
    sc_trace(mVcdFile, inStream_V_data_V_0_payload_B, "inStream_V_data_V_0_payload_B");
    sc_trace(mVcdFile, inStream_V_data_V_0_sel_rd, "inStream_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, inStream_V_data_V_0_sel_wr, "inStream_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, inStream_V_data_V_0_sel, "inStream_V_data_V_0_sel");
    sc_trace(mVcdFile, inStream_V_data_V_0_load_A, "inStream_V_data_V_0_load_A");
    sc_trace(mVcdFile, inStream_V_data_V_0_load_B, "inStream_V_data_V_0_load_B");
    sc_trace(mVcdFile, inStream_V_data_V_0_state, "inStream_V_data_V_0_state");
    sc_trace(mVcdFile, inStream_V_data_V_0_state_cmp_full, "inStream_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, inStream_V_dest_V_0_vld_in, "inStream_V_dest_V_0_vld_in");
    sc_trace(mVcdFile, inStream_V_dest_V_0_ack_out, "inStream_V_dest_V_0_ack_out");
    sc_trace(mVcdFile, inStream_V_dest_V_0_state, "inStream_V_dest_V_0_state");
    sc_trace(mVcdFile, outStream_V_data_V_1_data_out, "outStream_V_data_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_data_V_1_vld_in, "outStream_V_data_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_data_V_1_vld_out, "outStream_V_data_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_data_V_1_ack_in, "outStream_V_data_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_data_V_1_ack_out, "outStream_V_data_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_data_V_1_payload_A, "outStream_V_data_V_1_payload_A");
    sc_trace(mVcdFile, outStream_V_data_V_1_payload_B, "outStream_V_data_V_1_payload_B");
    sc_trace(mVcdFile, outStream_V_data_V_1_sel_rd, "outStream_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_data_V_1_sel_wr, "outStream_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, outStream_V_data_V_1_sel, "outStream_V_data_V_1_sel");
    sc_trace(mVcdFile, outStream_V_data_V_1_load_A, "outStream_V_data_V_1_load_A");
    sc_trace(mVcdFile, outStream_V_data_V_1_load_B, "outStream_V_data_V_1_load_B");
    sc_trace(mVcdFile, outStream_V_data_V_1_state, "outStream_V_data_V_1_state");
    sc_trace(mVcdFile, outStream_V_data_V_1_state_cmp_full, "outStream_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, outStream_V_keep_V_1_data_out, "outStream_V_keep_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_keep_V_1_vld_in, "outStream_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_keep_V_1_vld_out, "outStream_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_keep_V_1_ack_in, "outStream_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_keep_V_1_ack_out, "outStream_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_keep_V_1_sel_rd, "outStream_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_keep_V_1_sel, "outStream_V_keep_V_1_sel");
    sc_trace(mVcdFile, outStream_V_keep_V_1_state, "outStream_V_keep_V_1_state");
    sc_trace(mVcdFile, outStream_V_strb_V_1_data_out, "outStream_V_strb_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_strb_V_1_vld_in, "outStream_V_strb_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_strb_V_1_vld_out, "outStream_V_strb_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_strb_V_1_ack_in, "outStream_V_strb_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_strb_V_1_ack_out, "outStream_V_strb_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_strb_V_1_sel_rd, "outStream_V_strb_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_strb_V_1_sel, "outStream_V_strb_V_1_sel");
    sc_trace(mVcdFile, outStream_V_strb_V_1_state, "outStream_V_strb_V_1_state");
    sc_trace(mVcdFile, outStream_V_user_V_1_data_out, "outStream_V_user_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_user_V_1_vld_in, "outStream_V_user_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_user_V_1_vld_out, "outStream_V_user_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_user_V_1_ack_in, "outStream_V_user_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_user_V_1_ack_out, "outStream_V_user_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_user_V_1_sel_rd, "outStream_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_user_V_1_sel, "outStream_V_user_V_1_sel");
    sc_trace(mVcdFile, outStream_V_user_V_1_state, "outStream_V_user_V_1_state");
    sc_trace(mVcdFile, outStream_V_last_V_1_data_out, "outStream_V_last_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_last_V_1_vld_in, "outStream_V_last_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_last_V_1_vld_out, "outStream_V_last_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_last_V_1_ack_in, "outStream_V_last_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_last_V_1_ack_out, "outStream_V_last_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_last_V_1_payload_A, "outStream_V_last_V_1_payload_A");
    sc_trace(mVcdFile, outStream_V_last_V_1_payload_B, "outStream_V_last_V_1_payload_B");
    sc_trace(mVcdFile, outStream_V_last_V_1_sel_rd, "outStream_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_last_V_1_sel_wr, "outStream_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, outStream_V_last_V_1_sel, "outStream_V_last_V_1_sel");
    sc_trace(mVcdFile, outStream_V_last_V_1_load_A, "outStream_V_last_V_1_load_A");
    sc_trace(mVcdFile, outStream_V_last_V_1_load_B, "outStream_V_last_V_1_load_B");
    sc_trace(mVcdFile, outStream_V_last_V_1_state, "outStream_V_last_V_1_state");
    sc_trace(mVcdFile, outStream_V_last_V_1_state_cmp_full, "outStream_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, outStream_V_id_V_1_data_out, "outStream_V_id_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_id_V_1_vld_in, "outStream_V_id_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_id_V_1_vld_out, "outStream_V_id_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_id_V_1_ack_in, "outStream_V_id_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_id_V_1_ack_out, "outStream_V_id_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_id_V_1_sel_rd, "outStream_V_id_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_id_V_1_sel, "outStream_V_id_V_1_sel");
    sc_trace(mVcdFile, outStream_V_id_V_1_state, "outStream_V_id_V_1_state");
    sc_trace(mVcdFile, outStream_V_dest_V_1_data_out, "outStream_V_dest_V_1_data_out");
    sc_trace(mVcdFile, outStream_V_dest_V_1_vld_in, "outStream_V_dest_V_1_vld_in");
    sc_trace(mVcdFile, outStream_V_dest_V_1_vld_out, "outStream_V_dest_V_1_vld_out");
    sc_trace(mVcdFile, outStream_V_dest_V_1_ack_in, "outStream_V_dest_V_1_ack_in");
    sc_trace(mVcdFile, outStream_V_dest_V_1_ack_out, "outStream_V_dest_V_1_ack_out");
    sc_trace(mVcdFile, outStream_V_dest_V_1_sel_rd, "outStream_V_dest_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_V_dest_V_1_sel, "outStream_V_dest_V_1_sel");
    sc_trace(mVcdFile, outStream_V_dest_V_1_state, "outStream_V_dest_V_1_state");
    sc_trace(mVcdFile, ctrl, "ctrl");
    sc_trace(mVcdFile, kernel_0, "kernel_0");
    sc_trace(mVcdFile, kernel_1, "kernel_1");
    sc_trace(mVcdFile, kernel_2, "kernel_2");
    sc_trace(mVcdFile, kernel_3, "kernel_3");
    sc_trace(mVcdFile, kernel_4, "kernel_4");
    sc_trace(mVcdFile, kernel_5, "kernel_5");
    sc_trace(mVcdFile, kernel_6, "kernel_6");
    sc_trace(mVcdFile, kernel_7, "kernel_7");
    sc_trace(mVcdFile, kernel_8, "kernel_8");
    sc_trace(mVcdFile, inStream_TDATA_blk_n, "inStream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, exitcond1_reg_1538, "exitcond1_reg_1538");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, exitcond4_reg_1563, "exitcond4_reg_1563");
    sc_trace(mVcdFile, ap_CS_fsm_pp3_stage0, "ap_CS_fsm_pp3_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter1, "ap_enable_reg_pp3_iter1");
    sc_trace(mVcdFile, exitcond_flatten8_reg_1708, "exitcond_flatten8_reg_1708");
    sc_trace(mVcdFile, icmp_reg_1717, "icmp_reg_1717");
    sc_trace(mVcdFile, outStream_TDATA_blk_n, "outStream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter10, "ap_enable_reg_pp3_iter10");
    sc_trace(mVcdFile, p_i_reg_1732, "p_i_reg_1732");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter9_p_i_reg_1732, "ap_pipeline_reg_pp3_iter9_p_i_reg_1732");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter11, "ap_enable_reg_pp3_iter11");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter10_p_i_reg_1732, "ap_pipeline_reg_pp3_iter10_p_i_reg_1732");
    sc_trace(mVcdFile, lineBuffer_0_3_reg_304, "lineBuffer_0_3_reg_304");
    sc_trace(mVcdFile, lineBuffer_0_2_reg_316, "lineBuffer_0_2_reg_316");
    sc_trace(mVcdFile, x_reg_328, "x_reg_328");
    sc_trace(mVcdFile, lineBuffer_1_3_reg_339, "lineBuffer_1_3_reg_339");
    sc_trace(mVcdFile, lineBuffer_1_2_reg_351, "lineBuffer_1_2_reg_351");
    sc_trace(mVcdFile, lineBuffer_1_3_5_reg_363, "lineBuffer_1_3_5_reg_363");
    sc_trace(mVcdFile, lineBuffer_1_3_8_reg_375, "lineBuffer_1_3_8_reg_375");
    sc_trace(mVcdFile, x1_reg_387, "x1_reg_387");
    sc_trace(mVcdFile, indvar_flatten6_reg_467, "indvar_flatten6_reg_467");
    sc_trace(mVcdFile, y_assign_reg_478, "y_assign_reg_478");
    sc_trace(mVcdFile, x_assign_reg_489, "x_assign_reg_489");
    sc_trace(mVcdFile, lineBuffer_1_3_3_reg_500, "lineBuffer_1_3_3_reg_500");
    sc_trace(mVcdFile, lineBuffer_1_2_3_reg_510, "lineBuffer_1_2_3_reg_510");
    sc_trace(mVcdFile, lineBuffer_1_3_17_reg_520, "lineBuffer_1_3_17_reg_520");
    sc_trace(mVcdFile, lineBuffer_1_3_1_reg_530, "lineBuffer_1_3_1_reg_530");
    sc_trace(mVcdFile, lineBuffer_0_3_3_reg_540, "lineBuffer_0_3_3_reg_540");
    sc_trace(mVcdFile, lineBuffer_0_2_s_reg_550, "lineBuffer_0_2_s_reg_550");
    sc_trace(mVcdFile, window_2_0_reg_560, "window_2_0_reg_560");
    sc_trace(mVcdFile, ap_condition_977, "ap_condition_977");
    sc_trace(mVcdFile, window_1_1_reg_571, "window_1_1_reg_571");
    sc_trace(mVcdFile, window_1_0_reg_582, "window_1_0_reg_582");
    sc_trace(mVcdFile, ctrl_read_reg_1533, "ctrl_read_reg_1533");
    sc_trace(mVcdFile, exitcond1_fu_667_p2, "exitcond1_fu_667_p2");
    sc_trace(mVcdFile, cond_fu_677_p2, "cond_fu_677_p2");
    sc_trace(mVcdFile, cond_reg_1542, "cond_reg_1542");
    sc_trace(mVcdFile, x_1_fu_683_p2, "x_1_fu_683_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, lineBuffer_0_3_1_fu_689_p3, "lineBuffer_0_3_1_fu_689_p3");
    sc_trace(mVcdFile, lineBuffer_0_3_4_fu_696_p3, "lineBuffer_0_3_4_fu_696_p3");
    sc_trace(mVcdFile, exitcond4_fu_703_p2, "exitcond4_fu_703_p2");
    sc_trace(mVcdFile, x_2_fu_709_p2, "x_2_fu_709_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, tmp_9_fu_715_p1, "tmp_9_fu_715_p1");
    sc_trace(mVcdFile, tmp_9_reg_1572, "tmp_9_reg_1572");
    sc_trace(mVcdFile, lineBuffer_1_3_2_fu_748_p3, "lineBuffer_1_3_2_fu_748_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_4_fu_764_p3, "lineBuffer_1_3_4_fu_764_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_7_fu_780_p3, "lineBuffer_1_3_7_fu_780_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_9_fu_788_p3, "lineBuffer_1_3_9_fu_788_p3");
    sc_trace(mVcdFile, indvar_flatten_next_fu_802_p2, "indvar_flatten_next_fu_802_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_2_mid2_v_fu_828_p3, "tmp_2_mid2_v_fu_828_p3");
    sc_trace(mVcdFile, exitcond_flatten_fu_796_p2, "exitcond_flatten_fu_796_p2");
    sc_trace(mVcdFile, x_3_fu_860_p2, "x_3_fu_860_p2");
    sc_trace(mVcdFile, window_2_2_6_fu_936_p3, "window_2_2_6_fu_936_p3");
    sc_trace(mVcdFile, window_2_2_7_fu_944_p3, "window_2_2_7_fu_944_p3");
    sc_trace(mVcdFile, window_2_2_8_fu_952_p3, "window_2_2_8_fu_952_p3");
    sc_trace(mVcdFile, tmp_10_fu_965_p1, "tmp_10_fu_965_p1");
    sc_trace(mVcdFile, tmp_10_reg_1703, "tmp_10_reg_1703");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, exitcond_flatten8_fu_983_p2, "exitcond_flatten8_fu_983_p2");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1708, "ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1708");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1708, "ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1708");
    sc_trace(mVcdFile, indvar_flatten_next7_fu_989_p2, "indvar_flatten_next7_fu_989_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter0, "ap_enable_reg_pp3_iter0");
    sc_trace(mVcdFile, icmp_fu_1008_p2, "icmp_fu_1008_p2");
    sc_trace(mVcdFile, window_2_1_2_reg_1721, "window_2_1_2_reg_1721");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter2_window_2_1_2_reg_1721, "ap_pipeline_reg_pp3_iter2_window_2_1_2_reg_1721");
    sc_trace(mVcdFile, y_assign_mid2_fu_1088_p3, "y_assign_mid2_fu_1088_p3");
    sc_trace(mVcdFile, p_i_fu_1120_p2, "p_i_fu_1120_p2");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter2_p_i_reg_1732, "ap_pipeline_reg_pp3_iter2_p_i_reg_1732");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter3_p_i_reg_1732, "ap_pipeline_reg_pp3_iter3_p_i_reg_1732");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter4_p_i_reg_1732, "ap_pipeline_reg_pp3_iter4_p_i_reg_1732");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter5_p_i_reg_1732, "ap_pipeline_reg_pp3_iter5_p_i_reg_1732");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter6_p_i_reg_1732, "ap_pipeline_reg_pp3_iter6_p_i_reg_1732");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter7_p_i_reg_1732, "ap_pipeline_reg_pp3_iter7_p_i_reg_1732");
    sc_trace(mVcdFile, ap_pipeline_reg_pp3_iter8_p_i_reg_1732, "ap_pipeline_reg_pp3_iter8_p_i_reg_1732");
    sc_trace(mVcdFile, tmp_13_fu_1126_p1, "tmp_13_fu_1126_p1");
    sc_trace(mVcdFile, tmp_13_reg_1736, "tmp_13_reg_1736");
    sc_trace(mVcdFile, x_4_fu_1135_p2, "x_4_fu_1135_p2");
    sc_trace(mVcdFile, lineBuffer_0_3_15_fu_1203_p6, "lineBuffer_0_3_15_fu_1203_p6");
    sc_trace(mVcdFile, lineBuffer_0_3_15_reg_1750, "lineBuffer_0_3_15_reg_1750");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter2, "ap_enable_reg_pp3_iter2");
    sc_trace(mVcdFile, lineBuffer_0_3_6_fu_1245_p3, "lineBuffer_0_3_6_fu_1245_p3");
    sc_trace(mVcdFile, lineBuffer_0_3_7_fu_1261_p3, "lineBuffer_0_3_7_fu_1261_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_10_fu_1319_p3, "lineBuffer_1_3_10_fu_1319_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_11_fu_1335_p3, "lineBuffer_1_3_11_fu_1335_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_19_fu_1351_p3, "lineBuffer_1_3_19_fu_1351_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_20_fu_1359_p3, "lineBuffer_1_3_20_fu_1359_p3");
    sc_trace(mVcdFile, tmp5_fu_1403_p2, "tmp5_fu_1403_p2");
    sc_trace(mVcdFile, tmp5_reg_1785, "tmp5_reg_1785");
    sc_trace(mVcdFile, tmp6_fu_1417_p2, "tmp6_fu_1417_p2");
    sc_trace(mVcdFile, tmp6_reg_1790, "tmp6_reg_1790");
    sc_trace(mVcdFile, tmp8_fu_1445_p2, "tmp8_fu_1445_p2");
    sc_trace(mVcdFile, tmp8_reg_1795, "tmp8_reg_1795");
    sc_trace(mVcdFile, tmp_data_V_fu_1513_p3, "tmp_data_V_fu_1513_p3");
    sc_trace(mVcdFile, tmp_last_V_fu_1521_p2, "tmp_last_V_fu_1521_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter3, "ap_enable_reg_pp3_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter4, "ap_enable_reg_pp3_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter5, "ap_enable_reg_pp3_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter6, "ap_enable_reg_pp3_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter7, "ap_enable_reg_pp3_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter8, "ap_enable_reg_pp3_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter9, "ap_enable_reg_pp3_iter9");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_594_ap_return, "grp_fixed_point_mul_fu_594_ap_return");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_594_ap_ce, "grp_fixed_point_mul_fu_594_ap_ce");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_601_ap_return, "grp_fixed_point_mul_fu_601_ap_return");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_601_ap_ce, "grp_fixed_point_mul_fu_601_ap_ce");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_608_ap_return, "grp_fixed_point_mul_fu_608_ap_return");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_608_ap_ce, "grp_fixed_point_mul_fu_608_ap_ce");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_615_ap_return, "grp_fixed_point_mul_fu_615_ap_return");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_615_ap_ce, "grp_fixed_point_mul_fu_615_ap_ce");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_622_ap_return, "grp_fixed_point_mul_fu_622_ap_return");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_622_ap_ce, "grp_fixed_point_mul_fu_622_ap_ce");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_630_ap_return, "grp_fixed_point_mul_fu_630_ap_return");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_630_ap_ce, "grp_fixed_point_mul_fu_630_ap_ce");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_638_ap_return, "grp_fixed_point_mul_fu_638_ap_return");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_638_ap_ce, "grp_fixed_point_mul_fu_638_ap_ce");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_645_ap_return, "grp_fixed_point_mul_fu_645_ap_return");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_645_ap_ce, "grp_fixed_point_mul_fu_645_ap_ce");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_653_ap_return, "grp_fixed_point_mul_fu_653_ap_return");
    sc_trace(mVcdFile, grp_fixed_point_mul_fu_653_ap_ce, "grp_fixed_point_mul_fu_653_ap_ce");
    sc_trace(mVcdFile, indvar_flatten_reg_398, "indvar_flatten_reg_398");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, y3_reg_409, "y3_reg_409");
    sc_trace(mVcdFile, window_2_1_1_reg_420, "window_2_1_1_reg_420");
    sc_trace(mVcdFile, window_1_2_1_reg_432, "window_1_2_1_reg_432");
    sc_trace(mVcdFile, window_1_1_1_reg_444, "window_1_1_1_reg_444");
    sc_trace(mVcdFile, x4_reg_456, "x4_reg_456");
    sc_trace(mVcdFile, window_2_0_phi_fu_563_p4, "window_2_0_phi_fu_563_p4");
    sc_trace(mVcdFile, window_1_1_phi_fu_574_p4, "window_1_1_phi_fu_574_p4");
    sc_trace(mVcdFile, window_1_0_phi_fu_585_p4, "window_1_0_phi_fu_585_p4");
    sc_trace(mVcdFile, window_2_2_2_fu_152, "window_2_2_2_fu_152");
    sc_trace(mVcdFile, window_2_2_5_fu_928_p3, "window_2_2_5_fu_928_p3");
    sc_trace(mVcdFile, window_0_0_read_as_fu_156, "window_0_0_read_as_fu_156");
    sc_trace(mVcdFile, window_0_0_fu_160, "window_0_0_fu_160");
    sc_trace(mVcdFile, window_0_1_fu_164, "window_0_1_fu_164");
    sc_trace(mVcdFile, windowRightCol_0_fu_1190_p6, "windowRightCol_0_fu_1190_p6");
    sc_trace(mVcdFile, window_1_0_read_as_fu_168, "window_1_0_read_as_fu_168");
    sc_trace(mVcdFile, window_2_0_read_as_fu_172, "window_2_0_read_as_fu_172");
    sc_trace(mVcdFile, lineBuffer_0_3_5_fu_176, "lineBuffer_0_3_5_fu_176");
    sc_trace(mVcdFile, lineBuffer_0_3_14_fu_1285_p3, "lineBuffer_0_3_14_fu_1285_p3");
    sc_trace(mVcdFile, lineBuffer_0_3_8_fu_180, "lineBuffer_0_3_8_fu_180");
    sc_trace(mVcdFile, lineBuffer_0_3_13_fu_1277_p3, "lineBuffer_0_3_13_fu_1277_p3");
    sc_trace(mVcdFile, window_2_1_fu_184, "window_2_1_fu_184");
    sc_trace(mVcdFile, writeCount_1_fu_188, "writeCount_1_fu_188");
    sc_trace(mVcdFile, writeCount_fu_1454_p2, "writeCount_fu_1454_p2");
    sc_trace(mVcdFile, readCount_1_fu_192, "readCount_1_fu_192");
    sc_trace(mVcdFile, readCount_fu_1014_p2, "readCount_fu_1014_p2");
    sc_trace(mVcdFile, tmp_8_fu_673_p1, "tmp_8_fu_673_p1");
    sc_trace(mVcdFile, sel_tmp9_fu_729_p2, "sel_tmp9_fu_729_p2");
    sc_trace(mVcdFile, sel_tmp7_fu_724_p2, "sel_tmp7_fu_724_p2");
    sc_trace(mVcdFile, sel_tmp_fu_719_p2, "sel_tmp_fu_719_p2");
    sc_trace(mVcdFile, or_cond_fu_734_p2, "or_cond_fu_734_p2");
    sc_trace(mVcdFile, newSel_fu_740_p3, "newSel_fu_740_p3");
    sc_trace(mVcdFile, newSel2_fu_756_p3, "newSel2_fu_756_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_6_fu_772_p3, "lineBuffer_1_3_6_fu_772_p3");
    sc_trace(mVcdFile, exitcond_fu_808_p2, "exitcond_fu_808_p2");
    sc_trace(mVcdFile, y9_fu_822_p2, "y9_fu_822_p2");
    sc_trace(mVcdFile, cond3_mid1_fu_840_p2, "cond3_mid1_fu_840_p2");
    sc_trace(mVcdFile, cond2_fu_846_p2, "cond2_fu_846_p2");
    sc_trace(mVcdFile, x4_mid2_fu_814_p3, "x4_mid2_fu_814_p3");
    sc_trace(mVcdFile, cond1_fu_866_p2, "cond1_fu_866_p2");
    sc_trace(mVcdFile, tmp_11_fu_836_p1, "tmp_11_fu_836_p1");
    sc_trace(mVcdFile, lineBuffer_load13_ph_fu_872_p3, "lineBuffer_load13_ph_fu_872_p3");
    sc_trace(mVcdFile, lineBuffer_load14_ph_fu_880_p3, "lineBuffer_load14_ph_fu_880_p3");
    sc_trace(mVcdFile, window_1_1_2_fu_888_p3, "window_1_1_2_fu_888_p3");
    sc_trace(mVcdFile, cond3_mid2_fu_852_p3, "cond3_mid2_fu_852_p3");
    sc_trace(mVcdFile, window_2_2_3_fu_912_p3, "window_2_2_3_fu_912_p3");
    sc_trace(mVcdFile, window_2_2_4_fu_920_p3, "window_2_2_4_fu_920_p3");
    sc_trace(mVcdFile, window_2_2_fu_896_p3, "window_2_2_fu_896_p3");
    sc_trace(mVcdFile, window_2_2_1_fu_904_p3, "window_2_2_1_fu_904_p3");
    sc_trace(mVcdFile, tmp_14_fu_998_p4, "tmp_14_fu_998_p4");
    sc_trace(mVcdFile, exitcond2_fu_1028_p2, "exitcond2_fu_1028_p2");
    sc_trace(mVcdFile, y_s_fu_1042_p2, "y_s_fu_1042_p2");
    sc_trace(mVcdFile, tmp_i_mid1_fu_1048_p2, "tmp_i_mid1_fu_1048_p2");
    sc_trace(mVcdFile, tmp_i_fu_1054_p2, "tmp_i_fu_1054_p2");
    sc_trace(mVcdFile, tmp_2_i_mid1_fu_1068_p2, "tmp_2_i_mid1_fu_1068_p2");
    sc_trace(mVcdFile, tmp_2_i_fu_1074_p2, "tmp_2_i_fu_1074_p2");
    sc_trace(mVcdFile, x_assign_mid2_fu_1034_p3, "x_assign_mid2_fu_1034_p3");
    sc_trace(mVcdFile, tmp_i_15_fu_1096_p2, "tmp_i_15_fu_1096_p2");
    sc_trace(mVcdFile, tmp_i_mid2_fu_1060_p3, "tmp_i_mid2_fu_1060_p3");
    sc_trace(mVcdFile, tmp_1_i_fu_1102_p2, "tmp_1_i_fu_1102_p2");
    sc_trace(mVcdFile, tmp_2_i_mid2_fu_1080_p3, "tmp_2_i_mid2_fu_1080_p3");
    sc_trace(mVcdFile, tmp2_fu_1114_p2, "tmp2_fu_1114_p2");
    sc_trace(mVcdFile, tmp1_fu_1108_p2, "tmp1_fu_1108_p2");
    sc_trace(mVcdFile, sel_tmp4_fu_1226_p2, "sel_tmp4_fu_1226_p2");
    sc_trace(mVcdFile, sel_tmp3_fu_1221_p2, "sel_tmp3_fu_1221_p2");
    sc_trace(mVcdFile, sel_tmp2_fu_1216_p2, "sel_tmp2_fu_1216_p2");
    sc_trace(mVcdFile, or_cond2_fu_1231_p2, "or_cond2_fu_1231_p2");
    sc_trace(mVcdFile, newSel4_fu_1237_p3, "newSel4_fu_1237_p3");
    sc_trace(mVcdFile, newSel6_fu_1253_p3, "newSel6_fu_1253_p3");
    sc_trace(mVcdFile, lineBuffer_0_3_9_fu_1269_p3, "lineBuffer_0_3_9_fu_1269_p3");
    sc_trace(mVcdFile, newSel8_fu_1311_p3, "newSel8_fu_1311_p3");
    sc_trace(mVcdFile, newSel1_fu_1327_p3, "newSel1_fu_1327_p3");
    sc_trace(mVcdFile, lineBuffer_1_3_18_fu_1343_p3, "lineBuffer_1_3_18_fu_1343_p3");
    sc_trace(mVcdFile, tmp94_trunc141_ext_c_fu_1371_p1, "tmp94_trunc141_ext_c_fu_1371_p1");
    sc_trace(mVcdFile, tmp94_trunc_ext_cast_fu_1367_p1, "tmp94_trunc_ext_cast_fu_1367_p1");
    sc_trace(mVcdFile, tmp3_fu_1375_p2, "tmp3_fu_1375_p2");
    sc_trace(mVcdFile, tmp95_trunc_ext_cast_fu_1385_p1, "tmp95_trunc_ext_cast_fu_1385_p1");
    sc_trace(mVcdFile, tmp95_trunc140_ext_c_fu_1389_p1, "tmp95_trunc140_ext_c_fu_1389_p1");
    sc_trace(mVcdFile, tmp4_fu_1393_p2, "tmp4_fu_1393_p2");
    sc_trace(mVcdFile, tmp94_cast_fu_1381_p1, "tmp94_cast_fu_1381_p1");
    sc_trace(mVcdFile, tmp95_cast_fu_1399_p1, "tmp95_cast_fu_1399_p1");
    sc_trace(mVcdFile, tmp97_trunc139_ext_c_fu_1413_p1, "tmp97_trunc139_ext_c_fu_1413_p1");
    sc_trace(mVcdFile, tmp97_trunc_ext_cast_fu_1409_p1, "tmp97_trunc_ext_cast_fu_1409_p1");
    sc_trace(mVcdFile, tmp99_trunc142_ext_c_fu_1427_p1, "tmp99_trunc142_ext_c_fu_1427_p1");
    sc_trace(mVcdFile, tmp99_trunc_ext_cast_fu_1423_p1, "tmp99_trunc_ext_cast_fu_1423_p1");
    sc_trace(mVcdFile, tmp7_fu_1431_p2, "tmp7_fu_1431_p2");
    sc_trace(mVcdFile, tmp98_trunc_ext_cast_fu_1441_p1, "tmp98_trunc_ext_cast_fu_1441_p1");
    sc_trace(mVcdFile, tmp99_cast_fu_1437_p1, "tmp99_cast_fu_1437_p1");
    sc_trace(mVcdFile, tmp97_cast_fu_1463_p1, "tmp97_cast_fu_1463_p1");
    sc_trace(mVcdFile, tmp98_cast_fu_1466_p1, "tmp98_cast_fu_1466_p1");
    sc_trace(mVcdFile, tmp9_fu_1469_p2, "tmp9_fu_1469_p2");
    sc_trace(mVcdFile, tmp93_cast_fu_1460_p1, "tmp93_cast_fu_1460_p1");
    sc_trace(mVcdFile, tmp96_cast_fu_1475_p1, "tmp96_cast_fu_1475_p1");
    sc_trace(mVcdFile, result_4_2_2_i_fu_1479_p2, "result_4_2_2_i_fu_1479_p2");
    sc_trace(mVcdFile, tmp_12_fu_1489_p3, "tmp_12_fu_1489_p3");
    sc_trace(mVcdFile, result_fu_1497_p3, "result_fu_1497_p3");
    sc_trace(mVcdFile, result_cast1_fu_1505_p1, "result_cast1_fu_1505_p1");
    sc_trace(mVcdFile, result_cast_fu_1509_p1, "result_cast_fu_1509_p1");
    sc_trace(mVcdFile, result_4_2_2_i_cast1_fu_1485_p1, "result_4_2_2_i_cast1_fu_1485_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_condition_1902, "ap_condition_1902");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_condition_988, "ap_condition_988");
#endif

    }
    mHdltvinHandle.open("cnn_conv_d4x4_k3x3.hdltvin.dat");
    mHdltvoutHandle.open("cnn_conv_d4x4_k3x3.hdltvout.dat");
}

cnn_conv_d4x4_k3x3::~cnn_conv_d4x4_k3x3() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete cnn_conv_d4x4_k3x3_CTRL_s_axi_U;
    delete grp_fixed_point_mul_fu_594;
    delete grp_fixed_point_mul_fu_601;
    delete grp_fixed_point_mul_fu_608;
    delete grp_fixed_point_mul_fu_615;
    delete grp_fixed_point_mul_fu_622;
    delete grp_fixed_point_mul_fu_630;
    delete grp_fixed_point_mul_fu_638;
    delete grp_fixed_point_mul_fu_645;
    delete grp_fixed_point_mul_fu_653;
    delete cnn_conv_d4x4_k3xcud_U3;
    delete cnn_conv_d4x4_k3xcud_U4;
}

void cnn_conv_d4x4_k3x3::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void cnn_conv_d4x4_k3x3::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1538.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_667_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1538.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_667_p2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1538.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_667_p2.read())))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1563.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_703_p2.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1563.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_703_p2.read()))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read())) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1563.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_703_p2.read())))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_983_p2.read()))) {
            ap_enable_reg_pp3_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
            ap_enable_reg_pp3_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
            ap_enable_reg_pp3_iter1 = ap_enable_reg_pp3_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
            ap_enable_reg_pp3_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter10 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter10 = ap_enable_reg_pp3_iter9.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter11 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter11 = ap_enable_reg_pp3_iter10.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
            ap_enable_reg_pp3_iter11 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter2 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter2 = ap_enable_reg_pp3_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_988.read(), ap_const_boolean_1)) {
            if (!esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read())) {
                ap_enable_reg_pp3_iter3 = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read())) {
                ap_enable_reg_pp3_iter3 = ap_enable_reg_pp3_iter2.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter4 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter4 = ap_enable_reg_pp3_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter5 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter5 = ap_enable_reg_pp3_iter4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter6 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter6 = ap_enable_reg_pp3_iter5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter7 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter7 = ap_enable_reg_pp3_iter6.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter8 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter8 = ap_enable_reg_pp3_iter7.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter9 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
            ap_enable_reg_pp3_iter9 = ap_enable_reg_pp3_iter8.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_out.read()))) {
            inStream_V_data_V_0_sel_rd =  (sc_logic) (~inStream_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_in.read()))) {
            inStream_V_data_V_0_sel_wr =  (sc_logic) (~inStream_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            inStream_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            inStream_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(inStream_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_ack_out.read()))))) {
            inStream_V_data_V_0_state = ap_const_lv2_3;
        } else {
            inStream_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inStream_V_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, inStream_V_dest_V_0_state.read())))) {
            inStream_V_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, inStream_V_dest_V_0_state.read())))) {
            inStream_V_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, inStream_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, inStream_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, inStream_V_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_dest_V_0_ack_out.read()))))) {
            inStream_V_dest_V_0_state = ap_const_lv2_3;
        } else {
            inStream_V_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_983_p2.read()))) {
        indvar_flatten6_reg_467 = indvar_flatten_next7_fu_989_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        indvar_flatten6_reg_467 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        indvar_flatten_reg_398 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_796_p2.read()))) {
        indvar_flatten_reg_398 = indvar_flatten_next_fu_802_p2.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1708.read()))) {
        lineBuffer_0_2_s_reg_550 = lineBuffer_0_3_7_fu_1261_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        lineBuffer_0_2_s_reg_550 = lineBuffer_0_2_reg_316.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1708.read()))) {
        lineBuffer_0_3_3_reg_540 = lineBuffer_0_3_6_fu_1245_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        lineBuffer_0_3_3_reg_540 = lineBuffer_0_3_reg_304.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1708.read()))) {
        lineBuffer_1_2_3_reg_510 = lineBuffer_1_3_11_fu_1335_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        lineBuffer_1_2_3_reg_510 = lineBuffer_1_2_reg_351.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1708.read()))) {
        lineBuffer_1_3_17_reg_520 = lineBuffer_1_3_19_fu_1351_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        lineBuffer_1_3_17_reg_520 = lineBuffer_1_3_5_reg_363.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1708.read()))) {
        lineBuffer_1_3_1_reg_530 = lineBuffer_1_3_20_fu_1359_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        lineBuffer_1_3_1_reg_530 = lineBuffer_1_3_8_reg_375.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1708.read()))) {
        lineBuffer_1_3_3_reg_500 = lineBuffer_1_3_10_fu_1319_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        lineBuffer_1_3_3_reg_500 = lineBuffer_1_3_reg_339.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_out.read()))) {
            outStream_V_data_V_1_sel_rd =  (sc_logic) (~outStream_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_in.read()))) {
            outStream_V_data_V_1_sel_wr =  (sc_logic) (~outStream_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_data_V_1_state.read())))) {
            outStream_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_data_V_1_state.read())))) {
            outStream_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_ack_out.read()))))) {
            outStream_V_data_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_dest_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_vld_out.read()))) {
            outStream_V_dest_V_1_sel_rd =  (sc_logic) (~outStream_V_dest_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_dest_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_dest_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_dest_V_1_state.read())))) {
            outStream_V_dest_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_dest_V_1_state.read())))) {
            outStream_V_dest_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_dest_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_dest_V_1_ack_out.read()))))) {
            outStream_V_dest_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_dest_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_id_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_vld_out.read()))) {
            outStream_V_id_V_1_sel_rd =  (sc_logic) (~outStream_V_id_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_id_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_id_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_id_V_1_state.read())))) {
            outStream_V_id_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_id_V_1_state.read())))) {
            outStream_V_id_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_id_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_id_V_1_ack_out.read()))))) {
            outStream_V_id_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_id_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_vld_out.read()))) {
            outStream_V_keep_V_1_sel_rd =  (sc_logic) (~outStream_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_keep_V_1_state.read())))) {
            outStream_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_keep_V_1_state.read())))) {
            outStream_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_keep_V_1_ack_out.read()))))) {
            outStream_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_out.read()))) {
            outStream_V_last_V_1_sel_rd =  (sc_logic) (~outStream_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_in.read()))) {
            outStream_V_last_V_1_sel_wr =  (sc_logic) (~outStream_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_last_V_1_state.read())))) {
            outStream_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_last_V_1_state.read())))) {
            outStream_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_ack_out.read()))))) {
            outStream_V_last_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_strb_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_vld_out.read()))) {
            outStream_V_strb_V_1_sel_rd =  (sc_logic) (~outStream_V_strb_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_strb_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_strb_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_strb_V_1_state.read())))) {
            outStream_V_strb_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_strb_V_1_state.read())))) {
            outStream_V_strb_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_strb_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_strb_V_1_ack_out.read()))))) {
            outStream_V_strb_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_strb_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_vld_out.read()))) {
            outStream_V_user_V_1_sel_rd =  (sc_logic) (~outStream_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_user_V_1_state.read())))) {
            outStream_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_user_V_1_state.read())))) {
            outStream_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outStream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outStream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outStream_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_user_V_1_ack_out.read()))))) {
            outStream_V_user_V_1_state = ap_const_lv2_3;
        } else {
            outStream_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_983_p2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_1008_p2.read()))) {
        readCount_1_fu_192 = readCount_fu_1014_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        readCount_1_fu_192 = ap_const_lv32_6;
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1708.read()))) {
        window_1_0_reg_582 = window_1_1_reg_571.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        window_1_0_reg_582 = window_1_1_1_reg_444.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1708.read()))) {
        window_1_1_reg_571 = lineBuffer_0_3_15_reg_1750.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        window_1_1_reg_571 = window_1_2_1_reg_432.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1708.read()))) {
        window_2_0_reg_560 = ap_pipeline_reg_pp3_iter2_window_2_1_2_reg_1721.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        window_2_0_reg_560 = window_2_1_1_reg_420.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1708.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1717.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        window_2_1_fu_184 = inStream_V_data_V_0_data_out.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        window_2_1_fu_184 = window_2_2_2_fu_152.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        writeCount_1_fu_188 = writeCount_fu_1454_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        writeCount_1_fu_188 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        x1_reg_387 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1563.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_703_p2.read()))) {
        x1_reg_387 = x_2_fu_709_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        x4_reg_456 = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_796_p2.read()))) {
        x4_reg_456 = x_3_fu_860_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1708.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        x_assign_reg_489 = x_4_fu_1135_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        x_assign_reg_489 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1538.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_667_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        x_reg_328 = x_1_fu_683_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        x_reg_328 = ap_const_lv3_2;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        y3_reg_409 = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_796_p2.read()))) {
        y3_reg_409 = tmp_2_mid2_v_fu_828_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1708.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        y_assign_reg_478 = y_assign_mid2_fu_1088_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        y_assign_reg_478 = ap_const_lv3_0;
    }
    if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))) {
        ap_pipeline_reg_pp3_iter10_p_i_reg_1732 = ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read();
        ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1708 = ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1708.read();
        ap_pipeline_reg_pp3_iter2_p_i_reg_1732 = p_i_reg_1732.read();
        ap_pipeline_reg_pp3_iter2_window_2_1_2_reg_1721 = window_2_1_2_reg_1721.read();
        ap_pipeline_reg_pp3_iter3_p_i_reg_1732 = ap_pipeline_reg_pp3_iter2_p_i_reg_1732.read();
        ap_pipeline_reg_pp3_iter4_p_i_reg_1732 = ap_pipeline_reg_pp3_iter3_p_i_reg_1732.read();
        ap_pipeline_reg_pp3_iter5_p_i_reg_1732 = ap_pipeline_reg_pp3_iter4_p_i_reg_1732.read();
        ap_pipeline_reg_pp3_iter6_p_i_reg_1732 = ap_pipeline_reg_pp3_iter5_p_i_reg_1732.read();
        ap_pipeline_reg_pp3_iter7_p_i_reg_1732 = ap_pipeline_reg_pp3_iter6_p_i_reg_1732.read();
        ap_pipeline_reg_pp3_iter8_p_i_reg_1732 = ap_pipeline_reg_pp3_iter7_p_i_reg_1732.read();
        ap_pipeline_reg_pp3_iter9_p_i_reg_1732 = ap_pipeline_reg_pp3_iter8_p_i_reg_1732.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1708 = exitcond_flatten8_reg_1708.read();
        exitcond_flatten8_reg_1708 = exitcond_flatten8_fu_983_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1538.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_667_p2.read()))) {
        cond_reg_1542 = cond_fu_677_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        ctrl_read_reg_1533 = ctrl.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1538.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)))) {
        exitcond1_reg_1538 = exitcond1_fu_667_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1563.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)))) {
        exitcond4_reg_1563 = exitcond4_fu_703_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_983_p2.read()))) {
        icmp_reg_1717 = icmp_fu_1008_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_load_A.read())) {
        inStream_V_data_V_0_payload_A = inStream_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_load_B.read())) {
        inStream_V_data_V_0_payload_B = inStream_TDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1538.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1538.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)))) {
        lineBuffer_0_2_reg_316 = lineBuffer_0_3_4_fu_696_p3.read();
        lineBuffer_0_3_reg_304 = lineBuffer_0_3_1_fu_689_p3.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1708.read()))) {
        lineBuffer_0_3_15_reg_1750 = lineBuffer_0_3_15_fu_1203_p6.read();
        lineBuffer_0_3_5_fu_176 = lineBuffer_0_3_14_fu_1285_p3.read();
        lineBuffer_0_3_8_fu_180 = lineBuffer_0_3_13_fu_1277_p3.read();
        window_0_1_fu_164 = windowRightCol_0_fu_1190_p6.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1563.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1563.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)))) {
        lineBuffer_1_2_reg_351 = lineBuffer_1_3_4_fu_764_p3.read();
        lineBuffer_1_3_5_reg_363 = lineBuffer_1_3_7_fu_780_p3.read();
        lineBuffer_1_3_8_reg_375 = lineBuffer_1_3_9_fu_788_p3.read();
        lineBuffer_1_3_reg_339 = lineBuffer_1_3_2_fu_748_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_load_A.read())) {
        outStream_V_data_V_1_payload_A = tmp_data_V_fu_1513_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_load_B.read())) {
        outStream_V_data_V_1_payload_B = tmp_data_V_fu_1513_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_load_A.read())) {
        outStream_V_last_V_1_payload_A = tmp_last_V_fu_1521_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_load_B.read())) {
        outStream_V_last_V_1_payload_B = tmp_last_V_fu_1521_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1708.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        p_i_reg_1732 = p_i_fu_1120_p2.read();
        tmp_13_reg_1736 = tmp_13_fu_1126_p1.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter8_p_i_reg_1732.read()))) {
        tmp5_reg_1785 = tmp5_fu_1403_p2.read();
        tmp6_reg_1790 = tmp6_fu_1417_p2.read();
        tmp8_reg_1795 = tmp8_fu_1445_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        tmp_10_reg_1703 = tmp_10_fu_965_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1563.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_703_p2.read()))) {
        tmp_9_reg_1572 = tmp_9_fu_715_p1.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()))) {
        window_0_0_fu_160 = window_0_1_fu_164.read();
        window_0_0_read_as_fu_156 = window_0_0_fu_160.read();
        window_1_0_read_as_fu_168 = window_1_0_phi_fu_585_p4.read();
        window_2_0_read_as_fu_172 = window_2_0_phi_fu_563_p4.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_796_p2.read()))) {
        window_1_1_1_reg_444 = window_2_2_8_fu_952_p3.read();
        window_1_2_1_reg_432 = window_2_2_7_fu_944_p3.read();
        window_2_1_1_reg_420 = window_2_2_6_fu_936_p3.read();
        window_2_2_2_fu_152 = window_2_2_5_fu_928_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        window_2_1_2_reg_1721 = window_2_1_fu_184.read();
    }
}

void cnn_conv_d4x4_k3x3::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(1, 1);
}

void cnn_conv_d4x4_k3x3::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read().range(3, 3);
}

void cnn_conv_d4x4_k3x3::thread_ap_CS_fsm_pp3_stage0() {
    ap_CS_fsm_pp3_stage0 = ap_CS_fsm.read().range(7, 7);
}

void cnn_conv_d4x4_k3x3::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void cnn_conv_d4x4_k3x3::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read().range(8, 8);
}

void cnn_conv_d4x4_k3x3::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(2, 2);
}

void cnn_conv_d4x4_k3x3::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read().range(4, 4);
}

void cnn_conv_d4x4_k3x3::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read().range(5, 5);
}

void cnn_conv_d4x4_k3x3::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read().range(6, 6);
}

void cnn_conv_d4x4_k3x3::thread_ap_condition_1902() {
    ap_condition_1902 = (esl_seteq<1,1,1>(outStream_V_data_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_user_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outStream_V_dest_V_1_ack_in.read(), ap_const_logic_0));
}

void cnn_conv_d4x4_k3x3::thread_ap_condition_977() {
    ap_condition_977 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1708.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1717.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0));
}

void cnn_conv_d4x4_k3x3::thread_ap_condition_988() {
    ap_condition_988 = !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())));
}

void cnn_conv_d4x4_k3x3::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state22.read()) && 
         !esl_seteq<1,1,1>(ap_condition_1902.read(), ap_const_boolean_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void cnn_conv_d4x4_k3x3::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void cnn_conv_d4x4_k3x3::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state22.read()) && 
         !esl_seteq<1,1,1>(ap_condition_1902.read(), ap_const_boolean_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void cnn_conv_d4x4_k3x3::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void cnn_conv_d4x4_k3x3::thread_cond1_fu_866_p2() {
    cond1_fu_866_p2 = (!x4_mid2_fu_814_p3.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(x4_mid2_fu_814_p3.read() == ap_const_lv2_1);
}

void cnn_conv_d4x4_k3x3::thread_cond2_fu_846_p2() {
    cond2_fu_846_p2 = (!y3_reg_409.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(y3_reg_409.read() == ap_const_lv2_1);
}

void cnn_conv_d4x4_k3x3::thread_cond3_mid1_fu_840_p2() {
    cond3_mid1_fu_840_p2 = (!y3_reg_409.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(y3_reg_409.read() == ap_const_lv2_0);
}

void cnn_conv_d4x4_k3x3::thread_cond3_mid2_fu_852_p3() {
    cond3_mid2_fu_852_p3 = (!exitcond_fu_808_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond_fu_808_p2.read()[0].to_bool())? cond3_mid1_fu_840_p2.read(): cond2_fu_846_p2.read());
}

void cnn_conv_d4x4_k3x3::thread_cond_fu_677_p2() {
    cond_fu_677_p2 = (!tmp_8_fu_673_p1.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(tmp_8_fu_673_p1.read() == ap_const_lv2_2);
}

void cnn_conv_d4x4_k3x3::thread_exitcond1_fu_667_p2() {
    exitcond1_fu_667_p2 = (!x_reg_328.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(x_reg_328.read() == ap_const_lv3_4);
}

void cnn_conv_d4x4_k3x3::thread_exitcond2_fu_1028_p2() {
    exitcond2_fu_1028_p2 = (!x_assign_reg_489.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(x_assign_reg_489.read() == ap_const_lv3_4);
}

void cnn_conv_d4x4_k3x3::thread_exitcond4_fu_703_p2() {
    exitcond4_fu_703_p2 = (!x1_reg_387.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(x1_reg_387.read() == ap_const_lv3_4);
}

void cnn_conv_d4x4_k3x3::thread_exitcond_flatten8_fu_983_p2() {
    exitcond_flatten8_fu_983_p2 = (!indvar_flatten6_reg_467.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten6_reg_467.read() == ap_const_lv5_10);
}

void cnn_conv_d4x4_k3x3::thread_exitcond_flatten_fu_796_p2() {
    exitcond_flatten_fu_796_p2 = (!indvar_flatten_reg_398.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_398.read() == ap_const_lv3_4);
}

void cnn_conv_d4x4_k3x3::thread_exitcond_fu_808_p2() {
    exitcond_fu_808_p2 = (!x4_reg_456.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(x4_reg_456.read() == ap_const_lv2_3);
}

void cnn_conv_d4x4_k3x3::thread_grp_fixed_point_mul_fu_594_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fixed_point_mul_fu_594_ap_ce = ap_const_logic_1;
    } else {
        grp_fixed_point_mul_fu_594_ap_ce = ap_const_logic_0;
    }
}

void cnn_conv_d4x4_k3x3::thread_grp_fixed_point_mul_fu_601_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fixed_point_mul_fu_601_ap_ce = ap_const_logic_1;
    } else {
        grp_fixed_point_mul_fu_601_ap_ce = ap_const_logic_0;
    }
}

void cnn_conv_d4x4_k3x3::thread_grp_fixed_point_mul_fu_608_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fixed_point_mul_fu_608_ap_ce = ap_const_logic_1;
    } else {
        grp_fixed_point_mul_fu_608_ap_ce = ap_const_logic_0;
    }
}

void cnn_conv_d4x4_k3x3::thread_grp_fixed_point_mul_fu_615_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fixed_point_mul_fu_615_ap_ce = ap_const_logic_1;
    } else {
        grp_fixed_point_mul_fu_615_ap_ce = ap_const_logic_0;
    }
}

void cnn_conv_d4x4_k3x3::thread_grp_fixed_point_mul_fu_622_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fixed_point_mul_fu_622_ap_ce = ap_const_logic_1;
    } else {
        grp_fixed_point_mul_fu_622_ap_ce = ap_const_logic_0;
    }
}

void cnn_conv_d4x4_k3x3::thread_grp_fixed_point_mul_fu_630_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fixed_point_mul_fu_630_ap_ce = ap_const_logic_1;
    } else {
        grp_fixed_point_mul_fu_630_ap_ce = ap_const_logic_0;
    }
}

void cnn_conv_d4x4_k3x3::thread_grp_fixed_point_mul_fu_638_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fixed_point_mul_fu_638_ap_ce = ap_const_logic_1;
    } else {
        grp_fixed_point_mul_fu_638_ap_ce = ap_const_logic_0;
    }
}

void cnn_conv_d4x4_k3x3::thread_grp_fixed_point_mul_fu_645_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fixed_point_mul_fu_645_ap_ce = ap_const_logic_1;
    } else {
        grp_fixed_point_mul_fu_645_ap_ce = ap_const_logic_0;
    }
}

void cnn_conv_d4x4_k3x3::thread_grp_fixed_point_mul_fu_653_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        grp_fixed_point_mul_fu_653_ap_ce = ap_const_logic_1;
    } else {
        grp_fixed_point_mul_fu_653_ap_ce = ap_const_logic_0;
    }
}

void cnn_conv_d4x4_k3x3::thread_icmp_fu_1008_p2() {
    icmp_fu_1008_p2 = (!tmp_14_fu_998_p4.read().is_01() || !ap_const_lv28_1.is_01())? sc_lv<1>(): (sc_bigint<28>(tmp_14_fu_998_p4.read()) < sc_bigint<28>(ap_const_lv28_1));
}

void cnn_conv_d4x4_k3x3::thread_inStream_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1538.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1563.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1708.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1717.read())))) {
        inStream_TDATA_blk_n =  (sc_logic) (inStream_V_data_V_0_state.read()[0]);
    } else {
        inStream_TDATA_blk_n = ap_const_logic_1;
    }
}

void cnn_conv_d4x4_k3x3::thread_inStream_TREADY() {
    inStream_TREADY =  (sc_logic) (inStream_V_dest_V_0_state.read()[1]);
}

void cnn_conv_d4x4_k3x3::thread_inStream_V_data_V_0_ack_in() {
    inStream_V_data_V_0_ack_in =  (sc_logic) (inStream_V_data_V_0_state.read()[1]);
}

void cnn_conv_d4x4_k3x3::thread_inStream_V_data_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1538.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1538.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1563.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1563.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1708.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1717.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))))) {
        inStream_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        inStream_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void cnn_conv_d4x4_k3x3::thread_inStream_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, inStream_V_data_V_0_sel.read())) {
        inStream_V_data_V_0_data_out = inStream_V_data_V_0_payload_B.read();
    } else {
        inStream_V_data_V_0_data_out = inStream_V_data_V_0_payload_A.read();
    }
}

void cnn_conv_d4x4_k3x3::thread_inStream_V_data_V_0_load_A() {
    inStream_V_data_V_0_load_A = (inStream_V_data_V_0_state_cmp_full.read() & ~inStream_V_data_V_0_sel_wr.read());
}

void cnn_conv_d4x4_k3x3::thread_inStream_V_data_V_0_load_B() {
    inStream_V_data_V_0_load_B = (inStream_V_data_V_0_sel_wr.read() & inStream_V_data_V_0_state_cmp_full.read());
}

void cnn_conv_d4x4_k3x3::thread_inStream_V_data_V_0_sel() {
    inStream_V_data_V_0_sel = inStream_V_data_V_0_sel_rd.read();
}

void cnn_conv_d4x4_k3x3::thread_inStream_V_data_V_0_state_cmp_full() {
    inStream_V_data_V_0_state_cmp_full =  (sc_logic) ((!inStream_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(inStream_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void cnn_conv_d4x4_k3x3::thread_inStream_V_data_V_0_vld_in() {
    inStream_V_data_V_0_vld_in = inStream_TVALID.read();
}

void cnn_conv_d4x4_k3x3::thread_inStream_V_data_V_0_vld_out() {
    inStream_V_data_V_0_vld_out =  (sc_logic) (inStream_V_data_V_0_state.read()[0]);
}

void cnn_conv_d4x4_k3x3::thread_inStream_V_dest_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1538.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1538.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1563.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1563.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_1708.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1717.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())))))) {
        inStream_V_dest_V_0_ack_out = ap_const_logic_1;
    } else {
        inStream_V_dest_V_0_ack_out = ap_const_logic_0;
    }
}

void cnn_conv_d4x4_k3x3::thread_inStream_V_dest_V_0_vld_in() {
    inStream_V_dest_V_0_vld_in = inStream_TVALID.read();
}

void cnn_conv_d4x4_k3x3::thread_indvar_flatten_next7_fu_989_p2() {
    indvar_flatten_next7_fu_989_p2 = (!indvar_flatten6_reg_467.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(indvar_flatten6_reg_467.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void cnn_conv_d4x4_k3x3::thread_indvar_flatten_next_fu_802_p2() {
    indvar_flatten_next_fu_802_p2 = (!indvar_flatten_reg_398.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(indvar_flatten_reg_398.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void cnn_conv_d4x4_k3x3::thread_lineBuffer_0_3_13_fu_1277_p3() {
    lineBuffer_0_3_13_fu_1277_p3 = (!sel_tmp4_fu_1226_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp4_fu_1226_p2.read()[0].to_bool())? lineBuffer_0_3_8_fu_180.read(): lineBuffer_0_3_9_fu_1269_p3.read());
}

void cnn_conv_d4x4_k3x3::thread_lineBuffer_0_3_14_fu_1285_p3() {
    lineBuffer_0_3_14_fu_1285_p3 = (!sel_tmp4_fu_1226_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp4_fu_1226_p2.read()[0].to_bool())? lineBuffer_0_3_15_fu_1203_p6.read(): lineBuffer_0_3_5_fu_176.read());
}

void cnn_conv_d4x4_k3x3::thread_lineBuffer_0_3_1_fu_689_p3() {
    lineBuffer_0_3_1_fu_689_p3 = (!cond_reg_1542.read()[0].is_01())? sc_lv<32>(): ((cond_reg_1542.read()[0].to_bool())? lineBuffer_0_3_reg_304.read(): inStream_V_data_V_0_data_out.read());
}

void cnn_conv_d4x4_k3x3::thread_lineBuffer_0_3_4_fu_696_p3() {
    lineBuffer_0_3_4_fu_696_p3 = (!cond_reg_1542.read()[0].is_01())? sc_lv<32>(): ((cond_reg_1542.read()[0].to_bool())? inStream_V_data_V_0_data_out.read(): lineBuffer_0_2_reg_316.read());
}

void cnn_conv_d4x4_k3x3::thread_lineBuffer_0_3_6_fu_1245_p3() {
    lineBuffer_0_3_6_fu_1245_p3 = (!or_cond2_fu_1231_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond2_fu_1231_p2.read()[0].to_bool())? lineBuffer_0_3_3_reg_540.read(): newSel4_fu_1237_p3.read());
}

void cnn_conv_d4x4_k3x3::thread_lineBuffer_0_3_7_fu_1261_p3() {
    lineBuffer_0_3_7_fu_1261_p3 = (!or_cond2_fu_1231_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond2_fu_1231_p2.read()[0].to_bool())? lineBuffer_0_2_s_reg_550.read(): newSel6_fu_1253_p3.read());
}

void cnn_conv_d4x4_k3x3::thread_lineBuffer_0_3_9_fu_1269_p3() {
    lineBuffer_0_3_9_fu_1269_p3 = (!sel_tmp3_fu_1221_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp3_fu_1221_p2.read()[0].to_bool())? lineBuffer_0_3_15_fu_1203_p6.read(): lineBuffer_0_3_8_fu_180.read());
}

void cnn_conv_d4x4_k3x3::thread_lineBuffer_1_3_10_fu_1319_p3() {
    lineBuffer_1_3_10_fu_1319_p3 = (!or_cond2_fu_1231_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond2_fu_1231_p2.read()[0].to_bool())? lineBuffer_1_3_3_reg_500.read(): newSel8_fu_1311_p3.read());
}

void cnn_conv_d4x4_k3x3::thread_lineBuffer_1_3_11_fu_1335_p3() {
    lineBuffer_1_3_11_fu_1335_p3 = (!or_cond2_fu_1231_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond2_fu_1231_p2.read()[0].to_bool())? lineBuffer_1_2_3_reg_510.read(): newSel1_fu_1327_p3.read());
}

void cnn_conv_d4x4_k3x3::thread_lineBuffer_1_3_18_fu_1343_p3() {
    lineBuffer_1_3_18_fu_1343_p3 = (!sel_tmp3_fu_1221_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp3_fu_1221_p2.read()[0].to_bool())? window_2_1_fu_184.read(): lineBuffer_1_3_17_reg_520.read());
}

void cnn_conv_d4x4_k3x3::thread_lineBuffer_1_3_19_fu_1351_p3() {
    lineBuffer_1_3_19_fu_1351_p3 = (!sel_tmp4_fu_1226_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp4_fu_1226_p2.read()[0].to_bool())? lineBuffer_1_3_17_reg_520.read(): lineBuffer_1_3_18_fu_1343_p3.read());
}

void cnn_conv_d4x4_k3x3::thread_lineBuffer_1_3_20_fu_1359_p3() {
    lineBuffer_1_3_20_fu_1359_p3 = (!sel_tmp4_fu_1226_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp4_fu_1226_p2.read()[0].to_bool())? window_2_1_fu_184.read(): lineBuffer_1_3_1_reg_530.read());
}

void cnn_conv_d4x4_k3x3::thread_lineBuffer_1_3_2_fu_748_p3() {
    lineBuffer_1_3_2_fu_748_p3 = (!or_cond_fu_734_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond_fu_734_p2.read()[0].to_bool())? lineBuffer_1_3_reg_339.read(): newSel_fu_740_p3.read());
}

void cnn_conv_d4x4_k3x3::thread_lineBuffer_1_3_4_fu_764_p3() {
    lineBuffer_1_3_4_fu_764_p3 = (!or_cond_fu_734_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond_fu_734_p2.read()[0].to_bool())? lineBuffer_1_2_reg_351.read(): newSel2_fu_756_p3.read());
}

void cnn_conv_d4x4_k3x3::thread_lineBuffer_1_3_6_fu_772_p3() {
    lineBuffer_1_3_6_fu_772_p3 = (!sel_tmp7_fu_724_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp7_fu_724_p2.read()[0].to_bool())? inStream_V_data_V_0_data_out.read(): lineBuffer_1_3_5_reg_363.read());
}

void cnn_conv_d4x4_k3x3::thread_lineBuffer_1_3_7_fu_780_p3() {
    lineBuffer_1_3_7_fu_780_p3 = (!sel_tmp9_fu_729_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp9_fu_729_p2.read()[0].to_bool())? lineBuffer_1_3_5_reg_363.read(): lineBuffer_1_3_6_fu_772_p3.read());
}

void cnn_conv_d4x4_k3x3::thread_lineBuffer_1_3_9_fu_788_p3() {
    lineBuffer_1_3_9_fu_788_p3 = (!sel_tmp9_fu_729_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp9_fu_729_p2.read()[0].to_bool())? inStream_V_data_V_0_data_out.read(): lineBuffer_1_3_8_reg_375.read());
}

void cnn_conv_d4x4_k3x3::thread_lineBuffer_load13_ph_fu_872_p3() {
    lineBuffer_load13_ph_fu_872_p3 = (!cond1_fu_866_p2.read()[0].is_01())? sc_lv<32>(): ((cond1_fu_866_p2.read()[0].to_bool())? lineBuffer_0_2_reg_316.read(): lineBuffer_0_3_reg_304.read());
}

void cnn_conv_d4x4_k3x3::thread_lineBuffer_load14_ph_fu_880_p3() {
    lineBuffer_load14_ph_fu_880_p3 = (!cond1_fu_866_p2.read()[0].is_01())? sc_lv<32>(): ((cond1_fu_866_p2.read()[0].to_bool())? lineBuffer_1_2_reg_351.read(): lineBuffer_1_3_reg_339.read());
}

void cnn_conv_d4x4_k3x3::thread_newSel1_fu_1327_p3() {
    newSel1_fu_1327_p3 = (!sel_tmp2_fu_1216_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp2_fu_1216_p2.read()[0].to_bool())? window_2_1_fu_184.read(): lineBuffer_1_2_3_reg_510.read());
}

void cnn_conv_d4x4_k3x3::thread_newSel2_fu_756_p3() {
    newSel2_fu_756_p3 = (!sel_tmp_fu_719_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp_fu_719_p2.read()[0].to_bool())? inStream_V_data_V_0_data_out.read(): lineBuffer_1_2_reg_351.read());
}

void cnn_conv_d4x4_k3x3::thread_newSel4_fu_1237_p3() {
    newSel4_fu_1237_p3 = (!sel_tmp2_fu_1216_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp2_fu_1216_p2.read()[0].to_bool())? lineBuffer_0_3_3_reg_540.read(): lineBuffer_0_3_15_fu_1203_p6.read());
}

void cnn_conv_d4x4_k3x3::thread_newSel6_fu_1253_p3() {
    newSel6_fu_1253_p3 = (!sel_tmp2_fu_1216_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp2_fu_1216_p2.read()[0].to_bool())? lineBuffer_0_3_15_fu_1203_p6.read(): lineBuffer_0_2_s_reg_550.read());
}

void cnn_conv_d4x4_k3x3::thread_newSel8_fu_1311_p3() {
    newSel8_fu_1311_p3 = (!sel_tmp2_fu_1216_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp2_fu_1216_p2.read()[0].to_bool())? lineBuffer_1_3_3_reg_500.read(): window_2_1_fu_184.read());
}

void cnn_conv_d4x4_k3x3::thread_newSel_fu_740_p3() {
    newSel_fu_740_p3 = (!sel_tmp_fu_719_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp_fu_719_p2.read()[0].to_bool())? lineBuffer_1_3_reg_339.read(): inStream_V_data_V_0_data_out.read());
}

void cnn_conv_d4x4_k3x3::thread_or_cond2_fu_1231_p2() {
    or_cond2_fu_1231_p2 = (sel_tmp4_fu_1226_p2.read() | sel_tmp3_fu_1221_p2.read());
}

void cnn_conv_d4x4_k3x3::thread_or_cond_fu_734_p2() {
    or_cond_fu_734_p2 = (sel_tmp9_fu_729_p2.read() | sel_tmp7_fu_724_p2.read());
}

void cnn_conv_d4x4_k3x3::thread_outStream_TDATA() {
    outStream_TDATA = outStream_V_data_V_1_data_out.read();
}

void cnn_conv_d4x4_k3x3::thread_outStream_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read())))) {
        outStream_TDATA_blk_n =  (sc_logic) (outStream_V_data_V_1_state.read()[1]);
    } else {
        outStream_TDATA_blk_n = ap_const_logic_1;
    }
}

void cnn_conv_d4x4_k3x3::thread_outStream_TDEST() {
    outStream_TDEST = outStream_V_dest_V_1_data_out.read();
}

void cnn_conv_d4x4_k3x3::thread_outStream_TID() {
    outStream_TID = outStream_V_id_V_1_data_out.read();
}

void cnn_conv_d4x4_k3x3::thread_outStream_TKEEP() {
    outStream_TKEEP = outStream_V_keep_V_1_data_out.read();
}

void cnn_conv_d4x4_k3x3::thread_outStream_TLAST() {
    outStream_TLAST = outStream_V_last_V_1_data_out.read();
}

void cnn_conv_d4x4_k3x3::thread_outStream_TSTRB() {
    outStream_TSTRB = outStream_V_strb_V_1_data_out.read();
}

void cnn_conv_d4x4_k3x3::thread_outStream_TUSER() {
    outStream_TUSER = outStream_V_user_V_1_data_out.read();
}

void cnn_conv_d4x4_k3x3::thread_outStream_TVALID() {
    outStream_TVALID =  (sc_logic) (outStream_V_dest_V_1_state.read()[0]);
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_data_V_1_ack_in() {
    outStream_V_data_V_1_ack_in =  (sc_logic) (outStream_V_data_V_1_state.read()[1]);
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_data_V_1_ack_out() {
    outStream_V_data_V_1_ack_out = outStream_TREADY.read();
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_data_V_1_sel.read())) {
        outStream_V_data_V_1_data_out = outStream_V_data_V_1_payload_B.read();
    } else {
        outStream_V_data_V_1_data_out = outStream_V_data_V_1_payload_A.read();
    }
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_data_V_1_load_A() {
    outStream_V_data_V_1_load_A = (outStream_V_data_V_1_state_cmp_full.read() & ~outStream_V_data_V_1_sel_wr.read());
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_data_V_1_load_B() {
    outStream_V_data_V_1_load_B = (outStream_V_data_V_1_sel_wr.read() & outStream_V_data_V_1_state_cmp_full.read());
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_data_V_1_sel() {
    outStream_V_data_V_1_sel = outStream_V_data_V_1_sel_rd.read();
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_data_V_1_state_cmp_full() {
    outStream_V_data_V_1_state_cmp_full =  (sc_logic) ((!outStream_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(outStream_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_data_V_1_vld_out() {
    outStream_V_data_V_1_vld_out =  (sc_logic) (outStream_V_data_V_1_state.read()[0]);
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_dest_V_1_ack_in() {
    outStream_V_dest_V_1_ack_in =  (sc_logic) (outStream_V_dest_V_1_state.read()[1]);
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_dest_V_1_ack_out() {
    outStream_V_dest_V_1_ack_out = outStream_TREADY.read();
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_dest_V_1_data_out() {
    outStream_V_dest_V_1_data_out = ap_const_lv6_0;
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_dest_V_1_sel() {
    outStream_V_dest_V_1_sel = outStream_V_dest_V_1_sel_rd.read();
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_dest_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_dest_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_dest_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_dest_V_1_vld_out() {
    outStream_V_dest_V_1_vld_out =  (sc_logic) (outStream_V_dest_V_1_state.read()[0]);
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_id_V_1_ack_in() {
    outStream_V_id_V_1_ack_in =  (sc_logic) (outStream_V_id_V_1_state.read()[1]);
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_id_V_1_ack_out() {
    outStream_V_id_V_1_ack_out = outStream_TREADY.read();
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_id_V_1_data_out() {
    outStream_V_id_V_1_data_out = ap_const_lv5_0;
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_id_V_1_sel() {
    outStream_V_id_V_1_sel = outStream_V_id_V_1_sel_rd.read();
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_id_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_id_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_id_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_id_V_1_vld_out() {
    outStream_V_id_V_1_vld_out =  (sc_logic) (outStream_V_id_V_1_state.read()[0]);
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_keep_V_1_ack_in() {
    outStream_V_keep_V_1_ack_in =  (sc_logic) (outStream_V_keep_V_1_state.read()[1]);
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_keep_V_1_ack_out() {
    outStream_V_keep_V_1_ack_out = outStream_TREADY.read();
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_keep_V_1_data_out() {
    outStream_V_keep_V_1_data_out = ap_const_lv4_F;
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_keep_V_1_sel() {
    outStream_V_keep_V_1_sel = outStream_V_keep_V_1_sel_rd.read();
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_keep_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_keep_V_1_vld_out() {
    outStream_V_keep_V_1_vld_out =  (sc_logic) (outStream_V_keep_V_1_state.read()[0]);
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_last_V_1_ack_in() {
    outStream_V_last_V_1_ack_in =  (sc_logic) (outStream_V_last_V_1_state.read()[1]);
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_last_V_1_ack_out() {
    outStream_V_last_V_1_ack_out = outStream_TREADY.read();
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_V_last_V_1_sel.read())) {
        outStream_V_last_V_1_data_out = outStream_V_last_V_1_payload_B.read();
    } else {
        outStream_V_last_V_1_data_out = outStream_V_last_V_1_payload_A.read();
    }
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_last_V_1_load_A() {
    outStream_V_last_V_1_load_A = (outStream_V_last_V_1_state_cmp_full.read() & ~outStream_V_last_V_1_sel_wr.read());
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_last_V_1_load_B() {
    outStream_V_last_V_1_load_B = (outStream_V_last_V_1_sel_wr.read() & outStream_V_last_V_1_state_cmp_full.read());
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_last_V_1_sel() {
    outStream_V_last_V_1_sel = outStream_V_last_V_1_sel_rd.read();
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_last_V_1_state_cmp_full() {
    outStream_V_last_V_1_state_cmp_full =  (sc_logic) ((!outStream_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(outStream_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_last_V_1_vld_out() {
    outStream_V_last_V_1_vld_out =  (sc_logic) (outStream_V_last_V_1_state.read()[0]);
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_strb_V_1_ack_in() {
    outStream_V_strb_V_1_ack_in =  (sc_logic) (outStream_V_strb_V_1_state.read()[1]);
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_strb_V_1_ack_out() {
    outStream_V_strb_V_1_ack_out = outStream_TREADY.read();
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_strb_V_1_data_out() {
    outStream_V_strb_V_1_data_out = ap_const_lv4_0;
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_strb_V_1_sel() {
    outStream_V_strb_V_1_sel = outStream_V_strb_V_1_sel_rd.read();
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_strb_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_strb_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_strb_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_strb_V_1_vld_out() {
    outStream_V_strb_V_1_vld_out =  (sc_logic) (outStream_V_strb_V_1_state.read()[0]);
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_user_V_1_ack_in() {
    outStream_V_user_V_1_ack_in =  (sc_logic) (outStream_V_user_V_1_state.read()[1]);
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_user_V_1_ack_out() {
    outStream_V_user_V_1_ack_out = outStream_TREADY.read();
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_user_V_1_data_out() {
    outStream_V_user_V_1_data_out = ap_const_lv2_0;
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_user_V_1_sel() {
    outStream_V_user_V_1_sel = outStream_V_user_V_1_sel_rd.read();
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))))) {
        outStream_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void cnn_conv_d4x4_k3x3::thread_outStream_V_user_V_1_vld_out() {
    outStream_V_user_V_1_vld_out =  (sc_logic) (outStream_V_user_V_1_state.read()[0]);
}

void cnn_conv_d4x4_k3x3::thread_p_i_fu_1120_p2() {
    p_i_fu_1120_p2 = (tmp2_fu_1114_p2.read() | tmp1_fu_1108_p2.read());
}

void cnn_conv_d4x4_k3x3::thread_readCount_fu_1014_p2() {
    readCount_fu_1014_p2 = (!readCount_1_fu_192.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(readCount_1_fu_192.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void cnn_conv_d4x4_k3x3::thread_result_4_2_2_i_cast1_fu_1485_p1() {
    result_4_2_2_i_cast1_fu_1485_p1 = esl_sext<32,27>(result_4_2_2_i_fu_1479_p2.read());
}

void cnn_conv_d4x4_k3x3::thread_result_4_2_2_i_fu_1479_p2() {
    result_4_2_2_i_fu_1479_p2 = (!tmp93_cast_fu_1460_p1.read().is_01() || !tmp96_cast_fu_1475_p1.read().is_01())? sc_lv<27>(): (sc_bigint<27>(tmp93_cast_fu_1460_p1.read()) + sc_bigint<27>(tmp96_cast_fu_1475_p1.read()));
}

void cnn_conv_d4x4_k3x3::thread_result_cast1_fu_1505_p1() {
    result_cast1_fu_1505_p1 = esl_sext<31,27>(result_fu_1497_p3.read());
}

void cnn_conv_d4x4_k3x3::thread_result_cast_fu_1509_p1() {
    result_cast_fu_1509_p1 = esl_zext<32,31>(result_cast1_fu_1505_p1.read());
}

void cnn_conv_d4x4_k3x3::thread_result_fu_1497_p3() {
    result_fu_1497_p3 = (!tmp_12_fu_1489_p3.read()[0].is_01())? sc_lv<27>(): ((tmp_12_fu_1489_p3.read()[0].to_bool())? ap_const_lv27_0: result_4_2_2_i_fu_1479_p2.read());
}

void cnn_conv_d4x4_k3x3::thread_sel_tmp2_fu_1216_p2() {
    sel_tmp2_fu_1216_p2 = (!tmp_13_reg_1736.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(tmp_13_reg_1736.read() == ap_const_lv2_2);
}

void cnn_conv_d4x4_k3x3::thread_sel_tmp3_fu_1221_p2() {
    sel_tmp3_fu_1221_p2 = (!tmp_13_reg_1736.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(tmp_13_reg_1736.read() == ap_const_lv2_1);
}

void cnn_conv_d4x4_k3x3::thread_sel_tmp4_fu_1226_p2() {
    sel_tmp4_fu_1226_p2 = (!tmp_13_reg_1736.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_13_reg_1736.read() == ap_const_lv2_0);
}

void cnn_conv_d4x4_k3x3::thread_sel_tmp7_fu_724_p2() {
    sel_tmp7_fu_724_p2 = (!tmp_9_reg_1572.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(tmp_9_reg_1572.read() == ap_const_lv2_1);
}

void cnn_conv_d4x4_k3x3::thread_sel_tmp9_fu_729_p2() {
    sel_tmp9_fu_729_p2 = (!tmp_9_reg_1572.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_9_reg_1572.read() == ap_const_lv2_0);
}

void cnn_conv_d4x4_k3x3::thread_sel_tmp_fu_719_p2() {
    sel_tmp_fu_719_p2 = (!tmp_9_reg_1572.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(tmp_9_reg_1572.read() == ap_const_lv2_2);
}

void cnn_conv_d4x4_k3x3::thread_tmp1_fu_1108_p2() {
    tmp1_fu_1108_p2 = (tmp_i_15_fu_1096_p2.read() | tmp_i_mid2_fu_1060_p3.read());
}

void cnn_conv_d4x4_k3x3::thread_tmp2_fu_1114_p2() {
    tmp2_fu_1114_p2 = (tmp_1_i_fu_1102_p2.read() | tmp_2_i_mid2_fu_1080_p3.read());
}

void cnn_conv_d4x4_k3x3::thread_tmp3_fu_1375_p2() {
    tmp3_fu_1375_p2 = (!tmp94_trunc141_ext_c_fu_1371_p1.read().is_01() || !tmp94_trunc_ext_cast_fu_1367_p1.read().is_01())? sc_lv<24>(): (sc_bigint<24>(tmp94_trunc141_ext_c_fu_1371_p1.read()) + sc_bigint<24>(tmp94_trunc_ext_cast_fu_1367_p1.read()));
}

void cnn_conv_d4x4_k3x3::thread_tmp4_fu_1393_p2() {
    tmp4_fu_1393_p2 = (!tmp95_trunc_ext_cast_fu_1385_p1.read().is_01() || !tmp95_trunc140_ext_c_fu_1389_p1.read().is_01())? sc_lv<24>(): (sc_bigint<24>(tmp95_trunc_ext_cast_fu_1385_p1.read()) + sc_bigint<24>(tmp95_trunc140_ext_c_fu_1389_p1.read()));
}

void cnn_conv_d4x4_k3x3::thread_tmp5_fu_1403_p2() {
    tmp5_fu_1403_p2 = (!tmp94_cast_fu_1381_p1.read().is_01() || !tmp95_cast_fu_1399_p1.read().is_01())? sc_lv<25>(): (sc_bigint<25>(tmp94_cast_fu_1381_p1.read()) + sc_bigint<25>(tmp95_cast_fu_1399_p1.read()));
}

void cnn_conv_d4x4_k3x3::thread_tmp6_fu_1417_p2() {
    tmp6_fu_1417_p2 = (!tmp97_trunc139_ext_c_fu_1413_p1.read().is_01() || !tmp97_trunc_ext_cast_fu_1409_p1.read().is_01())? sc_lv<24>(): (sc_bigint<24>(tmp97_trunc139_ext_c_fu_1413_p1.read()) + sc_bigint<24>(tmp97_trunc_ext_cast_fu_1409_p1.read()));
}

void cnn_conv_d4x4_k3x3::thread_tmp7_fu_1431_p2() {
    tmp7_fu_1431_p2 = (!tmp99_trunc142_ext_c_fu_1427_p1.read().is_01() || !tmp99_trunc_ext_cast_fu_1423_p1.read().is_01())? sc_lv<24>(): (sc_bigint<24>(tmp99_trunc142_ext_c_fu_1427_p1.read()) + sc_bigint<24>(tmp99_trunc_ext_cast_fu_1423_p1.read()));
}

void cnn_conv_d4x4_k3x3::thread_tmp8_fu_1445_p2() {
    tmp8_fu_1445_p2 = (!tmp98_trunc_ext_cast_fu_1441_p1.read().is_01() || !tmp99_cast_fu_1437_p1.read().is_01())? sc_lv<25>(): (sc_bigint<25>(tmp98_trunc_ext_cast_fu_1441_p1.read()) + sc_bigint<25>(tmp99_cast_fu_1437_p1.read()));
}

void cnn_conv_d4x4_k3x3::thread_tmp93_cast_fu_1460_p1() {
    tmp93_cast_fu_1460_p1 = esl_sext<27,25>(tmp5_reg_1785.read());
}

void cnn_conv_d4x4_k3x3::thread_tmp94_cast_fu_1381_p1() {
    tmp94_cast_fu_1381_p1 = esl_sext<25,24>(tmp3_fu_1375_p2.read());
}

void cnn_conv_d4x4_k3x3::thread_tmp94_trunc141_ext_c_fu_1371_p1() {
    tmp94_trunc141_ext_c_fu_1371_p1 = esl_sext<24,23>(grp_fixed_point_mul_fu_645_ap_return.read());
}

void cnn_conv_d4x4_k3x3::thread_tmp94_trunc_ext_cast_fu_1367_p1() {
    tmp94_trunc_ext_cast_fu_1367_p1 = esl_sext<24,23>(grp_fixed_point_mul_fu_638_ap_return.read());
}

void cnn_conv_d4x4_k3x3::thread_tmp95_cast_fu_1399_p1() {
    tmp95_cast_fu_1399_p1 = esl_sext<25,24>(tmp4_fu_1393_p2.read());
}

void cnn_conv_d4x4_k3x3::thread_tmp95_trunc140_ext_c_fu_1389_p1() {
    tmp95_trunc140_ext_c_fu_1389_p1 = esl_sext<24,23>(grp_fixed_point_mul_fu_630_ap_return.read());
}

void cnn_conv_d4x4_k3x3::thread_tmp95_trunc_ext_cast_fu_1385_p1() {
    tmp95_trunc_ext_cast_fu_1385_p1 = esl_sext<24,23>(grp_fixed_point_mul_fu_622_ap_return.read());
}

void cnn_conv_d4x4_k3x3::thread_tmp96_cast_fu_1475_p1() {
    tmp96_cast_fu_1475_p1 = esl_sext<27,26>(tmp9_fu_1469_p2.read());
}

void cnn_conv_d4x4_k3x3::thread_tmp97_cast_fu_1463_p1() {
    tmp97_cast_fu_1463_p1 = esl_sext<26,24>(tmp6_reg_1790.read());
}

void cnn_conv_d4x4_k3x3::thread_tmp97_trunc139_ext_c_fu_1413_p1() {
    tmp97_trunc139_ext_c_fu_1413_p1 = esl_sext<24,23>(grp_fixed_point_mul_fu_601_ap_return.read());
}

void cnn_conv_d4x4_k3x3::thread_tmp97_trunc_ext_cast_fu_1409_p1() {
    tmp97_trunc_ext_cast_fu_1409_p1 = esl_sext<24,23>(grp_fixed_point_mul_fu_594_ap_return.read());
}

void cnn_conv_d4x4_k3x3::thread_tmp98_cast_fu_1466_p1() {
    tmp98_cast_fu_1466_p1 = esl_sext<26,25>(tmp8_reg_1795.read());
}

void cnn_conv_d4x4_k3x3::thread_tmp98_trunc_ext_cast_fu_1441_p1() {
    tmp98_trunc_ext_cast_fu_1441_p1 = esl_sext<25,23>(grp_fixed_point_mul_fu_615_ap_return.read());
}

void cnn_conv_d4x4_k3x3::thread_tmp99_cast_fu_1437_p1() {
    tmp99_cast_fu_1437_p1 = esl_sext<25,24>(tmp7_fu_1431_p2.read());
}

void cnn_conv_d4x4_k3x3::thread_tmp99_trunc142_ext_c_fu_1427_p1() {
    tmp99_trunc142_ext_c_fu_1427_p1 = esl_sext<24,23>(grp_fixed_point_mul_fu_653_ap_return.read());
}

void cnn_conv_d4x4_k3x3::thread_tmp99_trunc_ext_cast_fu_1423_p1() {
    tmp99_trunc_ext_cast_fu_1423_p1 = esl_sext<24,23>(grp_fixed_point_mul_fu_608_ap_return.read());
}

void cnn_conv_d4x4_k3x3::thread_tmp9_fu_1469_p2() {
    tmp9_fu_1469_p2 = (!tmp97_cast_fu_1463_p1.read().is_01() || !tmp98_cast_fu_1466_p1.read().is_01())? sc_lv<26>(): (sc_bigint<26>(tmp97_cast_fu_1463_p1.read()) + sc_bigint<26>(tmp98_cast_fu_1466_p1.read()));
}

void cnn_conv_d4x4_k3x3::thread_tmp_10_fu_965_p1() {
    tmp_10_fu_965_p1 = ctrl_read_reg_1533.read().range(1-1, 0);
}

void cnn_conv_d4x4_k3x3::thread_tmp_11_fu_836_p1() {
    tmp_11_fu_836_p1 = tmp_2_mid2_v_fu_828_p3.read().range(1-1, 0);
}

void cnn_conv_d4x4_k3x3::thread_tmp_12_fu_1489_p3() {
    tmp_12_fu_1489_p3 = result_4_2_2_i_fu_1479_p2.read().range(26, 26);
}

void cnn_conv_d4x4_k3x3::thread_tmp_13_fu_1126_p1() {
    tmp_13_fu_1126_p1 = x_assign_mid2_fu_1034_p3.read().range(2-1, 0);
}

void cnn_conv_d4x4_k3x3::thread_tmp_14_fu_998_p4() {
    tmp_14_fu_998_p4 = readCount_1_fu_192.read().range(31, 4);
}

void cnn_conv_d4x4_k3x3::thread_tmp_1_i_fu_1102_p2() {
    tmp_1_i_fu_1102_p2 = (!x_assign_mid2_fu_1034_p3.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<1>(): (sc_biguint<3>(x_assign_mid2_fu_1034_p3.read()) > sc_biguint<3>(ap_const_lv3_2));
}

void cnn_conv_d4x4_k3x3::thread_tmp_2_i_fu_1074_p2() {
    tmp_2_i_fu_1074_p2 = (!y_assign_reg_478.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<1>(): (sc_biguint<3>(y_assign_reg_478.read()) > sc_biguint<3>(ap_const_lv3_2));
}

void cnn_conv_d4x4_k3x3::thread_tmp_2_i_mid1_fu_1068_p2() {
    tmp_2_i_mid1_fu_1068_p2 = (!y_s_fu_1042_p2.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<1>(): (sc_biguint<3>(y_s_fu_1042_p2.read()) > sc_biguint<3>(ap_const_lv3_2));
}

void cnn_conv_d4x4_k3x3::thread_tmp_2_i_mid2_fu_1080_p3() {
    tmp_2_i_mid2_fu_1080_p3 = (!exitcond2_fu_1028_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond2_fu_1028_p2.read()[0].to_bool())? tmp_2_i_mid1_fu_1068_p2.read(): tmp_2_i_fu_1074_p2.read());
}

void cnn_conv_d4x4_k3x3::thread_tmp_2_mid2_v_fu_828_p3() {
    tmp_2_mid2_v_fu_828_p3 = (!exitcond_fu_808_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_fu_808_p2.read()[0].to_bool())? y9_fu_822_p2.read(): y3_reg_409.read());
}

void cnn_conv_d4x4_k3x3::thread_tmp_8_fu_673_p1() {
    tmp_8_fu_673_p1 = x_reg_328.read().range(2-1, 0);
}

void cnn_conv_d4x4_k3x3::thread_tmp_9_fu_715_p1() {
    tmp_9_fu_715_p1 = x1_reg_387.read().range(2-1, 0);
}

void cnn_conv_d4x4_k3x3::thread_tmp_data_V_fu_1513_p3() {
    tmp_data_V_fu_1513_p3 = (!tmp_10_reg_1703.read()[0].is_01())? sc_lv<32>(): ((tmp_10_reg_1703.read()[0].to_bool())? result_cast_fu_1509_p1.read(): result_4_2_2_i_cast1_fu_1485_p1.read());
}

void cnn_conv_d4x4_k3x3::thread_tmp_i_15_fu_1096_p2() {
    tmp_i_15_fu_1096_p2 = (!x_assign_mid2_fu_1034_p3.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(x_assign_mid2_fu_1034_p3.read() == ap_const_lv3_0);
}

void cnn_conv_d4x4_k3x3::thread_tmp_i_fu_1054_p2() {
    tmp_i_fu_1054_p2 = (!y_assign_reg_478.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(y_assign_reg_478.read() == ap_const_lv3_0);
}

void cnn_conv_d4x4_k3x3::thread_tmp_i_mid1_fu_1048_p2() {
    tmp_i_mid1_fu_1048_p2 = (!y_s_fu_1042_p2.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(y_s_fu_1042_p2.read() == ap_const_lv3_0);
}

void cnn_conv_d4x4_k3x3::thread_tmp_i_mid2_fu_1060_p3() {
    tmp_i_mid2_fu_1060_p3 = (!exitcond2_fu_1028_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond2_fu_1028_p2.read()[0].to_bool())? tmp_i_mid1_fu_1048_p2.read(): tmp_i_fu_1054_p2.read());
}

void cnn_conv_d4x4_k3x3::thread_tmp_last_V_fu_1521_p2() {
    tmp_last_V_fu_1521_p2 = (!writeCount_fu_1454_p2.read().is_01() || !ap_const_lv32_4.is_01())? sc_lv<1>(): sc_lv<1>(writeCount_fu_1454_p2.read() == ap_const_lv32_4);
}

void cnn_conv_d4x4_k3x3::thread_window_1_0_phi_fu_585_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1708.read()))) {
        window_1_0_phi_fu_585_p4 = window_1_1_reg_571.read();
    } else {
        window_1_0_phi_fu_585_p4 = window_1_0_reg_582.read();
    }
}

void cnn_conv_d4x4_k3x3::thread_window_1_1_2_fu_888_p3() {
    window_1_1_2_fu_888_p3 = (!tmp_11_fu_836_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_11_fu_836_p1.read()[0].to_bool())? lineBuffer_load13_ph_fu_872_p3.read(): lineBuffer_load14_ph_fu_880_p3.read());
}

void cnn_conv_d4x4_k3x3::thread_window_1_1_phi_fu_574_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1708.read()))) {
        window_1_1_phi_fu_574_p4 = lineBuffer_0_3_15_reg_1750.read();
    } else {
        window_1_1_phi_fu_574_p4 = window_1_1_reg_571.read();
    }
}

void cnn_conv_d4x4_k3x3::thread_window_2_0_phi_fu_563_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter2_exitcond_flatten8_reg_1708.read()))) {
        window_2_0_phi_fu_563_p4 = ap_pipeline_reg_pp3_iter2_window_2_1_2_reg_1721.read();
    } else {
        window_2_0_phi_fu_563_p4 = window_2_0_reg_560.read();
    }
}

void cnn_conv_d4x4_k3x3::thread_window_2_2_1_fu_904_p3() {
    window_2_2_1_fu_904_p3 = (!cond1_fu_866_p2.read()[0].is_01())? sc_lv<32>(): ((cond1_fu_866_p2.read()[0].to_bool())? window_1_1_2_fu_888_p3.read(): window_1_1_1_reg_444.read());
}

void cnn_conv_d4x4_k3x3::thread_window_2_2_3_fu_912_p3() {
    window_2_2_3_fu_912_p3 = (!cond1_fu_866_p2.read()[0].is_01())? sc_lv<32>(): ((cond1_fu_866_p2.read()[0].to_bool())? window_2_2_2_fu_152.read(): window_1_1_2_fu_888_p3.read());
}

void cnn_conv_d4x4_k3x3::thread_window_2_2_4_fu_920_p3() {
    window_2_2_4_fu_920_p3 = (!cond1_fu_866_p2.read()[0].is_01())? sc_lv<32>(): ((cond1_fu_866_p2.read()[0].to_bool())? window_1_1_2_fu_888_p3.read(): window_2_1_1_reg_420.read());
}

void cnn_conv_d4x4_k3x3::thread_window_2_2_5_fu_928_p3() {
    window_2_2_5_fu_928_p3 = (!cond3_mid2_fu_852_p3.read()[0].is_01())? sc_lv<32>(): ((cond3_mid2_fu_852_p3.read()[0].to_bool())? window_2_2_2_fu_152.read(): window_2_2_3_fu_912_p3.read());
}

void cnn_conv_d4x4_k3x3::thread_window_2_2_6_fu_936_p3() {
    window_2_2_6_fu_936_p3 = (!cond3_mid2_fu_852_p3.read()[0].is_01())? sc_lv<32>(): ((cond3_mid2_fu_852_p3.read()[0].to_bool())? window_2_1_1_reg_420.read(): window_2_2_4_fu_920_p3.read());
}

void cnn_conv_d4x4_k3x3::thread_window_2_2_7_fu_944_p3() {
    window_2_2_7_fu_944_p3 = (!cond3_mid2_fu_852_p3.read()[0].is_01())? sc_lv<32>(): ((cond3_mid2_fu_852_p3.read()[0].to_bool())? window_2_2_fu_896_p3.read(): window_1_2_1_reg_432.read());
}

void cnn_conv_d4x4_k3x3::thread_window_2_2_8_fu_952_p3() {
    window_2_2_8_fu_952_p3 = (!cond3_mid2_fu_852_p3.read()[0].is_01())? sc_lv<32>(): ((cond3_mid2_fu_852_p3.read()[0].to_bool())? window_2_2_1_fu_904_p3.read(): window_1_1_1_reg_444.read());
}

void cnn_conv_d4x4_k3x3::thread_window_2_2_fu_896_p3() {
    window_2_2_fu_896_p3 = (!cond1_fu_866_p2.read()[0].is_01())? sc_lv<32>(): ((cond1_fu_866_p2.read()[0].to_bool())? window_1_2_1_reg_432.read(): window_1_1_2_fu_888_p3.read());
}

void cnn_conv_d4x4_k3x3::thread_writeCount_fu_1454_p2() {
    writeCount_fu_1454_p2 = (!writeCount_1_fu_188.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(writeCount_1_fu_188.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void cnn_conv_d4x4_k3x3::thread_x4_mid2_fu_814_p3() {
    x4_mid2_fu_814_p3 = (!exitcond_fu_808_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_fu_808_p2.read()[0].to_bool())? ap_const_lv2_1: x4_reg_456.read());
}

void cnn_conv_d4x4_k3x3::thread_x_1_fu_683_p2() {
    x_1_fu_683_p2 = (!ap_const_lv3_1.is_01() || !x_reg_328.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(x_reg_328.read()));
}

void cnn_conv_d4x4_k3x3::thread_x_2_fu_709_p2() {
    x_2_fu_709_p2 = (!x1_reg_387.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(x1_reg_387.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void cnn_conv_d4x4_k3x3::thread_x_3_fu_860_p2() {
    x_3_fu_860_p2 = (!ap_const_lv2_1.is_01() || !x4_mid2_fu_814_p3.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(x4_mid2_fu_814_p3.read()));
}

void cnn_conv_d4x4_k3x3::thread_x_4_fu_1135_p2() {
    x_4_fu_1135_p2 = (!x_assign_mid2_fu_1034_p3.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(x_assign_mid2_fu_1034_p3.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void cnn_conv_d4x4_k3x3::thread_x_assign_mid2_fu_1034_p3() {
    x_assign_mid2_fu_1034_p3 = (!exitcond2_fu_1028_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond2_fu_1028_p2.read()[0].to_bool())? ap_const_lv3_0: x_assign_reg_489.read());
}

void cnn_conv_d4x4_k3x3::thread_y9_fu_822_p2() {
    y9_fu_822_p2 = (!ap_const_lv2_1.is_01() || !y3_reg_409.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(y3_reg_409.read()));
}

void cnn_conv_d4x4_k3x3::thread_y_assign_mid2_fu_1088_p3() {
    y_assign_mid2_fu_1088_p3 = (!exitcond2_fu_1028_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond2_fu_1028_p2.read()[0].to_bool())? y_s_fu_1042_p2.read(): y_assign_reg_478.read());
}

void cnn_conv_d4x4_k3x3::thread_y_s_fu_1042_p2() {
    y_s_fu_1042_p2 = (!y_assign_reg_478.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(y_assign_reg_478.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void cnn_conv_d4x4_k3x3::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1538.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_667_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1538.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_667_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 8 : 
            if (!(!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1563.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_703_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1563.read()) && esl_seteq<1,1,1>(inStream_V_data_V_0_vld_out.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_703_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_796_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            break;
        case 128 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read())) && !(!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read())) || (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_977.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter9_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp3_iter10_p_i_reg_1732.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_data_V_1_ack_in.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read())))) {
                ap_NS_fsm = ap_ST_fsm_state22;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            }
            break;
        case 256 : 
            if (!esl_seteq<1,1,1>(ap_condition_1902.read(), ap_const_boolean_1)) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXX";
            break;
    }
}

void cnn_conv_d4x4_k3x3::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TDATA\" :  \"" << inStream_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TVALID\" :  \"" << inStream_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"inStream_TREADY\" :  \"" << inStream_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TKEEP\" :  \"" << inStream_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TSTRB\" :  \"" << inStream_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TUSER\" :  \"" << inStream_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TLAST\" :  \"" << inStream_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TID\" :  \"" << inStream_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TDEST\" :  \"" << inStream_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TDATA\" :  \"" << outStream_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TVALID\" :  \"" << outStream_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outStream_TREADY\" :  \"" << outStream_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TKEEP\" :  \"" << outStream_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TSTRB\" :  \"" << outStream_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TUSER\" :  \"" << outStream_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TLAST\" :  \"" << outStream_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TID\" :  \"" << outStream_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TDEST\" :  \"" << outStream_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_AWVALID\" :  \"" << s_axi_CTRL_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_AWREADY\" :  \"" << s_axi_CTRL_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_AWADDR\" :  \"" << s_axi_CTRL_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WVALID\" :  \"" << s_axi_CTRL_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_WREADY\" :  \"" << s_axi_CTRL_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WDATA\" :  \"" << s_axi_CTRL_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WSTRB\" :  \"" << s_axi_CTRL_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_ARVALID\" :  \"" << s_axi_CTRL_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_ARREADY\" :  \"" << s_axi_CTRL_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_ARADDR\" :  \"" << s_axi_CTRL_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RVALID\" :  \"" << s_axi_CTRL_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_RREADY\" :  \"" << s_axi_CTRL_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RDATA\" :  \"" << s_axi_CTRL_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RRESP\" :  \"" << s_axi_CTRL_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BVALID\" :  \"" << s_axi_CTRL_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BREADY\" :  \"" << s_axi_CTRL_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BRESP\" :  \"" << s_axi_CTRL_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

