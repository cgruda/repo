/**
 * HLS
 * CNN_SW_3x3
 *
 * messages.h
 * 
 */

/*
 ==============================================================================
 * INCLUDES
 ==============================================================================
 */

#include <hls_stream.h>
#include <ap_axi_sdata.h>
#include <stdint.h>
#include "hls_video.h"

/*
 ==============================================================================
 * DEFINES
 ==============================================================================
 */

#define KERNEL_DIM 3
#define KERNEL_SIZE (KERNEL_DIM * KERNEL_DIM)

#define IMG_COLS  240
#define IMG_ROWS  320
#define IMG_SIZE  (IMG_COLS * IMG_ROWS)

#define CTRL_BUS "ctrl_bus"
#define KERNEL_BUS "kernel_bus"

#define INPUT_IMAGE_CORE "path"


/*
 ==============================================================================
 * ENUMERATIONS
 ==============================================================================
 */


/*
 ==============================================================================
 * MACROS
 ==============================================================================
 */


/*
 ==============================================================================
 * TYPES
 ==============================================================================
 */

typedef ap_axis<32, 2, 5, 6> uint32axis_t;
typedef ap_axis<8, 2, 5, 6> uint8axis_t;

/*
 ==============================================================================
 * DECLARATIONS
 ==============================================================================
 */

/**
 ******************************************************************************
 * @brief print error message to stdin
 * @param err_val (enum err_val)
 ******************************************************************************
 */
void cnn_sw_3x3(hls::stream<uint8axis_t> &in_stream,
				hls::stream<uint8axis_t> &out_stream,
				uint8_t kernel[KERNEL_SIZE],
				uint8_t opp);

uint16_t sum_window(hls::Window<KERNEL_DIM, KERNEL_DIM, int16_t> *window);

