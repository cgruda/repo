/*
 * cnn_config.h
 *
 *  Created on: Apr 9, 2021
 *      Author: cgrud
 */

#ifndef SRC_CNN_CONFIG_H_
#define SRC_CNN_CONFIG_H_

#include "xil_types.h"
#include "xil_assert.h"

#define MAX_POOL 0
#define AVG_POOL 1
#define ACTIVATION_NONE 0
#define ACTIVATION_RELU 1

// cnn input
#define CNN_INPUT_ROWS		46
#define CNN_INPUT_COLS		46
#define CNN_INPUT_LEN		(CNN_INPUT_ROWS * CNN_INPUT_COLS)

// conv_0
#define CONV_0_INPUT_ROWS	CNN_INPUT_ROWS
#define CONV_0_INPUT_COLS	CNN_INPUT_COLS
#define CONV_0_INPUT_LEN	(CONV_0_INPUT_ROWS * CONV_0_INPUT_COLS)
#define CONV_0_KERNEL_DIM	3
#define CONV_0_KERNEL_ROWS	CONV_0_KERNEL_DIM
#define CONV_0_KERNEL_COLS	CONV_0_KERNEL_DIM
#define CONV_0_KERNEL_LEN 	(CONV_0_KERNEL_ROWS * CONV_0_KERNEL_COLS)
#define CONV_0_ACTIVATION   ACTIVATION_NONE
#define CONV_0_OUTPUT_ROWS	(CONV_0_INPUT_ROWS - CONV_0_KERNEL_ROWS + 1)
#define CONV_0_OUTPUT_COLS	(CONV_0_INPUT_COLS - CONV_0_KERNEL_COLS + 1)
#define CONV_0_OUTPUT_LEN	(CONV_0_OUTPUT_ROWS * CONV_0_OUTPUT_COLS)

// pool_0
#define POOL_0_INPUT_ROWS	CONV_0_OUTPUT_ROWS
#define POOL_0_INPUT_COLS	CONV_0_OUTPUT_COLS
#define POOL_0_INPUT_LEN	(POOL_0_INPUT_ROWS * POOL0_INPUT_COLS)
#define POOL_0_TYPE			MAX_POOL
#define POOL_0_DIM			2
#define POOL_0_ROWS			POOL_0_DIM
#define POOL_0_COLS			POOL_0_DIM
#define POOL_0_OUTPUT_ROWS	(POOL_0_INPUT_ROWS / POOL_0_ROWS)
#define POOL_0_OUTPUT_COLS	(POOL_0_INPUT_COLS / POOL_0_COLS)
#define POOL_0_OUTPUT_LEN 	(POOL_0_OUTPUT_ROWS * POOL_0_OUTPUT_COLS)

//conv_1
#define CONV_1_INPUT_ROWS	POOL_0_OUTPUT_ROWS
#define CONV_1_INPUT_COLS	POOL_0_OUTPUT_COLS
#define CONV_1_INPUT_LEN	(CONV_1_INPUT_ROWS * CONV_1_INPUT_COLS)
#define CONV_1_KERNEL_DIM	3
#define CONV_1_KERNEL_ROWS	CONV_1_KERNEL_DIM
#define CONV_1_KERNEL_COLS	CONV_1_KERNEL_DIM
#define CONV_1_KERNEL_LEN 	(CONV_1_KERNEL_ROWS * CONV_1_KERNEL_COLS)
#define CONV_1_ACTIVATION   ACTIVATION_NONE
#define CONV_1_OUTPUT_ROWS	(CONV_1_INPUT_ROWS - CONV_1_KERNEL_ROWS + 1)
#define CONV_1_OUTPUT_COLS	(CONV_1_INPUT_COLS - CONV_1_KERNEL_COLS + 1)
#define CONV_1_OUTPUT_LEN	(CONV_1_OUTPUT_ROWS * CONV_1_OUTPUT_COLS)

// pool_1
#define POOL_1_TYPE			MAX_POOL
#define POOL_1_INPUT_ROWS	CONV_1_OUTPUT_ROWS
#define POOL_1_INPUT_COLS	CONV_1_OUTPUT_COLS
#define POOL_1_INPUT_LEN	(POOL_1_INPUT_ROWS * POOL_1_INPUT_COLS)
#define POOL_1_DIM			2
#define POOL_1_ROWS			POOL_1_DIM
#define POOL_1_COLS			POOL_1_DIM
#define POOL_1_OUTPUT_ROWS	(POOL_1_INPUT_ROWS / POOL_1_ROWS)
#define POOL_1_OUTPUT_COLS	(POOL_1_INPUT_COLS / POOL_1_COLS)
#define POOL_1_OUTPUT_LEN 	(POOL_1_OUTPUT_ROWS * POOL_1_OUTPUT_COLS)

// conv_2
#define CONV_2_INPUT_ROWS	POOL_1_OUTPUT_ROWS
#define CONV_2_INPUT_COLS	POOL_1_OUTPUT_COLS
#define CONV_2_INPUT_LEN	(CONV_2_INPUT_ROWS * CONV_2_INPUT_COLS)
#define CONV_2_KERNEL_DIM	3
#define CONV_2_KERNEL_ROWS	CONV_2_KERNEL_DIM
#define CONV_2_KERNEL_COLS	CONV_2_KERNEL_DIM
#define CONV_2_KERNEL_LEN 	(CONV_2_KERNEL_ROWS * CONV_2_KERNEL_COLS)
#define CONV_2_ACTIVATION   ACTIVATION_NONE
#define CONV_2_OUTPUT_ROWS	(CONV_2_INPUT_ROWS - CONV_2_KERNEL_ROWS + 1)
#define CONV_2_OUTPUT_COLS	(CONV_2_INPUT_COLS - CONV_2_KERNEL_COLS + 1)
#define CONV_2_OUTPUT_LEN	(CONV_2_OUTPUT_ROWS * CONV_2_OUTPUT_COLS)

// pool_2
#define POOL_2_TYPE			MAX_POOL
#define POOL_2_INPUT_ROWS	CONV_2_OUTPUT_ROWS
#define POOL_2_INPUT_COLS	CONV_2_OUTPUT_COLS
#define POOL_2_INPUT_LEN	(POOL_2_INPUT_ROWS * POOL_2_INPUT_COLS)
#define POOL_2_DIM			2
#define POOL_2_ROWS			POOL_2_DIM
#define POOL_2_COLS			POOL_2_DIM
#define POOL_2_OUTPUT_ROWS	(POOL_2_INPUT_ROWS / POOL_2_ROWS)
#define POOL_2_OUTPUT_COLS	(POOL_2_INPUT_COLS / POOL_2_COLS)
#define POOL_2_OUTPUT_LEN 	(POOL_2_OUTPUT_ROWS * POOL_2_OUTPUT_COLS)

// cnn output
#define CNN_OUTPUT_ROWS		POOL_2_OUTPUT_ROWS
#define CNN_OUTPUT_COLS		POOL_2_OUTPUT_COLS
#define CNN_OUTPUT_LEN 		(CNN_OUTPUT_ROWS * CNN_OUTPUT_COLS)

struct cnn_config {
	u32 conv_0_kernel[CONV_0_KERNEL_LEN];
	u32 conv_0_ctrl;
	u32 conv_1_kernel[CONV_1_KERNEL_LEN];
	u32 conv_1_ctrl;
	u32 conv_2_kernel[CONV_2_KERNEL_LEN];
	u32 conv_2_ctrl;
	u32 pool_0_ctrl;
	u32 pool_1_ctrl;
	u32 pool_2_ctrl;
};

#endif /* SRC_CNN_CONFIG_H_ */
