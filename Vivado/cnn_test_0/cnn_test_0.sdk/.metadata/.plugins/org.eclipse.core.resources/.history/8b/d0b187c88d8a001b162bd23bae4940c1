/**
 * Project 20-1-1-2187
 * CNN accelerator
 *
 * Chaim Gruda
 * Shay Tsabar
 *
 */

/*
 * INCLUDES
 ******************************************************************************
 */

#include <stdio.h>
#include "conv_0.h"
#include "pool_0.h"
#include "cnn_hw.h"
#include "dbg.h"

/*
 * MAIN
 ******************************************************************************
 */


#define MEM_BASE_ADDR 0x01000000
#define TX_BUFFER_BASE (MEM_BASE_ADDR + 0x00100000)
#define RX_BUFFER_BASE (MEM_BASE_ADDR + 0x00300000)


#define INPUT_DATA_LEN 16
#define OUTPUT_DATA_LEN 16
#define KERNEL_DATA_LEN 9


int main()
{
	int status = XST_SUCCESS;
	struct cnn_hw cnn_hw = {0};

	DBG_LOG_PRINT(TRACE, "hello world\n");


	/*******************************************************/
	u32 *p_dma_buffer_TX = (u32*) TX_BUFFER_BASE;
	u32 *p_dma_buffer_RX = (u32*) RX_BUFFER_BASE;

	u32 kernel_data[KERNEL_DATA_LEN];
	u32 input_data[INPUT_DATA_LEN];
	u32 input_ctrl;

	for (int i = 0; i < INPUT_DATA_LEN; i++) {
		input_data[i] = i;
	}
	for (int i = 0; i < KERNEL_DATA_LEN; i++) {
		kernel_data[i] = 2;
	}
	input_ctrl = INPUT_DATA_LEN;
	/*******************************************************/


	status = cnn_hw_init(&cnn_hw);
	if (status != XST_SUCCESS) {
		return status;
	}

	// cnn sw init

	// simulation init

	// cnn hw set

	// dbg init

	// print menu
	// main loop with user options:
	// 0. exit
	// 1. run HW and get results
	// 2. run SW and get results
	// 3. run programmed simulation
	// 4. ?

	// free resources

	return 0;
}
