// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cnn_fc_i144_o50,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.382000,HLS_SYN_LAT=456,HLS_SYN_TPT=none,HLS_SYN_MEM=52,HLS_SYN_DSP=100,HLS_SYN_FF=12615,HLS_SYN_LUT=16982}" *)

module cnn_fc_i144_o50 (
        ap_clk,
        ap_rst_n,
        inStream_TDATA,
        inStream_TVALID,
        inStream_TREADY,
        inStream_TKEEP,
        inStream_TSTRB,
        inStream_TUSER,
        inStream_TLAST,
        inStream_TID,
        inStream_TDEST,
        outStream_TDATA,
        outStream_TVALID,
        outStream_TREADY,
        outStream_TKEEP,
        outStream_TSTRB,
        outStream_TUSER,
        outStream_TLAST,
        outStream_TID,
        outStream_TDEST,
        s_axi_CTRL_AWVALID,
        s_axi_CTRL_AWREADY,
        s_axi_CTRL_AWADDR,
        s_axi_CTRL_WVALID,
        s_axi_CTRL_WREADY,
        s_axi_CTRL_WDATA,
        s_axi_CTRL_WSTRB,
        s_axi_CTRL_ARVALID,
        s_axi_CTRL_ARREADY,
        s_axi_CTRL_ARADDR,
        s_axi_CTRL_RVALID,
        s_axi_CTRL_RREADY,
        s_axi_CTRL_RDATA,
        s_axi_CTRL_RRESP,
        s_axi_CTRL_BVALID,
        s_axi_CTRL_BREADY,
        s_axi_CTRL_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 10'b1;
parameter    ap_ST_fsm_state2 = 10'b10;
parameter    ap_ST_fsm_state3 = 10'b100;
parameter    ap_ST_fsm_pp1_stage0 = 10'b1000;
parameter    ap_ST_fsm_state6 = 10'b10000;
parameter    ap_ST_fsm_pp2_stage0 = 10'b100000;
parameter    ap_ST_fsm_pp2_stage1 = 10'b1000000;
parameter    ap_ST_fsm_state18 = 10'b10000000;
parameter    ap_ST_fsm_pp3_stage0 = 10'b100000000;
parameter    ap_ST_fsm_state22 = 10'b1000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 16;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv6_2 = 6'b10;
parameter    ap_const_lv6_3 = 6'b11;
parameter    ap_const_lv6_4 = 6'b100;
parameter    ap_const_lv6_5 = 6'b101;
parameter    ap_const_lv6_6 = 6'b110;
parameter    ap_const_lv6_7 = 6'b111;
parameter    ap_const_lv6_8 = 6'b1000;
parameter    ap_const_lv6_9 = 6'b1001;
parameter    ap_const_lv6_A = 6'b1010;
parameter    ap_const_lv6_B = 6'b1011;
parameter    ap_const_lv6_C = 6'b1100;
parameter    ap_const_lv6_D = 6'b1101;
parameter    ap_const_lv6_E = 6'b1110;
parameter    ap_const_lv6_F = 6'b1111;
parameter    ap_const_lv6_10 = 6'b10000;
parameter    ap_const_lv6_11 = 6'b10001;
parameter    ap_const_lv6_12 = 6'b10010;
parameter    ap_const_lv6_13 = 6'b10011;
parameter    ap_const_lv6_14 = 6'b10100;
parameter    ap_const_lv6_15 = 6'b10101;
parameter    ap_const_lv6_16 = 6'b10110;
parameter    ap_const_lv6_17 = 6'b10111;
parameter    ap_const_lv6_18 = 6'b11000;
parameter    ap_const_lv6_19 = 6'b11001;
parameter    ap_const_lv6_1A = 6'b11010;
parameter    ap_const_lv6_1B = 6'b11011;
parameter    ap_const_lv6_1C = 6'b11100;
parameter    ap_const_lv6_1D = 6'b11101;
parameter    ap_const_lv6_1E = 6'b11110;
parameter    ap_const_lv6_1F = 6'b11111;
parameter    ap_const_lv6_20 = 6'b100000;
parameter    ap_const_lv6_21 = 6'b100001;
parameter    ap_const_lv6_22 = 6'b100010;
parameter    ap_const_lv6_23 = 6'b100011;
parameter    ap_const_lv6_24 = 6'b100100;
parameter    ap_const_lv6_25 = 6'b100101;
parameter    ap_const_lv6_26 = 6'b100110;
parameter    ap_const_lv6_27 = 6'b100111;
parameter    ap_const_lv6_28 = 6'b101000;
parameter    ap_const_lv6_29 = 6'b101001;
parameter    ap_const_lv6_2A = 6'b101010;
parameter    ap_const_lv6_2B = 6'b101011;
parameter    ap_const_lv6_2C = 6'b101100;
parameter    ap_const_lv6_2D = 6'b101101;
parameter    ap_const_lv6_2E = 6'b101110;
parameter    ap_const_lv6_2F = 6'b101111;
parameter    ap_const_lv6_30 = 6'b110000;
parameter    ap_const_lv6_31 = 6'b110001;
parameter    ap_const_lv6_32 = 6'b110010;
parameter    ap_const_lv6_33 = 6'b110011;
parameter    ap_const_lv6_34 = 6'b110100;
parameter    ap_const_lv6_35 = 6'b110101;
parameter    ap_const_lv6_36 = 6'b110110;
parameter    ap_const_lv6_37 = 6'b110111;
parameter    ap_const_lv6_38 = 6'b111000;
parameter    ap_const_lv6_39 = 6'b111001;
parameter    ap_const_lv6_3A = 6'b111010;
parameter    ap_const_lv6_3B = 6'b111011;
parameter    ap_const_lv6_3C = 6'b111100;
parameter    ap_const_lv6_3D = 6'b111101;
parameter    ap_const_lv6_3E = 6'b111110;
parameter    ap_const_lv6_3F = 6'b111111;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv8_90 = 8'b10010000;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv32_9 = 32'b1001;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (C_S_AXI_CTRL_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] inStream_TDATA;
input   inStream_TVALID;
output   inStream_TREADY;
input  [3:0] inStream_TKEEP;
input  [3:0] inStream_TSTRB;
input  [1:0] inStream_TUSER;
input  [0:0] inStream_TLAST;
input  [4:0] inStream_TID;
input  [5:0] inStream_TDEST;
output  [31:0] outStream_TDATA;
output   outStream_TVALID;
input   outStream_TREADY;
output  [3:0] outStream_TKEEP;
output  [3:0] outStream_TSTRB;
output  [1:0] outStream_TUSER;
output  [0:0] outStream_TLAST;
output  [4:0] outStream_TID;
output  [5:0] outStream_TDEST;
input   s_axi_CTRL_AWVALID;
output   s_axi_CTRL_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1 : 0] s_axi_CTRL_AWADDR;
input   s_axi_CTRL_WVALID;
output   s_axi_CTRL_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1 : 0] s_axi_CTRL_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1 : 0] s_axi_CTRL_WSTRB;
input   s_axi_CTRL_ARVALID;
output   s_axi_CTRL_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1 : 0] s_axi_CTRL_ARADDR;
output   s_axi_CTRL_RVALID;
input   s_axi_CTRL_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1 : 0] s_axi_CTRL_RDATA;
output  [1:0] s_axi_CTRL_RRESP;
output   s_axi_CTRL_BVALID;
input   s_axi_CTRL_BREADY;
output  [1:0] s_axi_CTRL_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg    ap_ready;
reg   [31:0] inStream_V_data_V_0_data_out;
wire    inStream_V_data_V_0_vld_in;
wire    inStream_V_data_V_0_vld_out;
wire    inStream_V_data_V_0_ack_in;
reg    inStream_V_data_V_0_ack_out;
reg   [31:0] inStream_V_data_V_0_payload_A;
reg   [31:0] inStream_V_data_V_0_payload_B;
reg    inStream_V_data_V_0_sel_rd;
reg    inStream_V_data_V_0_sel_wr;
wire    inStream_V_data_V_0_sel;
wire    inStream_V_data_V_0_load_A;
wire    inStream_V_data_V_0_load_B;
reg   [1:0] inStream_V_data_V_0_state;
wire    inStream_V_data_V_0_state_cmp_full;
wire    inStream_V_dest_V_0_vld_in;
reg    inStream_V_dest_V_0_ack_out;
reg   [1:0] inStream_V_dest_V_0_state;
reg   [31:0] outStream_V_data_V_1_data_out;
reg    outStream_V_data_V_1_vld_in;
wire    outStream_V_data_V_1_vld_out;
wire    outStream_V_data_V_1_ack_in;
wire    outStream_V_data_V_1_ack_out;
reg   [31:0] outStream_V_data_V_1_payload_A;
reg   [31:0] outStream_V_data_V_1_payload_B;
reg    outStream_V_data_V_1_sel_rd;
reg    outStream_V_data_V_1_sel_wr;
wire    outStream_V_data_V_1_sel;
wire    outStream_V_data_V_1_load_A;
wire    outStream_V_data_V_1_load_B;
reg   [1:0] outStream_V_data_V_1_state;
wire    outStream_V_data_V_1_state_cmp_full;
wire   [3:0] outStream_V_keep_V_1_data_out;
reg    outStream_V_keep_V_1_vld_in;
wire    outStream_V_keep_V_1_vld_out;
wire    outStream_V_keep_V_1_ack_in;
wire    outStream_V_keep_V_1_ack_out;
reg    outStream_V_keep_V_1_sel_rd;
wire    outStream_V_keep_V_1_sel;
reg   [1:0] outStream_V_keep_V_1_state;
wire   [3:0] outStream_V_strb_V_1_data_out;
reg    outStream_V_strb_V_1_vld_in;
wire    outStream_V_strb_V_1_vld_out;
wire    outStream_V_strb_V_1_ack_in;
wire    outStream_V_strb_V_1_ack_out;
reg    outStream_V_strb_V_1_sel_rd;
wire    outStream_V_strb_V_1_sel;
reg   [1:0] outStream_V_strb_V_1_state;
wire   [1:0] outStream_V_user_V_1_data_out;
reg    outStream_V_user_V_1_vld_in;
wire    outStream_V_user_V_1_vld_out;
wire    outStream_V_user_V_1_ack_in;
wire    outStream_V_user_V_1_ack_out;
reg    outStream_V_user_V_1_sel_rd;
wire    outStream_V_user_V_1_sel;
reg   [1:0] outStream_V_user_V_1_state;
reg   [0:0] outStream_V_last_V_1_data_out;
reg    outStream_V_last_V_1_vld_in;
wire    outStream_V_last_V_1_vld_out;
wire    outStream_V_last_V_1_ack_in;
wire    outStream_V_last_V_1_ack_out;
reg   [0:0] outStream_V_last_V_1_payload_A;
reg   [0:0] outStream_V_last_V_1_payload_B;
reg    outStream_V_last_V_1_sel_rd;
reg    outStream_V_last_V_1_sel_wr;
wire    outStream_V_last_V_1_sel;
wire    outStream_V_last_V_1_load_A;
wire    outStream_V_last_V_1_load_B;
reg   [1:0] outStream_V_last_V_1_state;
wire    outStream_V_last_V_1_state_cmp_full;
wire   [4:0] outStream_V_id_V_1_data_out;
reg    outStream_V_id_V_1_vld_in;
wire    outStream_V_id_V_1_vld_out;
wire    outStream_V_id_V_1_ack_in;
wire    outStream_V_id_V_1_ack_out;
reg    outStream_V_id_V_1_sel_rd;
wire    outStream_V_id_V_1_sel;
reg   [1:0] outStream_V_id_V_1_state;
wire   [5:0] outStream_V_dest_V_1_data_out;
reg    outStream_V_dest_V_1_vld_in;
wire    outStream_V_dest_V_1_vld_out;
wire    outStream_V_dest_V_1_ack_in;
wire    outStream_V_dest_V_1_ack_out;
reg    outStream_V_dest_V_1_sel_rd;
wire    outStream_V_dest_V_1_sel;
reg   [1:0] outStream_V_dest_V_1_state;
reg   [8:0] weight_0_address0;
reg    weight_0_ce0;
wire   [31:0] weight_0_q0;
reg   [8:0] weight_1_address0;
reg    weight_1_ce0;
wire   [31:0] weight_1_q0;
reg   [8:0] weight_2_address0;
reg    weight_2_ce0;
wire   [31:0] weight_2_q0;
reg   [8:0] weight_3_address0;
reg    weight_3_ce0;
wire   [31:0] weight_3_q0;
reg   [8:0] weight_4_address0;
reg    weight_4_ce0;
wire   [31:0] weight_4_q0;
reg   [8:0] weight_5_address0;
reg    weight_5_ce0;
wire   [31:0] weight_5_q0;
reg   [8:0] weight_6_address0;
reg    weight_6_ce0;
wire   [31:0] weight_6_q0;
reg   [8:0] weight_7_address0;
reg    weight_7_ce0;
wire   [31:0] weight_7_q0;
reg   [8:0] weight_8_address0;
reg    weight_8_ce0;
wire   [31:0] weight_8_q0;
reg   [8:0] weight_9_address0;
reg    weight_9_ce0;
wire   [31:0] weight_9_q0;
reg   [8:0] weight_10_address0;
reg    weight_10_ce0;
wire   [31:0] weight_10_q0;
reg   [8:0] weight_11_address0;
reg    weight_11_ce0;
wire   [31:0] weight_11_q0;
reg   [8:0] weight_12_address0;
reg    weight_12_ce0;
wire   [31:0] weight_12_q0;
reg   [8:0] weight_13_address0;
reg    weight_13_ce0;
wire   [31:0] weight_13_q0;
reg   [8:0] weight_14_address0;
reg    weight_14_ce0;
wire   [31:0] weight_14_q0;
reg   [8:0] weight_15_address0;
reg    weight_15_ce0;
wire   [31:0] weight_15_q0;
reg   [8:0] weight_16_address0;
reg    weight_16_ce0;
wire   [31:0] weight_16_q0;
reg   [8:0] weight_17_address0;
reg    weight_17_ce0;
wire   [31:0] weight_17_q0;
reg   [8:0] weight_18_address0;
reg    weight_18_ce0;
wire   [31:0] weight_18_q0;
reg   [8:0] weight_19_address0;
reg    weight_19_ce0;
wire   [31:0] weight_19_q0;
reg   [8:0] weight_20_address0;
reg    weight_20_ce0;
wire   [31:0] weight_20_q0;
reg   [8:0] weight_21_address0;
reg    weight_21_ce0;
wire   [31:0] weight_21_q0;
reg   [8:0] weight_22_address0;
reg    weight_22_ce0;
wire   [31:0] weight_22_q0;
reg   [8:0] weight_23_address0;
reg    weight_23_ce0;
wire   [31:0] weight_23_q0;
reg   [8:0] weight_24_address0;
reg    weight_24_ce0;
wire   [31:0] weight_24_q0;
wire   [5:0] bias_address0;
reg    bias_ce0;
wire   [31:0] bias_q0;
wire   [31:0] ctrl;
reg    inStream_TDATA_blk_n;
wire   [0:0] ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
reg   [0:0] exitcond3_reg_5098;
reg    outStream_TDATA_blk_n;
wire   [0:0] ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
reg   [0:0] exitcond_reg_5782;
reg    ap_enable_reg_pp3_iter2;
reg   [0:0] ap_pipeline_reg_pp3_iter1_exitcond_reg_5782;
reg   [5:0] i1_reg_1301;
reg   [31:0] result_49_4_reg_1313;
reg   [31:0] result_48_4_reg_1323;
reg   [31:0] result_47_4_reg_1333;
reg   [31:0] result_46_4_reg_1343;
reg   [31:0] result_45_4_reg_1353;
reg   [31:0] result_44_4_reg_1363;
reg   [31:0] result_43_4_reg_1373;
reg   [31:0] result_42_4_reg_1383;
reg   [31:0] result_41_4_reg_1393;
reg   [31:0] result_40_4_reg_1403;
reg   [31:0] result_39_4_reg_1413;
reg   [31:0] result_38_4_reg_1423;
reg   [31:0] result_37_4_reg_1433;
reg   [31:0] result_36_4_reg_1443;
reg   [31:0] result_35_4_reg_1453;
reg   [31:0] result_34_4_reg_1463;
reg   [31:0] result_33_4_reg_1473;
reg   [31:0] result_32_4_reg_1483;
reg   [31:0] result_31_4_reg_1493;
reg   [31:0] result_30_4_reg_1503;
reg   [31:0] result_29_4_reg_1513;
reg   [31:0] result_28_4_reg_1523;
reg   [31:0] result_27_4_reg_1533;
reg   [31:0] result_26_4_reg_1543;
reg   [31:0] result_25_4_reg_1553;
reg   [31:0] result_24_4_reg_1563;
reg   [31:0] result_23_4_reg_1573;
reg   [31:0] result_22_4_reg_1583;
reg   [31:0] result_21_4_reg_1593;
reg   [31:0] result_20_4_reg_1603;
reg   [31:0] result_19_4_reg_1613;
reg   [31:0] result_18_4_reg_1623;
reg   [31:0] result_17_4_reg_1633;
reg   [31:0] result_16_4_reg_1643;
reg   [31:0] result_15_4_reg_1653;
reg   [31:0] result_14_4_reg_1663;
reg   [31:0] result_13_4_reg_1673;
reg   [31:0] result_12_4_reg_1683;
reg   [31:0] result_11_4_reg_1693;
reg   [31:0] result_10_4_reg_1703;
reg   [31:0] result_9_4_reg_1713;
reg   [31:0] result_8_4_reg_1723;
reg   [31:0] result_7_4_reg_1733;
reg   [31:0] result_6_4_reg_1743;
reg   [31:0] result_5_4_reg_1753;
reg   [31:0] result_4_4_reg_1763;
reg   [31:0] result_3_4_reg_1773;
reg   [31:0] result_2_4_reg_1783;
reg   [31:0] result_1_4_reg_1793;
reg   [31:0] result_0_4_reg_1803;
reg   [7:0] row_reg_1813;
reg   [5:0] writeCount_assign_reg_1824;
reg   [31:0] reg_2010;
wire   [0:0] ap_CS_fsm_pp2_stage1;
reg    ap_enable_reg_pp2_iter0;
reg   [31:0] ctrl_read_reg_4221;
wire   [31:0] result_0_load_reg_4226;
wire   [0:0] ap_CS_fsm_state2;
wire   [31:0] result_1_load_reg_4231;
wire   [31:0] result_2_load_reg_4236;
wire   [31:0] result_3_load_reg_4241;
wire   [31:0] result_4_load_reg_4246;
wire   [31:0] result_5_load_reg_4251;
wire   [31:0] result_6_load_reg_4256;
wire   [31:0] result_7_load_reg_4261;
wire   [31:0] result_8_load_reg_4266;
wire   [31:0] result_9_load_reg_4271;
wire   [31:0] result_10_load_reg_4276;
wire   [31:0] result_11_load_reg_4281;
wire   [31:0] result_12_load_reg_4286;
wire   [31:0] result_13_load_reg_4291;
wire   [31:0] result_14_load_reg_4296;
wire   [31:0] result_15_load_reg_4301;
wire   [31:0] result_16_load_reg_4306;
wire   [31:0] result_17_load_reg_4311;
wire   [31:0] result_18_load_reg_4316;
wire   [31:0] result_19_load_reg_4321;
wire   [31:0] result_20_load_reg_4326;
wire   [31:0] result_21_load_reg_4331;
wire   [31:0] result_22_load_reg_4336;
wire   [31:0] result_23_load_reg_4341;
wire   [31:0] result_24_load_reg_4346;
wire   [31:0] result_25_load_reg_4351;
wire   [31:0] result_26_load_reg_4356;
wire   [31:0] result_27_load_reg_4361;
wire   [31:0] result_28_load_reg_4366;
wire   [31:0] result_29_load_reg_4371;
wire   [31:0] result_30_load_reg_4376;
wire   [31:0] result_31_load_reg_4381;
wire   [31:0] result_32_load_reg_4386;
wire   [31:0] result_33_load_reg_4391;
wire   [31:0] result_34_load_reg_4396;
wire   [31:0] result_35_load_reg_4401;
wire   [31:0] result_36_load_reg_4406;
wire   [31:0] result_37_load_reg_4411;
wire   [31:0] result_38_load_reg_4416;
wire   [31:0] result_39_load_reg_4421;
wire   [31:0] result_40_load_reg_4426;
wire   [31:0] result_41_load_reg_4431;
wire   [31:0] result_42_load_reg_4436;
wire   [31:0] result_43_load_reg_4441;
wire   [31:0] result_44_load_reg_4446;
wire   [31:0] result_45_load_reg_4451;
wire   [31:0] result_46_load_reg_4456;
wire   [31:0] result_47_load_reg_4461;
wire   [31:0] result_48_load_reg_4466;
wire   [31:0] result_49_load_reg_4471;
wire   [5:0] i_1_fu_2172_p2;
wire   [0:0] exitcond2_fu_2628_p2;
reg   [0:0] exitcond2_reg_4834;
wire   [0:0] ap_CS_fsm_pp1_stage0;
wire   [5:0] i_2_fu_2634_p2;
reg   [5:0] i_2_reg_4838;
reg    ap_enable_reg_pp1_iter0;
reg   [31:0] result_49_3_load_reg_4848;
reg    ap_enable_reg_pp1_iter1;
reg   [31:0] result_49_5_load_reg_4853;
reg   [31:0] result_49_6_load_reg_4858;
reg   [31:0] result_49_7_load_reg_4863;
reg   [31:0] result_49_8_load_reg_4868;
reg   [31:0] result_49_9_load_reg_4873;
reg   [31:0] result_49_10_load_reg_4878;
reg   [31:0] result_49_11_load_reg_4883;
reg   [31:0] result_49_12_load_reg_4888;
reg   [31:0] result_49_13_load_reg_4893;
reg   [31:0] result_49_14_load_reg_4898;
reg   [31:0] result_49_15_load_reg_4903;
reg   [31:0] result_49_16_load_reg_4908;
reg   [31:0] result_49_17_load_reg_4913;
reg   [31:0] result_49_18_load_reg_4918;
reg   [31:0] result_49_19_load_reg_4923;
reg   [31:0] result_49_20_load_reg_4928;
reg   [31:0] result_49_21_load_reg_4933;
reg   [31:0] result_49_22_load_reg_4938;
reg   [31:0] result_49_23_load_reg_4943;
reg   [31:0] result_49_24_load_reg_4948;
reg   [31:0] result_49_25_load_reg_4953;
reg   [31:0] result_49_26_load_reg_4958;
reg   [31:0] result_49_27_load_reg_4963;
reg   [31:0] result_49_28_load_reg_4968;
reg   [31:0] result_49_29_load_reg_4973;
reg   [31:0] result_49_30_load_reg_4978;
reg   [31:0] result_49_31_load_reg_4983;
reg   [31:0] result_49_32_load_reg_4988;
reg   [31:0] result_49_33_load_reg_4993;
reg   [31:0] result_49_34_load_reg_4998;
reg   [31:0] result_49_35_load_reg_5003;
reg   [31:0] result_49_36_load_reg_5008;
reg   [31:0] result_49_37_load_reg_5013;
reg   [31:0] result_49_38_load_reg_5018;
reg   [31:0] result_49_39_load_reg_5023;
reg   [31:0] result_49_40_load_reg_5028;
reg   [31:0] result_49_41_load_reg_5033;
reg   [31:0] result_49_42_load_reg_5038;
reg   [31:0] result_49_43_load_reg_5043;
reg   [31:0] result_49_44_load_reg_5048;
reg   [31:0] result_49_45_load_reg_5053;
reg   [31:0] result_49_46_load_reg_5058;
reg   [31:0] result_49_47_load_reg_5063;
reg   [31:0] result_49_48_load_reg_5068;
reg   [31:0] result_49_49_load_reg_5073;
reg   [31:0] result_49_50_load_reg_5078;
reg   [31:0] result_49_51_load_reg_5083;
reg   [31:0] result_49_52_load_reg_5088;
reg   [31:0] result_49_2_load_reg_5093;
wire   [0:0] exitcond3_fu_3157_p2;
reg   [0:0] ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098;
reg   [0:0] ap_pipeline_reg_pp2_iter2_exitcond3_reg_5098;
reg   [0:0] ap_pipeline_reg_pp2_iter3_exitcond3_reg_5098;
reg   [0:0] ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098;
wire   [7:0] row_1_fu_3163_p2;
reg   [7:0] row_1_reg_5102;
wire   [8:0] tmp_5_fu_3169_p3;
reg   [8:0] tmp_5_reg_5107;
wire   [31:0] tmp_8_fu_3177_p1;
reg   [31:0] tmp_8_reg_5112;
reg   [31:0] weight_0_load_reg_5318;
reg   [31:0] weight_1_load_reg_5323;
reg   [31:0] weight_2_load_reg_5328;
reg   [31:0] weight_3_load_reg_5333;
reg   [31:0] weight_4_load_reg_5338;
reg   [31:0] weight_5_load_reg_5343;
reg   [31:0] weight_6_load_reg_5348;
reg   [31:0] weight_7_load_reg_5353;
reg   [31:0] weight_8_load_reg_5358;
reg   [31:0] weight_9_load_reg_5363;
reg   [31:0] weight_10_load_reg_5368;
reg   [31:0] weight_11_load_reg_5373;
reg   [31:0] tmp_data_V_1_reg_5438;
reg   [31:0] weight_13_load_1_reg_5467;
reg   [31:0] weight_14_load_1_reg_5472;
reg   [31:0] weight_15_load_1_reg_5477;
reg   [31:0] weight_16_load_1_reg_5482;
reg   [31:0] weight_17_load_1_reg_5487;
reg   [31:0] weight_18_load_1_reg_5492;
reg   [31:0] weight_19_load_1_reg_5497;
reg   [31:0] weight_20_load_1_reg_5502;
reg   [31:0] weight_21_load_1_reg_5507;
reg   [31:0] weight_22_load_1_reg_5512;
reg   [31:0] weight_23_load_1_reg_5517;
reg   [31:0] weight_24_load_1_reg_5522;
wire   [31:0] result_0_1_fu_3265_p2;
reg   [31:0] result_0_1_reg_5527;
reg    ap_enable_reg_pp2_iter4;
wire   [31:0] result_1_1_fu_3275_p2;
reg   [31:0] result_1_1_reg_5532;
wire   [31:0] result_2_1_fu_3285_p2;
reg   [31:0] result_2_1_reg_5537;
wire   [31:0] result_3_1_fu_3295_p2;
reg   [31:0] result_3_1_reg_5542;
wire   [31:0] result_4_1_fu_3305_p2;
reg   [31:0] result_4_1_reg_5547;
wire   [31:0] result_5_1_fu_3315_p2;
reg   [31:0] result_5_1_reg_5552;
wire   [31:0] result_6_1_fu_3325_p2;
reg   [31:0] result_6_1_reg_5557;
wire   [31:0] result_7_1_fu_3335_p2;
reg   [31:0] result_7_1_reg_5562;
wire   [31:0] result_8_1_fu_3345_p2;
reg   [31:0] result_8_1_reg_5567;
wire   [31:0] result_9_1_fu_3355_p2;
reg   [31:0] result_9_1_reg_5572;
wire   [31:0] result_10_1_fu_3365_p2;
reg   [31:0] result_10_1_reg_5577;
wire   [31:0] result_11_1_fu_3375_p2;
reg   [31:0] result_11_1_reg_5582;
wire   [31:0] result_12_1_fu_3385_p2;
reg   [31:0] result_12_1_reg_5587;
wire   [31:0] result_13_1_fu_3395_p2;
reg   [31:0] result_13_1_reg_5592;
wire   [31:0] result_14_1_fu_3405_p2;
reg   [31:0] result_14_1_reg_5597;
wire   [31:0] result_15_1_fu_3415_p2;
reg   [31:0] result_15_1_reg_5602;
wire   [31:0] result_16_1_fu_3425_p2;
reg   [31:0] result_16_1_reg_5607;
wire   [31:0] result_17_1_fu_3435_p2;
reg   [31:0] result_17_1_reg_5612;
wire   [31:0] result_18_1_fu_3445_p2;
reg   [31:0] result_18_1_reg_5617;
wire   [31:0] result_19_1_fu_3455_p2;
reg   [31:0] result_19_1_reg_5622;
wire   [31:0] result_20_1_fu_3465_p2;
reg   [31:0] result_20_1_reg_5627;
wire   [31:0] result_21_1_fu_3475_p2;
reg   [31:0] result_21_1_reg_5632;
wire   [31:0] result_22_1_fu_3485_p2;
reg   [31:0] result_22_1_reg_5637;
wire   [31:0] result_23_1_fu_3495_p2;
reg   [31:0] result_23_1_reg_5642;
wire   [31:0] result_24_1_fu_3505_p2;
reg   [31:0] result_24_1_reg_5647;
wire   [31:0] result_25_1_fu_3515_p2;
reg    ap_enable_reg_pp2_iter5;
wire   [31:0] result_26_1_fu_3525_p2;
wire   [31:0] result_27_1_fu_3535_p2;
wire   [31:0] result_28_1_fu_3545_p2;
wire   [31:0] result_29_1_fu_3555_p2;
wire   [31:0] result_30_1_fu_3565_p2;
wire   [31:0] result_31_1_fu_3575_p2;
wire   [31:0] result_32_1_fu_3585_p2;
wire   [31:0] result_33_1_fu_3595_p2;
wire   [31:0] result_34_1_fu_3605_p2;
wire   [31:0] result_35_1_fu_3615_p2;
wire   [31:0] result_36_1_fu_3625_p2;
wire   [31:0] result_37_1_fu_3635_p2;
wire   [31:0] result_38_1_fu_3645_p2;
wire   [31:0] result_39_1_fu_3655_p2;
wire   [31:0] result_40_1_fu_3665_p2;
wire   [31:0] result_41_1_fu_3675_p2;
wire   [31:0] result_42_1_fu_3685_p2;
wire   [31:0] result_43_1_fu_3695_p2;
wire   [31:0] result_44_1_fu_3705_p2;
wire   [31:0] result_45_1_fu_3715_p2;
wire   [31:0] result_46_1_fu_3725_p2;
wire   [31:0] result_47_1_fu_3735_p2;
wire   [31:0] result_48_1_fu_3745_p2;
wire   [31:0] result_49_1_fu_3755_p2;
wire   [0:0] tmp_11_fu_3761_p1;
reg   [0:0] tmp_11_reg_5777;
wire   [0:0] ap_CS_fsm_state18;
wire   [0:0] exitcond_fu_3764_p2;
wire   [5:0] col_fu_3770_p2;
reg   [5:0] col_reg_5786;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] tmp_last_V_fu_3776_p2;
wire   [31:0] data_fu_3913_p3;
wire   [0:0] ap_CS_fsm_state3;
wire   [0:0] ap_CS_fsm_state6;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg   [31:0] grp_fixed_point_mul_fu_1836_a;
reg   [31:0] grp_fixed_point_mul_fu_1836_b;
wire   [22:0] grp_fixed_point_mul_fu_1836_ap_return;
reg    grp_fixed_point_mul_fu_1836_ap_ce;
reg   [31:0] grp_fixed_point_mul_fu_1842_a;
reg   [31:0] grp_fixed_point_mul_fu_1842_b;
wire   [22:0] grp_fixed_point_mul_fu_1842_ap_return;
reg    grp_fixed_point_mul_fu_1842_ap_ce;
reg   [31:0] grp_fixed_point_mul_fu_1849_a;
reg   [31:0] grp_fixed_point_mul_fu_1849_b;
wire   [22:0] grp_fixed_point_mul_fu_1849_ap_return;
reg    grp_fixed_point_mul_fu_1849_ap_ce;
reg   [31:0] grp_fixed_point_mul_fu_1855_a;
reg   [31:0] grp_fixed_point_mul_fu_1855_b;
wire   [22:0] grp_fixed_point_mul_fu_1855_ap_return;
reg    grp_fixed_point_mul_fu_1855_ap_ce;
reg   [31:0] grp_fixed_point_mul_fu_1862_a;
reg   [31:0] grp_fixed_point_mul_fu_1862_b;
wire   [22:0] grp_fixed_point_mul_fu_1862_ap_return;
reg    grp_fixed_point_mul_fu_1862_ap_ce;
reg   [31:0] grp_fixed_point_mul_fu_1868_a;
reg   [31:0] grp_fixed_point_mul_fu_1868_b;
wire   [22:0] grp_fixed_point_mul_fu_1868_ap_return;
reg    grp_fixed_point_mul_fu_1868_ap_ce;
reg   [31:0] grp_fixed_point_mul_fu_1875_a;
reg   [31:0] grp_fixed_point_mul_fu_1875_b;
wire   [22:0] grp_fixed_point_mul_fu_1875_ap_return;
reg    grp_fixed_point_mul_fu_1875_ap_ce;
reg   [31:0] grp_fixed_point_mul_fu_1881_a;
reg   [31:0] grp_fixed_point_mul_fu_1881_b;
wire   [22:0] grp_fixed_point_mul_fu_1881_ap_return;
reg    grp_fixed_point_mul_fu_1881_ap_ce;
reg   [31:0] grp_fixed_point_mul_fu_1888_a;
reg   [31:0] grp_fixed_point_mul_fu_1888_b;
wire   [22:0] grp_fixed_point_mul_fu_1888_ap_return;
reg    grp_fixed_point_mul_fu_1888_ap_ce;
reg   [31:0] grp_fixed_point_mul_fu_1894_a;
reg   [31:0] grp_fixed_point_mul_fu_1894_b;
wire   [22:0] grp_fixed_point_mul_fu_1894_ap_return;
reg    grp_fixed_point_mul_fu_1894_ap_ce;
reg   [31:0] grp_fixed_point_mul_fu_1901_a;
reg   [31:0] grp_fixed_point_mul_fu_1901_b;
wire   [22:0] grp_fixed_point_mul_fu_1901_ap_return;
reg    grp_fixed_point_mul_fu_1901_ap_ce;
reg   [31:0] grp_fixed_point_mul_fu_1907_a;
reg   [31:0] grp_fixed_point_mul_fu_1907_b;
wire   [22:0] grp_fixed_point_mul_fu_1907_ap_return;
reg    grp_fixed_point_mul_fu_1907_ap_ce;
reg   [31:0] grp_fixed_point_mul_fu_1914_a;
reg   [31:0] grp_fixed_point_mul_fu_1914_b;
wire   [22:0] grp_fixed_point_mul_fu_1914_ap_return;
reg    grp_fixed_point_mul_fu_1914_ap_ce;
reg   [31:0] grp_fixed_point_mul_fu_1920_a;
reg   [31:0] grp_fixed_point_mul_fu_1920_b;
wire   [22:0] grp_fixed_point_mul_fu_1920_ap_return;
reg    grp_fixed_point_mul_fu_1920_ap_ce;
reg   [31:0] grp_fixed_point_mul_fu_1927_a;
reg   [31:0] grp_fixed_point_mul_fu_1927_b;
wire   [22:0] grp_fixed_point_mul_fu_1927_ap_return;
reg    grp_fixed_point_mul_fu_1927_ap_ce;
reg   [31:0] grp_fixed_point_mul_fu_1933_a;
reg   [31:0] grp_fixed_point_mul_fu_1933_b;
wire   [22:0] grp_fixed_point_mul_fu_1933_ap_return;
reg    grp_fixed_point_mul_fu_1933_ap_ce;
reg   [31:0] grp_fixed_point_mul_fu_1940_a;
reg   [31:0] grp_fixed_point_mul_fu_1940_b;
wire   [22:0] grp_fixed_point_mul_fu_1940_ap_return;
reg    grp_fixed_point_mul_fu_1940_ap_ce;
reg   [31:0] grp_fixed_point_mul_fu_1946_a;
reg   [31:0] grp_fixed_point_mul_fu_1946_b;
wire   [22:0] grp_fixed_point_mul_fu_1946_ap_return;
reg    grp_fixed_point_mul_fu_1946_ap_ce;
reg   [31:0] grp_fixed_point_mul_fu_1953_a;
reg   [31:0] grp_fixed_point_mul_fu_1953_b;
wire   [22:0] grp_fixed_point_mul_fu_1953_ap_return;
reg    grp_fixed_point_mul_fu_1953_ap_ce;
reg   [31:0] grp_fixed_point_mul_fu_1959_a;
reg   [31:0] grp_fixed_point_mul_fu_1959_b;
wire   [22:0] grp_fixed_point_mul_fu_1959_ap_return;
reg    grp_fixed_point_mul_fu_1959_ap_ce;
reg   [31:0] grp_fixed_point_mul_fu_1966_a;
reg   [31:0] grp_fixed_point_mul_fu_1966_b;
wire   [22:0] grp_fixed_point_mul_fu_1966_ap_return;
reg    grp_fixed_point_mul_fu_1966_ap_ce;
reg   [31:0] grp_fixed_point_mul_fu_1972_a;
reg   [31:0] grp_fixed_point_mul_fu_1972_b;
wire   [22:0] grp_fixed_point_mul_fu_1972_ap_return;
reg    grp_fixed_point_mul_fu_1972_ap_ce;
reg   [31:0] grp_fixed_point_mul_fu_1979_a;
reg   [31:0] grp_fixed_point_mul_fu_1979_b;
wire   [22:0] grp_fixed_point_mul_fu_1979_ap_return;
reg    grp_fixed_point_mul_fu_1979_ap_ce;
reg   [31:0] grp_fixed_point_mul_fu_1985_a;
reg   [31:0] grp_fixed_point_mul_fu_1985_b;
wire   [22:0] grp_fixed_point_mul_fu_1985_ap_return;
reg    grp_fixed_point_mul_fu_1985_ap_ce;
reg   [31:0] grp_fixed_point_mul_fu_1992_a;
reg   [31:0] grp_fixed_point_mul_fu_1992_b;
wire   [22:0] grp_fixed_point_mul_fu_1992_ap_return;
reg    grp_fixed_point_mul_fu_1992_ap_ce;
reg   [5:0] i_reg_1290;
wire   [0:0] exitcond1_fu_2166_p2;
reg   [5:0] i1_phi_fu_1305_p4;
reg   [7:0] row_phi_fu_1817_p4;
reg   [5:0] writeCount_assign_phi_fu_1828_p4;
wire   [31:0] i1_cast_fu_2640_p1;
wire   [31:0] tmp_s_fu_3199_p3;
reg   [31:0] result_49_3_fu_524;
wire   [31:0] result_0_3_fu_2901_p2;
reg   [31:0] result_49_5_fu_528;
reg   [31:0] result_49_6_fu_532;
reg   [31:0] result_49_7_fu_536;
reg   [31:0] result_49_8_fu_540;
reg   [31:0] result_49_9_fu_544;
reg   [31:0] result_49_10_fu_548;
reg   [31:0] result_49_11_fu_552;
reg   [31:0] result_49_12_fu_556;
reg   [31:0] result_49_13_fu_560;
reg   [31:0] result_49_14_fu_564;
reg   [31:0] result_49_15_fu_568;
reg   [31:0] result_49_16_fu_572;
reg   [31:0] result_49_17_fu_576;
reg   [31:0] result_49_18_fu_580;
reg   [31:0] result_49_19_fu_584;
reg   [31:0] result_49_20_fu_588;
reg   [31:0] result_49_21_fu_592;
reg   [31:0] result_49_22_fu_596;
reg   [31:0] result_49_23_fu_600;
reg   [31:0] result_49_24_fu_604;
reg   [31:0] result_49_25_fu_608;
reg   [31:0] result_49_26_fu_612;
reg   [31:0] result_49_27_fu_616;
reg   [31:0] result_49_28_fu_620;
reg   [31:0] result_49_29_fu_624;
reg   [31:0] result_49_30_fu_628;
reg   [31:0] result_49_31_fu_632;
reg   [31:0] result_49_32_fu_636;
reg   [31:0] result_49_33_fu_640;
reg   [31:0] result_49_34_fu_644;
reg   [31:0] result_49_35_fu_648;
reg   [31:0] result_49_36_fu_652;
reg   [31:0] result_49_37_fu_656;
reg   [31:0] result_49_38_fu_660;
reg   [31:0] result_49_39_fu_664;
reg   [31:0] result_49_40_fu_668;
reg   [31:0] result_49_41_fu_672;
reg   [31:0] result_49_42_fu_676;
reg   [31:0] result_49_43_fu_680;
reg   [31:0] result_49_44_fu_684;
reg   [31:0] result_49_45_fu_688;
reg   [31:0] result_49_46_fu_692;
reg   [31:0] result_49_47_fu_696;
reg   [31:0] result_49_48_fu_700;
reg   [31:0] result_49_49_fu_704;
reg   [31:0] result_49_50_fu_708;
reg   [31:0] result_49_51_fu_712;
reg   [31:0] result_49_52_fu_716;
reg   [31:0] result_49_2_fu_720;
wire   [31:0] tmp_1_fu_2795_p52;
wire   [8:0] tmp_9_fu_3194_p2;
wire  signed [31:0] result_0_1_trunc_ex_fu_3261_p1;
wire  signed [31:0] result_1_1_trunc_ex_fu_3271_p1;
wire  signed [31:0] result_2_1_trunc_ex_fu_3281_p1;
wire  signed [31:0] result_3_1_trunc_ex_fu_3291_p1;
wire  signed [31:0] result_4_1_trunc_ex_fu_3301_p1;
wire  signed [31:0] result_5_1_trunc_ex_fu_3311_p1;
wire  signed [31:0] result_6_1_trunc_ex_fu_3321_p1;
wire  signed [31:0] result_7_1_trunc_ex_fu_3331_p1;
wire  signed [31:0] result_8_1_trunc_ex_fu_3341_p1;
wire  signed [31:0] result_9_1_trunc_ex_fu_3351_p1;
wire  signed [31:0] result_10_1_trunc_e_fu_3361_p1;
wire  signed [31:0] result_11_1_trunc_e_fu_3371_p1;
wire  signed [31:0] result_12_1_trunc_e_fu_3381_p1;
wire  signed [31:0] result_13_1_trunc_e_fu_3391_p1;
wire  signed [31:0] result_14_1_trunc_e_fu_3401_p1;
wire  signed [31:0] result_15_1_trunc_e_fu_3411_p1;
wire  signed [31:0] result_16_1_trunc_e_fu_3421_p1;
wire  signed [31:0] result_17_1_trunc_e_fu_3431_p1;
wire  signed [31:0] result_18_1_trunc_e_fu_3441_p1;
wire  signed [31:0] result_19_1_trunc_e_fu_3451_p1;
wire  signed [31:0] result_20_1_trunc_e_fu_3461_p1;
wire  signed [31:0] result_21_1_trunc_e_fu_3471_p1;
wire  signed [31:0] result_22_1_trunc_e_fu_3481_p1;
wire  signed [31:0] result_23_1_trunc_e_fu_3491_p1;
wire  signed [31:0] result_24_1_trunc_e_fu_3501_p1;
wire  signed [31:0] result_25_1_trunc_e_fu_3511_p1;
wire  signed [31:0] result_26_1_trunc_e_fu_3521_p1;
wire  signed [31:0] result_27_1_trunc_e_fu_3531_p1;
wire  signed [31:0] result_28_1_trunc_e_fu_3541_p1;
wire  signed [31:0] result_29_1_trunc_e_fu_3551_p1;
wire  signed [31:0] result_30_1_trunc_e_fu_3561_p1;
wire  signed [31:0] result_31_1_trunc_e_fu_3571_p1;
wire  signed [31:0] result_32_1_trunc_e_fu_3581_p1;
wire  signed [31:0] result_33_1_trunc_e_fu_3591_p1;
wire  signed [31:0] result_34_1_trunc_e_fu_3601_p1;
wire  signed [31:0] result_35_1_trunc_e_fu_3611_p1;
wire  signed [31:0] result_36_1_trunc_e_fu_3621_p1;
wire  signed [31:0] result_37_1_trunc_e_fu_3631_p1;
wire  signed [31:0] result_38_1_trunc_e_fu_3641_p1;
wire  signed [31:0] result_39_1_trunc_e_fu_3651_p1;
wire  signed [31:0] result_40_1_trunc_e_fu_3661_p1;
wire  signed [31:0] result_41_1_trunc_e_fu_3671_p1;
wire  signed [31:0] result_42_1_trunc_e_fu_3681_p1;
wire  signed [31:0] result_43_1_trunc_e_fu_3691_p1;
wire  signed [31:0] result_44_1_trunc_e_fu_3701_p1;
wire  signed [31:0] result_45_1_trunc_e_fu_3711_p1;
wire  signed [31:0] result_46_1_trunc_e_fu_3721_p1;
wire  signed [31:0] result_47_1_trunc_e_fu_3731_p1;
wire  signed [31:0] result_48_1_trunc_e_fu_3741_p1;
wire  signed [31:0] result_49_1_trunc_e_fu_3751_p1;
wire   [31:0] data_1_fu_3783_p52;
wire   [0:0] tmp_13_fu_3893_p3;
wire   [30:0] tmp_12_fu_3889_p1;
wire   [30:0] data_2_fu_3901_p3;
wire   [31:0] data_2_cast_fu_3909_p1;
wire   [0:0] ap_CS_fsm_state22;
reg    ap_condition_3193;
reg   [9:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'b1;
#0 inStream_V_data_V_0_sel_rd = 1'b0;
#0 inStream_V_data_V_0_sel_wr = 1'b0;
#0 inStream_V_data_V_0_state = 2'b00;
#0 inStream_V_dest_V_0_state = 2'b00;
#0 outStream_V_data_V_1_sel_rd = 1'b0;
#0 outStream_V_data_V_1_sel_wr = 1'b0;
#0 outStream_V_data_V_1_state = 2'b00;
#0 outStream_V_keep_V_1_sel_rd = 1'b0;
#0 outStream_V_keep_V_1_state = 2'b00;
#0 outStream_V_strb_V_1_sel_rd = 1'b0;
#0 outStream_V_strb_V_1_state = 2'b00;
#0 outStream_V_user_V_1_sel_rd = 1'b0;
#0 outStream_V_user_V_1_state = 2'b00;
#0 outStream_V_last_V_1_sel_rd = 1'b0;
#0 outStream_V_last_V_1_sel_wr = 1'b0;
#0 outStream_V_last_V_1_state = 2'b00;
#0 outStream_V_id_V_1_sel_rd = 1'b0;
#0 outStream_V_id_V_1_state = 2'b00;
#0 outStream_V_dest_V_1_sel_rd = 1'b0;
#0 outStream_V_dest_V_1_state = 2'b00;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
end

cnn_fc_i144_o50_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
cnn_fc_i144_o50_CTRL_s_axi_U(
    .AWVALID(s_axi_CTRL_AWVALID),
    .AWREADY(s_axi_CTRL_AWREADY),
    .AWADDR(s_axi_CTRL_AWADDR),
    .WVALID(s_axi_CTRL_WVALID),
    .WREADY(s_axi_CTRL_WREADY),
    .WDATA(s_axi_CTRL_WDATA),
    .WSTRB(s_axi_CTRL_WSTRB),
    .ARVALID(s_axi_CTRL_ARVALID),
    .ARREADY(s_axi_CTRL_ARREADY),
    .ARADDR(s_axi_CTRL_ARADDR),
    .RVALID(s_axi_CTRL_RVALID),
    .RREADY(s_axi_CTRL_RREADY),
    .RDATA(s_axi_CTRL_RDATA),
    .RRESP(s_axi_CTRL_RRESP),
    .BVALID(s_axi_CTRL_BVALID),
    .BREADY(s_axi_CTRL_BREADY),
    .BRESP(s_axi_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .weight_0_address0(weight_0_address0),
    .weight_0_ce0(weight_0_ce0),
    .weight_0_q0(weight_0_q0),
    .weight_1_address0(weight_1_address0),
    .weight_1_ce0(weight_1_ce0),
    .weight_1_q0(weight_1_q0),
    .weight_2_address0(weight_2_address0),
    .weight_2_ce0(weight_2_ce0),
    .weight_2_q0(weight_2_q0),
    .weight_3_address0(weight_3_address0),
    .weight_3_ce0(weight_3_ce0),
    .weight_3_q0(weight_3_q0),
    .weight_4_address0(weight_4_address0),
    .weight_4_ce0(weight_4_ce0),
    .weight_4_q0(weight_4_q0),
    .weight_5_address0(weight_5_address0),
    .weight_5_ce0(weight_5_ce0),
    .weight_5_q0(weight_5_q0),
    .weight_6_address0(weight_6_address0),
    .weight_6_ce0(weight_6_ce0),
    .weight_6_q0(weight_6_q0),
    .weight_7_address0(weight_7_address0),
    .weight_7_ce0(weight_7_ce0),
    .weight_7_q0(weight_7_q0),
    .weight_8_address0(weight_8_address0),
    .weight_8_ce0(weight_8_ce0),
    .weight_8_q0(weight_8_q0),
    .weight_9_address0(weight_9_address0),
    .weight_9_ce0(weight_9_ce0),
    .weight_9_q0(weight_9_q0),
    .weight_10_address0(weight_10_address0),
    .weight_10_ce0(weight_10_ce0),
    .weight_10_q0(weight_10_q0),
    .weight_11_address0(weight_11_address0),
    .weight_11_ce0(weight_11_ce0),
    .weight_11_q0(weight_11_q0),
    .weight_12_address0(weight_12_address0),
    .weight_12_ce0(weight_12_ce0),
    .weight_12_q0(weight_12_q0),
    .weight_13_address0(weight_13_address0),
    .weight_13_ce0(weight_13_ce0),
    .weight_13_q0(weight_13_q0),
    .weight_14_address0(weight_14_address0),
    .weight_14_ce0(weight_14_ce0),
    .weight_14_q0(weight_14_q0),
    .weight_15_address0(weight_15_address0),
    .weight_15_ce0(weight_15_ce0),
    .weight_15_q0(weight_15_q0),
    .weight_16_address0(weight_16_address0),
    .weight_16_ce0(weight_16_ce0),
    .weight_16_q0(weight_16_q0),
    .weight_17_address0(weight_17_address0),
    .weight_17_ce0(weight_17_ce0),
    .weight_17_q0(weight_17_q0),
    .weight_18_address0(weight_18_address0),
    .weight_18_ce0(weight_18_ce0),
    .weight_18_q0(weight_18_q0),
    .weight_19_address0(weight_19_address0),
    .weight_19_ce0(weight_19_ce0),
    .weight_19_q0(weight_19_q0),
    .weight_20_address0(weight_20_address0),
    .weight_20_ce0(weight_20_ce0),
    .weight_20_q0(weight_20_q0),
    .weight_21_address0(weight_21_address0),
    .weight_21_ce0(weight_21_ce0),
    .weight_21_q0(weight_21_q0),
    .weight_22_address0(weight_22_address0),
    .weight_22_ce0(weight_22_ce0),
    .weight_22_q0(weight_22_q0),
    .weight_23_address0(weight_23_address0),
    .weight_23_ce0(weight_23_ce0),
    .weight_23_q0(weight_23_q0),
    .weight_24_address0(weight_24_address0),
    .weight_24_ce0(weight_24_ce0),
    .weight_24_q0(weight_24_q0),
    .bias_address0(bias_address0),
    .bias_ce0(bias_ce0),
    .bias_q0(bias_q0),
    .ctrl(ctrl)
);

fixed_point_mul grp_fixed_point_mul_fu_1836(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1836_a),
    .b(grp_fixed_point_mul_fu_1836_b),
    .ap_return(grp_fixed_point_mul_fu_1836_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1836_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_1842(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1842_a),
    .b(grp_fixed_point_mul_fu_1842_b),
    .ap_return(grp_fixed_point_mul_fu_1842_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1842_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_1849(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1849_a),
    .b(grp_fixed_point_mul_fu_1849_b),
    .ap_return(grp_fixed_point_mul_fu_1849_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1849_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_1855(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1855_a),
    .b(grp_fixed_point_mul_fu_1855_b),
    .ap_return(grp_fixed_point_mul_fu_1855_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1855_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_1862(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1862_a),
    .b(grp_fixed_point_mul_fu_1862_b),
    .ap_return(grp_fixed_point_mul_fu_1862_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1862_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_1868(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1868_a),
    .b(grp_fixed_point_mul_fu_1868_b),
    .ap_return(grp_fixed_point_mul_fu_1868_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1868_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_1875(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1875_a),
    .b(grp_fixed_point_mul_fu_1875_b),
    .ap_return(grp_fixed_point_mul_fu_1875_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1875_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_1881(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1881_a),
    .b(grp_fixed_point_mul_fu_1881_b),
    .ap_return(grp_fixed_point_mul_fu_1881_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1881_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_1888(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1888_a),
    .b(grp_fixed_point_mul_fu_1888_b),
    .ap_return(grp_fixed_point_mul_fu_1888_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1888_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_1894(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1894_a),
    .b(grp_fixed_point_mul_fu_1894_b),
    .ap_return(grp_fixed_point_mul_fu_1894_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1894_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_1901(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1901_a),
    .b(grp_fixed_point_mul_fu_1901_b),
    .ap_return(grp_fixed_point_mul_fu_1901_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1901_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_1907(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1907_a),
    .b(grp_fixed_point_mul_fu_1907_b),
    .ap_return(grp_fixed_point_mul_fu_1907_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1907_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_1914(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1914_a),
    .b(grp_fixed_point_mul_fu_1914_b),
    .ap_return(grp_fixed_point_mul_fu_1914_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1914_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_1920(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1920_a),
    .b(grp_fixed_point_mul_fu_1920_b),
    .ap_return(grp_fixed_point_mul_fu_1920_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1920_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_1927(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1927_a),
    .b(grp_fixed_point_mul_fu_1927_b),
    .ap_return(grp_fixed_point_mul_fu_1927_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1927_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_1933(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1933_a),
    .b(grp_fixed_point_mul_fu_1933_b),
    .ap_return(grp_fixed_point_mul_fu_1933_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1933_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_1940(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1940_a),
    .b(grp_fixed_point_mul_fu_1940_b),
    .ap_return(grp_fixed_point_mul_fu_1940_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1940_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_1946(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1946_a),
    .b(grp_fixed_point_mul_fu_1946_b),
    .ap_return(grp_fixed_point_mul_fu_1946_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1946_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_1953(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1953_a),
    .b(grp_fixed_point_mul_fu_1953_b),
    .ap_return(grp_fixed_point_mul_fu_1953_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1953_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_1959(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1959_a),
    .b(grp_fixed_point_mul_fu_1959_b),
    .ap_return(grp_fixed_point_mul_fu_1959_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1959_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_1966(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1966_a),
    .b(grp_fixed_point_mul_fu_1966_b),
    .ap_return(grp_fixed_point_mul_fu_1966_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1966_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_1972(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1972_a),
    .b(grp_fixed_point_mul_fu_1972_b),
    .ap_return(grp_fixed_point_mul_fu_1972_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1972_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_1979(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1979_a),
    .b(grp_fixed_point_mul_fu_1979_b),
    .ap_return(grp_fixed_point_mul_fu_1979_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1979_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_1985(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1985_a),
    .b(grp_fixed_point_mul_fu_1985_b),
    .ap_return(grp_fixed_point_mul_fu_1985_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1985_ap_ce)
);

fixed_point_mul grp_fixed_point_mul_fu_1992(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .a(grp_fixed_point_mul_fu_1992_a),
    .b(grp_fixed_point_mul_fu_1992_b),
    .ap_return(grp_fixed_point_mul_fu_1992_ap_return),
    .ap_ce(grp_fixed_point_mul_fu_1992_ap_ce)
);

cnn_fc_i144_o50_mcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 32 ),
    .din37_WIDTH( 32 ),
    .din38_WIDTH( 32 ),
    .din39_WIDTH( 32 ),
    .din40_WIDTH( 32 ),
    .din41_WIDTH( 32 ),
    .din42_WIDTH( 32 ),
    .din43_WIDTH( 32 ),
    .din44_WIDTH( 32 ),
    .din45_WIDTH( 32 ),
    .din46_WIDTH( 32 ),
    .din47_WIDTH( 32 ),
    .din48_WIDTH( 32 ),
    .din49_WIDTH( 32 ),
    .din50_WIDTH( 32 ),
    .din51_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
cnn_fc_i144_o50_mcud_U3(
    .din1(result_49_3_fu_524),
    .din2(result_49_5_fu_528),
    .din3(result_49_6_fu_532),
    .din4(result_49_7_fu_536),
    .din5(result_49_8_fu_540),
    .din6(result_49_9_fu_544),
    .din7(result_49_10_fu_548),
    .din8(result_49_11_fu_552),
    .din9(result_49_12_fu_556),
    .din10(result_49_13_fu_560),
    .din11(result_49_14_fu_564),
    .din12(result_49_15_fu_568),
    .din13(result_49_16_fu_572),
    .din14(result_49_17_fu_576),
    .din15(result_49_18_fu_580),
    .din16(result_49_19_fu_584),
    .din17(result_49_20_fu_588),
    .din18(result_49_21_fu_592),
    .din19(result_49_22_fu_596),
    .din20(result_49_23_fu_600),
    .din21(result_49_24_fu_604),
    .din22(result_49_25_fu_608),
    .din23(result_49_26_fu_612),
    .din24(result_49_27_fu_616),
    .din25(result_49_28_fu_620),
    .din26(result_49_29_fu_624),
    .din27(result_49_30_fu_628),
    .din28(result_49_31_fu_632),
    .din29(result_49_32_fu_636),
    .din30(result_49_33_fu_640),
    .din31(result_49_34_fu_644),
    .din32(result_49_35_fu_648),
    .din33(result_49_36_fu_652),
    .din34(result_49_37_fu_656),
    .din35(result_49_38_fu_660),
    .din36(result_49_39_fu_664),
    .din37(result_49_40_fu_668),
    .din38(result_49_41_fu_672),
    .din39(result_49_42_fu_676),
    .din40(result_49_43_fu_680),
    .din41(result_49_44_fu_684),
    .din42(result_49_45_fu_688),
    .din43(result_49_46_fu_692),
    .din44(result_49_47_fu_696),
    .din45(result_49_48_fu_700),
    .din46(result_49_49_fu_704),
    .din47(result_49_50_fu_708),
    .din48(result_49_51_fu_712),
    .din49(result_49_52_fu_716),
    .din50(result_49_2_fu_720),
    .din51(i1_reg_1301),
    .dout(tmp_1_fu_2795_p52)
);

cnn_fc_i144_o50_mcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 32 ),
    .din37_WIDTH( 32 ),
    .din38_WIDTH( 32 ),
    .din39_WIDTH( 32 ),
    .din40_WIDTH( 32 ),
    .din41_WIDTH( 32 ),
    .din42_WIDTH( 32 ),
    .din43_WIDTH( 32 ),
    .din44_WIDTH( 32 ),
    .din45_WIDTH( 32 ),
    .din46_WIDTH( 32 ),
    .din47_WIDTH( 32 ),
    .din48_WIDTH( 32 ),
    .din49_WIDTH( 32 ),
    .din50_WIDTH( 32 ),
    .din51_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
cnn_fc_i144_o50_mcud_U4(
    .din1(result_0_4_reg_1803),
    .din2(result_1_4_reg_1793),
    .din3(result_2_4_reg_1783),
    .din4(result_3_4_reg_1773),
    .din5(result_4_4_reg_1763),
    .din6(result_5_4_reg_1753),
    .din7(result_6_4_reg_1743),
    .din8(result_7_4_reg_1733),
    .din9(result_8_4_reg_1723),
    .din10(result_9_4_reg_1713),
    .din11(result_10_4_reg_1703),
    .din12(result_11_4_reg_1693),
    .din13(result_12_4_reg_1683),
    .din14(result_13_4_reg_1673),
    .din15(result_14_4_reg_1663),
    .din16(result_15_4_reg_1653),
    .din17(result_16_4_reg_1643),
    .din18(result_17_4_reg_1633),
    .din19(result_18_4_reg_1623),
    .din20(result_19_4_reg_1613),
    .din21(result_20_4_reg_1603),
    .din22(result_21_4_reg_1593),
    .din23(result_22_4_reg_1583),
    .din24(result_23_4_reg_1573),
    .din25(result_24_4_reg_1563),
    .din26(result_25_4_reg_1553),
    .din27(result_26_4_reg_1543),
    .din28(result_27_4_reg_1533),
    .din29(result_28_4_reg_1523),
    .din30(result_29_4_reg_1513),
    .din31(result_30_4_reg_1503),
    .din32(result_31_4_reg_1493),
    .din33(result_32_4_reg_1483),
    .din34(result_33_4_reg_1473),
    .din35(result_34_4_reg_1463),
    .din36(result_35_4_reg_1453),
    .din37(result_36_4_reg_1443),
    .din38(result_37_4_reg_1433),
    .din39(result_38_4_reg_1423),
    .din40(result_39_4_reg_1413),
    .din41(result_40_4_reg_1403),
    .din42(result_41_4_reg_1393),
    .din43(result_42_4_reg_1383),
    .din44(result_43_4_reg_1373),
    .din45(result_44_4_reg_1363),
    .din46(result_45_4_reg_1353),
    .din47(result_46_4_reg_1343),
    .din48(result_47_4_reg_1333),
    .din49(result_48_4_reg_1323),
    .din50(result_49_4_reg_1313),
    .din51(writeCount_assign_reg_1824),
    .dout(data_1_fu_3783_p52)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~(1'b0 == exitcond2_fu_2628_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp1_stage0)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & ~(1'b0 == exitcond3_fu_3157_p2))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == exitcond3_reg_5098) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_pp2_stage1) & ~(1'b0 == exitcond3_reg_5098)))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp2_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in))) & ~(1'b0 == exitcond_fu_3764_p2))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b0 == exitcond_fu_3764_p2))) begin
            ap_enable_reg_pp3_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in))) & ~(1'b0 == exitcond_fu_3764_p2)))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in)))) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_data_V_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == inStream_V_data_V_0_ack_out) & (1'b1 == inStream_V_data_V_0_vld_out))) begin
            inStream_V_data_V_0_sel_rd <= ~inStream_V_data_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_data_V_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == inStream_V_data_V_0_vld_in) & (1'b1 == inStream_V_data_V_0_ack_in))) begin
            inStream_V_data_V_0_sel_wr <= ~inStream_V_data_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_data_V_0_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == inStream_V_data_V_0_vld_in) & (1'b1 == inStream_V_data_V_0_ack_out) & (inStream_V_data_V_0_state == ap_const_lv2_3)) | ((1'b0 == inStream_V_data_V_0_vld_in) & (inStream_V_data_V_0_state == ap_const_lv2_2)))) begin
            inStream_V_data_V_0_state <= ap_const_lv2_2;
        end else if ((((1'b1 == inStream_V_data_V_0_vld_in) & (1'b0 == inStream_V_data_V_0_ack_out) & (inStream_V_data_V_0_state == ap_const_lv2_3)) | ((1'b0 == inStream_V_data_V_0_ack_out) & (inStream_V_data_V_0_state == ap_const_lv2_1)))) begin
            inStream_V_data_V_0_state <= ap_const_lv2_1;
        end else if ((((1'b1 == inStream_V_data_V_0_vld_in) & (inStream_V_data_V_0_state == ap_const_lv2_2)) | ((1'b1 == inStream_V_data_V_0_ack_out) & (inStream_V_data_V_0_state == ap_const_lv2_1)) | ((inStream_V_data_V_0_state == ap_const_lv2_3) & ~((1'b1 == inStream_V_data_V_0_vld_in) & (1'b0 == inStream_V_data_V_0_ack_out)) & ~((1'b0 == inStream_V_data_V_0_vld_in) & (1'b1 == inStream_V_data_V_0_ack_out))))) begin
            inStream_V_data_V_0_state <= ap_const_lv2_3;
        end else begin
            inStream_V_data_V_0_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_dest_V_0_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == inStream_V_dest_V_0_vld_in) & (1'b1 == inStream_V_dest_V_0_ack_out) & (ap_const_lv2_3 == inStream_V_dest_V_0_state)) | ((1'b0 == inStream_V_dest_V_0_vld_in) & (ap_const_lv2_2 == inStream_V_dest_V_0_state)))) begin
            inStream_V_dest_V_0_state <= ap_const_lv2_2;
        end else if ((((1'b1 == inStream_V_dest_V_0_vld_in) & (1'b0 == inStream_V_dest_V_0_ack_out) & (ap_const_lv2_3 == inStream_V_dest_V_0_state)) | ((1'b0 == inStream_V_dest_V_0_ack_out) & (ap_const_lv2_1 == inStream_V_dest_V_0_state)))) begin
            inStream_V_dest_V_0_state <= ap_const_lv2_1;
        end else if ((((1'b1 == inStream_V_dest_V_0_vld_in) & (ap_const_lv2_2 == inStream_V_dest_V_0_state)) | ((1'b1 == inStream_V_dest_V_0_ack_out) & (ap_const_lv2_1 == inStream_V_dest_V_0_state)) | ((ap_const_lv2_3 == inStream_V_dest_V_0_state) & ~((1'b1 == inStream_V_dest_V_0_vld_in) & (1'b0 == inStream_V_dest_V_0_ack_out)) & ~((1'b0 == inStream_V_dest_V_0_vld_in) & (1'b1 == inStream_V_dest_V_0_ack_out))))) begin
            inStream_V_dest_V_0_state <= ap_const_lv2_3;
        end else begin
            inStream_V_dest_V_0_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_data_V_1_ack_out) & (1'b1 == outStream_V_data_V_1_vld_out))) begin
            outStream_V_data_V_1_sel_rd <= ~outStream_V_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_data_V_1_vld_in) & (1'b1 == outStream_V_data_V_1_ack_in))) begin
            outStream_V_data_V_1_sel_wr <= ~outStream_V_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_data_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_data_V_1_vld_in) & (1'b1 == outStream_V_data_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_data_V_1_state)) | ((1'b0 == outStream_V_data_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_data_V_1_state)))) begin
            outStream_V_data_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_data_V_1_vld_in) & (1'b0 == outStream_V_data_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_data_V_1_state)) | ((1'b0 == outStream_V_data_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_data_V_1_state)))) begin
            outStream_V_data_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_data_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_data_V_1_state)) | ((1'b1 == outStream_V_data_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_data_V_1_state)) | ((ap_const_lv2_3 == outStream_V_data_V_1_state) & ~((1'b1 == outStream_V_data_V_1_vld_in) & (1'b0 == outStream_V_data_V_1_ack_out)) & ~((1'b0 == outStream_V_data_V_1_vld_in) & (1'b1 == outStream_V_data_V_1_ack_out))))) begin
            outStream_V_data_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_data_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_dest_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_dest_V_1_ack_out) & (1'b1 == outStream_V_dest_V_1_vld_out))) begin
            outStream_V_dest_V_1_sel_rd <= ~outStream_V_dest_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_dest_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_dest_V_1_vld_in) & (1'b1 == outStream_V_dest_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_dest_V_1_state)) | ((1'b0 == outStream_V_dest_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_dest_V_1_state)))) begin
            outStream_V_dest_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_dest_V_1_vld_in) & (1'b0 == outStream_V_dest_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_dest_V_1_state)) | ((1'b0 == outStream_V_dest_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_dest_V_1_state)))) begin
            outStream_V_dest_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_dest_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_dest_V_1_state)) | ((1'b1 == outStream_V_dest_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_dest_V_1_state)) | ((ap_const_lv2_3 == outStream_V_dest_V_1_state) & ~((1'b1 == outStream_V_dest_V_1_vld_in) & (1'b0 == outStream_V_dest_V_1_ack_out)) & ~((1'b0 == outStream_V_dest_V_1_vld_in) & (1'b1 == outStream_V_dest_V_1_ack_out))))) begin
            outStream_V_dest_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_dest_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_id_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_id_V_1_ack_out) & (1'b1 == outStream_V_id_V_1_vld_out))) begin
            outStream_V_id_V_1_sel_rd <= ~outStream_V_id_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_id_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_id_V_1_vld_in) & (1'b1 == outStream_V_id_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_id_V_1_state)) | ((1'b0 == outStream_V_id_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_id_V_1_state)))) begin
            outStream_V_id_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_id_V_1_vld_in) & (1'b0 == outStream_V_id_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_id_V_1_state)) | ((1'b0 == outStream_V_id_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_id_V_1_state)))) begin
            outStream_V_id_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_id_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_id_V_1_state)) | ((1'b1 == outStream_V_id_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_id_V_1_state)) | ((ap_const_lv2_3 == outStream_V_id_V_1_state) & ~((1'b1 == outStream_V_id_V_1_vld_in) & (1'b0 == outStream_V_id_V_1_ack_out)) & ~((1'b0 == outStream_V_id_V_1_vld_in) & (1'b1 == outStream_V_id_V_1_ack_out))))) begin
            outStream_V_id_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_id_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_keep_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_keep_V_1_ack_out) & (1'b1 == outStream_V_keep_V_1_vld_out))) begin
            outStream_V_keep_V_1_sel_rd <= ~outStream_V_keep_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_keep_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_keep_V_1_vld_in) & (1'b1 == outStream_V_keep_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_keep_V_1_state)) | ((1'b0 == outStream_V_keep_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_keep_V_1_state)))) begin
            outStream_V_keep_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_keep_V_1_vld_in) & (1'b0 == outStream_V_keep_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_keep_V_1_state)) | ((1'b0 == outStream_V_keep_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_keep_V_1_state)))) begin
            outStream_V_keep_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_keep_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_keep_V_1_state)) | ((1'b1 == outStream_V_keep_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_keep_V_1_state)) | ((ap_const_lv2_3 == outStream_V_keep_V_1_state) & ~((1'b1 == outStream_V_keep_V_1_vld_in) & (1'b0 == outStream_V_keep_V_1_ack_out)) & ~((1'b0 == outStream_V_keep_V_1_vld_in) & (1'b1 == outStream_V_keep_V_1_ack_out))))) begin
            outStream_V_keep_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_keep_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_last_V_1_ack_out) & (1'b1 == outStream_V_last_V_1_vld_out))) begin
            outStream_V_last_V_1_sel_rd <= ~outStream_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_last_V_1_vld_in) & (1'b1 == outStream_V_last_V_1_ack_in))) begin
            outStream_V_last_V_1_sel_wr <= ~outStream_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_last_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_last_V_1_vld_in) & (1'b1 == outStream_V_last_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_last_V_1_state)) | ((1'b0 == outStream_V_last_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_last_V_1_state)))) begin
            outStream_V_last_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_last_V_1_vld_in) & (1'b0 == outStream_V_last_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_last_V_1_state)) | ((1'b0 == outStream_V_last_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_last_V_1_state)))) begin
            outStream_V_last_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_last_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_last_V_1_state)) | ((1'b1 == outStream_V_last_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_last_V_1_state)) | ((ap_const_lv2_3 == outStream_V_last_V_1_state) & ~((1'b1 == outStream_V_last_V_1_vld_in) & (1'b0 == outStream_V_last_V_1_ack_out)) & ~((1'b0 == outStream_V_last_V_1_vld_in) & (1'b1 == outStream_V_last_V_1_ack_out))))) begin
            outStream_V_last_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_last_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_strb_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_strb_V_1_ack_out) & (1'b1 == outStream_V_strb_V_1_vld_out))) begin
            outStream_V_strb_V_1_sel_rd <= ~outStream_V_strb_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_strb_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_strb_V_1_vld_in) & (1'b1 == outStream_V_strb_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_strb_V_1_state)) | ((1'b0 == outStream_V_strb_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_strb_V_1_state)))) begin
            outStream_V_strb_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_strb_V_1_vld_in) & (1'b0 == outStream_V_strb_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_strb_V_1_state)) | ((1'b0 == outStream_V_strb_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_strb_V_1_state)))) begin
            outStream_V_strb_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_strb_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_strb_V_1_state)) | ((1'b1 == outStream_V_strb_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_strb_V_1_state)) | ((ap_const_lv2_3 == outStream_V_strb_V_1_state) & ~((1'b1 == outStream_V_strb_V_1_vld_in) & (1'b0 == outStream_V_strb_V_1_ack_out)) & ~((1'b0 == outStream_V_strb_V_1_vld_in) & (1'b1 == outStream_V_strb_V_1_ack_out))))) begin
            outStream_V_strb_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_strb_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_user_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == outStream_V_user_V_1_ack_out) & (1'b1 == outStream_V_user_V_1_vld_out))) begin
            outStream_V_user_V_1_sel_rd <= ~outStream_V_user_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_user_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == outStream_V_user_V_1_vld_in) & (1'b1 == outStream_V_user_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_user_V_1_state)) | ((1'b0 == outStream_V_user_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_user_V_1_state)))) begin
            outStream_V_user_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == outStream_V_user_V_1_vld_in) & (1'b0 == outStream_V_user_V_1_ack_out) & (ap_const_lv2_3 == outStream_V_user_V_1_state)) | ((1'b0 == outStream_V_user_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_user_V_1_state)))) begin
            outStream_V_user_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == outStream_V_user_V_1_vld_in) & (ap_const_lv2_2 == outStream_V_user_V_1_state)) | ((1'b1 == outStream_V_user_V_1_ack_out) & (ap_const_lv2_1 == outStream_V_user_V_1_state)) | ((ap_const_lv2_3 == outStream_V_user_V_1_state) & ~((1'b1 == outStream_V_user_V_1_vld_in) & (1'b0 == outStream_V_user_V_1_ack_out)) & ~((1'b0 == outStream_V_user_V_1_vld_in) & (1'b1 == outStream_V_user_V_1_ack_out))))) begin
            outStream_V_user_V_1_state <= ap_const_lv2_3;
        end else begin
            outStream_V_user_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i1_reg_1301 <= ap_const_lv6_0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834))) begin
        i1_reg_1301 <= i_2_reg_4838;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond1_fu_2166_p2))) begin
        i_reg_1290 <= i_1_fu_2172_p2;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_1290 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_0_4_reg_1803 <= result_49_3_load_reg_4848;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_0_4_reg_1803 <= result_0_1_reg_5527;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_10_4_reg_1703 <= result_49_14_load_reg_4898;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_10_4_reg_1703 <= result_10_1_reg_5577;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_11_4_reg_1693 <= result_49_15_load_reg_4903;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_11_4_reg_1693 <= result_11_1_reg_5582;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_12_4_reg_1683 <= result_49_16_load_reg_4908;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_12_4_reg_1683 <= result_12_1_reg_5587;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_13_4_reg_1673 <= result_49_17_load_reg_4913;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_13_4_reg_1673 <= result_13_1_reg_5592;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_14_4_reg_1663 <= result_49_18_load_reg_4918;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_14_4_reg_1663 <= result_14_1_reg_5597;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_15_4_reg_1653 <= result_49_19_load_reg_4923;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_15_4_reg_1653 <= result_15_1_reg_5602;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_16_4_reg_1643 <= result_49_20_load_reg_4928;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_16_4_reg_1643 <= result_16_1_reg_5607;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_17_4_reg_1633 <= result_49_21_load_reg_4933;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_17_4_reg_1633 <= result_17_1_reg_5612;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_18_4_reg_1623 <= result_49_22_load_reg_4938;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_18_4_reg_1623 <= result_18_1_reg_5617;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_19_4_reg_1613 <= result_49_23_load_reg_4943;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_19_4_reg_1613 <= result_19_1_reg_5622;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_1_4_reg_1793 <= result_49_5_load_reg_4853;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_1_4_reg_1793 <= result_1_1_reg_5532;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_20_4_reg_1603 <= result_49_24_load_reg_4948;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_20_4_reg_1603 <= result_20_1_reg_5627;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_21_4_reg_1593 <= result_49_25_load_reg_4953;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_21_4_reg_1593 <= result_21_1_reg_5632;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_22_4_reg_1583 <= result_49_26_load_reg_4958;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_22_4_reg_1583 <= result_22_1_reg_5637;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_23_4_reg_1573 <= result_49_27_load_reg_4963;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_23_4_reg_1573 <= result_23_1_reg_5642;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_24_4_reg_1563 <= result_49_28_load_reg_4968;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_24_4_reg_1563 <= result_24_1_reg_5647;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_25_4_reg_1553 <= result_49_29_load_reg_4973;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_25_4_reg_1553 <= result_25_1_fu_3515_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_26_4_reg_1543 <= result_49_30_load_reg_4978;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_26_4_reg_1543 <= result_26_1_fu_3525_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_27_4_reg_1533 <= result_49_31_load_reg_4983;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_27_4_reg_1533 <= result_27_1_fu_3535_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_28_4_reg_1523 <= result_49_32_load_reg_4988;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_28_4_reg_1523 <= result_28_1_fu_3545_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_29_4_reg_1513 <= result_49_33_load_reg_4993;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_29_4_reg_1513 <= result_29_1_fu_3555_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_2_4_reg_1783 <= result_49_6_load_reg_4858;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_2_4_reg_1783 <= result_2_1_reg_5537;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_30_4_reg_1503 <= result_49_34_load_reg_4998;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_30_4_reg_1503 <= result_30_1_fu_3565_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_31_4_reg_1493 <= result_49_35_load_reg_5003;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_31_4_reg_1493 <= result_31_1_fu_3575_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_32_4_reg_1483 <= result_49_36_load_reg_5008;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_32_4_reg_1483 <= result_32_1_fu_3585_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_33_4_reg_1473 <= result_49_37_load_reg_5013;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_33_4_reg_1473 <= result_33_1_fu_3595_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_34_4_reg_1463 <= result_49_38_load_reg_5018;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_34_4_reg_1463 <= result_34_1_fu_3605_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_35_4_reg_1453 <= result_49_39_load_reg_5023;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_35_4_reg_1453 <= result_35_1_fu_3615_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_36_4_reg_1443 <= result_49_40_load_reg_5028;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_36_4_reg_1443 <= result_36_1_fu_3625_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_37_4_reg_1433 <= result_49_41_load_reg_5033;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_37_4_reg_1433 <= result_37_1_fu_3635_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_38_4_reg_1423 <= result_49_42_load_reg_5038;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_38_4_reg_1423 <= result_38_1_fu_3645_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_39_4_reg_1413 <= result_49_43_load_reg_5043;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_39_4_reg_1413 <= result_39_1_fu_3655_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_3_4_reg_1773 <= result_49_7_load_reg_4863;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_3_4_reg_1773 <= result_3_1_reg_5542;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_40_4_reg_1403 <= result_49_44_load_reg_5048;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_40_4_reg_1403 <= result_40_1_fu_3665_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_41_4_reg_1393 <= result_49_45_load_reg_5053;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_41_4_reg_1393 <= result_41_1_fu_3675_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_42_4_reg_1383 <= result_49_46_load_reg_5058;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_42_4_reg_1383 <= result_42_1_fu_3685_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_43_4_reg_1373 <= result_49_47_load_reg_5063;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_43_4_reg_1373 <= result_43_1_fu_3695_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_44_4_reg_1363 <= result_49_48_load_reg_5068;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_44_4_reg_1363 <= result_44_1_fu_3705_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_45_4_reg_1353 <= result_49_49_load_reg_5073;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_45_4_reg_1353 <= result_45_1_fu_3715_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_46_4_reg_1343 <= result_49_50_load_reg_5078;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_46_4_reg_1343 <= result_46_1_fu_3725_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_47_4_reg_1333 <= result_49_51_load_reg_5083;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_47_4_reg_1333 <= result_47_1_fu_3735_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_48_4_reg_1323 <= result_49_52_load_reg_5088;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_48_4_reg_1323 <= result_48_1_fu_3745_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_6))) begin
        result_49_10_fu_548 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_10_fu_548 <= result_6_load_reg_4256;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_7))) begin
        result_49_11_fu_552 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_11_fu_552 <= result_7_load_reg_4261;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_8))) begin
        result_49_12_fu_556 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_12_fu_556 <= result_8_load_reg_4266;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_9))) begin
        result_49_13_fu_560 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_13_fu_560 <= result_9_load_reg_4271;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_A))) begin
        result_49_14_fu_564 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_14_fu_564 <= result_10_load_reg_4276;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_B))) begin
        result_49_15_fu_568 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_15_fu_568 <= result_11_load_reg_4281;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_C))) begin
        result_49_16_fu_572 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_16_fu_572 <= result_12_load_reg_4286;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_D))) begin
        result_49_17_fu_576 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_17_fu_576 <= result_13_load_reg_4291;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_E))) begin
        result_49_18_fu_580 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_18_fu_580 <= result_14_load_reg_4296;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_F))) begin
        result_49_19_fu_584 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_19_fu_584 <= result_15_load_reg_4301;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_10))) begin
        result_49_20_fu_588 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_20_fu_588 <= result_16_load_reg_4306;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_11))) begin
        result_49_21_fu_592 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_21_fu_592 <= result_17_load_reg_4311;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_12))) begin
        result_49_22_fu_596 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_22_fu_596 <= result_18_load_reg_4316;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_13))) begin
        result_49_23_fu_600 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_23_fu_600 <= result_19_load_reg_4321;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_14))) begin
        result_49_24_fu_604 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_24_fu_604 <= result_20_load_reg_4326;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_15))) begin
        result_49_25_fu_608 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_25_fu_608 <= result_21_load_reg_4331;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_16))) begin
        result_49_26_fu_612 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_26_fu_612 <= result_22_load_reg_4336;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_17))) begin
        result_49_27_fu_616 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_27_fu_616 <= result_23_load_reg_4341;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_18))) begin
        result_49_28_fu_620 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_28_fu_620 <= result_24_load_reg_4346;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_19))) begin
        result_49_29_fu_624 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_29_fu_624 <= result_25_load_reg_4351;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (((1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_31)) | ((1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_32)) | ((1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_33)) | ((1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_34)) | ((1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_35)) | ((1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_36)) | ((1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_37)) | ((1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_38)) | ((1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_39)) | ((1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_3A)) | ((1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_3B)) | ((1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_3C)) | ((1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_3D)) | ((1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_3E)) | ((1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_3F))))) begin
        result_49_2_fu_720 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_2_fu_720 <= result_49_load_reg_4471;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_1A))) begin
        result_49_30_fu_628 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_30_fu_628 <= result_26_load_reg_4356;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_1B))) begin
        result_49_31_fu_632 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_31_fu_632 <= result_27_load_reg_4361;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_1C))) begin
        result_49_32_fu_636 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_32_fu_636 <= result_28_load_reg_4366;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_1D))) begin
        result_49_33_fu_640 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_33_fu_640 <= result_29_load_reg_4371;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_1E))) begin
        result_49_34_fu_644 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_34_fu_644 <= result_30_load_reg_4376;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_1F))) begin
        result_49_35_fu_648 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_35_fu_648 <= result_31_load_reg_4381;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_20))) begin
        result_49_36_fu_652 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_36_fu_652 <= result_32_load_reg_4386;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_21))) begin
        result_49_37_fu_656 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_37_fu_656 <= result_33_load_reg_4391;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_22))) begin
        result_49_38_fu_660 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_38_fu_660 <= result_34_load_reg_4396;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_23))) begin
        result_49_39_fu_664 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_39_fu_664 <= result_35_load_reg_4401;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_0))) begin
        result_49_3_fu_524 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_3_fu_524 <= result_0_load_reg_4226;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_24))) begin
        result_49_40_fu_668 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_40_fu_668 <= result_36_load_reg_4406;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_25))) begin
        result_49_41_fu_672 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_41_fu_672 <= result_37_load_reg_4411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_26))) begin
        result_49_42_fu_676 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_42_fu_676 <= result_38_load_reg_4416;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_27))) begin
        result_49_43_fu_680 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_43_fu_680 <= result_39_load_reg_4421;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_28))) begin
        result_49_44_fu_684 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_44_fu_684 <= result_40_load_reg_4426;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_29))) begin
        result_49_45_fu_688 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_45_fu_688 <= result_41_load_reg_4431;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_2A))) begin
        result_49_46_fu_692 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_46_fu_692 <= result_42_load_reg_4436;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_2B))) begin
        result_49_47_fu_696 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_47_fu_696 <= result_43_load_reg_4441;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_2C))) begin
        result_49_48_fu_700 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_48_fu_700 <= result_44_load_reg_4446;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_2D))) begin
        result_49_49_fu_704 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_49_fu_704 <= result_45_load_reg_4451;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_49_4_reg_1313 <= result_49_2_load_reg_5093;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_49_4_reg_1313 <= result_49_1_fu_3755_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_2E))) begin
        result_49_50_fu_708 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_50_fu_708 <= result_46_load_reg_4456;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_2F))) begin
        result_49_51_fu_712 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_51_fu_712 <= result_47_load_reg_4461;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_30))) begin
        result_49_52_fu_716 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_52_fu_716 <= result_48_load_reg_4466;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_1))) begin
        result_49_5_fu_528 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_5_fu_528 <= result_1_load_reg_4231;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_2))) begin
        result_49_6_fu_532 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_6_fu_532 <= result_2_load_reg_4236;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_3))) begin
        result_49_7_fu_536 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_7_fu_536 <= result_3_load_reg_4241;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_4))) begin
        result_49_8_fu_540 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_8_fu_540 <= result_4_load_reg_4246;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834) & (i1_reg_1301 == ap_const_lv6_5))) begin
        result_49_9_fu_544 <= result_0_3_fu_2901_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        result_49_9_fu_544 <= result_5_load_reg_4251;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_4_4_reg_1763 <= result_49_8_load_reg_4868;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_4_4_reg_1763 <= result_4_1_reg_5547;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_5_4_reg_1753 <= result_49_9_load_reg_4873;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_5_4_reg_1753 <= result_5_1_reg_5552;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_6_4_reg_1743 <= result_49_10_load_reg_4878;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_6_4_reg_1743 <= result_6_1_reg_5557;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_7_4_reg_1733 <= result_49_11_load_reg_4883;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_7_4_reg_1733 <= result_7_1_reg_5562;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_8_4_reg_1723 <= result_49_12_load_reg_4888;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_8_4_reg_1723 <= result_8_1_reg_5567;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        result_9_4_reg_1713 <= result_49_13_load_reg_4893;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098) & (1'b1 == ap_enable_reg_pp2_iter5))) begin
        result_9_4_reg_1713 <= result_9_1_reg_5572;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        row_reg_1813 <= ap_const_lv8_0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)))) begin
        row_reg_1813 <= row_1_reg_5102;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        writeCount_assign_reg_1824 <= ap_const_lv6_0;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        writeCount_assign_reg_1824 <= col_reg_5786;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)))) begin
        ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098 <= exitcond3_reg_5098;
        ap_pipeline_reg_pp2_iter2_exitcond3_reg_5098 <= ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098;
        ap_pipeline_reg_pp2_iter3_exitcond3_reg_5098 <= ap_pipeline_reg_pp2_iter2_exitcond3_reg_5098;
        ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098 <= ap_pipeline_reg_pp2_iter3_exitcond3_reg_5098;
        exitcond3_reg_5098 <= exitcond3_fu_3157_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        ap_pipeline_reg_pp3_iter1_exitcond_reg_5782 <= exitcond_reg_5782;
        exitcond_reg_5782 <= exitcond_fu_3764_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter0))) begin
        col_reg_5786 <= col_fu_3770_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        ctrl_read_reg_4221 <= ctrl;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp1_stage0)) begin
        exitcond2_reg_4834 <= exitcond2_fu_2628_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        i_2_reg_4838 <= i_2_fu_2634_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == inStream_V_data_V_0_load_A)) begin
        inStream_V_data_V_0_payload_A <= inStream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == inStream_V_data_V_0_load_B)) begin
        inStream_V_data_V_0_payload_B <= inStream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == outStream_V_data_V_1_load_A)) begin
        outStream_V_data_V_1_payload_A <= data_fu_3913_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == outStream_V_data_V_1_load_B)) begin
        outStream_V_data_V_1_payload_B <= data_fu_3913_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == outStream_V_last_V_1_load_A)) begin
        outStream_V_last_V_1_payload_A <= tmp_last_V_fu_3776_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == outStream_V_last_V_1_load_B)) begin
        outStream_V_last_V_1_payload_B <= tmp_last_V_fu_3776_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == exitcond3_reg_5098) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        reg_2010 <= weight_12_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter4) & (1'b0 == ap_pipeline_reg_pp2_iter4_exitcond3_reg_5098))) begin
        result_0_1_reg_5527 <= result_0_1_fu_3265_p2;
        result_10_1_reg_5577 <= result_10_1_fu_3365_p2;
        result_11_1_reg_5582 <= result_11_1_fu_3375_p2;
        result_12_1_reg_5587 <= result_12_1_fu_3385_p2;
        result_13_1_reg_5592 <= result_13_1_fu_3395_p2;
        result_14_1_reg_5597 <= result_14_1_fu_3405_p2;
        result_15_1_reg_5602 <= result_15_1_fu_3415_p2;
        result_16_1_reg_5607 <= result_16_1_fu_3425_p2;
        result_17_1_reg_5612 <= result_17_1_fu_3435_p2;
        result_18_1_reg_5617 <= result_18_1_fu_3445_p2;
        result_19_1_reg_5622 <= result_19_1_fu_3455_p2;
        result_1_1_reg_5532 <= result_1_1_fu_3275_p2;
        result_20_1_reg_5627 <= result_20_1_fu_3465_p2;
        result_21_1_reg_5632 <= result_21_1_fu_3475_p2;
        result_22_1_reg_5637 <= result_22_1_fu_3485_p2;
        result_23_1_reg_5642 <= result_23_1_fu_3495_p2;
        result_24_1_reg_5647 <= result_24_1_fu_3505_p2;
        result_2_1_reg_5537 <= result_2_1_fu_3285_p2;
        result_3_1_reg_5542 <= result_3_1_fu_3295_p2;
        result_4_1_reg_5547 <= result_4_1_fu_3305_p2;
        result_5_1_reg_5552 <= result_5_1_fu_3315_p2;
        result_6_1_reg_5557 <= result_6_1_fu_3325_p2;
        result_7_1_reg_5562 <= result_7_1_fu_3335_p2;
        result_8_1_reg_5567 <= result_8_1_fu_3345_p2;
        result_9_1_reg_5572 <= result_9_1_fu_3355_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        result_49_10_load_reg_4878 <= result_49_10_fu_548;
        result_49_11_load_reg_4883 <= result_49_11_fu_552;
        result_49_12_load_reg_4888 <= result_49_12_fu_556;
        result_49_13_load_reg_4893 <= result_49_13_fu_560;
        result_49_14_load_reg_4898 <= result_49_14_fu_564;
        result_49_15_load_reg_4903 <= result_49_15_fu_568;
        result_49_16_load_reg_4908 <= result_49_16_fu_572;
        result_49_17_load_reg_4913 <= result_49_17_fu_576;
        result_49_18_load_reg_4918 <= result_49_18_fu_580;
        result_49_19_load_reg_4923 <= result_49_19_fu_584;
        result_49_20_load_reg_4928 <= result_49_20_fu_588;
        result_49_21_load_reg_4933 <= result_49_21_fu_592;
        result_49_22_load_reg_4938 <= result_49_22_fu_596;
        result_49_23_load_reg_4943 <= result_49_23_fu_600;
        result_49_24_load_reg_4948 <= result_49_24_fu_604;
        result_49_25_load_reg_4953 <= result_49_25_fu_608;
        result_49_26_load_reg_4958 <= result_49_26_fu_612;
        result_49_27_load_reg_4963 <= result_49_27_fu_616;
        result_49_28_load_reg_4968 <= result_49_28_fu_620;
        result_49_29_load_reg_4973 <= result_49_29_fu_624;
        result_49_2_load_reg_5093 <= result_49_2_fu_720;
        result_49_30_load_reg_4978 <= result_49_30_fu_628;
        result_49_31_load_reg_4983 <= result_49_31_fu_632;
        result_49_32_load_reg_4988 <= result_49_32_fu_636;
        result_49_33_load_reg_4993 <= result_49_33_fu_640;
        result_49_34_load_reg_4998 <= result_49_34_fu_644;
        result_49_35_load_reg_5003 <= result_49_35_fu_648;
        result_49_36_load_reg_5008 <= result_49_36_fu_652;
        result_49_37_load_reg_5013 <= result_49_37_fu_656;
        result_49_38_load_reg_5018 <= result_49_38_fu_660;
        result_49_39_load_reg_5023 <= result_49_39_fu_664;
        result_49_3_load_reg_4848 <= result_49_3_fu_524;
        result_49_40_load_reg_5028 <= result_49_40_fu_668;
        result_49_41_load_reg_5033 <= result_49_41_fu_672;
        result_49_42_load_reg_5038 <= result_49_42_fu_676;
        result_49_43_load_reg_5043 <= result_49_43_fu_680;
        result_49_44_load_reg_5048 <= result_49_44_fu_684;
        result_49_45_load_reg_5053 <= result_49_45_fu_688;
        result_49_46_load_reg_5058 <= result_49_46_fu_692;
        result_49_47_load_reg_5063 <= result_49_47_fu_696;
        result_49_48_load_reg_5068 <= result_49_48_fu_700;
        result_49_49_load_reg_5073 <= result_49_49_fu_704;
        result_49_50_load_reg_5078 <= result_49_50_fu_708;
        result_49_51_load_reg_5083 <= result_49_51_fu_712;
        result_49_52_load_reg_5088 <= result_49_52_fu_716;
        result_49_5_load_reg_4853 <= result_49_5_fu_528;
        result_49_6_load_reg_4858 <= result_49_6_fu_532;
        result_49_7_load_reg_4863 <= result_49_7_fu_536;
        result_49_8_load_reg_4868 <= result_49_8_fu_540;
        result_49_9_load_reg_4873 <= result_49_9_fu_544;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)))) begin
        row_1_reg_5102 <= row_1_fu_3163_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_11_reg_5777 <= tmp_11_fu_3761_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b0 == exitcond3_fu_3157_p2))) begin
        tmp_5_reg_5107[8 : 1] <= tmp_5_fu_3169_p3[8 : 1];
        tmp_8_reg_5112[8 : 1] <= tmp_8_fu_3177_p1[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)))) begin
        tmp_data_V_1_reg_5438 <= inStream_V_data_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond3_reg_5098) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        weight_0_load_reg_5318 <= weight_0_q0;
        weight_10_load_reg_5368 <= weight_10_q0;
        weight_11_load_reg_5373 <= weight_11_q0;
        weight_1_load_reg_5323 <= weight_1_q0;
        weight_2_load_reg_5328 <= weight_2_q0;
        weight_3_load_reg_5333 <= weight_3_q0;
        weight_4_load_reg_5338 <= weight_4_q0;
        weight_5_load_reg_5343 <= weight_5_q0;
        weight_6_load_reg_5348 <= weight_6_q0;
        weight_7_load_reg_5353 <= weight_7_q0;
        weight_8_load_reg_5358 <= weight_8_q0;
        weight_9_load_reg_5363 <= weight_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)))) begin
        weight_13_load_1_reg_5467 <= weight_13_q0;
        weight_14_load_1_reg_5472 <= weight_14_q0;
        weight_15_load_1_reg_5477 <= weight_15_q0;
        weight_16_load_1_reg_5482 <= weight_16_q0;
        weight_17_load_1_reg_5487 <= weight_17_q0;
        weight_18_load_1_reg_5492 <= weight_18_q0;
        weight_19_load_1_reg_5497 <= weight_19_q0;
        weight_20_load_1_reg_5502 <= weight_20_q0;
        weight_21_load_1_reg_5507 <= weight_21_q0;
        weight_22_load_1_reg_5512 <= weight_22_q0;
        weight_23_load_1_reg_5517 <= weight_23_q0;
        weight_24_load_1_reg_5522 <= weight_24_q0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) & ~(ap_condition_3193 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) & ~(ap_condition_3193 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        bias_ce0 = 1'b1;
    end else begin
        bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1836_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1836_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1836_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1836_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1836_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1836_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1836_b = reg_2010;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1836_b = weight_0_load_reg_5318;
        end else begin
            grp_fixed_point_mul_fu_1836_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1836_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1842_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1842_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1842_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1842_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1842_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1842_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1842_b = weight_13_q0;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1842_b = weight_0_q0;
        end else begin
            grp_fixed_point_mul_fu_1842_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1842_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1849_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1849_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1849_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1849_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1849_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1849_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1849_b = weight_13_load_1_reg_5467;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1849_b = weight_1_load_reg_5323;
        end else begin
            grp_fixed_point_mul_fu_1849_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1849_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1855_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1855_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1855_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1855_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1855_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1855_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1855_b = weight_14_q0;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1855_b = weight_1_q0;
        end else begin
            grp_fixed_point_mul_fu_1855_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1855_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1862_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1862_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1862_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1862_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1862_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1862_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1862_b = weight_14_load_1_reg_5472;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1862_b = weight_2_load_reg_5328;
        end else begin
            grp_fixed_point_mul_fu_1862_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1862_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1868_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1868_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1868_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1868_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1868_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1868_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1868_b = weight_15_q0;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1868_b = weight_2_q0;
        end else begin
            grp_fixed_point_mul_fu_1868_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1868_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1875_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1875_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1875_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1875_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1875_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1875_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1875_b = weight_15_load_1_reg_5477;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1875_b = weight_3_load_reg_5333;
        end else begin
            grp_fixed_point_mul_fu_1875_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1875_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1881_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1881_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1881_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1881_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1881_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1881_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1881_b = weight_16_q0;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1881_b = weight_3_q0;
        end else begin
            grp_fixed_point_mul_fu_1881_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1881_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1888_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1888_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1888_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1888_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1888_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1888_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1888_b = weight_16_load_1_reg_5482;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1888_b = weight_4_load_reg_5338;
        end else begin
            grp_fixed_point_mul_fu_1888_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1888_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1894_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1894_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1894_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1894_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1894_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1894_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1894_b = weight_17_q0;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1894_b = weight_4_q0;
        end else begin
            grp_fixed_point_mul_fu_1894_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1894_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1901_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1901_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1901_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1901_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1901_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1901_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1901_b = weight_17_load_1_reg_5487;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1901_b = weight_5_load_reg_5343;
        end else begin
            grp_fixed_point_mul_fu_1901_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1901_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1907_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1907_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1907_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1907_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1907_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1907_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1907_b = weight_18_q0;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1907_b = weight_5_q0;
        end else begin
            grp_fixed_point_mul_fu_1907_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1907_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1914_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1914_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1914_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1914_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1914_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1914_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1914_b = weight_18_load_1_reg_5492;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1914_b = weight_6_load_reg_5348;
        end else begin
            grp_fixed_point_mul_fu_1914_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1914_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1920_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1920_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1920_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1920_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1920_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1920_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1920_b = weight_19_q0;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1920_b = weight_6_q0;
        end else begin
            grp_fixed_point_mul_fu_1920_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1920_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1927_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1927_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1927_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1927_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1927_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1927_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1927_b = weight_19_load_1_reg_5497;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1927_b = weight_7_load_reg_5353;
        end else begin
            grp_fixed_point_mul_fu_1927_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1927_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1933_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1933_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1933_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1933_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1933_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1933_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1933_b = weight_20_q0;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1933_b = weight_7_q0;
        end else begin
            grp_fixed_point_mul_fu_1933_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1933_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1940_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1940_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1940_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1940_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1940_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1940_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1940_b = weight_20_load_1_reg_5502;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1940_b = weight_8_load_reg_5358;
        end else begin
            grp_fixed_point_mul_fu_1940_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1940_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1946_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1946_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1946_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1946_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1946_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1946_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1946_b = weight_21_q0;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1946_b = weight_8_q0;
        end else begin
            grp_fixed_point_mul_fu_1946_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1946_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1953_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1953_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1953_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1953_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1953_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1953_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1953_b = weight_21_load_1_reg_5507;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1953_b = weight_9_load_reg_5363;
        end else begin
            grp_fixed_point_mul_fu_1953_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1953_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1959_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1959_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1959_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1959_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1959_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1959_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1959_b = weight_22_q0;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1959_b = weight_9_q0;
        end else begin
            grp_fixed_point_mul_fu_1959_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1959_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1966_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1966_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1966_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1966_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1966_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1966_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1966_b = weight_22_load_1_reg_5512;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1966_b = weight_10_load_reg_5368;
        end else begin
            grp_fixed_point_mul_fu_1966_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1966_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1972_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1972_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1972_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1972_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1972_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1972_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1972_b = weight_23_q0;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1972_b = weight_10_q0;
        end else begin
            grp_fixed_point_mul_fu_1972_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1972_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1979_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1979_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1979_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1979_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1979_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1979_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1979_b = weight_23_load_1_reg_5517;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1979_b = weight_11_load_reg_5373;
        end else begin
            grp_fixed_point_mul_fu_1979_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1979_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1985_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1985_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1985_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1985_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1985_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1985_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1985_b = weight_24_q0;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1985_b = weight_11_q0;
        end else begin
            grp_fixed_point_mul_fu_1985_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1985_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1992_a = tmp_data_V_1_reg_5438;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1992_a = inStream_V_data_V_0_data_out;
        end else begin
            grp_fixed_point_mul_fu_1992_a = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1992_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        grp_fixed_point_mul_fu_1992_ap_ce = 1'b1;
    end else begin
        grp_fixed_point_mul_fu_1992_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1992_b = weight_24_load_1_reg_5522;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_reg_5098))) begin
            grp_fixed_point_mul_fu_1992_b = reg_2010;
        end else begin
            grp_fixed_point_mul_fu_1992_b = 'bx;
        end
    end else begin
        grp_fixed_point_mul_fu_1992_b = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond2_reg_4834))) begin
        i1_phi_fu_1305_p4 = i_2_reg_4838;
    end else begin
        i1_phi_fu_1305_p4 = i1_reg_1301;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098))) begin
        inStream_TDATA_blk_n = inStream_V_data_V_0_state[1'b0];
    end else begin
        inStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)))) begin
        inStream_V_data_V_0_ack_out = 1'b1;
    end else begin
        inStream_V_data_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == inStream_V_data_V_0_sel)) begin
        inStream_V_data_V_0_data_out = inStream_V_data_V_0_payload_B;
    end else begin
        inStream_V_data_V_0_data_out = inStream_V_data_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)))) begin
        inStream_V_dest_V_0_ack_out = 1'b1;
    end else begin
        inStream_V_dest_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782)) | ((1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_reg_5782)))) begin
        outStream_TDATA_blk_n = outStream_V_data_V_1_state[1'b1];
    end else begin
        outStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == outStream_V_data_V_1_sel)) begin
        outStream_V_data_V_1_data_out = outStream_V_data_V_1_payload_B;
    end else begin
        outStream_V_data_V_1_data_out = outStream_V_data_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_data_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_dest_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_dest_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_id_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_id_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_keep_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_keep_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == outStream_V_last_V_1_sel)) begin
        outStream_V_last_V_1_data_out = outStream_V_last_V_1_payload_B;
    end else begin
        outStream_V_last_V_1_data_out = outStream_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_last_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_strb_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_strb_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in))))) begin
        outStream_V_user_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_user_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098))) begin
        row_phi_fu_1817_p4 = row_1_reg_5102;
    end else begin
        row_phi_fu_1817_p4 = row_reg_1813;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            weight_0_address0 = tmp_s_fu_3199_p3;
        end else if ((1'b1 == ap_CS_fsm_pp2_stage0)) begin
            weight_0_address0 = tmp_8_fu_3177_p1;
        end else begin
            weight_0_address0 = 'bx;
        end
    end else begin
        weight_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_0_ce0 = 1'b1;
    end else begin
        weight_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            weight_10_address0 = tmp_s_fu_3199_p3;
        end else if ((1'b1 == ap_CS_fsm_pp2_stage0)) begin
            weight_10_address0 = tmp_8_fu_3177_p1;
        end else begin
            weight_10_address0 = 'bx;
        end
    end else begin
        weight_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_10_ce0 = 1'b1;
    end else begin
        weight_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            weight_11_address0 = tmp_s_fu_3199_p3;
        end else if ((1'b1 == ap_CS_fsm_pp2_stage0)) begin
            weight_11_address0 = tmp_8_fu_3177_p1;
        end else begin
            weight_11_address0 = 'bx;
        end
    end else begin
        weight_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_11_ce0 = 1'b1;
    end else begin
        weight_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            weight_12_address0 = tmp_s_fu_3199_p3;
        end else if ((1'b1 == ap_CS_fsm_pp2_stage0)) begin
            weight_12_address0 = tmp_8_fu_3177_p1;
        end else begin
            weight_12_address0 = 'bx;
        end
    end else begin
        weight_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_12_ce0 = 1'b1;
    end else begin
        weight_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        weight_13_address0 = tmp_8_reg_5112;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        weight_13_address0 = tmp_s_fu_3199_p3;
    end else begin
        weight_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_13_ce0 = 1'b1;
    end else begin
        weight_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        weight_14_address0 = tmp_8_reg_5112;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        weight_14_address0 = tmp_s_fu_3199_p3;
    end else begin
        weight_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_14_ce0 = 1'b1;
    end else begin
        weight_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        weight_15_address0 = tmp_8_reg_5112;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        weight_15_address0 = tmp_s_fu_3199_p3;
    end else begin
        weight_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_15_ce0 = 1'b1;
    end else begin
        weight_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        weight_16_address0 = tmp_8_reg_5112;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        weight_16_address0 = tmp_s_fu_3199_p3;
    end else begin
        weight_16_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_16_ce0 = 1'b1;
    end else begin
        weight_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        weight_17_address0 = tmp_8_reg_5112;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        weight_17_address0 = tmp_s_fu_3199_p3;
    end else begin
        weight_17_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_17_ce0 = 1'b1;
    end else begin
        weight_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        weight_18_address0 = tmp_8_reg_5112;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        weight_18_address0 = tmp_s_fu_3199_p3;
    end else begin
        weight_18_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_18_ce0 = 1'b1;
    end else begin
        weight_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        weight_19_address0 = tmp_8_reg_5112;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        weight_19_address0 = tmp_s_fu_3199_p3;
    end else begin
        weight_19_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_19_ce0 = 1'b1;
    end else begin
        weight_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            weight_1_address0 = tmp_s_fu_3199_p3;
        end else if ((1'b1 == ap_CS_fsm_pp2_stage0)) begin
            weight_1_address0 = tmp_8_fu_3177_p1;
        end else begin
            weight_1_address0 = 'bx;
        end
    end else begin
        weight_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_1_ce0 = 1'b1;
    end else begin
        weight_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        weight_20_address0 = tmp_8_reg_5112;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        weight_20_address0 = tmp_s_fu_3199_p3;
    end else begin
        weight_20_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_20_ce0 = 1'b1;
    end else begin
        weight_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        weight_21_address0 = tmp_8_reg_5112;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        weight_21_address0 = tmp_s_fu_3199_p3;
    end else begin
        weight_21_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_21_ce0 = 1'b1;
    end else begin
        weight_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        weight_22_address0 = tmp_8_reg_5112;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        weight_22_address0 = tmp_s_fu_3199_p3;
    end else begin
        weight_22_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_22_ce0 = 1'b1;
    end else begin
        weight_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        weight_23_address0 = tmp_8_reg_5112;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        weight_23_address0 = tmp_s_fu_3199_p3;
    end else begin
        weight_23_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_23_ce0 = 1'b1;
    end else begin
        weight_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        weight_24_address0 = tmp_8_reg_5112;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        weight_24_address0 = tmp_s_fu_3199_p3;
    end else begin
        weight_24_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_24_ce0 = 1'b1;
    end else begin
        weight_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            weight_2_address0 = tmp_s_fu_3199_p3;
        end else if ((1'b1 == ap_CS_fsm_pp2_stage0)) begin
            weight_2_address0 = tmp_8_fu_3177_p1;
        end else begin
            weight_2_address0 = 'bx;
        end
    end else begin
        weight_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_2_ce0 = 1'b1;
    end else begin
        weight_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            weight_3_address0 = tmp_s_fu_3199_p3;
        end else if ((1'b1 == ap_CS_fsm_pp2_stage0)) begin
            weight_3_address0 = tmp_8_fu_3177_p1;
        end else begin
            weight_3_address0 = 'bx;
        end
    end else begin
        weight_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_3_ce0 = 1'b1;
    end else begin
        weight_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            weight_4_address0 = tmp_s_fu_3199_p3;
        end else if ((1'b1 == ap_CS_fsm_pp2_stage0)) begin
            weight_4_address0 = tmp_8_fu_3177_p1;
        end else begin
            weight_4_address0 = 'bx;
        end
    end else begin
        weight_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_4_ce0 = 1'b1;
    end else begin
        weight_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            weight_5_address0 = tmp_s_fu_3199_p3;
        end else if ((1'b1 == ap_CS_fsm_pp2_stage0)) begin
            weight_5_address0 = tmp_8_fu_3177_p1;
        end else begin
            weight_5_address0 = 'bx;
        end
    end else begin
        weight_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_5_ce0 = 1'b1;
    end else begin
        weight_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            weight_6_address0 = tmp_s_fu_3199_p3;
        end else if ((1'b1 == ap_CS_fsm_pp2_stage0)) begin
            weight_6_address0 = tmp_8_fu_3177_p1;
        end else begin
            weight_6_address0 = 'bx;
        end
    end else begin
        weight_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_6_ce0 = 1'b1;
    end else begin
        weight_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            weight_7_address0 = tmp_s_fu_3199_p3;
        end else if ((1'b1 == ap_CS_fsm_pp2_stage0)) begin
            weight_7_address0 = tmp_8_fu_3177_p1;
        end else begin
            weight_7_address0 = 'bx;
        end
    end else begin
        weight_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_7_ce0 = 1'b1;
    end else begin
        weight_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            weight_8_address0 = tmp_s_fu_3199_p3;
        end else if ((1'b1 == ap_CS_fsm_pp2_stage0)) begin
            weight_8_address0 = tmp_8_fu_3177_p1;
        end else begin
            weight_8_address0 = 'bx;
        end
    end else begin
        weight_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_8_ce0 = 1'b1;
    end else begin
        weight_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp2_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            weight_9_address0 = tmp_s_fu_3199_p3;
        end else if ((1'b1 == ap_CS_fsm_pp2_stage0)) begin
            weight_9_address0 = tmp_8_fu_3177_p1;
        end else begin
            weight_9_address0 = 'bx;
        end
    end else begin
        weight_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0))))) begin
        weight_9_ce0 = 1'b1;
    end else begin
        weight_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782))) begin
        writeCount_assign_phi_fu_1828_p4 = col_reg_5786;
    end else begin
        writeCount_assign_phi_fu_1828_p4 = writeCount_assign_reg_1824;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((1'b0 == exitcond1_fu_2166_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~(1'b1 == ap_enable_reg_pp1_iter0))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & ~((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp2_iter5) & ~(1'b1 == ap_enable_reg_pp2_iter4)) & ~((1'b1 == ap_enable_reg_pp2_iter0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & ~(1'b0 == exitcond3_fu_3157_p2) & ~(1'b1 == ap_enable_reg_pp2_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if ((((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp2_iter5) & ~(1'b1 == ap_enable_reg_pp2_iter4)) | ((1'b1 == ap_enable_reg_pp2_iter0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_5098) & (inStream_V_data_V_0_vld_out == 1'b0)) & ~(1'b0 == exitcond3_fu_3157_p2) & ~(1'b1 == ap_enable_reg_pp2_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp3_iter2) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in))) & ~(1'b1 == ap_enable_reg_pp3_iter1)) & ~(~(((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter0) & ~(1'b0 == exitcond_fu_3764_p2) & ~(1'b1 == ap_enable_reg_pp3_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((1'b1 == ap_enable_reg_pp3_iter2) & ~(((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in))) & ~(1'b1 == ap_enable_reg_pp3_iter1)) | (~(((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond_reg_5782) & (1'b0 == outStream_V_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp3_iter0) & ~(1'b0 == exitcond_fu_3764_p2) & ~(1'b1 == ap_enable_reg_pp3_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state22 : begin
            if (~(ap_condition_3193 == 1'b1)) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state18 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state22 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state6 = ap_CS_fsm[ap_const_lv32_4];

always @ (*) begin
    ap_condition_3193 = ((outStream_V_data_V_1_ack_in == 1'b0) | (outStream_V_keep_V_1_ack_in == 1'b0) | (outStream_V_strb_V_1_ack_in == 1'b0) | (outStream_V_user_V_1_ack_in == 1'b0) | (outStream_V_last_V_1_ack_in == 1'b0) | (outStream_V_id_V_1_ack_in == 1'b0) | (outStream_V_dest_V_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bias_address0 = i1_cast_fu_2640_p1;

assign col_fu_3770_p2 = (writeCount_assign_phi_fu_1828_p4 + ap_const_lv6_1);

assign data_2_cast_fu_3909_p1 = data_2_fu_3901_p3;

assign data_2_fu_3901_p3 = ((tmp_13_fu_3893_p3[0:0] === 1'b1) ? ap_const_lv31_0 : tmp_12_fu_3889_p1);

assign data_fu_3913_p3 = ((tmp_11_reg_5777[0:0] === 1'b1) ? data_2_cast_fu_3909_p1 : data_1_fu_3783_p52);

assign exitcond1_fu_2166_p2 = ((i_reg_1290 == ap_const_lv6_32) ? 1'b1 : 1'b0);

assign exitcond2_fu_2628_p2 = ((i1_phi_fu_1305_p4 == ap_const_lv6_32) ? 1'b1 : 1'b0);

assign exitcond3_fu_3157_p2 = ((row_phi_fu_1817_p4 == ap_const_lv8_90) ? 1'b1 : 1'b0);

assign exitcond_fu_3764_p2 = ((writeCount_assign_phi_fu_1828_p4 == ap_const_lv6_32) ? 1'b1 : 1'b0);

assign i1_cast_fu_2640_p1 = i1_phi_fu_1305_p4;

assign i_1_fu_2172_p2 = (i_reg_1290 + ap_const_lv6_1);

assign i_2_fu_2634_p2 = (i1_phi_fu_1305_p4 + ap_const_lv6_1);

assign inStream_TREADY = inStream_V_dest_V_0_state[1'b1];

assign inStream_V_data_V_0_ack_in = inStream_V_data_V_0_state[1'b1];

assign inStream_V_data_V_0_load_A = (inStream_V_data_V_0_state_cmp_full & ~inStream_V_data_V_0_sel_wr);

assign inStream_V_data_V_0_load_B = (inStream_V_data_V_0_sel_wr & inStream_V_data_V_0_state_cmp_full);

assign inStream_V_data_V_0_sel = inStream_V_data_V_0_sel_rd;

assign inStream_V_data_V_0_state_cmp_full = ((inStream_V_data_V_0_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign inStream_V_data_V_0_vld_in = inStream_TVALID;

assign inStream_V_data_V_0_vld_out = inStream_V_data_V_0_state[1'b0];

assign inStream_V_dest_V_0_vld_in = inStream_TVALID;

assign outStream_TDATA = outStream_V_data_V_1_data_out;

assign outStream_TDEST = outStream_V_dest_V_1_data_out;

assign outStream_TID = outStream_V_id_V_1_data_out;

assign outStream_TKEEP = outStream_V_keep_V_1_data_out;

assign outStream_TLAST = outStream_V_last_V_1_data_out;

assign outStream_TSTRB = outStream_V_strb_V_1_data_out;

assign outStream_TUSER = outStream_V_user_V_1_data_out;

assign outStream_TVALID = outStream_V_dest_V_1_state[1'b0];

assign outStream_V_data_V_1_ack_in = outStream_V_data_V_1_state[1'b1];

assign outStream_V_data_V_1_ack_out = outStream_TREADY;

assign outStream_V_data_V_1_load_A = (outStream_V_data_V_1_state_cmp_full & ~outStream_V_data_V_1_sel_wr);

assign outStream_V_data_V_1_load_B = (outStream_V_data_V_1_sel_wr & outStream_V_data_V_1_state_cmp_full);

assign outStream_V_data_V_1_sel = outStream_V_data_V_1_sel_rd;

assign outStream_V_data_V_1_state_cmp_full = ((outStream_V_data_V_1_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign outStream_V_data_V_1_vld_out = outStream_V_data_V_1_state[1'b0];

assign outStream_V_dest_V_1_ack_in = outStream_V_dest_V_1_state[1'b1];

assign outStream_V_dest_V_1_ack_out = outStream_TREADY;

assign outStream_V_dest_V_1_data_out = ap_const_lv6_0;

assign outStream_V_dest_V_1_sel = outStream_V_dest_V_1_sel_rd;

assign outStream_V_dest_V_1_vld_out = outStream_V_dest_V_1_state[1'b0];

assign outStream_V_id_V_1_ack_in = outStream_V_id_V_1_state[1'b1];

assign outStream_V_id_V_1_ack_out = outStream_TREADY;

assign outStream_V_id_V_1_data_out = ap_const_lv5_0;

assign outStream_V_id_V_1_sel = outStream_V_id_V_1_sel_rd;

assign outStream_V_id_V_1_vld_out = outStream_V_id_V_1_state[1'b0];

assign outStream_V_keep_V_1_ack_in = outStream_V_keep_V_1_state[1'b1];

assign outStream_V_keep_V_1_ack_out = outStream_TREADY;

assign outStream_V_keep_V_1_data_out = ap_const_lv4_F;

assign outStream_V_keep_V_1_sel = outStream_V_keep_V_1_sel_rd;

assign outStream_V_keep_V_1_vld_out = outStream_V_keep_V_1_state[1'b0];

assign outStream_V_last_V_1_ack_in = outStream_V_last_V_1_state[1'b1];

assign outStream_V_last_V_1_ack_out = outStream_TREADY;

assign outStream_V_last_V_1_load_A = (outStream_V_last_V_1_state_cmp_full & ~outStream_V_last_V_1_sel_wr);

assign outStream_V_last_V_1_load_B = (outStream_V_last_V_1_sel_wr & outStream_V_last_V_1_state_cmp_full);

assign outStream_V_last_V_1_sel = outStream_V_last_V_1_sel_rd;

assign outStream_V_last_V_1_state_cmp_full = ((outStream_V_last_V_1_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign outStream_V_last_V_1_vld_out = outStream_V_last_V_1_state[1'b0];

assign outStream_V_strb_V_1_ack_in = outStream_V_strb_V_1_state[1'b1];

assign outStream_V_strb_V_1_ack_out = outStream_TREADY;

assign outStream_V_strb_V_1_data_out = ap_const_lv4_0;

assign outStream_V_strb_V_1_sel = outStream_V_strb_V_1_sel_rd;

assign outStream_V_strb_V_1_vld_out = outStream_V_strb_V_1_state[1'b0];

assign outStream_V_user_V_1_ack_in = outStream_V_user_V_1_state[1'b1];

assign outStream_V_user_V_1_ack_out = outStream_TREADY;

assign outStream_V_user_V_1_data_out = ap_const_lv2_0;

assign outStream_V_user_V_1_sel = outStream_V_user_V_1_sel_rd;

assign outStream_V_user_V_1_vld_out = outStream_V_user_V_1_state[1'b0];

assign result_0_1_fu_3265_p2 = ($signed(result_0_4_reg_1803) + $signed(result_0_1_trunc_ex_fu_3261_p1));

assign result_0_1_trunc_ex_fu_3261_p1 = $signed(grp_fixed_point_mul_fu_1836_ap_return);

assign result_0_3_fu_2901_p2 = (bias_q0 + tmp_1_fu_2795_p52);

assign result_0_load_reg_4226 = ap_const_lv32_0;

assign result_10_1_fu_3365_p2 = ($signed(result_10_4_reg_1703) + $signed(result_10_1_trunc_e_fu_3361_p1));

assign result_10_1_trunc_e_fu_3361_p1 = $signed(grp_fixed_point_mul_fu_1901_ap_return);

assign result_10_load_reg_4276 = ap_const_lv32_0;

assign result_11_1_fu_3375_p2 = ($signed(result_11_4_reg_1693) + $signed(result_11_1_trunc_e_fu_3371_p1));

assign result_11_1_trunc_e_fu_3371_p1 = $signed(grp_fixed_point_mul_fu_1907_ap_return);

assign result_11_load_reg_4281 = ap_const_lv32_0;

assign result_12_1_fu_3385_p2 = ($signed(result_12_4_reg_1683) + $signed(result_12_1_trunc_e_fu_3381_p1));

assign result_12_1_trunc_e_fu_3381_p1 = $signed(grp_fixed_point_mul_fu_1914_ap_return);

assign result_12_load_reg_4286 = ap_const_lv32_0;

assign result_13_1_fu_3395_p2 = ($signed(result_13_4_reg_1673) + $signed(result_13_1_trunc_e_fu_3391_p1));

assign result_13_1_trunc_e_fu_3391_p1 = $signed(grp_fixed_point_mul_fu_1920_ap_return);

assign result_13_load_reg_4291 = ap_const_lv32_0;

assign result_14_1_fu_3405_p2 = ($signed(result_14_4_reg_1663) + $signed(result_14_1_trunc_e_fu_3401_p1));

assign result_14_1_trunc_e_fu_3401_p1 = $signed(grp_fixed_point_mul_fu_1927_ap_return);

assign result_14_load_reg_4296 = ap_const_lv32_0;

assign result_15_1_fu_3415_p2 = ($signed(result_15_4_reg_1653) + $signed(result_15_1_trunc_e_fu_3411_p1));

assign result_15_1_trunc_e_fu_3411_p1 = $signed(grp_fixed_point_mul_fu_1933_ap_return);

assign result_15_load_reg_4301 = ap_const_lv32_0;

assign result_16_1_fu_3425_p2 = ($signed(result_16_4_reg_1643) + $signed(result_16_1_trunc_e_fu_3421_p1));

assign result_16_1_trunc_e_fu_3421_p1 = $signed(grp_fixed_point_mul_fu_1940_ap_return);

assign result_16_load_reg_4306 = ap_const_lv32_0;

assign result_17_1_fu_3435_p2 = ($signed(result_17_4_reg_1633) + $signed(result_17_1_trunc_e_fu_3431_p1));

assign result_17_1_trunc_e_fu_3431_p1 = $signed(grp_fixed_point_mul_fu_1946_ap_return);

assign result_17_load_reg_4311 = ap_const_lv32_0;

assign result_18_1_fu_3445_p2 = ($signed(result_18_4_reg_1623) + $signed(result_18_1_trunc_e_fu_3441_p1));

assign result_18_1_trunc_e_fu_3441_p1 = $signed(grp_fixed_point_mul_fu_1953_ap_return);

assign result_18_load_reg_4316 = ap_const_lv32_0;

assign result_19_1_fu_3455_p2 = ($signed(result_19_4_reg_1613) + $signed(result_19_1_trunc_e_fu_3451_p1));

assign result_19_1_trunc_e_fu_3451_p1 = $signed(grp_fixed_point_mul_fu_1959_ap_return);

assign result_19_load_reg_4321 = ap_const_lv32_0;

assign result_1_1_fu_3275_p2 = ($signed(result_1_4_reg_1793) + $signed(result_1_1_trunc_ex_fu_3271_p1));

assign result_1_1_trunc_ex_fu_3271_p1 = $signed(grp_fixed_point_mul_fu_1842_ap_return);

assign result_1_load_reg_4231 = ap_const_lv32_0;

assign result_20_1_fu_3465_p2 = ($signed(result_20_4_reg_1603) + $signed(result_20_1_trunc_e_fu_3461_p1));

assign result_20_1_trunc_e_fu_3461_p1 = $signed(grp_fixed_point_mul_fu_1966_ap_return);

assign result_20_load_reg_4326 = ap_const_lv32_0;

assign result_21_1_fu_3475_p2 = ($signed(result_21_4_reg_1593) + $signed(result_21_1_trunc_e_fu_3471_p1));

assign result_21_1_trunc_e_fu_3471_p1 = $signed(grp_fixed_point_mul_fu_1972_ap_return);

assign result_21_load_reg_4331 = ap_const_lv32_0;

assign result_22_1_fu_3485_p2 = ($signed(result_22_4_reg_1583) + $signed(result_22_1_trunc_e_fu_3481_p1));

assign result_22_1_trunc_e_fu_3481_p1 = $signed(grp_fixed_point_mul_fu_1979_ap_return);

assign result_22_load_reg_4336 = ap_const_lv32_0;

assign result_23_1_fu_3495_p2 = ($signed(result_23_4_reg_1573) + $signed(result_23_1_trunc_e_fu_3491_p1));

assign result_23_1_trunc_e_fu_3491_p1 = $signed(grp_fixed_point_mul_fu_1985_ap_return);

assign result_23_load_reg_4341 = ap_const_lv32_0;

assign result_24_1_fu_3505_p2 = ($signed(result_24_4_reg_1563) + $signed(result_24_1_trunc_e_fu_3501_p1));

assign result_24_1_trunc_e_fu_3501_p1 = $signed(grp_fixed_point_mul_fu_1992_ap_return);

assign result_24_load_reg_4346 = ap_const_lv32_0;

assign result_25_1_fu_3515_p2 = ($signed(result_25_4_reg_1553) + $signed(result_25_1_trunc_e_fu_3511_p1));

assign result_25_1_trunc_e_fu_3511_p1 = $signed(grp_fixed_point_mul_fu_1836_ap_return);

assign result_25_load_reg_4351 = ap_const_lv32_0;

assign result_26_1_fu_3525_p2 = ($signed(result_26_4_reg_1543) + $signed(result_26_1_trunc_e_fu_3521_p1));

assign result_26_1_trunc_e_fu_3521_p1 = $signed(grp_fixed_point_mul_fu_1842_ap_return);

assign result_26_load_reg_4356 = ap_const_lv32_0;

assign result_27_1_fu_3535_p2 = ($signed(result_27_4_reg_1533) + $signed(result_27_1_trunc_e_fu_3531_p1));

assign result_27_1_trunc_e_fu_3531_p1 = $signed(grp_fixed_point_mul_fu_1849_ap_return);

assign result_27_load_reg_4361 = ap_const_lv32_0;

assign result_28_1_fu_3545_p2 = ($signed(result_28_4_reg_1523) + $signed(result_28_1_trunc_e_fu_3541_p1));

assign result_28_1_trunc_e_fu_3541_p1 = $signed(grp_fixed_point_mul_fu_1855_ap_return);

assign result_28_load_reg_4366 = ap_const_lv32_0;

assign result_29_1_fu_3555_p2 = ($signed(result_29_4_reg_1513) + $signed(result_29_1_trunc_e_fu_3551_p1));

assign result_29_1_trunc_e_fu_3551_p1 = $signed(grp_fixed_point_mul_fu_1862_ap_return);

assign result_29_load_reg_4371 = ap_const_lv32_0;

assign result_2_1_fu_3285_p2 = ($signed(result_2_4_reg_1783) + $signed(result_2_1_trunc_ex_fu_3281_p1));

assign result_2_1_trunc_ex_fu_3281_p1 = $signed(grp_fixed_point_mul_fu_1849_ap_return);

assign result_2_load_reg_4236 = ap_const_lv32_0;

assign result_30_1_fu_3565_p2 = ($signed(result_30_4_reg_1503) + $signed(result_30_1_trunc_e_fu_3561_p1));

assign result_30_1_trunc_e_fu_3561_p1 = $signed(grp_fixed_point_mul_fu_1868_ap_return);

assign result_30_load_reg_4376 = ap_const_lv32_0;

assign result_31_1_fu_3575_p2 = ($signed(result_31_4_reg_1493) + $signed(result_31_1_trunc_e_fu_3571_p1));

assign result_31_1_trunc_e_fu_3571_p1 = $signed(grp_fixed_point_mul_fu_1875_ap_return);

assign result_31_load_reg_4381 = ap_const_lv32_0;

assign result_32_1_fu_3585_p2 = ($signed(result_32_4_reg_1483) + $signed(result_32_1_trunc_e_fu_3581_p1));

assign result_32_1_trunc_e_fu_3581_p1 = $signed(grp_fixed_point_mul_fu_1881_ap_return);

assign result_32_load_reg_4386 = ap_const_lv32_0;

assign result_33_1_fu_3595_p2 = ($signed(result_33_4_reg_1473) + $signed(result_33_1_trunc_e_fu_3591_p1));

assign result_33_1_trunc_e_fu_3591_p1 = $signed(grp_fixed_point_mul_fu_1888_ap_return);

assign result_33_load_reg_4391 = ap_const_lv32_0;

assign result_34_1_fu_3605_p2 = ($signed(result_34_4_reg_1463) + $signed(result_34_1_trunc_e_fu_3601_p1));

assign result_34_1_trunc_e_fu_3601_p1 = $signed(grp_fixed_point_mul_fu_1894_ap_return);

assign result_34_load_reg_4396 = ap_const_lv32_0;

assign result_35_1_fu_3615_p2 = ($signed(result_35_4_reg_1453) + $signed(result_35_1_trunc_e_fu_3611_p1));

assign result_35_1_trunc_e_fu_3611_p1 = $signed(grp_fixed_point_mul_fu_1901_ap_return);

assign result_35_load_reg_4401 = ap_const_lv32_0;

assign result_36_1_fu_3625_p2 = ($signed(result_36_4_reg_1443) + $signed(result_36_1_trunc_e_fu_3621_p1));

assign result_36_1_trunc_e_fu_3621_p1 = $signed(grp_fixed_point_mul_fu_1907_ap_return);

assign result_36_load_reg_4406 = ap_const_lv32_0;

assign result_37_1_fu_3635_p2 = ($signed(result_37_4_reg_1433) + $signed(result_37_1_trunc_e_fu_3631_p1));

assign result_37_1_trunc_e_fu_3631_p1 = $signed(grp_fixed_point_mul_fu_1914_ap_return);

assign result_37_load_reg_4411 = ap_const_lv32_0;

assign result_38_1_fu_3645_p2 = ($signed(result_38_4_reg_1423) + $signed(result_38_1_trunc_e_fu_3641_p1));

assign result_38_1_trunc_e_fu_3641_p1 = $signed(grp_fixed_point_mul_fu_1920_ap_return);

assign result_38_load_reg_4416 = ap_const_lv32_0;

assign result_39_1_fu_3655_p2 = ($signed(result_39_4_reg_1413) + $signed(result_39_1_trunc_e_fu_3651_p1));

assign result_39_1_trunc_e_fu_3651_p1 = $signed(grp_fixed_point_mul_fu_1927_ap_return);

assign result_39_load_reg_4421 = ap_const_lv32_0;

assign result_3_1_fu_3295_p2 = ($signed(result_3_4_reg_1773) + $signed(result_3_1_trunc_ex_fu_3291_p1));

assign result_3_1_trunc_ex_fu_3291_p1 = $signed(grp_fixed_point_mul_fu_1855_ap_return);

assign result_3_load_reg_4241 = ap_const_lv32_0;

assign result_40_1_fu_3665_p2 = ($signed(result_40_4_reg_1403) + $signed(result_40_1_trunc_e_fu_3661_p1));

assign result_40_1_trunc_e_fu_3661_p1 = $signed(grp_fixed_point_mul_fu_1933_ap_return);

assign result_40_load_reg_4426 = ap_const_lv32_0;

assign result_41_1_fu_3675_p2 = ($signed(result_41_4_reg_1393) + $signed(result_41_1_trunc_e_fu_3671_p1));

assign result_41_1_trunc_e_fu_3671_p1 = $signed(grp_fixed_point_mul_fu_1940_ap_return);

assign result_41_load_reg_4431 = ap_const_lv32_0;

assign result_42_1_fu_3685_p2 = ($signed(result_42_4_reg_1383) + $signed(result_42_1_trunc_e_fu_3681_p1));

assign result_42_1_trunc_e_fu_3681_p1 = $signed(grp_fixed_point_mul_fu_1946_ap_return);

assign result_42_load_reg_4436 = ap_const_lv32_0;

assign result_43_1_fu_3695_p2 = ($signed(result_43_4_reg_1373) + $signed(result_43_1_trunc_e_fu_3691_p1));

assign result_43_1_trunc_e_fu_3691_p1 = $signed(grp_fixed_point_mul_fu_1953_ap_return);

assign result_43_load_reg_4441 = ap_const_lv32_0;

assign result_44_1_fu_3705_p2 = ($signed(result_44_4_reg_1363) + $signed(result_44_1_trunc_e_fu_3701_p1));

assign result_44_1_trunc_e_fu_3701_p1 = $signed(grp_fixed_point_mul_fu_1959_ap_return);

assign result_44_load_reg_4446 = ap_const_lv32_0;

assign result_45_1_fu_3715_p2 = ($signed(result_45_4_reg_1353) + $signed(result_45_1_trunc_e_fu_3711_p1));

assign result_45_1_trunc_e_fu_3711_p1 = $signed(grp_fixed_point_mul_fu_1966_ap_return);

assign result_45_load_reg_4451 = ap_const_lv32_0;

assign result_46_1_fu_3725_p2 = ($signed(result_46_4_reg_1343) + $signed(result_46_1_trunc_e_fu_3721_p1));

assign result_46_1_trunc_e_fu_3721_p1 = $signed(grp_fixed_point_mul_fu_1972_ap_return);

assign result_46_load_reg_4456 = ap_const_lv32_0;

assign result_47_1_fu_3735_p2 = ($signed(result_47_4_reg_1333) + $signed(result_47_1_trunc_e_fu_3731_p1));

assign result_47_1_trunc_e_fu_3731_p1 = $signed(grp_fixed_point_mul_fu_1979_ap_return);

assign result_47_load_reg_4461 = ap_const_lv32_0;

assign result_48_1_fu_3745_p2 = ($signed(result_48_4_reg_1323) + $signed(result_48_1_trunc_e_fu_3741_p1));

assign result_48_1_trunc_e_fu_3741_p1 = $signed(grp_fixed_point_mul_fu_1985_ap_return);

assign result_48_load_reg_4466 = ap_const_lv32_0;

assign result_49_1_fu_3755_p2 = ($signed(result_49_4_reg_1313) + $signed(result_49_1_trunc_e_fu_3751_p1));

assign result_49_1_trunc_e_fu_3751_p1 = $signed(grp_fixed_point_mul_fu_1992_ap_return);

assign result_49_load_reg_4471 = ap_const_lv32_0;

assign result_4_1_fu_3305_p2 = ($signed(result_4_4_reg_1763) + $signed(result_4_1_trunc_ex_fu_3301_p1));

assign result_4_1_trunc_ex_fu_3301_p1 = $signed(grp_fixed_point_mul_fu_1862_ap_return);

assign result_4_load_reg_4246 = ap_const_lv32_0;

assign result_5_1_fu_3315_p2 = ($signed(result_5_4_reg_1753) + $signed(result_5_1_trunc_ex_fu_3311_p1));

assign result_5_1_trunc_ex_fu_3311_p1 = $signed(grp_fixed_point_mul_fu_1868_ap_return);

assign result_5_load_reg_4251 = ap_const_lv32_0;

assign result_6_1_fu_3325_p2 = ($signed(result_6_4_reg_1743) + $signed(result_6_1_trunc_ex_fu_3321_p1));

assign result_6_1_trunc_ex_fu_3321_p1 = $signed(grp_fixed_point_mul_fu_1875_ap_return);

assign result_6_load_reg_4256 = ap_const_lv32_0;

assign result_7_1_fu_3335_p2 = ($signed(result_7_4_reg_1733) + $signed(result_7_1_trunc_ex_fu_3331_p1));

assign result_7_1_trunc_ex_fu_3331_p1 = $signed(grp_fixed_point_mul_fu_1881_ap_return);

assign result_7_load_reg_4261 = ap_const_lv32_0;

assign result_8_1_fu_3345_p2 = ($signed(result_8_4_reg_1723) + $signed(result_8_1_trunc_ex_fu_3341_p1));

assign result_8_1_trunc_ex_fu_3341_p1 = $signed(grp_fixed_point_mul_fu_1888_ap_return);

assign result_8_load_reg_4266 = ap_const_lv32_0;

assign result_9_1_fu_3355_p2 = ($signed(result_9_4_reg_1713) + $signed(result_9_1_trunc_ex_fu_3351_p1));

assign result_9_1_trunc_ex_fu_3351_p1 = $signed(grp_fixed_point_mul_fu_1894_ap_return);

assign result_9_load_reg_4271 = ap_const_lv32_0;

assign row_1_fu_3163_p2 = (row_phi_fu_1817_p4 + ap_const_lv8_1);

assign tmp_11_fu_3761_p1 = ctrl_read_reg_4221[0:0];

assign tmp_12_fu_3889_p1 = data_1_fu_3783_p52[30:0];

assign tmp_13_fu_3893_p3 = data_1_fu_3783_p52[ap_const_lv32_1F];

assign tmp_5_fu_3169_p3 = {{row_phi_fu_1817_p4}, {1'b0}};

assign tmp_8_fu_3177_p1 = tmp_5_fu_3169_p3;

assign tmp_9_fu_3194_p2 = (tmp_5_reg_5107 | ap_const_lv9_1);

assign tmp_last_V_fu_3776_p2 = ((writeCount_assign_reg_1824 == ap_const_lv6_31) ? 1'b1 : 1'b0);

assign tmp_s_fu_3199_p3 = {{ap_const_lv23_0}, {tmp_9_fu_3194_p2}};

always @ (posedge ap_clk) begin
    tmp_5_reg_5107[0] <= 1'b0;
    tmp_8_reg_5112[0] <= 1'b0;
    tmp_8_reg_5112[31:9] <= 23'b00000000000000000000000;
end

endmodule //cnn_fc_i144_o50
