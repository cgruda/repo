// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef XCNN_FC_I144_O50_H
#define XCNN_FC_I144_O50_H

#ifdef __cplusplus
extern "C" {
#endif

/***************************** Include Files *********************************/
#ifndef __linux__
#include "xil_types.h"
#include "xil_assert.h"
#include "xstatus.h"
#include "xil_io.h"
#else
#include <stdint.h>
#include <assert.h>
#include <dirent.h>
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/mman.h>
#include <unistd.h>
#include <stddef.h>
#endif
#include "xcnn_fc_i144_o50_hw.h"

/**************************** Type Definitions ******************************/
#ifdef __linux__
typedef uint8_t u8;
typedef uint16_t u16;
typedef uint32_t u32;
#else
typedef struct {
    u16 DeviceId;
    u32 Ctrl_BaseAddress;
} XCnn_fc_i144_o50_Config;
#endif

typedef struct {
    u32 Ctrl_BaseAddress;
    u32 IsReady;
} XCnn_fc_i144_o50;

/***************** Macros (Inline Functions) Definitions *********************/
#ifndef __linux__
#define XCnn_fc_i144_o50_WriteReg(BaseAddress, RegOffset, Data) \
    Xil_Out32((BaseAddress) + (RegOffset), (u32)(Data))
#define XCnn_fc_i144_o50_ReadReg(BaseAddress, RegOffset) \
    Xil_In32((BaseAddress) + (RegOffset))
#else
#define XCnn_fc_i144_o50_WriteReg(BaseAddress, RegOffset, Data) \
    *(volatile u32*)((BaseAddress) + (RegOffset)) = (u32)(Data)
#define XCnn_fc_i144_o50_ReadReg(BaseAddress, RegOffset) \
    *(volatile u32*)((BaseAddress) + (RegOffset))

#define Xil_AssertVoid(expr)    assert(expr)
#define Xil_AssertNonvoid(expr) assert(expr)

#define XST_SUCCESS             0
#define XST_DEVICE_NOT_FOUND    2
#define XST_OPEN_DEVICE_FAILED  3
#define XIL_COMPONENT_IS_READY  1
#endif

/************************** Function Prototypes *****************************/
#ifndef __linux__
int XCnn_fc_i144_o50_Initialize(XCnn_fc_i144_o50 *InstancePtr, u16 DeviceId);
XCnn_fc_i144_o50_Config* XCnn_fc_i144_o50_LookupConfig(u16 DeviceId);
int XCnn_fc_i144_o50_CfgInitialize(XCnn_fc_i144_o50 *InstancePtr, XCnn_fc_i144_o50_Config *ConfigPtr);
#else
int XCnn_fc_i144_o50_Initialize(XCnn_fc_i144_o50 *InstancePtr, const char* InstanceName);
int XCnn_fc_i144_o50_Release(XCnn_fc_i144_o50 *InstancePtr);
#endif

void XCnn_fc_i144_o50_Start(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_IsDone(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_IsIdle(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_IsReady(XCnn_fc_i144_o50 *InstancePtr);
void XCnn_fc_i144_o50_EnableAutoRestart(XCnn_fc_i144_o50 *InstancePtr);
void XCnn_fc_i144_o50_DisableAutoRestart(XCnn_fc_i144_o50 *InstancePtr);

void XCnn_fc_i144_o50_Set_ctrl(XCnn_fc_i144_o50 *InstancePtr, u32 Data);
u32 XCnn_fc_i144_o50_Get_ctrl(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_0_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_0_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_0_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_0_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_0_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_0_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_0_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_0_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_0_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_weight_1_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_1_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_1_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_1_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_1_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_1_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_1_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_1_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_1_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_weight_2_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_2_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_2_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_2_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_2_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_2_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_2_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_2_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_2_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_weight_3_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_3_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_3_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_3_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_3_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_3_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_3_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_3_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_3_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_weight_4_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_4_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_4_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_4_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_4_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_4_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_4_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_4_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_4_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_weight_5_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_5_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_5_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_5_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_5_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_5_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_5_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_5_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_5_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_weight_6_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_6_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_6_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_6_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_6_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_6_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_6_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_6_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_6_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_weight_7_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_7_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_7_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_7_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_7_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_7_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_7_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_7_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_7_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_weight_8_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_8_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_8_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_8_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_8_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_8_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_8_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_8_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_8_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_weight_9_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_9_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_9_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_9_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_9_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_9_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_9_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_9_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_9_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_weight_10_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_10_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_10_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_10_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_10_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_10_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_10_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_10_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_10_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_weight_11_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_11_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_11_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_11_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_11_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_11_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_11_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_11_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_11_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_weight_12_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_12_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_12_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_12_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_12_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_12_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_12_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_12_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_12_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_weight_13_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_13_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_13_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_13_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_13_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_13_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_13_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_13_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_13_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_weight_14_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_14_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_14_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_14_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_14_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_14_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_14_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_14_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_14_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_weight_15_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_15_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_15_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_15_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_15_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_15_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_15_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_15_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_15_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_weight_16_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_16_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_16_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_16_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_16_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_16_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_16_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_16_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_16_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_weight_17_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_17_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_17_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_17_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_17_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_17_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_17_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_17_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_17_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_weight_18_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_18_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_18_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_18_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_18_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_18_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_18_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_18_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_18_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_weight_19_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_19_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_19_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_19_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_19_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_19_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_19_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_19_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_19_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_weight_20_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_20_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_20_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_20_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_20_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_20_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_20_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_20_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_20_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_weight_21_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_21_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_21_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_21_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_21_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_21_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_21_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_21_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_21_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_weight_22_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_22_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_22_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_22_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_22_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_22_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_22_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_22_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_22_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_weight_23_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_23_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_23_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_23_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_23_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_23_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_23_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_23_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_23_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_weight_24_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_24_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_24_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_24_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_weight_24_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_weight_24_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_24_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_weight_24_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_weight_24_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Get_bias_BaseAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_bias_HighAddress(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_bias_TotalBytes(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_bias_BitWidth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Get_bias_Depth(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_Write_bias_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Read_bias_Words(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length);
u32 XCnn_fc_i144_o50_Write_bias_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);
u32 XCnn_fc_i144_o50_Read_bias_Bytes(XCnn_fc_i144_o50 *InstancePtr, int offset, char *data, int length);

void XCnn_fc_i144_o50_InterruptGlobalEnable(XCnn_fc_i144_o50 *InstancePtr);
void XCnn_fc_i144_o50_InterruptGlobalDisable(XCnn_fc_i144_o50 *InstancePtr);
void XCnn_fc_i144_o50_InterruptEnable(XCnn_fc_i144_o50 *InstancePtr, u32 Mask);
void XCnn_fc_i144_o50_InterruptDisable(XCnn_fc_i144_o50 *InstancePtr, u32 Mask);
void XCnn_fc_i144_o50_InterruptClear(XCnn_fc_i144_o50 *InstancePtr, u32 Mask);
u32 XCnn_fc_i144_o50_InterruptGetEnabled(XCnn_fc_i144_o50 *InstancePtr);
u32 XCnn_fc_i144_o50_InterruptGetStatus(XCnn_fc_i144_o50 *InstancePtr);

#ifdef __cplusplus
}
#endif

#endif
