
#include <string.h>
#include "platform.h"
#include "xparameters.h"
#include "xil_printf.h"
#include "ff.h"
#include "xdevcfg.h"

static FATFS fatfs;

int SD_Init()
{
    FRESULT rc;

    rc = f_mount(&fatfs, "", 0);
    if(rc) {
        xil_printf("ERROR : f_mount returned %d\r\n",rc);
        return XST_FAILURE;
    }
    return XST_SUCCESS;
}

int SD_Transfer_read(char *path, float *buff, int rows, int cols)
{
    FIL fptr;
    FRESULT rc;
    UINT br;

    rc = f_open(&fptr, path, FA_OPEN_EXISTING | FA_READ);
    if(rc) {
        xil_printf("ERROR : f_open returned %d\r\n",rc);
        return XST_FAILURE;
    }

    rc = f_lseek(&fptr, 0);
    if(rc) {
        xil_printf("ERROR : f_lseek returned %d\r\n",rc);
        return XST_FAILURE;
    }

    rc = f_read(&fptr, (void*)DestinationAddress, ByteLength, &br);
    if(rc) {
        xil_printf("ERROR : f_read returned %d\r\n",rc);
        return XST_FAILURE;
    }

    rc = f_close(&fptr);
    if(rc) {
        xil_printf(" ERROR : f_close returned %d\r\n", rc);
        return XST_FAILURE;
    }
    return XST_SUCCESS;
}

int main()
{
    init_platform();

    SD_Init();

    float kernel[9];
    SD_Init();
    SD_Transfer_read("cnn_vals/conv0kernel.csv", buff, 3, 3);

    xil_printf("%s\r\n", buff);

    cleanup_platform();
    return 0;
}
