/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#define PRINT_UI xil_printf

#include "xcnn_fc_i144_o50.h"

#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "fixed_point.h"

void print_float(float fnum)
{
	bool negative = fnum < 0;
	int w = fnum;
	int f = (fnum - w) * 100000;
	if (negative) {
		PRINT_UI("-%d.%05d  ", -w, -f);
	} else {
		PRINT_UI("%d.%05d  ", w, f);
	}
}

void print_fixed_arr(char *text, uint32_t *data)
{
	PRINT_UI("%s\r\n", text);
	for (int i = 0; i < CNN_OUTPUT_LEN; i++) {
		PRINT_UI("[%d] ", i);
		fixed_point_print(data[i]);
		PRINT_UI("\r\n");
	}
}

void print_float_arr(char *text, float *data)
{
	PRINT_UI("%s\r\n", text);
	for (int i = 0; i < CNN_OUTPUT_LEN; i++) {
		PRINT_UI("[%d] ", i);
		print_float(data[i]);
		PRINT_UI("\r\n");
	}
}

struct cnn_hw {
	XCnn_fc_i144_o50 fc_0;
	XAxiDma axiDMA;
	uint32_t *p_dma_buffer_TX;
	uint32_t *p_dma_buffer_RX;
	float output_data[CNN_OUTPUT_LEN];
};


#defin

u32 (*cnn_hw_fc_0_weight_write[FC_0_WEIGHT_COLS / 2])(XCnn_fc_i144_o50 *InstancePtr, int offset, int *data, int length) = {
	XCnn_fc_i144_o50_Write_weight_0_Words,
	XCnn_fc_i144_o50_Write_weight_1_Words,
	XCnn_fc_i144_o50_Write_weight_2_Words,
	XCnn_fc_i144_o50_Write_weight_3_Words,
	XCnn_fc_i144_o50_Write_weight_4_Words,
	XCnn_fc_i144_o50_Write_weight_5_Words,
	XCnn_fc_i144_o50_Write_weight_6_Words,
	XCnn_fc_i144_o50_Write_weight_7_Words,
	XCnn_fc_i144_o50_Write_weight_8_Words,
	XCnn_fc_i144_o50_Write_weight_9_Words,
	XCnn_fc_i144_o50_Write_weight_10_Words,
	XCnn_fc_i144_o50_Write_weight_11_Words,
	XCnn_fc_i144_o50_Write_weight_12_Words,
	XCnn_fc_i144_o50_Write_weight_13_Words,
	XCnn_fc_i144_o50_Write_weight_14_Words,
	XCnn_fc_i144_o50_Write_weight_15_Words,
	XCnn_fc_i144_o50_Write_weight_16_Words,
	XCnn_fc_i144_o50_Write_weight_17_Words,
	XCnn_fc_i144_o50_Write_weight_18_Words,
	XCnn_fc_i144_o50_Write_weight_19_Words,
	XCnn_fc_i144_o50_Write_weight_20_Words,
	XCnn_fc_i144_o50_Write_weight_21_Words,
	XCnn_fc_i144_o50_Write_weight_22_Words,
	XCnn_fc_i144_o50_Write_weight_23_Words,
	XCnn_fc_i144_o50_Write_weight_24_Words
};






int main()
{
    init_platform();

    PRINT_UI("Hello World\n\r");

    cleanup_platform();
    return 0;
}
