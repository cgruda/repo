-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_pool_d52x52_p2x2 is
generic (
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    inStream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    inStream_TVALID : IN STD_LOGIC;
    inStream_TREADY : OUT STD_LOGIC;
    inStream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    inStream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    inStream_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
    inStream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    inStream_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    inStream_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
    outStream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    outStream_TVALID : OUT STD_LOGIC;
    outStream_TREADY : IN STD_LOGIC;
    outStream_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    outStream_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    outStream_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
    outStream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    outStream_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    outStream_TDEST : OUT STD_LOGIC_VECTOR (5 downto 0);
    s_axi_CTRL_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_WVALID : IN STD_LOGIC;
    s_axi_CTRL_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_RREADY : IN STD_LOGIC;
    s_axi_CTRL_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of cnn_pool_d52x52_p2x2 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "cnn_pool_d52x52_p2x2,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.220000,HLS_SYN_LAT=2772,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=810,HLS_SYN_LUT=1091}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv6_34 : STD_LOGIC_VECTOR (5 downto 0) := "110100";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv12_A90 : STD_LOGIC_VECTOR (11 downto 0) := "101010010000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv32_A90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000101010010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv32_2A4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010100100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal inStream_V_data_V_0_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal inStream_V_data_V_0_vld_in : STD_LOGIC;
    signal inStream_V_data_V_0_vld_out : STD_LOGIC;
    signal inStream_V_data_V_0_ack_in : STD_LOGIC;
    signal inStream_V_data_V_0_ack_out : STD_LOGIC;
    signal inStream_V_data_V_0_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal inStream_V_data_V_0_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal inStream_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal inStream_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal inStream_V_data_V_0_sel : STD_LOGIC;
    signal inStream_V_data_V_0_load_A : STD_LOGIC;
    signal inStream_V_data_V_0_load_B : STD_LOGIC;
    signal inStream_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal inStream_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal inStream_V_dest_V_0_vld_in : STD_LOGIC;
    signal inStream_V_dest_V_0_ack_out : STD_LOGIC;
    signal inStream_V_dest_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal outStream_V_data_V_1_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal outStream_V_data_V_1_vld_in : STD_LOGIC;
    signal outStream_V_data_V_1_vld_out : STD_LOGIC;
    signal outStream_V_data_V_1_ack_in : STD_LOGIC;
    signal outStream_V_data_V_1_ack_out : STD_LOGIC;
    signal outStream_V_data_V_1_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal outStream_V_data_V_1_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal outStream_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal outStream_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal outStream_V_data_V_1_sel : STD_LOGIC;
    signal outStream_V_data_V_1_load_A : STD_LOGIC;
    signal outStream_V_data_V_1_load_B : STD_LOGIC;
    signal outStream_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal outStream_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal outStream_V_keep_V_1_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal outStream_V_keep_V_1_vld_in : STD_LOGIC;
    signal outStream_V_keep_V_1_vld_out : STD_LOGIC;
    signal outStream_V_keep_V_1_ack_in : STD_LOGIC;
    signal outStream_V_keep_V_1_ack_out : STD_LOGIC;
    signal outStream_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal outStream_V_keep_V_1_sel : STD_LOGIC;
    signal outStream_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal outStream_V_strb_V_1_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal outStream_V_strb_V_1_vld_in : STD_LOGIC;
    signal outStream_V_strb_V_1_vld_out : STD_LOGIC;
    signal outStream_V_strb_V_1_ack_in : STD_LOGIC;
    signal outStream_V_strb_V_1_ack_out : STD_LOGIC;
    signal outStream_V_strb_V_1_sel_rd : STD_LOGIC := '0';
    signal outStream_V_strb_V_1_sel : STD_LOGIC;
    signal outStream_V_strb_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal outStream_V_user_V_1_data_out : STD_LOGIC_VECTOR (1 downto 0);
    signal outStream_V_user_V_1_vld_in : STD_LOGIC;
    signal outStream_V_user_V_1_vld_out : STD_LOGIC;
    signal outStream_V_user_V_1_ack_in : STD_LOGIC;
    signal outStream_V_user_V_1_ack_out : STD_LOGIC;
    signal outStream_V_user_V_1_sel_rd : STD_LOGIC := '0';
    signal outStream_V_user_V_1_sel : STD_LOGIC;
    signal outStream_V_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal outStream_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal outStream_V_last_V_1_vld_in : STD_LOGIC;
    signal outStream_V_last_V_1_vld_out : STD_LOGIC;
    signal outStream_V_last_V_1_ack_in : STD_LOGIC;
    signal outStream_V_last_V_1_ack_out : STD_LOGIC;
    signal outStream_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal outStream_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal outStream_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal outStream_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal outStream_V_last_V_1_sel : STD_LOGIC;
    signal outStream_V_last_V_1_load_A : STD_LOGIC;
    signal outStream_V_last_V_1_load_B : STD_LOGIC;
    signal outStream_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal outStream_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal outStream_V_id_V_1_data_out : STD_LOGIC_VECTOR (4 downto 0);
    signal outStream_V_id_V_1_vld_in : STD_LOGIC;
    signal outStream_V_id_V_1_vld_out : STD_LOGIC;
    signal outStream_V_id_V_1_ack_in : STD_LOGIC;
    signal outStream_V_id_V_1_ack_out : STD_LOGIC;
    signal outStream_V_id_V_1_sel_rd : STD_LOGIC := '0';
    signal outStream_V_id_V_1_sel : STD_LOGIC;
    signal outStream_V_id_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal outStream_V_dest_V_1_data_out : STD_LOGIC_VECTOR (5 downto 0);
    signal outStream_V_dest_V_1_vld_in : STD_LOGIC;
    signal outStream_V_dest_V_1_vld_out : STD_LOGIC;
    signal outStream_V_dest_V_1_ack_in : STD_LOGIC;
    signal outStream_V_dest_V_1_ack_out : STD_LOGIC;
    signal outStream_V_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal outStream_V_dest_V_1_sel : STD_LOGIC;
    signal outStream_V_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ctrl : STD_LOGIC_VECTOR (31 downto 0);
    signal inStream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal exitcond1_reg_895 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal exitcond4_reg_904 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal exitcond_flatten8_reg_1018 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_1048 : STD_LOGIC_VECTOR (0 downto 0);
    signal outStream_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal tmp_reg_1032 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp3_iter1_tmp_reg_1032 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp3_iter3 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp3_iter2_tmp_reg_1032 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_reg_289 : STD_LOGIC_VECTOR (4 downto 0);
    signal x1_reg_301 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_reg_313 : STD_LOGIC_VECTOR (2 downto 0);
    signal y3_reg_324 : STD_LOGIC_VECTOR (1 downto 0);
    signal window_1_2_1_reg_335 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_1_1_1_reg_347 : STD_LOGIC_VECTOR (31 downto 0);
    signal x4_reg_359 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten6_reg_370 : STD_LOGIC_VECTOR (11 downto 0);
    signal y_assign_reg_381 : STD_LOGIC_VECTOR (5 downto 0);
    signal x_assign_reg_392 : STD_LOGIC_VECTOR (5 downto 0);
    signal window_1_1_reg_403 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_1_0_reg_414 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctrl_read_reg_890 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond1_fu_432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_1_fu_438_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal x_1_reg_899 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond4_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_2_fu_459_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal x_2_reg_908 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_913 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal indvar_flatten_next_fu_476_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal tmp_3_mid2_v_fu_502_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_mid2_v_reg_922 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_fu_510_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_927 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_mid2_fu_526_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_mid2_reg_932 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond1_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond1_reg_948 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_3_fu_560_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal window_2_2_4_fu_587_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal window_2_2_5_fu_594_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_601_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1013 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal exitcond_flatten8_fu_614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_1038 : BOOLEAN;
    signal ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1018 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next7_fu_620_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal y_assign_cast7_mid2_s_fu_646_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal y_assign_cast7_mid2_s_reg_1027 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lineBuffer_0_addr_2_reg_1036 : STD_LOGIC_VECTOR (5 downto 0);
    signal lineBuffer_1_addr_2_reg_1042 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp3_iter1_lineBuffer_1_addr_2_reg_1042 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_4_fu_694_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal maxValue_17_0_maxVal_fu_747_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxValue_17_0_maxVal_reg_1057 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_773_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_1063 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_fu_807_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal result_reg_1068 : STD_LOGIC_VECTOR (19 downto 0);
    signal lineBuffer_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal windowRightCol_1_reg_1073 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_2_fu_866_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_last_V_fu_874_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal lineBuffer_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal lineBuffer_0_ce0 : STD_LOGIC;
    signal lineBuffer_0_we0 : STD_LOGIC;
    signal lineBuffer_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuffer_0_ce1 : STD_LOGIC;
    signal lineBuffer_0_we1 : STD_LOGIC;
    signal lineBuffer_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal lineBuffer_1_ce0 : STD_LOGIC;
    signal lineBuffer_1_we0 : STD_LOGIC;
    signal lineBuffer_1_ce1 : STD_LOGIC;
    signal lineBuffer_1_we1 : STD_LOGIC;
    signal x_phi_fu_293_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal x1_phi_fu_305_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal y3_phi_fu_328_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_assign_phi_fu_385_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal window_1_0_phi_fu_417_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_cast1_fu_448_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x1_cast_fu_465_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_cast_fu_548_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_cast5_fu_662_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_0_0_read_as_fu_150 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_0_0_fu_154 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_0_1_fu_158 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_1_0_read_as_fu_162 : STD_LOGIC_VECTOR (31 downto 0);
    signal writeCount_1_fu_166 : STD_LOGIC_VECTOR (31 downto 0);
    signal writeCount_fu_828_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal readCount_1_fu_170 : STD_LOGIC_VECTOR (31 downto 0);
    signal readCount_fu_683_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_2_2_2_fu_174 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_cast_fu_444_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond_fu_482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y9_fu_496_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal cond_mid1_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_fu_520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x4_mid2_fu_488_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal x4_cast9_cast_fu_534_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_5_fu_538_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_5_cast1_fu_544_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal window_2_2_7_fu_566_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_2_2_fu_573_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_2_2_1_fu_580_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond2_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_s_fu_640_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal x_assign_mid2_fu_632_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_11_fu_654_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_658_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_0_1_i_fu_727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal maxValue_0_1_maxVal_fu_733_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_1_i_fu_741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp4_fu_761_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_fu_755_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_assign_fu_767_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_i_i_fu_781_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_787_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_6_fu_797_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_4_1_1_i_fu_834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_cast_fu_846_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_4_i_i_fu_849_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal result_1_fu_855_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal result_1_cast_fu_862_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_SEBB_i_fu_839_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_condition_1535 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_condition_1049 : BOOLEAN;

    component cnn_pool_d52x52_pbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_pool_d52x52_p2x2_CTRL_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ctrl : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    cnn_pool_d52x52_p2x2_CTRL_s_axi_U : component cnn_pool_d52x52_p2x2_CTRL_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_AWVALID,
        AWREADY => s_axi_CTRL_AWREADY,
        AWADDR => s_axi_CTRL_AWADDR,
        WVALID => s_axi_CTRL_WVALID,
        WREADY => s_axi_CTRL_WREADY,
        WDATA => s_axi_CTRL_WDATA,
        WSTRB => s_axi_CTRL_WSTRB,
        ARVALID => s_axi_CTRL_ARVALID,
        ARREADY => s_axi_CTRL_ARREADY,
        ARADDR => s_axi_CTRL_ARADDR,
        RVALID => s_axi_CTRL_RVALID,
        RREADY => s_axi_CTRL_RREADY,
        RDATA => s_axi_CTRL_RDATA,
        RRESP => s_axi_CTRL_RRESP,
        BVALID => s_axi_CTRL_BVALID,
        BREADY => s_axi_CTRL_BREADY,
        BRESP => s_axi_CTRL_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        ctrl => ctrl);

    lineBuffer_0_U : component cnn_pool_d52x52_pbkb
    generic map (
        DataWidth => 32,
        AddressRange => 52,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => lineBuffer_0_address0,
        ce0 => lineBuffer_0_ce0,
        we0 => lineBuffer_0_we0,
        d0 => inStream_V_data_V_0_data_out,
        q0 => lineBuffer_0_q0,
        address1 => lineBuffer_0_addr_2_reg_1036,
        ce1 => lineBuffer_0_ce1,
        we1 => lineBuffer_0_we1,
        d1 => lineBuffer_1_q0);

    lineBuffer_1_U : component cnn_pool_d52x52_pbkb
    generic map (
        DataWidth => 32,
        AddressRange => 52,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => lineBuffer_1_address0,
        ce0 => lineBuffer_1_ce0,
        we0 => lineBuffer_1_we0,
        d0 => inStream_V_data_V_0_data_out,
        q0 => lineBuffer_1_q0,
        address1 => ap_pipeline_reg_pp3_iter1_lineBuffer_1_addr_2_reg_1042,
        ce1 => lineBuffer_1_ce1,
        we1 => lineBuffer_1_we1,
        d1 => window_2_2_2_fu_174);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_895) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and not((ap_const_lv1_0 = exitcond1_fu_432_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_895) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_lv1_0 = exitcond1_fu_432_p2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_895) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and not((ap_const_lv1_0 = exitcond1_fu_432_p2))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_904) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and not((ap_const_lv1_0 = exitcond4_fu_453_p2)))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_904) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_lv1_0 = exitcond4_fu_453_p2))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_904) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and not((ap_const_lv1_0 = exitcond4_fu_453_p2))))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and not((ap_const_lv1_0 = exitcond_flatten_fu_470_p2)))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_470_p2))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and not((ap_const_lv1_0 = exitcond_flatten_fu_470_p2))))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond_flatten8_fu_614_p2)))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_condition_1049 = ap_const_boolean_1)) then
                    if (not((ap_const_logic_1 = ap_enable_reg_pp3_iter0))) then 
                        ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = ap_enable_reg_pp3_iter0)) then 
                        ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in))))) then 
                    ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                    ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    inStream_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = inStream_V_data_V_0_ack_out) and (ap_const_logic_1 = inStream_V_data_V_0_vld_out))) then 
                                        inStream_V_data_V_0_sel_rd <= not(inStream_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    inStream_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = inStream_V_data_V_0_vld_in) and (ap_const_logic_1 = inStream_V_data_V_0_ack_in))) then 
                                        inStream_V_data_V_0_sel_wr <= not(inStream_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    inStream_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = inStream_V_data_V_0_vld_in) and (ap_const_logic_1 = inStream_V_data_V_0_ack_out) and (inStream_V_data_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = inStream_V_data_V_0_vld_in) and (inStream_V_data_V_0_state = ap_const_lv2_2)))) then 
                    inStream_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = inStream_V_data_V_0_vld_in) and (ap_const_logic_0 = inStream_V_data_V_0_ack_out) and (inStream_V_data_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = inStream_V_data_V_0_ack_out) and (inStream_V_data_V_0_state = ap_const_lv2_1)))) then 
                    inStream_V_data_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = inStream_V_data_V_0_vld_in) and (inStream_V_data_V_0_state = ap_const_lv2_2)) or ((ap_const_logic_1 = inStream_V_data_V_0_ack_out) and (inStream_V_data_V_0_state = ap_const_lv2_1)) or ((inStream_V_data_V_0_state = ap_const_lv2_3) and not(((ap_const_logic_1 = inStream_V_data_V_0_vld_in) and (ap_const_logic_0 = inStream_V_data_V_0_ack_out))) and not(((ap_const_logic_0 = inStream_V_data_V_0_vld_in) and (ap_const_logic_1 = inStream_V_data_V_0_ack_out)))))) then 
                    inStream_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    inStream_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    inStream_V_dest_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_dest_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = inStream_V_dest_V_0_vld_in) and (ap_const_logic_1 = inStream_V_dest_V_0_ack_out) and (ap_const_lv2_3 = inStream_V_dest_V_0_state)) or ((ap_const_logic_0 = inStream_V_dest_V_0_vld_in) and (ap_const_lv2_2 = inStream_V_dest_V_0_state)))) then 
                    inStream_V_dest_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = inStream_V_dest_V_0_vld_in) and (ap_const_logic_0 = inStream_V_dest_V_0_ack_out) and (ap_const_lv2_3 = inStream_V_dest_V_0_state)) or ((ap_const_logic_0 = inStream_V_dest_V_0_ack_out) and (ap_const_lv2_1 = inStream_V_dest_V_0_state)))) then 
                    inStream_V_dest_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = inStream_V_dest_V_0_vld_in) and (ap_const_lv2_2 = inStream_V_dest_V_0_state)) or ((ap_const_logic_1 = inStream_V_dest_V_0_ack_out) and (ap_const_lv2_1 = inStream_V_dest_V_0_state)) or ((ap_const_lv2_3 = inStream_V_dest_V_0_state) and not(((ap_const_logic_1 = inStream_V_dest_V_0_vld_in) and (ap_const_logic_0 = inStream_V_dest_V_0_ack_out))) and not(((ap_const_logic_0 = inStream_V_dest_V_0_vld_in) and (ap_const_logic_1 = inStream_V_dest_V_0_ack_out)))))) then 
                    inStream_V_dest_V_0_state <= ap_const_lv2_3;
                else 
                    inStream_V_dest_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    outStream_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_data_V_1_ack_out) and (ap_const_logic_1 = outStream_V_data_V_1_vld_out))) then 
                                        outStream_V_data_V_1_sel_rd <= not(outStream_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_data_V_1_vld_in) and (ap_const_logic_1 = outStream_V_data_V_1_ack_in))) then 
                                        outStream_V_data_V_1_sel_wr <= not(outStream_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = outStream_V_data_V_1_vld_in) and (ap_const_logic_1 = outStream_V_data_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_data_V_1_state)) or ((ap_const_logic_0 = outStream_V_data_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_data_V_1_state)))) then 
                    outStream_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = outStream_V_data_V_1_vld_in) and (ap_const_logic_0 = outStream_V_data_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_data_V_1_state)) or ((ap_const_logic_0 = outStream_V_data_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_data_V_1_state)))) then 
                    outStream_V_data_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = outStream_V_data_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_data_V_1_state)) or ((ap_const_logic_1 = outStream_V_data_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_data_V_1_state)) or ((ap_const_lv2_3 = outStream_V_data_V_1_state) and not(((ap_const_logic_1 = outStream_V_data_V_1_vld_in) and (ap_const_logic_0 = outStream_V_data_V_1_ack_out))) and not(((ap_const_logic_0 = outStream_V_data_V_1_vld_in) and (ap_const_logic_1 = outStream_V_data_V_1_ack_out)))))) then 
                    outStream_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    outStream_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    outStream_V_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_dest_V_1_ack_out) and (ap_const_logic_1 = outStream_V_dest_V_1_vld_out))) then 
                                        outStream_V_dest_V_1_sel_rd <= not(outStream_V_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = outStream_V_dest_V_1_vld_in) and (ap_const_logic_1 = outStream_V_dest_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_dest_V_1_state)) or ((ap_const_logic_0 = outStream_V_dest_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_dest_V_1_state)))) then 
                    outStream_V_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = outStream_V_dest_V_1_vld_in) and (ap_const_logic_0 = outStream_V_dest_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_dest_V_1_state)) or ((ap_const_logic_0 = outStream_V_dest_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_dest_V_1_state)))) then 
                    outStream_V_dest_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = outStream_V_dest_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_dest_V_1_state)) or ((ap_const_logic_1 = outStream_V_dest_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_dest_V_1_state)) or ((ap_const_lv2_3 = outStream_V_dest_V_1_state) and not(((ap_const_logic_1 = outStream_V_dest_V_1_vld_in) and (ap_const_logic_0 = outStream_V_dest_V_1_ack_out))) and not(((ap_const_logic_0 = outStream_V_dest_V_1_vld_in) and (ap_const_logic_1 = outStream_V_dest_V_1_ack_out)))))) then 
                    outStream_V_dest_V_1_state <= ap_const_lv2_3;
                else 
                    outStream_V_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    outStream_V_id_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_id_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_id_V_1_ack_out) and (ap_const_logic_1 = outStream_V_id_V_1_vld_out))) then 
                                        outStream_V_id_V_1_sel_rd <= not(outStream_V_id_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_id_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_id_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = outStream_V_id_V_1_vld_in) and (ap_const_logic_1 = outStream_V_id_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_id_V_1_state)) or ((ap_const_logic_0 = outStream_V_id_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_id_V_1_state)))) then 
                    outStream_V_id_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = outStream_V_id_V_1_vld_in) and (ap_const_logic_0 = outStream_V_id_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_id_V_1_state)) or ((ap_const_logic_0 = outStream_V_id_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_id_V_1_state)))) then 
                    outStream_V_id_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = outStream_V_id_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_id_V_1_state)) or ((ap_const_logic_1 = outStream_V_id_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_id_V_1_state)) or ((ap_const_lv2_3 = outStream_V_id_V_1_state) and not(((ap_const_logic_1 = outStream_V_id_V_1_vld_in) and (ap_const_logic_0 = outStream_V_id_V_1_ack_out))) and not(((ap_const_logic_0 = outStream_V_id_V_1_vld_in) and (ap_const_logic_1 = outStream_V_id_V_1_ack_out)))))) then 
                    outStream_V_id_V_1_state <= ap_const_lv2_3;
                else 
                    outStream_V_id_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    outStream_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_keep_V_1_ack_out) and (ap_const_logic_1 = outStream_V_keep_V_1_vld_out))) then 
                                        outStream_V_keep_V_1_sel_rd <= not(outStream_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = outStream_V_keep_V_1_vld_in) and (ap_const_logic_1 = outStream_V_keep_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_keep_V_1_state)) or ((ap_const_logic_0 = outStream_V_keep_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_keep_V_1_state)))) then 
                    outStream_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = outStream_V_keep_V_1_vld_in) and (ap_const_logic_0 = outStream_V_keep_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_keep_V_1_state)) or ((ap_const_logic_0 = outStream_V_keep_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_keep_V_1_state)))) then 
                    outStream_V_keep_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = outStream_V_keep_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_keep_V_1_state)) or ((ap_const_logic_1 = outStream_V_keep_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_keep_V_1_state)) or ((ap_const_lv2_3 = outStream_V_keep_V_1_state) and not(((ap_const_logic_1 = outStream_V_keep_V_1_vld_in) and (ap_const_logic_0 = outStream_V_keep_V_1_ack_out))) and not(((ap_const_logic_0 = outStream_V_keep_V_1_vld_in) and (ap_const_logic_1 = outStream_V_keep_V_1_ack_out)))))) then 
                    outStream_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    outStream_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    outStream_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_last_V_1_ack_out) and (ap_const_logic_1 = outStream_V_last_V_1_vld_out))) then 
                                        outStream_V_last_V_1_sel_rd <= not(outStream_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_last_V_1_vld_in) and (ap_const_logic_1 = outStream_V_last_V_1_ack_in))) then 
                                        outStream_V_last_V_1_sel_wr <= not(outStream_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = outStream_V_last_V_1_vld_in) and (ap_const_logic_1 = outStream_V_last_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_last_V_1_state)) or ((ap_const_logic_0 = outStream_V_last_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_last_V_1_state)))) then 
                    outStream_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = outStream_V_last_V_1_vld_in) and (ap_const_logic_0 = outStream_V_last_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_last_V_1_state)) or ((ap_const_logic_0 = outStream_V_last_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_last_V_1_state)))) then 
                    outStream_V_last_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = outStream_V_last_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_last_V_1_state)) or ((ap_const_logic_1 = outStream_V_last_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_last_V_1_state)) or ((ap_const_lv2_3 = outStream_V_last_V_1_state) and not(((ap_const_logic_1 = outStream_V_last_V_1_vld_in) and (ap_const_logic_0 = outStream_V_last_V_1_ack_out))) and not(((ap_const_logic_0 = outStream_V_last_V_1_vld_in) and (ap_const_logic_1 = outStream_V_last_V_1_ack_out)))))) then 
                    outStream_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    outStream_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    outStream_V_strb_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_strb_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_strb_V_1_ack_out) and (ap_const_logic_1 = outStream_V_strb_V_1_vld_out))) then 
                                        outStream_V_strb_V_1_sel_rd <= not(outStream_V_strb_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_strb_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_strb_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = outStream_V_strb_V_1_vld_in) and (ap_const_logic_1 = outStream_V_strb_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_strb_V_1_state)) or ((ap_const_logic_0 = outStream_V_strb_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_strb_V_1_state)))) then 
                    outStream_V_strb_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = outStream_V_strb_V_1_vld_in) and (ap_const_logic_0 = outStream_V_strb_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_strb_V_1_state)) or ((ap_const_logic_0 = outStream_V_strb_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_strb_V_1_state)))) then 
                    outStream_V_strb_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = outStream_V_strb_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_strb_V_1_state)) or ((ap_const_logic_1 = outStream_V_strb_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_strb_V_1_state)) or ((ap_const_lv2_3 = outStream_V_strb_V_1_state) and not(((ap_const_logic_1 = outStream_V_strb_V_1_vld_in) and (ap_const_logic_0 = outStream_V_strb_V_1_ack_out))) and not(((ap_const_logic_0 = outStream_V_strb_V_1_vld_in) and (ap_const_logic_1 = outStream_V_strb_V_1_ack_out)))))) then 
                    outStream_V_strb_V_1_state <= ap_const_lv2_3;
                else 
                    outStream_V_strb_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    outStream_V_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_user_V_1_ack_out) and (ap_const_logic_1 = outStream_V_user_V_1_vld_out))) then 
                                        outStream_V_user_V_1_sel_rd <= not(outStream_V_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = outStream_V_user_V_1_vld_in) and (ap_const_logic_1 = outStream_V_user_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_user_V_1_state)) or ((ap_const_logic_0 = outStream_V_user_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_user_V_1_state)))) then 
                    outStream_V_user_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = outStream_V_user_V_1_vld_in) and (ap_const_logic_0 = outStream_V_user_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_user_V_1_state)) or ((ap_const_logic_0 = outStream_V_user_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_user_V_1_state)))) then 
                    outStream_V_user_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = outStream_V_user_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_user_V_1_state)) or ((ap_const_logic_1 = outStream_V_user_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_user_V_1_state)) or ((ap_const_lv2_3 = outStream_V_user_V_1_state) and not(((ap_const_logic_1 = outStream_V_user_V_1_vld_in) and (ap_const_logic_0 = outStream_V_user_V_1_ack_out))) and not(((ap_const_logic_0 = outStream_V_user_V_1_vld_in) and (ap_const_logic_1 = outStream_V_user_V_1_ack_out)))))) then 
                    outStream_V_user_V_1_state <= ap_const_lv2_3;
                else 
                    outStream_V_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten6_reg_370_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0) and (ap_const_lv1_0 = exitcond_flatten8_fu_614_p2))) then 
                indvar_flatten6_reg_370 <= indvar_flatten_next7_fu_620_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                indvar_flatten6_reg_370 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_313_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                indvar_flatten_reg_313 <= ap_const_lv3_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_470_p2))) then 
                indvar_flatten_reg_313 <= indvar_flatten_next_fu_476_p2;
            end if; 
        end if;
    end process;

    readCount_1_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0) and (ap_const_lv1_0 = exitcond_flatten8_fu_614_p2) and not((ap_const_lv1_0 = tmp_7_fu_677_p2)))) then 
                readCount_1_fu_170 <= readCount_fu_683_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                readCount_1_fu_170 <= ap_const_lv32_36;
            end if; 
        end if;
    end process;

    window_1_0_reg_414_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1018))) then 
                window_1_0_reg_414 <= window_1_1_reg_403;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                window_1_0_reg_414 <= window_1_1_1_reg_347;
            end if; 
        end if;
    end process;

    window_1_1_reg_403_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1018))) then 
                window_1_1_reg_403 <= windowRightCol_1_reg_1073;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                window_1_1_reg_403 <= window_1_2_1_reg_335;
            end if; 
        end if;
    end process;

    writeCount_1_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
                writeCount_1_fu_166 <= writeCount_fu_828_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                writeCount_1_fu_166 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    x1_reg_301_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
                x1_reg_301 <= ap_const_lv6_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_904) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_904) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))))) then 
                x1_reg_301 <= x_2_reg_908;
            end if; 
        end if;
    end process;

    x4_reg_359_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                x4_reg_359 <= ap_const_lv2_1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_470_p2))) then 
                x4_reg_359 <= x_3_fu_560_p2;
            end if; 
        end if;
    end process;

    x_assign_reg_392_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0) and (ap_const_lv1_0 = exitcond_flatten8_fu_614_p2))) then 
                x_assign_reg_392 <= x_4_fu_694_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                x_assign_reg_392 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    x_reg_289_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_895) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_895) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))))) then 
                x_reg_289 <= x_1_reg_899;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                x_reg_289 <= ap_const_lv5_12;
            end if; 
        end if;
    end process;

    y3_reg_324_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                y3_reg_324 <= ap_const_lv2_1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_913))) then 
                y3_reg_324 <= tmp_3_mid2_v_reg_922;
            end if; 
        end if;
    end process;

    y_assign_reg_381_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_const_lv1_0 = exitcond_flatten8_reg_1018) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
                y_assign_reg_381 <= y_assign_cast7_mid2_s_reg_1027;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                y_assign_reg_381 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then
                ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1018 <= exitcond_flatten8_reg_1018;
                ap_pipeline_reg_pp3_iter1_lineBuffer_1_addr_2_reg_1042 <= lineBuffer_1_addr_2_reg_1042;
                ap_pipeline_reg_pp3_iter1_tmp_reg_1032 <= tmp_reg_1032;
                exitcond_flatten8_reg_1018 <= exitcond_flatten8_fu_614_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in))))) then
                ap_pipeline_reg_pp3_iter2_tmp_reg_1032 <= ap_pipeline_reg_pp3_iter1_tmp_reg_1032;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_470_p2))) then
                cond1_reg_948 <= cond1_fu_554_p2;
                cond_mid2_reg_932 <= cond_mid2_fu_526_p3;
                tmp_10_reg_927 <= tmp_10_fu_510_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then
                ctrl_read_reg_890 <= ctrl;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_895) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))))) then
                exitcond1_reg_895 <= exitcond1_fu_432_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_904) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))))) then
                exitcond4_reg_904 <= exitcond4_fu_453_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0))) then
                exitcond_flatten_reg_913 <= exitcond_flatten_fu_470_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = inStream_V_data_V_0_load_A)) then
                inStream_V_data_V_0_payload_A <= inStream_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = inStream_V_data_V_0_load_B)) then
                inStream_V_data_V_0_payload_B <= inStream_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = exitcond_flatten8_fu_614_p2))) then
                lineBuffer_0_addr_2_reg_1036 <= x_assign_cast5_fu_662_p1(6 - 1 downto 0);
                lineBuffer_1_addr_2_reg_1042 <= x_assign_cast5_fu_662_p1(6 - 1 downto 0);
                tmp_7_reg_1048 <= tmp_7_fu_677_p2;
                tmp_reg_1032 <= tmp_fu_668_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_lv1_0 = exitcond_flatten8_reg_1018) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = tmp_reg_1032)) and (ap_const_lv1_0 = tmp_9_reg_1013))) then
                maxValue_17_0_maxVal_reg_1057 <= maxValue_17_0_maxVal_fu_747_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = outStream_V_data_V_1_load_A)) then
                outStream_V_data_V_1_payload_A <= tmp_data_V_2_fu_866_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = outStream_V_data_V_1_load_B)) then
                outStream_V_data_V_1_payload_B <= tmp_data_V_2_fu_866_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = outStream_V_last_V_1_load_A)) then
                outStream_V_last_V_1_payload_A <= tmp_last_V_fu_874_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = outStream_V_last_V_1_load_B)) then
                outStream_V_last_V_1_payload_B <= tmp_last_V_fu_874_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_lv1_0 = exitcond_flatten8_reg_1018) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = tmp_reg_1032)) and not((ap_const_lv1_0 = tmp_9_reg_1013)))) then
                result_reg_1068 <= result_fu_807_p3;
                tmp_13_reg_1063 <= a_assign_fu_767_p2(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_470_p2))) then
                tmp_3_mid2_v_reg_922 <= tmp_3_mid2_v_fu_502_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state10))) then
                tmp_9_reg_1013 <= tmp_9_fu_601_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_const_lv1_0 = exitcond_flatten8_reg_1018) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then
                windowRightCol_1_reg_1073 <= lineBuffer_1_q0;
                window_0_1_fu_158 <= lineBuffer_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then
                window_0_0_fu_154 <= window_0_1_fu_158;
                window_0_0_read_as_fu_150 <= window_0_0_fu_154;
                window_1_0_read_as_fu_162 <= window_1_0_phi_fu_417_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_913))) then
                window_1_1_1_reg_347 <= window_2_2_5_fu_594_p3;
                window_1_2_1_reg_335 <= window_2_2_4_fu_587_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_const_lv1_0 = exitcond_flatten8_reg_1018) and not((ap_const_lv1_0 = tmp_7_reg_1048)) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then
                window_2_2_2_fu_174 <= inStream_V_data_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_895) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond1_fu_432_p2))) then
                x_1_reg_899 <= x_1_fu_438_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_904) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then
                x_2_reg_908 <= x_2_fu_459_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0) and (ap_const_lv1_0 = exitcond_flatten8_fu_614_p2))) then
                y_assign_cast7_mid2_s_reg_1027 <= y_assign_cast7_mid2_s_fu_646_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, inStream_V_data_V_0_vld_out, outStream_V_data_V_1_ack_in, ap_enable_reg_pp0_iter1, exitcond1_reg_895, ap_enable_reg_pp1_iter1, exitcond4_reg_904, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_pipeline_reg_pp3_iter1_tmp_reg_1032, ap_enable_reg_pp3_iter3, ap_pipeline_reg_pp3_iter2_tmp_reg_1032, exitcond1_fu_432_p2, ap_enable_reg_pp0_iter0, exitcond4_fu_453_p2, ap_enable_reg_pp1_iter0, exitcond_flatten_fu_470_p2, ap_enable_reg_pp2_iter0, ap_condition_1038, ap_enable_reg_pp3_iter0, ap_condition_1535)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_895) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond1_fu_432_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_895) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond1_fu_432_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if (not((not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_904) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and not((ap_const_lv1_0 = exitcond4_fu_453_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_904) and (inStream_V_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and not((ap_const_lv1_0 = exitcond4_fu_453_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and not((ap_const_lv1_0 = exitcond_flatten_fu_470_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and not((ap_const_logic_1 = ap_enable_reg_pp3_iter2)))) and not(((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and not((ap_const_logic_1 = ap_enable_reg_pp3_iter0)) and not((ap_const_logic_1 = ap_enable_reg_pp3_iter2)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif ((((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and not((ap_const_logic_1 = ap_enable_reg_pp3_iter2))) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and not((ap_const_logic_1 = ap_enable_reg_pp3_iter0)) and not((ap_const_logic_1 = ap_enable_reg_pp3_iter2))))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state15 => 
                if (not((ap_condition_1535 = ap_const_boolean_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    a_assign_fu_767_p2 <= std_logic_vector(unsigned(tmp4_fu_761_p2) + unsigned(tmp3_fu_755_p2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state10 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state15 <= ap_CS_fsm(8 downto 8);
    ap_CS_fsm_state4 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state7 <= ap_CS_fsm(4 downto 4);

    ap_condition_1038_assign_proc : process(inStream_V_data_V_0_vld_out, exitcond_flatten8_reg_1018, tmp_7_reg_1048)
    begin
                ap_condition_1038 <= ((ap_const_lv1_0 = exitcond_flatten8_reg_1018) and not((ap_const_lv1_0 = tmp_7_reg_1048)) and (inStream_V_data_V_0_vld_out = ap_const_logic_0));
    end process;


    ap_condition_1049_assign_proc : process(outStream_V_data_V_1_ack_in, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_pipeline_reg_pp3_iter1_tmp_reg_1032, ap_enable_reg_pp3_iter3, ap_pipeline_reg_pp3_iter2_tmp_reg_1032, ap_condition_1038)
    begin
                ap_condition_1049 <= not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in))));
    end process;


    ap_condition_1535_assign_proc : process(outStream_V_data_V_1_ack_in, outStream_V_keep_V_1_ack_in, outStream_V_strb_V_1_ack_in, outStream_V_user_V_1_ack_in, outStream_V_last_V_1_ack_in, outStream_V_id_V_1_ack_in, outStream_V_dest_V_1_ack_in)
    begin
                ap_condition_1535 <= ((outStream_V_data_V_1_ack_in = ap_const_logic_0) or (outStream_V_keep_V_1_ack_in = ap_const_logic_0) or (outStream_V_strb_V_1_ack_in = ap_const_logic_0) or (outStream_V_user_V_1_ack_in = ap_const_logic_0) or (outStream_V_last_V_1_ack_in = ap_const_logic_0) or (outStream_V_id_V_1_ack_in = ap_const_logic_0) or (outStream_V_dest_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state15, ap_condition_1535)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15) and not((ap_condition_1535 = ap_const_boolean_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state15, ap_condition_1535)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15) and not((ap_condition_1535 = ap_const_boolean_1)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    cond1_fu_554_p2 <= "1" when (x4_mid2_fu_488_p3 = ap_const_lv2_1) else "0";
    cond_fu_520_p2 <= "1" when (y3_phi_fu_328_p4 = ap_const_lv2_1) else "0";
    cond_mid1_fu_514_p2 <= "1" when (y3_phi_fu_328_p4 = ap_const_lv2_0) else "0";
    cond_mid2_fu_526_p3 <= 
        cond_mid1_fu_514_p2 when (exitcond_fu_482_p2(0) = '1') else 
        cond_fu_520_p2;
    exitcond1_fu_432_p2 <= "1" when (x_phi_fu_293_p4 = ap_const_lv5_14) else "0";
    exitcond2_fu_626_p2 <= "1" when (x_assign_reg_392 = ap_const_lv6_34) else "0";
    exitcond4_fu_453_p2 <= "1" when (x1_phi_fu_305_p4 = ap_const_lv6_34) else "0";
    exitcond_flatten8_fu_614_p2 <= "1" when (indvar_flatten6_reg_370 = ap_const_lv12_A90) else "0";
    exitcond_flatten_fu_470_p2 <= "1" when (indvar_flatten_reg_313 = ap_const_lv3_4) else "0";
    exitcond_fu_482_p2 <= "1" when (x4_reg_359 = ap_const_lv2_3) else "0";

    inStream_TDATA_blk_n_assign_proc : process(inStream_V_data_V_0_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond1_reg_895, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond4_reg_904, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, exitcond_flatten8_reg_1018, tmp_7_reg_1048)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_895)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_904)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_const_lv1_0 = exitcond_flatten8_reg_1018) and not((ap_const_lv1_0 = tmp_7_reg_1048))))) then 
            inStream_TDATA_blk_n <= inStream_V_data_V_0_state(0);
        else 
            inStream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    inStream_TREADY <= inStream_V_dest_V_0_state(1);
    inStream_V_data_V_0_ack_in <= inStream_V_data_V_0_state(1);

    inStream_V_data_V_0_ack_out_assign_proc : process(inStream_V_data_V_0_vld_out, outStream_V_data_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond1_reg_895, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond4_reg_904, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, exitcond_flatten8_reg_1018, tmp_7_reg_1048, ap_enable_reg_pp3_iter2, ap_pipeline_reg_pp3_iter1_tmp_reg_1032, ap_enable_reg_pp3_iter3, ap_pipeline_reg_pp3_iter2_tmp_reg_1032, ap_condition_1038)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_895) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_895) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_904) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_904) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_const_lv1_0 = exitcond_flatten8_reg_1018) and not((ap_const_lv1_0 = tmp_7_reg_1048)) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in))))))) then 
            inStream_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            inStream_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    inStream_V_data_V_0_data_out_assign_proc : process(inStream_V_data_V_0_payload_A, inStream_V_data_V_0_payload_B, inStream_V_data_V_0_sel)
    begin
        if ((ap_const_logic_1 = inStream_V_data_V_0_sel)) then 
            inStream_V_data_V_0_data_out <= inStream_V_data_V_0_payload_B;
        else 
            inStream_V_data_V_0_data_out <= inStream_V_data_V_0_payload_A;
        end if; 
    end process;

    inStream_V_data_V_0_load_A <= (inStream_V_data_V_0_state_cmp_full and not(inStream_V_data_V_0_sel_wr));
    inStream_V_data_V_0_load_B <= (inStream_V_data_V_0_sel_wr and inStream_V_data_V_0_state_cmp_full);
    inStream_V_data_V_0_sel <= inStream_V_data_V_0_sel_rd;
    inStream_V_data_V_0_state_cmp_full <= '0' when (inStream_V_data_V_0_state = ap_const_lv2_1) else '1';
    inStream_V_data_V_0_vld_in <= inStream_TVALID;
    inStream_V_data_V_0_vld_out <= inStream_V_data_V_0_state(0);

    inStream_V_dest_V_0_ack_out_assign_proc : process(inStream_V_data_V_0_vld_out, outStream_V_data_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond1_reg_895, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond4_reg_904, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, exitcond_flatten8_reg_1018, tmp_7_reg_1048, ap_enable_reg_pp3_iter2, ap_pipeline_reg_pp3_iter1_tmp_reg_1032, ap_enable_reg_pp3_iter3, ap_pipeline_reg_pp3_iter2_tmp_reg_1032, ap_condition_1038)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_895) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_895) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_904) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_904) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_const_lv1_0 = exitcond_flatten8_reg_1018) and not((ap_const_lv1_0 = tmp_7_reg_1048)) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in))))))) then 
            inStream_V_dest_V_0_ack_out <= ap_const_logic_1;
        else 
            inStream_V_dest_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    inStream_V_dest_V_0_vld_in <= inStream_TVALID;
    indvar_flatten_next7_fu_620_p2 <= std_logic_vector(unsigned(indvar_flatten6_reg_370) + unsigned(ap_const_lv12_1));
    indvar_flatten_next_fu_476_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_313) + unsigned(ap_const_lv3_1));

    lineBuffer_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter0, x_cast1_fu_448_p1, tmp_5_cast_fu_548_p1, x_assign_cast5_fu_662_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0))) then 
            lineBuffer_0_address0 <= x_assign_cast5_fu_662_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0))) then 
            lineBuffer_0_address0 <= tmp_5_cast_fu_548_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            lineBuffer_0_address0 <= x_cast1_fu_448_p1(6 - 1 downto 0);
        else 
            lineBuffer_0_address0 <= "XXXXXX";
        end if; 
    end process;


    lineBuffer_0_ce0_assign_proc : process(inStream_V_data_V_0_vld_out, outStream_V_data_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond1_reg_895, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_pipeline_reg_pp3_iter1_tmp_reg_1032, ap_enable_reg_pp3_iter3, ap_pipeline_reg_pp3_iter2_tmp_reg_1032, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_condition_1038, ap_enable_reg_pp3_iter0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_895) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)))))) then 
            lineBuffer_0_ce0 <= ap_const_logic_1;
        else 
            lineBuffer_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuffer_0_ce1_assign_proc : process(outStream_V_data_V_1_ack_in, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_pipeline_reg_pp3_iter1_tmp_reg_1032, ap_enable_reg_pp3_iter3, ap_pipeline_reg_pp3_iter2_tmp_reg_1032, ap_condition_1038)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            lineBuffer_0_ce1 <= ap_const_logic_1;
        else 
            lineBuffer_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuffer_0_we0_assign_proc : process(inStream_V_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond1_reg_895)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_895) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_895) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)))))) then 
            lineBuffer_0_we0 <= ap_const_logic_1;
        else 
            lineBuffer_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuffer_0_we1_assign_proc : process(outStream_V_data_V_1_ack_in, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, exitcond_flatten8_reg_1018, ap_enable_reg_pp3_iter2, ap_pipeline_reg_pp3_iter1_tmp_reg_1032, ap_enable_reg_pp3_iter3, ap_pipeline_reg_pp3_iter2_tmp_reg_1032, ap_condition_1038)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_const_lv1_0 = exitcond_flatten8_reg_1018) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in))))))) then 
            lineBuffer_0_we1 <= ap_const_logic_1;
        else 
            lineBuffer_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuffer_1_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter0, x1_cast_fu_465_p1, tmp_5_cast_fu_548_p1, x_assign_cast5_fu_662_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0))) then 
            lineBuffer_1_address0 <= x_assign_cast5_fu_662_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0))) then 
            lineBuffer_1_address0 <= tmp_5_cast_fu_548_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            lineBuffer_1_address0 <= x1_cast_fu_465_p1(6 - 1 downto 0);
        else 
            lineBuffer_1_address0 <= "XXXXXX";
        end if; 
    end process;


    lineBuffer_1_ce0_assign_proc : process(inStream_V_data_V_0_vld_out, outStream_V_data_V_1_ack_in, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond4_reg_904, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_pipeline_reg_pp3_iter1_tmp_reg_1032, ap_enable_reg_pp3_iter3, ap_pipeline_reg_pp3_iter2_tmp_reg_1032, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_condition_1038, ap_enable_reg_pp3_iter0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_904) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)))))) then 
            lineBuffer_1_ce0 <= ap_const_logic_1;
        else 
            lineBuffer_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuffer_1_ce1_assign_proc : process(outStream_V_data_V_1_ack_in, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_pipeline_reg_pp3_iter1_tmp_reg_1032, ap_enable_reg_pp3_iter3, ap_pipeline_reg_pp3_iter2_tmp_reg_1032, ap_condition_1038)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            lineBuffer_1_ce1 <= ap_const_logic_1;
        else 
            lineBuffer_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuffer_1_we0_assign_proc : process(inStream_V_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond4_reg_904)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_904) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_904) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)))))) then 
            lineBuffer_1_we0 <= ap_const_logic_1;
        else 
            lineBuffer_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuffer_1_we1_assign_proc : process(outStream_V_data_V_1_ack_in, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_pipeline_reg_pp3_iter1_tmp_reg_1032, ap_enable_reg_pp3_iter3, ap_pipeline_reg_pp3_iter2_tmp_reg_1032, ap_condition_1038, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1018)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1018)))) then 
            lineBuffer_1_we1 <= ap_const_logic_1;
        else 
            lineBuffer_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    maxValue_0_1_maxVal_fu_733_p3 <= 
        window_0_0_fu_154 when (tmp_4_0_1_i_fu_727_p2(0) = '1') else 
        window_0_0_read_as_fu_150;
    maxValue_17_0_maxVal_fu_747_p3 <= 
        window_1_0_read_as_fu_162 when (tmp_4_1_i_fu_741_p2(0) = '1') else 
        maxValue_0_1_maxVal_fu_733_p3;
    outStream_TDATA <= outStream_V_data_V_1_data_out;

    outStream_TDATA_blk_n_assign_proc : process(outStream_V_data_V_1_state, ap_enable_reg_pp3_iter2, ap_pipeline_reg_pp3_iter1_tmp_reg_1032, ap_enable_reg_pp3_iter3, ap_pipeline_reg_pp3_iter2_tmp_reg_1032)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032))) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032))))) then 
            outStream_TDATA_blk_n <= outStream_V_data_V_1_state(1);
        else 
            outStream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    outStream_TDEST <= outStream_V_dest_V_1_data_out;
    outStream_TID <= outStream_V_id_V_1_data_out;
    outStream_TKEEP <= outStream_V_keep_V_1_data_out;
    outStream_TLAST <= outStream_V_last_V_1_data_out;
    outStream_TSTRB <= outStream_V_strb_V_1_data_out;
    outStream_TUSER <= outStream_V_user_V_1_data_out;
    outStream_TVALID <= outStream_V_dest_V_1_state(0);
    outStream_V_data_V_1_ack_in <= outStream_V_data_V_1_state(1);
    outStream_V_data_V_1_ack_out <= outStream_TREADY;

    outStream_V_data_V_1_data_out_assign_proc : process(outStream_V_data_V_1_payload_A, outStream_V_data_V_1_payload_B, outStream_V_data_V_1_sel)
    begin
        if ((ap_const_logic_1 = outStream_V_data_V_1_sel)) then 
            outStream_V_data_V_1_data_out <= outStream_V_data_V_1_payload_B;
        else 
            outStream_V_data_V_1_data_out <= outStream_V_data_V_1_payload_A;
        end if; 
    end process;

    outStream_V_data_V_1_load_A <= (outStream_V_data_V_1_state_cmp_full and not(outStream_V_data_V_1_sel_wr));
    outStream_V_data_V_1_load_B <= (outStream_V_data_V_1_sel_wr and outStream_V_data_V_1_state_cmp_full);
    outStream_V_data_V_1_sel <= outStream_V_data_V_1_sel_rd;
    outStream_V_data_V_1_state_cmp_full <= '0' when (outStream_V_data_V_1_state = ap_const_lv2_1) else '1';

    outStream_V_data_V_1_vld_in_assign_proc : process(outStream_V_data_V_1_ack_in, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_pipeline_reg_pp3_iter1_tmp_reg_1032, ap_enable_reg_pp3_iter3, ap_pipeline_reg_pp3_iter2_tmp_reg_1032, ap_condition_1038)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            outStream_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            outStream_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    outStream_V_data_V_1_vld_out <= outStream_V_data_V_1_state(0);
    outStream_V_dest_V_1_ack_in <= outStream_V_dest_V_1_state(1);
    outStream_V_dest_V_1_ack_out <= outStream_TREADY;
    outStream_V_dest_V_1_data_out <= ap_const_lv6_0;
    outStream_V_dest_V_1_sel <= outStream_V_dest_V_1_sel_rd;

    outStream_V_dest_V_1_vld_in_assign_proc : process(outStream_V_data_V_1_ack_in, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_pipeline_reg_pp3_iter1_tmp_reg_1032, ap_enable_reg_pp3_iter3, ap_pipeline_reg_pp3_iter2_tmp_reg_1032, ap_condition_1038)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            outStream_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            outStream_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    outStream_V_dest_V_1_vld_out <= outStream_V_dest_V_1_state(0);
    outStream_V_id_V_1_ack_in <= outStream_V_id_V_1_state(1);
    outStream_V_id_V_1_ack_out <= outStream_TREADY;
    outStream_V_id_V_1_data_out <= ap_const_lv5_0;
    outStream_V_id_V_1_sel <= outStream_V_id_V_1_sel_rd;

    outStream_V_id_V_1_vld_in_assign_proc : process(outStream_V_data_V_1_ack_in, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_pipeline_reg_pp3_iter1_tmp_reg_1032, ap_enable_reg_pp3_iter3, ap_pipeline_reg_pp3_iter2_tmp_reg_1032, ap_condition_1038)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            outStream_V_id_V_1_vld_in <= ap_const_logic_1;
        else 
            outStream_V_id_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    outStream_V_id_V_1_vld_out <= outStream_V_id_V_1_state(0);
    outStream_V_keep_V_1_ack_in <= outStream_V_keep_V_1_state(1);
    outStream_V_keep_V_1_ack_out <= outStream_TREADY;
    outStream_V_keep_V_1_data_out <= ap_const_lv4_F;
    outStream_V_keep_V_1_sel <= outStream_V_keep_V_1_sel_rd;

    outStream_V_keep_V_1_vld_in_assign_proc : process(outStream_V_data_V_1_ack_in, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_pipeline_reg_pp3_iter1_tmp_reg_1032, ap_enable_reg_pp3_iter3, ap_pipeline_reg_pp3_iter2_tmp_reg_1032, ap_condition_1038)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            outStream_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            outStream_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    outStream_V_keep_V_1_vld_out <= outStream_V_keep_V_1_state(0);
    outStream_V_last_V_1_ack_in <= outStream_V_last_V_1_state(1);
    outStream_V_last_V_1_ack_out <= outStream_TREADY;

    outStream_V_last_V_1_data_out_assign_proc : process(outStream_V_last_V_1_payload_A, outStream_V_last_V_1_payload_B, outStream_V_last_V_1_sel)
    begin
        if ((ap_const_logic_1 = outStream_V_last_V_1_sel)) then 
            outStream_V_last_V_1_data_out <= outStream_V_last_V_1_payload_B;
        else 
            outStream_V_last_V_1_data_out <= outStream_V_last_V_1_payload_A;
        end if; 
    end process;

    outStream_V_last_V_1_load_A <= (outStream_V_last_V_1_state_cmp_full and not(outStream_V_last_V_1_sel_wr));
    outStream_V_last_V_1_load_B <= (outStream_V_last_V_1_sel_wr and outStream_V_last_V_1_state_cmp_full);
    outStream_V_last_V_1_sel <= outStream_V_last_V_1_sel_rd;
    outStream_V_last_V_1_state_cmp_full <= '0' when (outStream_V_last_V_1_state = ap_const_lv2_1) else '1';

    outStream_V_last_V_1_vld_in_assign_proc : process(outStream_V_data_V_1_ack_in, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_pipeline_reg_pp3_iter1_tmp_reg_1032, ap_enable_reg_pp3_iter3, ap_pipeline_reg_pp3_iter2_tmp_reg_1032, ap_condition_1038)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            outStream_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            outStream_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    outStream_V_last_V_1_vld_out <= outStream_V_last_V_1_state(0);
    outStream_V_strb_V_1_ack_in <= outStream_V_strb_V_1_state(1);
    outStream_V_strb_V_1_ack_out <= outStream_TREADY;
    outStream_V_strb_V_1_data_out <= ap_const_lv4_0;
    outStream_V_strb_V_1_sel <= outStream_V_strb_V_1_sel_rd;

    outStream_V_strb_V_1_vld_in_assign_proc : process(outStream_V_data_V_1_ack_in, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_pipeline_reg_pp3_iter1_tmp_reg_1032, ap_enable_reg_pp3_iter3, ap_pipeline_reg_pp3_iter2_tmp_reg_1032, ap_condition_1038)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            outStream_V_strb_V_1_vld_in <= ap_const_logic_1;
        else 
            outStream_V_strb_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    outStream_V_strb_V_1_vld_out <= outStream_V_strb_V_1_state(0);
    outStream_V_user_V_1_ack_in <= outStream_V_user_V_1_state(1);
    outStream_V_user_V_1_ack_out <= outStream_TREADY;
    outStream_V_user_V_1_data_out <= ap_const_lv2_0;
    outStream_V_user_V_1_sel <= outStream_V_user_V_1_sel_rd;

    outStream_V_user_V_1_vld_in_assign_proc : process(outStream_V_data_V_1_ack_in, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_pipeline_reg_pp3_iter1_tmp_reg_1032, ap_enable_reg_pp3_iter3, ap_pipeline_reg_pp3_iter2_tmp_reg_1032, ap_condition_1038)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and not((((ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_condition_1038 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter2_tmp_reg_1032)) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            outStream_V_user_V_1_vld_in <= ap_const_logic_1;
        else 
            outStream_V_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    outStream_V_user_V_1_vld_out <= outStream_V_user_V_1_state(0);
    readCount_fu_683_p2 <= std_logic_vector(unsigned(readCount_1_fu_170) + unsigned(ap_const_lv32_1));
        result_1_cast_fu_862_p1 <= std_logic_vector(resize(signed(result_1_fu_855_p3),32));

    result_1_fu_855_p3 <= 
        tmp_4_i_i_fu_849_p2 when (tmp_13_reg_1063(0) = '1') else 
        result_cast_fu_846_p1;
    result_cast_fu_846_p1 <= std_logic_vector(resize(unsigned(result_reg_1068),21));
    result_fu_807_p3 <= 
        tmp_3_fu_787_p4 when (tmp_13_fu_773_p3(0) = '1') else 
        tmp_6_fu_797_p4;
    sel_SEBB_i_fu_839_p3 <= 
        window_1_0_reg_414 when (tmp_4_1_1_i_fu_834_p2(0) = '1') else 
        maxValue_17_0_maxVal_reg_1057;
    tmp3_fu_755_p2 <= std_logic_vector(unsigned(window_0_0_read_as_fu_150) + unsigned(window_1_0_read_as_fu_162));
    tmp4_fu_761_p2 <= std_logic_vector(unsigned(window_0_0_fu_154) + unsigned(window_1_0_phi_fu_417_p4));
    tmp_10_fu_510_p1 <= tmp_3_mid2_v_fu_502_p3(1 - 1 downto 0);
    tmp_11_fu_654_p1 <= y_assign_cast7_mid2_s_fu_646_p3(1 - 1 downto 0);
    tmp_12_fu_658_p1 <= x_assign_mid2_fu_632_p3(1 - 1 downto 0);
    tmp_13_fu_773_p3 <= a_assign_fu_767_p2(31 downto 31);
    tmp_1_i_i_fu_781_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(a_assign_fu_767_p2));
    tmp_3_fu_787_p4 <= tmp_1_i_i_fu_781_p2(21 downto 2);
    tmp_3_mid2_v_fu_502_p3 <= 
        y9_fu_496_p2 when (exitcond_fu_482_p2(0) = '1') else 
        y3_phi_fu_328_p4;
    tmp_4_0_1_i_fu_727_p2 <= "1" when (unsigned(window_0_0_fu_154) > unsigned(window_0_0_read_as_fu_150)) else "0";
    tmp_4_1_1_i_fu_834_p2 <= "1" when (unsigned(maxValue_17_0_maxVal_reg_1057) < unsigned(window_1_0_reg_414)) else "0";
    tmp_4_1_i_fu_741_p2 <= "1" when (unsigned(maxValue_0_1_maxVal_fu_733_p3) < unsigned(window_1_0_read_as_fu_162)) else "0";
    tmp_4_i_i_fu_849_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(result_cast_fu_846_p1));
        tmp_5_cast1_fu_544_p1 <= std_logic_vector(resize(signed(tmp_5_fu_538_p2),6));

    tmp_5_cast_fu_548_p1 <= std_logic_vector(resize(unsigned(tmp_5_cast1_fu_544_p1),32));
    tmp_5_fu_538_p2 <= std_logic_vector(signed(ap_const_lv5_13) + signed(x4_cast9_cast_fu_534_p1));
    tmp_6_fu_797_p4 <= a_assign_fu_767_p2(21 downto 2);
    tmp_7_fu_677_p2 <= "1" when (signed(readCount_1_fu_170) < signed(ap_const_lv32_A90)) else "0";
    tmp_9_fu_601_p1 <= ctrl_read_reg_890(1 - 1 downto 0);
    tmp_data_V_2_fu_866_p3 <= 
        result_1_cast_fu_862_p1 when (tmp_9_reg_1013(0) = '1') else 
        sel_SEBB_i_fu_839_p3;
    tmp_fu_668_p2 <= (tmp_11_fu_654_p1 and tmp_12_fu_658_p1);
    tmp_last_V_fu_874_p2 <= "1" when (writeCount_fu_828_p2 = ap_const_lv32_2A4) else "0";

    window_1_0_phi_fu_417_p4_assign_proc : process(ap_enable_reg_pp3_iter2, window_1_1_reg_403, window_1_0_reg_414, ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1018)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp3_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_exitcond_flatten8_reg_1018))) then 
            window_1_0_phi_fu_417_p4 <= window_1_1_reg_403;
        else 
            window_1_0_phi_fu_417_p4 <= window_1_0_reg_414;
        end if; 
    end process;

    window_2_2_1_fu_580_p3 <= 
        window_2_2_7_fu_566_p3 when (cond1_reg_948(0) = '1') else 
        window_1_1_1_reg_347;
    window_2_2_4_fu_587_p3 <= 
        window_2_2_fu_573_p3 when (cond_mid2_reg_932(0) = '1') else 
        window_1_2_1_reg_335;
    window_2_2_5_fu_594_p3 <= 
        window_2_2_1_fu_580_p3 when (cond_mid2_reg_932(0) = '1') else 
        window_1_1_1_reg_347;
    window_2_2_7_fu_566_p3 <= 
        lineBuffer_0_q0 when (tmp_10_reg_927(0) = '1') else 
        lineBuffer_1_q0;
    window_2_2_fu_573_p3 <= 
        window_1_2_1_reg_335 when (cond1_reg_948(0) = '1') else 
        window_2_2_7_fu_566_p3;
    writeCount_fu_828_p2 <= std_logic_vector(unsigned(writeCount_1_fu_166) + unsigned(ap_const_lv32_1));
    x1_cast_fu_465_p1 <= std_logic_vector(resize(unsigned(x1_reg_301),32));

    x1_phi_fu_305_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond4_reg_904, x1_reg_301, x_2_reg_908)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond4_reg_904))) then 
            x1_phi_fu_305_p4 <= x_2_reg_908;
        else 
            x1_phi_fu_305_p4 <= x1_reg_301;
        end if; 
    end process;

    x4_cast9_cast_fu_534_p1 <= std_logic_vector(resize(unsigned(x4_mid2_fu_488_p3),5));
    x4_mid2_fu_488_p3 <= 
        ap_const_lv2_1 when (exitcond_fu_482_p2(0) = '1') else 
        x4_reg_359;
    x_1_fu_438_p2 <= std_logic_vector(unsigned(x_phi_fu_293_p4) + unsigned(ap_const_lv5_1));
    x_2_fu_459_p2 <= std_logic_vector(unsigned(x1_phi_fu_305_p4) + unsigned(ap_const_lv6_1));
    x_3_fu_560_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(x4_mid2_fu_488_p3));
    x_4_fu_694_p2 <= std_logic_vector(unsigned(x_assign_mid2_fu_632_p3) + unsigned(ap_const_lv6_1));
    x_assign_cast5_fu_662_p1 <= std_logic_vector(resize(unsigned(x_assign_mid2_fu_632_p3),32));
    x_assign_mid2_fu_632_p3 <= 
        ap_const_lv6_0 when (exitcond2_fu_626_p2(0) = '1') else 
        x_assign_reg_392;
    x_cast1_fu_448_p1 <= std_logic_vector(resize(unsigned(x_cast_fu_444_p1),32));
        x_cast_fu_444_p1 <= std_logic_vector(resize(signed(x_reg_289),6));


    x_phi_fu_293_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond1_reg_895, x_reg_289, x_1_reg_899)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_reg_895))) then 
            x_phi_fu_293_p4 <= x_1_reg_899;
        else 
            x_phi_fu_293_p4 <= x_reg_289;
        end if; 
    end process;


    y3_phi_fu_328_p4_assign_proc : process(y3_reg_324, exitcond_flatten_reg_913, ap_CS_fsm_pp2_stage0, tmp_3_mid2_v_reg_922, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_913))) then 
            y3_phi_fu_328_p4 <= tmp_3_mid2_v_reg_922;
        else 
            y3_phi_fu_328_p4 <= y3_reg_324;
        end if; 
    end process;

    y9_fu_496_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(y3_phi_fu_328_p4));
    y_assign_cast7_mid2_s_fu_646_p3 <= 
        y_s_fu_640_p2 when (exitcond2_fu_626_p2(0) = '1') else 
        y_assign_phi_fu_385_p4;

    y_assign_phi_fu_385_p4_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, exitcond_flatten8_reg_1018, y_assign_reg_381, y_assign_cast7_mid2_s_reg_1027)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_const_lv1_0 = exitcond_flatten8_reg_1018))) then 
            y_assign_phi_fu_385_p4 <= y_assign_cast7_mid2_s_reg_1027;
        else 
            y_assign_phi_fu_385_p4 <= y_assign_reg_381;
        end if; 
    end process;

    y_s_fu_640_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(y_assign_phi_fu_385_p4));
end behav;
