/**
 * Project 20-1-1-2187
 * CNN accelerator
 *
 * Chaim Gruda
 * Shay Tsabar
 *
 */

#ifndef _CNN_HW_H_
#define _CNN_HW_H_

#include "cnn_config.h"
#include <stdint.h>
#if (PLATFORM == FPGA)
#include "xcnn_conv_d54x54_k3x3.h"
#include "xcnn_pool_d52x52_p2x2.h"
#include "xcnn_conv_d26x26_k3x3.h"
#include "xcnn_pool_d24x24_p2x2.h"
#include "xcnn_fc_i144_o50.h"
#include "xcnn_fc_i50_o10.h"
#include "xaxidma.h"
#include "xtime_l.h"
#endif

#define MEM_BASE_ADDR 0x01000000
#define TX_BUFFER_BASE (MEM_BASE_ADDR + 0x00100000)
#define RX_BUFFER_BASE (MEM_BASE_ADDR + 0x00300000)

struct cnn_hw {
#if (PLATFORM == FPGA)
	XCnn_conv_d54x54_k3x3 conv_0;
	XCnn_pool_d52x52_p2x2 pool_0;
	XCnn_conv_d26x26_k3x3 conv_1;
	XCnn_pool_d24x24_p2x2 pool_1;
	XCnn_fc_i144_o50 fc_0;
	XCnn_fc_i50_o10 fc_1;
	XAxiDma axiDMA;
	uint32_t *p_dma_buffer_TX;
	uint32_t *p_dma_buffer_RX;
	uint32_t conv_0_kernel[CONV_0_KERNEL_LEN];
	uint32_t conv_1_kernel[CONV_1_KERNEL_LEN];
	uint32_t conv_2_kernel[CONV_2_KERNEL_LEN];
	XTime tStart;
	XTime tEnd;
#else
	uint32_t dummy;
#endif
};

int cnn_hw_init(struct cnn_hw *p_cnn_hw);
#if (PLATFORM == FPGA)
void XCnn_Set_Conv_0(XCnn_conv_d54x54_k3x3 *InstancePtr, uint32_t ctrl, uint32_t *kernel);
void XCnn_Set_Pool_0(XCnn_pool_d52x52_p2x2 *InstancePtr, uint32_t ctrl);
void XCnn_Set_Conv_1(XCnn_conv_d26x26_k3x3 *InstancePtr, uint32_t ctrl, uint32_t *kernel);
void XCnn_Set_Pool_1(XCnn_pool_d24x24_p2x2 *InstancePtr, uint32_t ctrl);
void XCnn_Set_Conv_2(XCnn_conv_d12x12_k3x3 *InstancePtr, uint32_t ctrl, uint32_t *kernel);
void XCnn_Set_Pool_2(XCnn_pool_d10x10_p2x2 *InstancePtr, uint32_t ctrl);
void cnn_hw_set(struct cnn_hw *cnn_hw, struct cnn_config *cnn_conf);
void cnn_hw_start(struct cnn_hw *cnn_hw);
void cnn_hw_wait(struct cnn_hw *p_cnn_hw);
#endif
void cnn_hw_exec(struct cnn_hw *cnn_hw, struct cnn_config *cnn_conf);


#endif // _CNN_HW_H_
